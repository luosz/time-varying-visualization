(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    117525,       2944]
NotebookOptionsPosition[    114407,       2846]
NotebookOutlinePosition[    114919,       2866]
CellTagsIndexPosition[    114876,       2863]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"tf", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<D:\\\\document\\\\work\\\\artivvis-development-repository\\\\data\\\\\
tooth.tfi\>\"", ",", "\"\<XML\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bincount", "=", "256"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"intensity", "=", 
   RowBox[{"ToExpression", "@", 
    RowBox[{"Cases", "[", 
     RowBox[{"tf", ",", 
      RowBox[{
       RowBox[{"XMLElement", "[", 
        RowBox[{"\"\<intensity\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<value\>\"", "\[Rule]", "atrib_"}], ",", "___"}], 
          "}"}], ",", "___"}], "]"}], "\[RuleDelayed]", "atrib"}], ",", 
      "\[Infinity]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", "=", 
   RowBox[{"ToExpression", "@", 
    RowBox[{"Cases", "[", 
     RowBox[{"tf", ",", 
      RowBox[{
       RowBox[{"XMLElement", "[", 
        RowBox[{"\"\<colorL\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<r\>\"", "\[Rule]", "atrib_"}], ",", "___"}], "}"}], 
         ",", "___"}], "]"}], "\[RuleDelayed]", "atrib"}], ",", 
      "\[Infinity]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"ToExpression", "@", 
    RowBox[{"Cases", "[", 
     RowBox[{"tf", ",", 
      RowBox[{
       RowBox[{"XMLElement", "[", 
        RowBox[{"\"\<colorL\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"___", ",", 
           RowBox[{"\"\<g\>\"", "\[Rule]", "atrib_"}], ",", "___"}], "}"}], 
         ",", "___"}], "]"}], "\[RuleDelayed]", "atrib"}], ",", 
      "\[Infinity]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"ToExpression", "@", 
    RowBox[{"Cases", "[", 
     RowBox[{"tf", ",", 
      RowBox[{
       RowBox[{"XMLElement", "[", 
        RowBox[{"\"\<colorL\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"___", ",", 
           RowBox[{"\"\<b\>\"", "\[Rule]", "atrib_"}], ",", "___"}], "}"}], 
         ",", "___"}], "]"}], "\[RuleDelayed]", "atrib"}], ",", 
      "\[Infinity]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"ToExpression", "@", 
    RowBox[{"Cases", "[", 
     RowBox[{"tf", ",", 
      RowBox[{
       RowBox[{"XMLElement", "[", 
        RowBox[{"\"\<colorL\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"___", ",", 
           RowBox[{"\"\<a\>\"", "\[Rule]", "atrib_"}]}], "}"}], ",", "___"}], 
        "]"}], "\[RuleDelayed]", "atrib"}], ",", "\[Infinity]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rgbcolors", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"#", "/", "255."}], "&"}], ")"}], "/@", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"r", ",", "g", ",", "b"}], "}"}], "]"}]}], "//", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"RGBColor", "/@", "#"}], "&"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rgbfunction", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Blend", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"intensity", ",", "rgbcolors"}], "}"}], "]"}], ",", " ", 
       "#1"}], "]"}], " ", "&"}], " ", ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rgba", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"#", "/", "255."}], "&"}], ")"}], "/@", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"r", ",", "g", ",", "b", ",", "a"}], "}"}], "]"}]}], "//", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"RGBColor", "/@", "#"}], "&"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rgbafunction", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Blend", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"intensity", ",", "rgba"}], "}"}], "]"}], ",", " ", "#1"}], 
      "]"}], " ", "&"}], " ", ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alpha", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", "/", "255."}], "&"}], ")"}], "/@", "a"}]}], 
  ";"}], "\[IndentingNewLine]", "rgbcolors", "\[IndentingNewLine]", \
"intensity", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bincount", "=", "256"}], ";"}]}], "Input",
 CellChangeTimes->{{3.64096725127407*^9, 3.6409672647439866`*^9}, {
   3.640967599867441*^9, 3.6409676001330385`*^9}, {3.6409676527957973`*^9, 
   3.640967656614515*^9}, {3.6409678144389896`*^9, 3.640967885036403*^9}, {
   3.640976483714633*^9, 3.6409764849307013`*^9}, 3.64277813577279*^9, {
   3.645529250511292*^9, 3.645529252894104*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0.6666666666666666, 1.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.4444444444444444, 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[{0., 0.6666666666666666, 1.}]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0., 0.6666666666666666, 1.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[{0., 0.6666666666666666, 1.}],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0.6666666666666666, 1.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.4444444444444444, 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[{0., 0.6666666666666666, 1.}]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0., 0.6666666666666666, 1.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[{0., 0.6666666666666666, 1.}],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0.6666666666666666, 1.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.4444444444444444, 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[{0., 0.6666666666666666, 1.}]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0., 0.6666666666666666, 1.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[{0., 0.6666666666666666, 1.}],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1., 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666667, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[{1., 0., 0.}]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1., 0., 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[{1., 0., 0.}],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1., 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666667, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[{1., 0., 0.}]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1., 0., 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[{1., 0., 0.}],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1., 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666667, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[{1., 0., 0.}]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1., 0., 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[{1., 0., 0.}],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1., 1., 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666667, 0.6666666666666667, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[{1., 1., 0.}]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1., 1., 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[{1., 1., 0.}],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1., 1., 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666667, 0.6666666666666667, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[{1., 1., 0.}]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1., 1., 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[{1., 1., 0.}],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1., 1., 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666667, 0.6666666666666667, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[{1., 1., 0.}]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1., 1., 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[{1., 1., 0.}],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.640967886567638*^9, 3.640975985376408*^9, 3.640976242961444*^9, {
   3.640976490928467*^9, 3.6409764922815557`*^9}, 3.6409768563095737`*^9, 
   3.640977162606773*^9, 3.640977752213723*^9, 3.641016649676598*^9, 
   3.641019658076932*^9, 3.64103026018045*^9, 3.6410309821642222`*^9, 
   3.641551066948224*^9, 3.6415690600418205`*^9, 3.641900534312954*^9, {
   3.6419014713180456`*^9, 3.6419014889327893`*^9}, 3.6427079956775074`*^9, 
   3.642708172661939*^9, 3.6427180441740627`*^9, 3.6427231517187166`*^9, 
   3.6428689804256554`*^9, 3.64552928507946*^9, 3.6455299926987705`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.04`", ",", "0.28`", ",", "0.5`", ",", "0.57999998`", ",", "0.63999999`", 
   ",", "0.69999999`", ",", "0.75999999`", ",", "0.88`", ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.640967886567638*^9, 3.640975985376408*^9, 3.640976242961444*^9, {
   3.640976490928467*^9, 3.6409764922815557`*^9}, 3.6409768563095737`*^9, 
   3.640977162606773*^9, 3.640977752213723*^9, 3.641016649676598*^9, 
   3.641019658076932*^9, 3.64103026018045*^9, 3.6410309821642222`*^9, 
   3.641551066948224*^9, 3.6415690600418205`*^9, 3.641900534312954*^9, {
   3.6419014713180456`*^9, 3.6419014889327893`*^9}, 3.6427079956775074`*^9, 
   3.642708172661939*^9, 3.6427180441740627`*^9, 3.6427231517187166`*^9, 
   3.6428689804256554`*^9, 3.64552928507946*^9, 3.6455299927047663`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"d", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<D:\\\\_volume_data\\\\Mathematica\\\\tooth.tif\>\"", ",", 
     "\"\<Image3D\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.640963170805564*^9, 3.640963185844922*^9}, 
   3.6409634151381907`*^9, {3.6409664069864063`*^9, 3.640966410873988*^9}, 
   3.6409665281729517`*^9, {3.6409666292981195`*^9, 3.640966631177027*^9}, 
   3.640967376103464*^9, 3.640969315446557*^9, 3.64097623969785*^9, 
   3.6427781659376*^9, 3.6455292806487164`*^9}],

Cell[BoxData[
 RowBox[{"Image3D", "[", 
  RowBox[{"d", ",", 
   RowBox[{"ColorFunction", "\[Rule]", "rgbafunction"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.641900511999488*^9, 3.6419005289999857`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"ImageData", "[", "d", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{"HistogramList", "[", 
    RowBox[{"a", ",", "bincount"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"intensityfunction", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "1", ",", 
     RowBox[{"1.", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"h", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}], "-", "1"}], ")"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sum", ":=", 
   RowBox[{"Total", "[", 
    RowBox[{"h", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hist", "[", "i_", "]"}], ":=", 
   RowBox[{
    RowBox[{"First", "@", 
     RowBox[{"FirstPosition", "[", 
      RowBox[{
       RowBox[{"h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"i", "<", "#"}], "&"}], ")"}]}]}], "]"}]}], "-", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"probability", "[", "i_", "]"}], ":=", 
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"h", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"hist", "[", "i", "]"}], "]"}], "]"}], "/", "sum"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"entropy", "[", "i_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "p", "}"}], ",", 
     RowBox[{
      RowBox[{"p", "=", 
       RowBox[{"probability", "[", "i", "]"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"p", "\[NotEqual]", "0"}], ",", 
        RowBox[{
         RowBox[{"-", "p"}], "*", 
         RowBox[{"Log", "[", "p", "]"}]}], ",", "0"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"op", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "t", "}"}], ",", 
        RowBox[{
         RowBox[{"t", "=", 
          RowBox[{"entropy", "[", "#", "]"}]}], ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"t", "!=", "0"}], ",", 
           RowBox[{"1.", "/", "t"}], ",", "0"}], "]"}]}]}], "]"}], "&"}], "/@",
      "intensityfunction"}], "//", "Rescale"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"op2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"entropy", "[", "#", "]"}], "&"}], "/@", "intensityfunction"}], 
    "//", "Rescale"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.640967384248266*^9, 3.6409673881404195`*^9}, {
   3.6409674235588217`*^9, 3.6409674289005055`*^9}, 3.6409674615996447`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"h", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{"h", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"acc", "=", 
   RowBox[{"Accumulate", "[", "y", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "50000"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"GrayLevel", "[", "#", "]"}], "&"}], ")"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<intensity histogram\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"intensityfunction", ",", "op2"}], "}"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "rgbfunction"}], ",", 
   RowBox[{
   "PlotLegends", "\[Rule]", "\"\<intensity transfer function\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"intensityfunction", ",", "op"}], "}"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "rgbfunction"}], ",", 
   RowBox[{
   "PlotLegends", "\[Rule]", 
    "\"\<inverted intensity transfer function\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"intensity", ",", "alpha"}], "}"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "rgbfunction"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<transfer function\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.640967526037927*^9, 3.64096752899327*^9}, {
  3.64096795314765*^9, 3.640968026576806*^9}, {3.640976783314335*^9, 
  3.6409767908982315`*^9}, {3.6409768282924614`*^9, 3.6409768384043894`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1:eJxd111oU2cYwPGwm0k3mBeFeTHcvMvGLgZe2IuJL0NY0SHqxihMWBCVIg7T
0cGoCGlOTk2L1TYfbbP6EW2ILdN6pLFLxY2sH2tma61dt3R+pt1WY63ai1WK
eLHkPP/3jC0g5edJcs77/I/vset2H9y59yWXy3Wt+Kf08z+v/QV1qLz3w9m6
2k22t17BAfEHfSq91ny0I31M/NkIxyPi+bPqm5j9EludvP+UOHVaLe4o/c0Z
jvfx+YT407gqy3V5N5adE3ec5Pt6xNuS6u1dxweX3efFiRDf3ytOt6hE8dO5
Lks83sr5LolbEmq9/eoTHwhz/pS4MqqGlt3FM1wWv9rG9XwnTibVTjmhuLqd
6xsQX42o2brSF14RTye43qtcb0TVlC7P+714OMz1/yDe06okRIbrO8V68ORR
VWmf4Efxe42sDxeCqnS24im5nhjrHRJnG5W9nBz+uon1D4v/jqk3S5ezdkTs
bmIe/3qf/fpJvKqJ+YyyvpgqfVt5L842MK+s2BtQz0pft4y3G8zvZ/qFlD2e
jdfErgDzxBUBZV+eOcbxMPMdF2cOquvj9kscP8C8r4vzXyh7ueUTYk8d859w
jttft+sG1+elxyTzPsx6sKqhD17tZX04U0uvm8yrlfXiapN+2gbrn3LWLz3x
nRbmgbvr6fsLPf3MB38Upjf2Gcxrmj4B+uOMyfzwiwj3w6+s32SeOG9wf+CZ
APP9TbwY4n7BeT/zxjMG909OfD7E/HG3wf2Uc+4XmcuMeI2+v3A6Sg8cNOmB
4wF6/M68A/TAhSg98BqTHreYn+6BM1F6YK9Jj9vsNyY98IpJD/yijR53nOuV
Htine2hH6XGX/bOBHni7SQ+cNulxT7w5Sg8cbKAHrjLpcd/5vPTA+TZ64LeO
0CPP/tnIevB0jD7Y0vsNDh6lF840s17sPk0/vLmF9c86+6X0xCth5oE7uuiL
T+j9Hbvb6I09Pcxrjv3/JP3nnOeTzA8vxbkf8P4U88RvJLk/8Fw38/2D+fRw
v+D1GeaNO1PcP3jLAPMXqwtT3E9i35ej9PhT3v/xGD1wxwQ98PM8PcS+12/S
g+OvTdKD46/cogcuG6HHX/L+lwfogQ9dogeu6aMHTugeOKWf1zh7jB7z9InR
Q7uBHrhDP//wKv18xQU/PXCV3n8e8Hz10wN7w/TAVXp/xZben/CSQQ/8bpge
Be7venpgj58eeKmVHnjFoAe2/PTAPj89cIXerx/y79OgB84a9MCFenpgT5ge
uMKgx0NnP5QeC85+KT1w0KDHwv+eX9gy6YE9ev9ccPZz6fGI8x+hBx5upweu
bKYHLv7/SHrg6mZ64BNxeiyKa0P0wPEoPfBkOz1whUUPXJWkB/ZdpIfYt2GQ
Ho/l+NhleuDBfnrgmn564P4heuCnFj3wJ9/S4wnP2x564CmLHvj9GD2wFaEH
ru2khz5+mB5Pef5/RQ+c2UMP7c/pgV3v0EN7NT20XfRY2qR/dm47Oz9azu8f
xd9H/gFphi8A
      "], {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.01388888888888889], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{202, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
           35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
           52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68,
           69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
           86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
          102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 
          115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 
          128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 
          141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 
          154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 
          167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 
          180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 
          193, 194, 195, 196, 197, 198, 199, 200, 201}, VertexColors -> 
          Automatic]}}}, VertexColors -> CompressedData["
1:eJxF0DtMk1EYxvG6MnfGuMHsTN5RJxOYmUhwFRMmXGXVxUVNSBQSYmIajRrR
qAErFiuX3r/e+93vF5c62+/0n3iWFnre8zy/98bGvbXNa4VCoVr4fx4US7eM
nW2Zfz6Uo8XdaPXoEX8/kWdP1eH/exKv5t9e8PuBLGj7WysLh9x7Jcvrj79P
l15zvyQHs1+1/TfMvZWb6rxj/r2Up0uziQ+881HW5oO890mMnfziZ979Ivfz
57a+8v43mSuOyTmW22rghLwTyadmo+SWRcVoZfJ/yPX8mcVTepzKXXV+0qci
+a1iqUKvM/mbX5ue0e+XqDorVXpWRT23+5u+53Jxrg69L0TFFi/pfynq2voV
jho5NTw18mq46uTW8dXJb+Bs0KOBt0mfJu4mvVr4W/RrsYc2Pdvso03fDnvp
0LvDfjT6a+xJw9HF0cXRxdHF0cPRw9HD0cfRx9HHMcAxwDHAMcQxxDHEMcIx
wjHCMcYxxjHGMcExwTHBoZOj49HJ03Hp5Or4dPINnAY9DLwGfQzcBr1M/Cb9
TPZg0tNkHyZ9LfZi0dtiPxb9LfZk4bBx2DhsHDYOG4eNw8bh4HBwODgcHA4O
B4eLw8Xh4nBxuDhcHB4OD4eHw8Ph4fBw+Dh8HD4OH4ePw8fh4whwBDgCHAGO
AEeAI8QR4ghxhDhCHCGOCEeEI8IR4YhwRDhiHDGOGEeMI8YR44hxJDgSHAmO
BEeCI8GR4khxpDhSHCmOFEeGI8OR4chwZDgyHH/k+Z2XbqW4Lf8AfB8fCQ==

       "]], {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, PlotRange -> {{0, 1}, {0, 50000}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotRange -> {{0, 1}, {0, 50000}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox["\"intensity histogram\"", TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6409674862938356`*^9, {3.640967529680792*^9, 3.6409675465263367`*^9}, {
   3.6409679544607563`*^9, 3.6409680271824083`*^9}, 3.640975986907553*^9, 
   3.6409762447275543`*^9, 3.640976496487588*^9, {3.640976829005492*^9, 
   3.6409768580488224`*^9}, 3.64097716442906*^9, 3.64097775428284*^9, 
   3.6410166545140734`*^9, 3.64101966202948*^9, 3.6410302632429705`*^9, 
   3.6410309837735796`*^9, 3.641551072146453*^9, 3.641569063527404*^9, {
   3.641901479527532*^9, 3.6419014905890646`*^9}, 3.6427079992092557`*^9, 
   3.6427081744419055`*^9, 3.642718047269067*^9, 3.642723153687042*^9, 
   3.6428689836696224`*^9, 3.6455292896459208`*^9, 3.6455299977418547`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1:eJxV1ws41OkeB3C6bHtK23ZxXAq1eRzaNk4pl+i7taV0xFLbelq26JTTvUO5
HbaDihlyN+63NAmbhJJS7reQu1Eyxm0ww1Cb2pA9mN/MPuf/PB7P39//fd/f
9/P6vWad/QWrE/NkZGSqZ75mv///NYb/rMrc2+1+CRV9dZ7Tojy6v4r+xqDA
9Rez8Uj1mtDyUSD0RVu3W3GL6Xk4JkSHjLvX3kJM9NyFQ/ryvm+rE+j3E/DO
I9+94EAyhi1nf5KMLTZnyuOrsun9WzjwboyjUpKMxZyUi8aLU1Eox22zME+i
8dKgEsuue7o5FVo2QSXjmr/i5qlrvuZtETR+Jq6o8UsKOsJwa+ZtTkoWftja
enfw93Ca7z4U3x4ZZaSwsWXuykFLenz8RDKL5s8F40UDr9crCqXjmjMzPIBu
yIG7yXuiaT15EPWX+HP/mwor8YTg6f+Wxk6IofXlQ8/VlXtmPBLd7rMDPsZr
RYODpTw2rbcACvEGU/s6I/Hv2eVdfIp6jqyD7iSL1v8MKaJDbiU3wiF2KIJa
/ALzkewkqqcIrnnD1jnnQ7BvboJiqF+yn+BOBlJ9xbCQC7f8eDcQs7PNTImH
Gfvf/sKPo3pLcTJDq16YGIS5cjilUOf3jsVsCqb6y2Ctq9UuXBMPtdnlqJZj
nuk/+EnzgymPP+8dTs5eFTD13FXd2hdE+VRicpWdnEZ9HGZHW5VZiQs5O6es
bAMoryrwFbex71Uw8H52uPEqyAWFDny86kf5VSOv+p+TjwUR2DE34HM4JJnX
ck0ZlOdztCV2/GHlx8Dc8q7VYFniNykauizKtxZPrq84t1/PGXW1cxfULNnb
ko0vUd51qBtF2+3PL0N+boEvULl8QZCShxfl/0L6fG44m3rc8P7hy8pSZ/Jo
wJmlB/ra1vlQPQ2QnVAqMRt1IZ8GKHNSrQOdnKm+Bujow7bGyIO8GrG2IzAx
fVM41dsIoU+JU+VLJvk1Iiyu0ak70Y/qb5LWL/ZsggEDh+RlwymPJvwtwXgy
7fZ18m2G52FTp0WhvpRPM3SCOTfcvFjk3YxfotV+KXvsR3m1QP9Hn/Ermkzy
b4HhnVNxE4b+lF8Lwtg+lrlbo2g/tKJhw9oNDbFMyrMVSV8pzFPXYND+aEVJ
c/bNXYZMyrcNeU0LX5SrsWi/tCHxV9ky7UV+lHcbNtrLKeiqMGj/cFBvP2Xm
zo2g/Dk4mXR/N3PAj/YTR7pfxB7tOBGul/0h1p882lGj5/8H900UebRDoVxL
W+MTkzzacT9k5YrlUwzyeAmLor+crnrKII+XWHAl+rfiddHk8RJftxc9M/Ri
kscr2KZ7ZXq0MxA85/EK8h0Zezo+RpHHK7y/x2xI7GGSRweOF2QVTC30J48O
6MgsVM939SePDii2PFs2tCWGPF5L1yv2eI1ra1dusnjHJI/X2Psq0mc4X+LR
CVmDT3ay3wWQRyeum1qmbC9kkkcnVuQWFWls9icPLj7WHv1Xj2cUeXBRwV/l
ulohgDy4ENhZ2spXMcmjS/q+2KMLSleT7HQUY8ijC/ETFTXZTwPIg4flIcuM
6uWDqB4e9qsvdGz5FEc+PDg+yj/PNpP0m5n7jE05nvtCyIuHc+kuA5kjIVQv
D6plJV1VS5LJj4e/K1nx5Y+HUf3d0n4p9uyGSYVzdaO2pL92Q6lA6djqUsl5
1A2nDc3eg62S/t6NYjOzk952Eu9uFPJljBP60yivHuQxBFqJS5LIv0d6Ponz
60HXF3V5PMub9PfZg8K+gsETtjmUZw8+yZ013/VZKu2PHtg/aNzc65JG+fZi
QPGnSov96bRfevH4orUILgWUdy+KD/PSz17Nof3Ti4Dzqg93fJ1H+ffC902q
5gf5WtpPvbgcuGS1hWkpefSBpb/S/3tOOXn0YeXG0tYvRJXk0YdF5uadw45t
5NGH6QanymCt5+TRh3HWhViPniry6EOeXZioYHcTefTB5PJ8N/nUYvLoR2Rk
0PT4h4fk0Y/DB428Vk9nkUc/lEOzRqYissmjH1oi9hF+p8SjHwdZT/nbeJLz
eub5mm+DclxDyYOPJFvH0eGAOPLg46CDdfkGoT958JHr7tli8qPk/ONDdaO7
m5mR5Hzlw8nmvZH2l37kwUfB0YCdb2/4kccA9K84mGiP+5LHAKru6Ggvvs0i
jwF8k7Z4x9A5SX8dwHjFkvWeY5L+NICu6Zpj8/QZ5DEAtsvk+bFjLPIYhMgm
dKKv+Dp5DOLno8asN86+5DGIsabt6wUqEeQxiB2hr1rGvmWQxyAsj+3/q2aj
L3kMQvuS3r2lsb7kMYjfzbbuc7kYSR5DaFKr2axi4UceQ8jsjq6yWsIgjyG4
Grr9bDR6nTyG0GCQqFkTwSKPITxxqGpeetqPPIak/VDsIZD2S7GHAIMZZzj5
pX7kIZCeX+J+KUCBq6+jlZY/eQhweuC4uSBa0j8F0n4u9hBC5Dgd95YTQB5C
fP6m+tzhjzHkIYQDB7XfZYaQh1D6/5HYQ4hlJgeqdQpDyEOIoyplJiHzb5LH
MNQnCoVG7AjyGEaCm6rnwMso8hhGiFpgtsbCWPIYxleBhnYn+PfIYxi2Cj/t
TN6eSh7DuLP7bJ6m6j3yGIZ3W64Jz6aQPEbQ6P2i+7PLueQxArbuXa072x6Q
xwhiNWWOHf6QSx4jEF1LLbZ/UkQeI8DBikguM4s8RpDiOm7sEpFBHiLoKTmv
X300nTxE0G7J7B9yzCIPEQbDGKFNp+LIQwR/5TvvjgxFkocIApHWXoPgBPIQ
Yfruujic9SGPUawxPl1dWeZBHqMorbR2mNh7njxG8ahe2Vq50IE8RpG/6Hvl
nSNbyWMUdt5c1z2JCuQxig2CSxlGFjKQfO6QfAL5H4pQKa4=
      "], {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.01388888888888889], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
          86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
          102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 
          115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 
          128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 
          141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 
          154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 
          167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 
          180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 
          193, 194, 195, 196, 197, 198, 199, 200, 201}, VertexColors -> 
          Automatic]}}}, VertexColors -> CompressedData["
1:eJxTTMoPSmViYGA4CcTMDAgQCgZP7SG8D/aj4qPio+Kj4qPio+Kj4qPio+LU
FV90X9qZgWGDPUdExq///x/b87TM+f7//1uo+AH7XVHV81etemQvwWH5/v//
1/bF51emMDCcsM+N7XMJDX1or9xz9dn//y+h6i/Y2x1wuvz//317fYGie///
P7fvvv4omIHhiv2SoxmyoaF37a2m8F37//8p1Jwb9pyn+9JXrbpl7yax+izI
/pjjBaUMDHfs8y5s2fj//3X7oDnuR///fwg1/4H95au3foeEXrXf43CiEmTP
tOh6bwaGR/YWtxncVq26ZH/FgzHz///bUHuf2Fsd9FX4//+8/asAqwiQefXB
bjEMDM/sWc7M3LJy1Sl7pshi9///L0Pd88L+wrWnHiGhR+1NDkXk/gPqS/fm
zWVgeGVvcDh519//++1TLp3y/vf/ONSdb+xP3Pj9KCh0q73C0cqQP0D5AOcr
tQwM7+w33FEXDwhdas9werfSj//rMeIBFYyKj4oTJx4derVpflybHbq4maum
YgQwHaKLe/va7w4Dpmd08b+/v2wC5Vd08bBAL44wYP5CF1+3bH7samA+RRdn
rquKBOVLdPH1Gqosq4HlBob7L59fhyh/EOLsYHNeYIhvBpvzCkM8HmzOWwxx
VHpUfFR8VHxUfODEAbaMOsw=
       "]], {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, PlotRange -> {{0, 1}, {0, 1}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotRange -> {{0, 1}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox["\"intensity transfer function\"", TraditionalForm], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6409674862938356`*^9, {3.640967529680792*^9, 3.6409675465263367`*^9}, {
   3.6409679544607563`*^9, 3.6409680271824083`*^9}, 3.640975986907553*^9, 
   3.6409762447275543`*^9, 3.640976496487588*^9, {3.640976829005492*^9, 
   3.6409768580488224`*^9}, 3.64097716442906*^9, 3.64097775428284*^9, 
   3.6410166545140734`*^9, 3.64101966202948*^9, 3.6410302632429705`*^9, 
   3.6410309837735796`*^9, 3.641551072146453*^9, 3.641569063527404*^9, {
   3.641901479527532*^9, 3.6419014905890646`*^9}, 3.6427079992092557`*^9, 
   3.6427081744419055`*^9, 3.642718047269067*^9, 3.642723153687042*^9, 
   3.6428689836696224`*^9, 3.6455292896459208`*^9, 3.6455299978078947`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1: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
      "], {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.01388888888888889], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
          86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
          102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 
          115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 
          128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 
          141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 
          154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 
          167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 
          180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 
          193, 194, 195, 196, 197, 198, 199, 200, 201}, VertexColors -> 
          Automatic]}}}, VertexColors -> CompressedData["
1:eJxTTMoPSmViYGA4CcTMDAgQCgZP7SG8D/aj4qPio+Kj4qPio+Kj4qPio+LU
FV90X9qZgWGDPUdExq///x/b87TM+f7//1uo+AH7XVHV81etemQvwWH5/v//
1/bF51emMDCcsM+N7XMJDX1or9xz9dn//y+h6i/Y2x1wuvz//317fYGie///
P7fvvv4omIHhiv2SoxmyoaF37a2m8F37//8p1Jwb9pyn+9JXrbpl7yax+izI
/pjjBaUMDHfs8y5s2fj//3X7oDnuR///fwg1/4H95au3foeEXrXf43CiEmTP
tOh6bwaGR/YWtxncVq26ZH/FgzHz///bUHuf2Fsd9FX4//+8/asAqwiQefXB
bjEMDM/sWc7M3LJy1Sl7pshi9///L0Pd88L+wrWnHiGhR+1NDkXk/gPqS/fm
zWVgeGVvcDh519//++1TLp3y/vf/ONSdb+xP3Pj9KCh0q73C0cqQP0D5AOcr
tQwM7+w33FEXDwhdas9werfSj//rMeIBFYyKj4oTJx4derVpflybHbq4maum
YgQwHaKLe/va7w4Dpmd08b+/v2wC5Vd08bBAL44wYP5CF1+3bH7samA+RRdn
rquKBOVLdPH1Gqosq4HlBob7L59fhyh/EOLsYHNeYIhvBpvzCkM8HmzOWwxx
VHpUfFR8VHxUfODEAbaMOsw=
       "]], {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, PlotRange -> {{0, 1}, {0, 1}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotRange -> {{0, 1}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox["\"inverted intensity transfer function\"", TraditionalForm], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6409674862938356`*^9, {3.640967529680792*^9, 3.6409675465263367`*^9}, {
   3.6409679544607563`*^9, 3.6409680271824083`*^9}, 3.640975986907553*^9, 
   3.6409762447275543`*^9, 3.640976496487588*^9, {3.640976829005492*^9, 
   3.6409768580488224`*^9}, 3.64097716442906*^9, 3.64097775428284*^9, 
   3.6410166545140734`*^9, 3.64101966202948*^9, 3.6410302632429705`*^9, 
   3.6410309837735796`*^9, 3.641551072146453*^9, 3.641569063527404*^9, {
   3.641901479527532*^9, 3.6419014905890646`*^9}, 3.6427079992092557`*^9, 
   3.6427081744419055`*^9, 3.642718047269067*^9, 3.642723153687042*^9, 
   3.6428689836696224`*^9, 3.6455292896459208`*^9, 3.6455299978608723`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, 
     GraphicsComplexBox[{{0.04, 0.}, {0.28, 0.39215686274509803`}, {0.5, 
      0.}, {0.57999998, 0.}, {0.63999999, 0.39215686274509803`}, {0.69999999, 
      0.}, {0.75999999, 0.}, {0.88, 0.39215686274509803`}, {1., 
      0.}}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9}, VertexColors -> Automatic]}}}, 
      VertexColors -> {{0., 0.6666666666666666, 1.}, {0., 0.6666666666666666, 
       1.}, {0., 0.6666666666666666, 1.}, {0.7812499348958181, 
       0.1458333767361214, 0.21875006510418193`}, {1., 0., 0.}, {1., 0., 
       0.}, {1., 0.8333333263888898, 0.}, {1., 1., 0.}, {1., 1., 0.}}], {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, PlotRange -> {{0, 1}, {0, 1}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotRange -> {{0, 1}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox["\"transfer function\"", TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6409674862938356`*^9, {3.640967529680792*^9, 3.6409675465263367`*^9}, {
   3.6409679544607563`*^9, 3.6409680271824083`*^9}, 3.640975986907553*^9, 
   3.6409762447275543`*^9, 3.640976496487588*^9, {3.640976829005492*^9, 
   3.6409768580488224`*^9}, 3.64097716442906*^9, 3.64097775428284*^9, 
   3.6410166545140734`*^9, 3.64101966202948*^9, 3.6410302632429705`*^9, 
   3.6410309837735796`*^9, 3.641551072146453*^9, 3.641569063527404*^9, {
   3.641901479527532*^9, 3.6419014905890646`*^9}, 3.6427079992092557`*^9, 
   3.6427081744419055`*^9, 3.642718047269067*^9, 3.642723153687042*^9, 
   3.6428689836696224`*^9, 3.6455292896459208`*^9, 3.6455299979008613`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"intensity0", "=", "intensity"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alpha0", "=", "alpha"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"First", "[", "intensity0", "]"}], ">", "0"}], ",", 
    RowBox[{
     RowBox[{"intensity0", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", "0", "}"}], ",", "intensity0"}], "]"}]}], ";", 
     RowBox[{"alpha0", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", "0", "}"}], ",", "alpha0"}], "]"}]}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Last", "[", "intensity0", "]"}], "<", "1"}], ",", 
     RowBox[{
      RowBox[{"intensity0", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"intensity0", ",", 
         RowBox[{"{", "1", "}"}]}], "]"}]}], ";", 
      RowBox[{"alpha0", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"alpha0", ",", 
         RowBox[{"{", "0", "}"}]}], "]"}]}]}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"intensity0", ",", "alpha0"}], "}"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "rgbfunction"}], ",", 
     RowBox[{
     "PlotLegends", "\[Rule]", "\"\<user specified transfer function\>\""}]}],
     "]"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"intensity0", ",", "alpha0"}], "}"}], "]"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "rgbfunction"}], ",", 
   RowBox[{
   "PlotLegends", "\[Rule]", "\"\<user specified transfer function\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.640976840575452*^9, 3.640976848124753*^9}, {
  3.642724213246476*^9, 3.6427242279398603`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1: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
mmcjcOOdqhJbE/wPs26c+A==
     "], {{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwl1He8lnMYB+BT2vO0d53T3jtNTjSkIQqVkjop0t57kNEOaVBRUWQ1SAul
XchooIWiiDJaaHDdH39c5/v93e/7nHPe57k/b3LqgHb90yQkJIz3I7K8H8fl
YgbQklqkpYLXvpVLGEgrapNiflGu40m6c7dZFj7RF9BDL8SRuFaWZRw3OFeU
38mlDKI1dUhHejKQkUxkJgtZyUZ2Krn+e/kyg2nDjTQ2vyTX8xSp5KCy+Qn5
CkO4I66J/4Ud+nPU5Rbny3IDk+ninJsDej9Zih76PTIrw/nUuY9MZqH+oCzM
UT0nVfSTchlDaUs9EslFbvKQl3zkpwAFqeraH+RyhnEn9bnV/C+5kSnxNylE
NfMf5asM5674rGbp2KnPoauel0N6LEJpxtLAuYn8O+6p3CQfksWYqt8v83BQ
78m9ejb26YsoTHXnU/I1RtCOhhShKMWo4T2n5QpG0j7uiVl6dulzeUDPx0i+
ir2UZWikN5X/yPeZRi+KU9P8J/k6o2IfuYkSsc9e+1m+weh4ftxMM/Mr8gOm
x+clidrmZ+SbjKGTc06+iM8dz0HPwBB2Oz8sizOaec7dZH6+1lNorl+VHzIj
3k8ydcx/kW8xlg6xw5SMffbar/JtxtEx9pPbzK/JzcykN6Vif83PypWM5z7n
RL6M/z92Qc/IUPbEdbIEY5jv3F0W4JvYL1ro1+UWZvEIpWN3zc/JVUyIvxN7
QxnKxn56/Te5mol0jj0wy8Qw9sbvkkk8r6fKghyOZ8vt+r/yI56mD+VoYP67
XMOjdInnR3kqUJFKsW/e94d8h8dib+P+0zK+7NgqnqFv3G/n7Hymv0hlGjn/
Kd+N3dKLMopJ8VlkLkawP36HLEnX2GOZmY/1F+I50Sq+Y9mmP0s/qsRemp2X
a3k89j3uN1WpRnVqxI563wX5Hk/EXsX9obV5Wrbrs+kf++Gcg8/1l+ipF+GY
PkiWS/P/d35N5/8AgAWhcw==
         "], VertexColors -> Automatic]}}}, VertexColors -> CompressedData["
1:eJztWXs0lHkYHilxIlSuRyhi21wmomR5LVm0JYloa8u6ni42Usq6RDrLHEvD
NrntaS5WBosxtgkVowzJbYpQWJqLyDCytpXrdnbPnj3bbEe5jO/M9v73Pef7
vt/7e97nfd7z/b51niedfZagUKgIMRRKHPVPuP4ZXPjragg+4B/wueCO0wGZ
E35l4I0zHc6pY4Fi997jKGMe5FhYbtEObwMzvSgjC7cnsOlpN9e/gg1DLfG/
3NbggJ5yu/jB3EbQdOZYX6S3QtXDXrnxbB5gP9MZr7xfCMyjJed0KaUC6/87
Fg/fULlmxwX7OngTd1M+KXPAnyWA7zIgx0lKDgjg/73OB/zvQIrO3xenWtbn
J65gAmbT2TiH0S7I8kj9aOvYM8Tq+V7+WEb2vjyBugQ6nL4acv4xQvQgejrx
j9jYhs2shhSFV+1+3k/Bh/BbTbricyDGhUtg7wwCgYo5Mx2UBkO2uinTLRmI
1c9DV/DofNAkUK+wbYokXyJf5HXiIN/IG8nLg2Gp9cF0ZQ70rzQu1NwwKLR6
yRRj9tMaKkSGz4XGtaYDcNUn7sI3j5T8MMos2ErPUG3Q7ofthkVxtrQBGKLG
tlX6kQH9rS+paTcVsX3Hatf+VHacKVCvQ8ZdV264DApZD8LXiYRpXCjX7Acw
qVTaVlvGAadrWs1odb7Q6hXmFVtO0CpBLJ+SvXZRTxr4EDm5vLf5qwBATaw4
VJ50bkZ+DPVrErXoWKHlWW3Diw/F06Bgj97P10+xIeasdYKc3sAbzy2+3hYa
31W+ZsTTqQKCTLL00k6xQJ85Zv0stx8kxBwdNdEDQMcf88uaygPm75fiJyNo
iPUlBUtDLyeNRoF6dVBs5D3ykfIdtHB1JFwQT63aiwFH4qpUpjwXXr5I5xan
Cc+X+jvu3CvtKUIsn80lLJvr9q/5oMYVnP4uASIZ5Gi3vitz5Gf+8zTt2bjE
/CYVHujpKtxksMHsbik+hTxbX5qvfQnmqbN/56MgbiasfqbWyjjOgatf5N4h
Ewffuq/Z5kMhnaR1PiYtUH+Jnp+H4H0z0NZ0OMH9+hIJz4L17jqtQfx+4B1N
L5AZ4IFyrb+btA8FCBTt6KTkYsT6+Vox0r6+onqBul/mn3HcclD0/RynMNIU
GxUEbFmswz5zLjxSch+caBOen3NUPOrt7AsRy2fpenQmaRkfuhlZPWqdl4FO
Hj+Q+zl+1vxUvmJ7J42867nBu+dpfsP+lmoNBXzTf2RY8Nmg0hdM7uhBnp+j
R2McjMVIQHZNi7HHcSA80q+W1zX/fm5n5nKeb5YuZD8XxHNDJby9Ay9DhRGu
d3cvB7TqujpOH5q5v5aHjWIPq4TMMf/53q9g/F/mnbOGxkuD4HLwvv2QrkNj
gaLaJ+u2y/PgiLq1x8VaHlAkd2b3KhWCpAx/siOjZAbeFg+P9GyvNZkS/L/T
vVLW/+pm0Z93UwMuuiYX94B+dQNxjRMXGB/ThtVHhTfv7AO/xKsNFyCWT4PW
FlcVziBY3VI2SCAng2Z8EulYGXHW/MiphEdP3J//eWdjRTFSIBQA2Zm9dlqc
AxPjzT9NLXvzXHrx551pzTXx1bIE+FX6cZdUDgf8v2c0rpx++7zDGROZXkOv
+cLKbQSmC6BaUm4f3nZkRv7R1IRYqUncos872todbVrxWJB+3mQlO8mBVV0W
T6+EztxfSwmYVtVkJ5GZd7SqiChbTBSkuO99kajDBe7Ssb4nJXP1mbny8L7v
f/v9m3ctNw2ViJl3Xf0BisnMzA==
      "]], {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 1}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox["\"user specified transfer function\"", TraditionalForm], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.640976805394904*^9, {3.640976845717713*^9, 3.640976858278875*^9}, 
   3.640977164655088*^9, 3.640977754438912*^9, 3.64101665482809*^9, 
   3.6410196623174653`*^9, 3.6410302633679705`*^9, 3.6410309838985887`*^9, 
   3.6415510723614187`*^9, 3.641569063652438*^9, {3.6419014827206383`*^9, 
   3.6419014907296677`*^9}, 3.6427079994280415`*^9, 3.6427081746568995`*^9, 
   3.6427180474040737`*^9, 3.6427231538242264`*^9, 3.6427242290098968`*^9, 
   3.642868983825653*^9, 3.645529290006961*^9, 3.645529997946899*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImageDimensions", "[", "d", "]"}]], "Input",
 CellChangeTimes->{{3.640963443548835*^9, 3.64096344670082*^9}, {
   3.6409664867302194`*^9, 3.640966486980178*^9}, 3.64096866586631*^9, {
   3.6409732365622916`*^9, 3.6409732374173403`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"140", ",", "120", ",", "161"}], "}"}]], "Output",
 CellChangeTimes->{3.640976858401837*^9, 3.6409771647820377`*^9, 
  3.640977754561882*^9, 3.6410166550741034`*^9, 3.641019662445526*^9, 
  3.641030263492932*^9, 3.6410309840079203`*^9, 3.6415510729784775`*^9, 
  3.641569063808653*^9, 3.641901490839043*^9, 3.642707999615508*^9, 
  3.642708174774885*^9, 3.642718047704072*^9, 3.6427231539343967`*^9, 
  3.6428689838376245`*^9, 3.6455292902159657`*^9, 3.6455299979618673`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "top", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"list", "=", 
     RowBox[{"Image3DSlices", "[", 
      RowBox[{"d", ",", "All", ",", "1"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"count", "=", 
    RowBox[{"Length", "[", "list", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"img", "=", 
     RowBox[{"First", "[", "list", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"list2", "=", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"img", "=", 
         RowBox[{"ImageApply", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#1", "+", 
             RowBox[{
              RowBox[{"Clip", "[", 
               RowBox[{
                RowBox[{"1", "-", "#1"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}]}], "]"}], "*", 
              RowBox[{"f", "[", "#2", "]"}]}]}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{"img", ",", 
             RowBox[{"list", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "2", ",", "count"}], "}"}]}], "]"}], "//", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"First", "[", "list", "]"}], "}"}], ",", "#"}], "]"}], 
       "&"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"list3", "=", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ImageSubtract", "[", 
         RowBox[{
          RowBox[{"list2", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"list2", "[", 
           RowBox[{"[", 
            RowBox[{"i", "-", "1"}], "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "2", ",", "count"}], "}"}]}], "]"}], "//", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"First", "[", "list", "]"}], "}"}], ",", "#"}], "]"}], 
       "&"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"d1", "=", 
    RowBox[{"Image3D", "[", "list3", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6409629159797664`*^9, 3.640963034768303*^9}, {
   3.640963107058121*^9, 3.640963111803402*^9}, {3.6409632192716184`*^9, 
   3.6409632211195903`*^9}, {3.640968753677548*^9, 3.640968756509709*^9}, {
   3.6409732387944174`*^9, 3.640973239994485*^9}, {3.6409733029893312`*^9, 
   3.6409733259178944`*^9}, {3.6409739762818255`*^9, 
   3.6409739805697737`*^9}, {3.6409752445216155`*^9, 3.640975343269434*^9}, {
   3.640975399559469*^9, 3.640975425416729*^9}, {3.640975459432003*^9, 
   3.6409754644325275`*^9}, {3.640975516187657*^9, 3.640975518146924*^9}, {
   3.640975684654972*^9, 3.64097568985563*^9}, 3.6409758630543385`*^9, {
   3.6409761652320747`*^9, 3.640976167023108*^9}, {3.6409765450273666`*^9, 
   3.6409765473002434`*^9}, {3.6409767084568186`*^9, 3.640976741409601*^9}, {
   3.6409770892773275`*^9, 3.640977104061649*^9}, 3.6409788984925065`*^9, {
   3.6428772442337017`*^9, 3.6428772505139985`*^9}}],

Cell[BoxData["161"], "Output",
 CellChangeTimes->{
  3.640975999516076*^9, 3.6409761813658094`*^9, 3.640976258432677*^9, 
   3.640976547756276*^9, {3.6409767025820312`*^9, 3.6409767319412637`*^9}, 
   3.640976858431825*^9, 3.640977164812042*^9, 3.640977754575915*^9, 
   3.640978679136894*^9, 3.640978922284706*^9, 3.640982078995332*^9, 
   3.641016811445842*^9, 3.6410196624574747`*^9, 3.6410302635398073`*^9, 
   3.641030984023546*^9, 3.641551073024457*^9, 3.641569063855528*^9, 
   3.6419014908546715`*^9, 3.64190241060574*^9, 3.641902904612892*^9, 
   3.642707999631116*^9, 3.6427081747898855`*^9, 3.642718047749017*^9, 
   3.6427231539543447`*^9, 3.6428689838856015`*^9, 3.645529290273957*^9, 
   3.645529997980873*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rgblist", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ImageApply", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"List", "@@", 
         RowBox[{"rgbfunction", "[", "#", "]"}]}], "&"}], ",", 
       RowBox[{"list", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "list", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmp", "=", 
   RowBox[{"ImageMultiply", "[", 
    RowBox[{
     RowBox[{"list3", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"rgblist", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"acc", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"tmp", "=", 
      RowBox[{"ImageAdd", "[", 
       RowBox[{"tmp", ",", 
        RowBox[{"ImageMultiply", "[", 
         RowBox[{
          RowBox[{"list3", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"rgblist", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", "rgblist", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"result", "=", 
  RowBox[{
   RowBox[{"SetAlphaChannel", "[", 
    RowBox[{
     RowBox[{"Last", "[", "acc", "]"}], ",", 
     RowBox[{"Last", "[", "list2", "]"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"RemoveAlphaChannel", "[", 
     RowBox[{"#", ",", "White"}], "]"}], "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<tooth1.png\>\""}], 
    ",", "result", ",", 
    RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6427219948180027`*^9, 3.642722001779764*^9}, {
   3.6427226875360575`*^9, 3.6427227016321287`*^9}, {3.642722776542172*^9, 
   3.642722791395068*^9}, {3.6427228225606346`*^9, 3.642722890969407*^9}, 
   3.642722959104457*^9, {3.642722990580078*^9, 3.642723002141048*^9}, 
   3.642723087738268*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "back", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"list", "=", 
     RowBox[{"Image3DSlices", "[", 
      RowBox[{"d", ",", "All", ",", "2"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"count", "=", 
    RowBox[{"Length", "[", "list", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"img", "=", 
     RowBox[{"First", "[", "list", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"list2", "=", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"img", "=", 
         RowBox[{"ImageApply", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#1", "+", 
             RowBox[{
              RowBox[{"Clip", "[", 
               RowBox[{
                RowBox[{"1", "-", "#1"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}]}], "]"}], "*", 
              RowBox[{"f", "[", "#2", "]"}]}]}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{"img", ",", 
             RowBox[{"list", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "2", ",", "count"}], "}"}]}], "]"}], "//", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"First", "[", "list", "]"}], "}"}], ",", "#"}], "]"}], 
       "&"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"list3", "=", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ImageSubtract", "[", 
         RowBox[{
          RowBox[{"list2", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"list2", "[", 
           RowBox[{"[", 
            RowBox[{"i", "-", "1"}], "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "2", ",", "count"}], "}"}]}], "]"}], "//", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"First", "[", "list", "]"}], "}"}], ",", "#"}], "]"}], 
       "&"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d2a", "=", 
     RowBox[{"Image3D", "[", 
      RowBox[{"Reverse", "[", "list3", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"d2", "=", 
    RowBox[{"ImageRotate", "[", 
     RowBox[{"d2a", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"90", " ", "Degree"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6409731990077724`*^9, 3.6409732137934427`*^9}, {
   3.640973457737423*^9, 3.640973496962901*^9}, {3.6409755491554174`*^9, 
   3.640975562985564*^9}, 3.640975722642293*^9, {3.640975849981784*^9, 
   3.6409758556531973`*^9}, {3.640976170919365*^9, 3.6409761717833033`*^9}, {
   3.640976556379818*^9, 3.640976556684777*^9}, {3.6409767174972873`*^9, 
   3.6409767478024273`*^9}, {3.640977109758252*^9, 3.640977111477542*^9}, 
   3.6409787770500107`*^9, {3.640978885428972*^9, 3.6409788938060513`*^9}, {
   3.6409826285817556`*^9, 3.640982632980812*^9}, {3.6428772549831085`*^9, 
   3.642877271691392*^9}}],

Cell[BoxData["120"], "Output",
 CellChangeTimes->{
  3.6409760117585526`*^9, 3.640976193720048*^9, 3.6409762739502068`*^9, 
   3.64097656130555*^9, {3.6409767165573072`*^9, 3.6409767461362705`*^9}, 
   3.640976872358879*^9, 3.640977180241002*^9, 3.6409777698922887`*^9, 
   3.640978694736916*^9, 3.6409787859065437`*^9, 3.6409789379508605`*^9, 
   3.640982096024005*^9, 3.640982633507842*^9, 3.641016655092105*^9, 
   3.641019677909642*^9, 3.641030278516111*^9, 3.6410309983580666`*^9, 
   3.6415510906175127`*^9, 3.6415690808518505`*^9, 3.6419015054930525`*^9, 
   3.6427080554595146`*^9, 3.6427082312005863`*^9, 3.642718105782142*^9, 
   3.6427231914854975`*^9, 3.6428690196307044`*^9, 3.6455293288577905`*^9, 
   3.645530035941189*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rgblist", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ImageApply", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"List", "@@", 
         RowBox[{"rgbfunction", "[", "#", "]"}]}], "&"}], ",", 
       RowBox[{"list", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "list", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmp", "=", 
   RowBox[{"ImageMultiply", "[", 
    RowBox[{
     RowBox[{"list3", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"rgblist", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"acc", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"tmp", "=", 
      RowBox[{"ImageAdd", "[", 
       RowBox[{"tmp", ",", 
        RowBox[{"ImageMultiply", "[", 
         RowBox[{
          RowBox[{"list3", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"rgblist", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", "rgblist", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"result", "=", 
  RowBox[{
   RowBox[{"SetAlphaChannel", "[", 
    RowBox[{
     RowBox[{"Last", "[", "acc", "]"}], ",", 
     RowBox[{"Last", "[", "list2", "]"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"RemoveAlphaChannel", "[", 
     RowBox[{"#", ",", "White"}], "]"}], "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<tooth2.png\>\""}], 
    ",", "result", ",", 
    RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{3.6427231009752254`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "left", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"list", "=", 
     RowBox[{"Image3DSlices", "[", 
      RowBox[{"d", ",", "All", ",", "3"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"count", "=", 
    RowBox[{"Length", "[", "list", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"img", "=", 
     RowBox[{"First", "[", "list", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"list2", "=", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"img", "=", 
         RowBox[{"ImageApply", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#1", "+", 
             RowBox[{
              RowBox[{"Clip", "[", 
               RowBox[{
                RowBox[{"1", "-", "#1"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}]}], "]"}], "*", 
              RowBox[{"f", "[", "#2", "]"}]}]}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{"img", ",", 
             RowBox[{"list", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "2", ",", "count"}], "}"}]}], "]"}], "//", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"First", "[", "list", "]"}], "}"}], ",", "#"}], "]"}], 
       "&"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"list3", "=", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ImageSubtract", "[", 
         RowBox[{
          RowBox[{"list2", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"list2", "[", 
           RowBox[{"[", 
            RowBox[{"i", "-", "1"}], "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "2", ",", "count"}], "}"}]}], "]"}], "//", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"First", "[", "list", "]"}], "}"}], ",", "#"}], "]"}], 
       "&"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d3a", "=", 
     RowBox[{"Image3D", "[", "list3", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"d3", "=", 
    RowBox[{
     RowBox[{"ImageRotate", "[", 
      RowBox[{"d3a", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"90", " ", "Degree"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "}"}]}], "]"}], "//", 
     RowBox[{
      RowBox[{"ImageRotate", "[", 
       RowBox[{"#", ",", 
        RowBox[{
         RowBox[{"-", "90"}], " ", "Degree"}]}], "]"}], 
      "&"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.640973530197007*^9, 3.640973539499755*^9}, {
   3.6409755710918694`*^9, 3.6409755758767548`*^9}, 3.640975732473076*^9, 
   3.640975866438529*^9, {3.640976175799568*^9, 3.6409761764865704`*^9}, {
   3.640976569868112*^9, 3.6409766068130054`*^9}, {3.640976721136732*^9, 
   3.640976722464814*^9}, {3.6409767598975573`*^9, 3.6409767611615763`*^9}, {
   3.640977119529188*^9, 3.640977135525523*^9}, {3.6409772626568856`*^9, 
   3.640977295667238*^9}, 3.6409787789851203`*^9, {3.6409789053011017`*^9, 
   3.6409789096772404`*^9}, {3.6428772857214766`*^9, 3.642877290716936*^9}}],

Cell[BoxData["140"], "Output",
 CellChangeTimes->{3.640976576576216*^9, 3.6409766075970497`*^9, 
  3.640976761610181*^9, 3.640976888335745*^9, 3.6409771955766926`*^9, 
  3.6409777851207876`*^9, 3.640978710509043*^9, 3.6409788016048183`*^9, 
  3.640978953482195*^9, 3.640982111626469*^9, 3.6410166709005995`*^9, 
  3.641019693260298*^9, 3.6410302929074216`*^9, 3.6410310126778297`*^9, 
  3.641551106103119*^9, 3.641569097265624*^9, 3.641901520328884*^9, 
  3.642708071220192*^9, 3.6427082464458847`*^9, 3.642718120722027*^9, 
  3.6427232280037465`*^9, 3.642869056838851*^9, 3.645529365667055*^9, 
  3.6455300730801096`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rgblist", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ImageApply", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"List", "@@", 
         RowBox[{"rgbfunction", "[", "#", "]"}]}], "&"}], ",", 
       RowBox[{"list", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "list", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmp", "=", 
   RowBox[{"ImageMultiply", "[", 
    RowBox[{
     RowBox[{"list3", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"rgblist", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"acc", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"tmp", "=", 
      RowBox[{"ImageAdd", "[", 
       RowBox[{"tmp", ",", 
        RowBox[{"ImageMultiply", "[", 
         RowBox[{
          RowBox[{"list3", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"rgblist", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", "rgblist", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"result", "=", 
  RowBox[{
   RowBox[{"SetAlphaChannel", "[", 
    RowBox[{
     RowBox[{"Last", "[", "acc", "]"}], ",", 
     RowBox[{"Last", "[", "list2", "]"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"RemoveAlphaChannel", "[", 
     RowBox[{"#", ",", "White"}], "]"}], "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<tooth3.png\>\""}], 
    ",", "result", ",", 
    RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{3.6427231117513785`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ImageDimensions", "[", "d1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ImageDimensions", "[", "d2", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ImageDimensions", "[", "d3", "]"}]}], "Input",
 CellChangeTimes->{
  3.640977879619808*^9, {3.6409787050387907`*^9, 3.6409787088219852`*^9}, 
   3.6410167611137943`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"140", ",", "120", ",", "161"}], "}"}]], "Output",
 CellChangeTimes->{3.641016832759671*^9, 3.6410197083764935`*^9, 
  3.641030307268359*^9, 3.6410310275311165`*^9, 3.641551121703415*^9, 
  3.64156911381525*^9, 3.6419015355131874`*^9, 3.6427080865438013`*^9, 
  3.6427082610993023`*^9, 3.6427181355451593`*^9, 3.6427232687476053`*^9, 
  3.642869104508674*^9, 3.6455294034849243`*^9, 3.6455301104938326`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"140", ",", "120", ",", "161"}], "}"}]], "Output",
 CellChangeTimes->{3.641016832759671*^9, 3.6410197083764935`*^9, 
  3.641030307268359*^9, 3.6410310275311165`*^9, 3.641551121703415*^9, 
  3.64156911381525*^9, 3.6419015355131874`*^9, 3.6427080865438013`*^9, 
  3.6427082610993023`*^9, 3.6427181355451593`*^9, 3.6427232687476053`*^9, 
  3.642869104508674*^9, 3.6455294034849243`*^9, 3.6455301104938326`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"140", ",", "120", ",", "161"}], "}"}]], "Output",
 CellChangeTimes->{3.641016832759671*^9, 3.6410197083764935`*^9, 
  3.641030307268359*^9, 3.6410310275311165`*^9, 3.641551121703415*^9, 
  3.64156911381525*^9, 3.6419015355131874`*^9, 3.6427080865438013`*^9, 
  3.6427082610993023`*^9, 3.6427181355451593`*^9, 3.6427232687476053`*^9, 
  3.642869104508674*^9, 3.6455294034849243`*^9, 3.6455301104938326`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "bottom", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"list", "=", 
     RowBox[{"Reverse", "@", 
      RowBox[{"Image3DSlices", "[", 
       RowBox[{"d", ",", "All", ",", "1"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"count", "=", 
    RowBox[{"Length", "[", "list", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"img", "=", 
     RowBox[{"First", "[", "list", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"list2", "=", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"img", "=", 
         RowBox[{"ImageApply", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#1", "+", 
             RowBox[{
              RowBox[{"Clip", "[", 
               RowBox[{
                RowBox[{"1", "-", "#1"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}]}], "]"}], "*", 
              RowBox[{"f", "[", "#2", "]"}]}]}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{"img", ",", 
             RowBox[{"list", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "2", ",", "count"}], "}"}]}], "]"}], "//", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"First", "[", "list", "]"}], "}"}], ",", "#"}], "]"}], 
       "&"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"list3", "=", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ImageSubtract", "[", 
         RowBox[{
          RowBox[{"list2", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"list2", "[", 
           RowBox[{"[", 
            RowBox[{"i", "-", "1"}], "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "2", ",", "count"}], "}"}]}], "]"}], "//", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"First", "[", "list", "]"}], "}"}], ",", "#"}], "]"}], 
       "&"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"d4", "=", 
    RowBox[{"Image3D", "[", 
     RowBox[{"Reverse", "[", "list3", "]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.640980171460525*^9, 3.640980178372746*^9}, {
   3.640980297610256*^9, 3.640980307113269*^9}, {3.640981215655442*^9, 
   3.6409812577678986`*^9}, {3.64098134974679*^9, 3.6409813707866316`*^9}, 
   3.640981420139868*^9, {3.640981581922724*^9, 3.6409815919054966`*^9}, {
   3.6409819319411325`*^9, 3.6409819469809446`*^9}, {3.640981990197977*^9, 
   3.64098199042199*^9}, {3.6428772972787066`*^9, 3.642877302165612*^9}}],

Cell[BoxData["161"], "Output",
 CellChangeTimes->{3.6409801787787685`*^9, 3.640980308689309*^9, 
  3.6409812591679773`*^9, 3.640981422972986*^9, 3.6409815927165422`*^9, 
  3.640981949311075*^9, 3.640982127125516*^9, 3.64101668661302*^9, 
  3.6410197083884425`*^9, 3.6410303072839594`*^9, 3.6410310275624046`*^9, 
  3.6415511217714376`*^9, 3.641569113830841*^9, 3.641901535538246*^9, 
  3.6427080865914636`*^9, 3.6427082611461754`*^9, 3.6427181356051426`*^9, 
  3.642723268767562*^9, 3.6428691045366383`*^9, 3.6455294035309644`*^9, 
  3.645530110509403*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rgblist", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ImageApply", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"List", "@@", 
         RowBox[{"rgbfunction", "[", "#", "]"}]}], "&"}], ",", 
       RowBox[{"list", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "list", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmp", "=", 
   RowBox[{"ImageMultiply", "[", 
    RowBox[{
     RowBox[{"list3", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"rgblist", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"acc", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"tmp", "=", 
      RowBox[{"ImageAdd", "[", 
       RowBox[{"tmp", ",", 
        RowBox[{"ImageMultiply", "[", 
         RowBox[{
          RowBox[{"list3", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"rgblist", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", "rgblist", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"result", "=", 
  RowBox[{
   RowBox[{"SetAlphaChannel", "[", 
    RowBox[{
     RowBox[{"Last", "[", "acc", "]"}], ",", 
     RowBox[{"Last", "[", "list2", "]"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"RemoveAlphaChannel", "[", 
     RowBox[{"#", ",", "White"}], "]"}], "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<tooth4.png\>\""}], 
    ",", "result", ",", 
    RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{3.642723121425365*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "front", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"list", "=", 
     RowBox[{"Reverse", "@", 
      RowBox[{"Image3DSlices", "[", 
       RowBox[{"d", ",", "All", ",", "2"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"count", "=", 
    RowBox[{"Length", "[", "list", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"img", "=", 
     RowBox[{"First", "[", "list", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"list2", "=", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"img", "=", 
         RowBox[{"ImageApply", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#1", "+", 
             RowBox[{
              RowBox[{"Clip", "[", 
               RowBox[{
                RowBox[{"1", "-", "#1"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}]}], "]"}], "*", 
              RowBox[{"f", "[", "#2", "]"}]}]}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{"img", ",", 
             RowBox[{"list", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "2", ",", "count"}], "}"}]}], "]"}], "//", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"First", "[", "list", "]"}], "}"}], ",", "#"}], "]"}], 
       "&"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"list3", "=", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ImageSubtract", "[", 
         RowBox[{
          RowBox[{"list2", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"list2", "[", 
           RowBox[{"[", 
            RowBox[{"i", "-", "1"}], "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "2", ",", "count"}], "}"}]}], "]"}], "//", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"First", "[", "list", "]"}], "}"}], ",", "#"}], "]"}], 
       "&"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d5a", "=", 
     RowBox[{"Image3D", "[", "list3", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"d5", "=", 
    RowBox[{"ImageRotate", "[", 
     RowBox[{"d5a", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"90", " ", "Degree"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.640980365267585*^9, 3.6409803798588333`*^9}, {
  3.6409804404695663`*^9, 3.6409804409175797`*^9}, {3.6409804772945805`*^9, 
  3.640980483222439*^9}, {3.640982011958371*^9, 3.6409820387355375`*^9}, {
  3.640982700013254*^9, 3.640982703309229*^9}, {3.6428773076032534`*^9, 
  3.642877310992499*^9}}],

Cell[BoxData["120"], "Output",
 CellChangeTimes->{3.640980383226265*^9, 3.6409804422906566`*^9, 
  3.640980509929389*^9, 3.6409821429602118`*^9, 3.6409827042792835`*^9, 
  3.6410167016666155`*^9, 3.6410197234805055`*^9, 3.6410303219016466`*^9, 
  3.6410310419093313`*^9, 3.6415511370078497`*^9, 3.641569129462772*^9, 
  3.6419015508390713`*^9, 3.6427081023087983`*^9, 3.642708290451179*^9, 
  3.6427181503096256`*^9, 3.6427233051084847`*^9, 3.6428691400619426`*^9, 
  3.6455294409280653`*^9, 3.645530148509589*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rgblist", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ImageApply", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"List", "@@", 
         RowBox[{"rgbfunction", "[", "#", "]"}]}], "&"}], ",", 
       RowBox[{"list", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "list", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmp", "=", 
   RowBox[{"ImageMultiply", "[", 
    RowBox[{
     RowBox[{"list3", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"rgblist", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"acc", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"tmp", "=", 
      RowBox[{"ImageAdd", "[", 
       RowBox[{"tmp", ",", 
        RowBox[{"ImageMultiply", "[", 
         RowBox[{
          RowBox[{"list3", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"rgblist", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", "rgblist", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"result", "=", 
  RowBox[{
   RowBox[{"SetAlphaChannel", "[", 
    RowBox[{
     RowBox[{"Last", "[", "acc", "]"}], ",", 
     RowBox[{"Last", "[", "list2", "]"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"RemoveAlphaChannel", "[", 
     RowBox[{"#", ",", "White"}], "]"}], "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<tooth5.png\>\""}], 
    ",", "result", ",", 
    RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{3.642723138574096*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "right", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"list", "=", 
     RowBox[{"Reverse", "@", 
      RowBox[{"Image3DSlices", "[", 
       RowBox[{"d", ",", "All", ",", "3"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"count", "=", 
    RowBox[{"Length", "[", "list", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"img", "=", 
     RowBox[{"First", "[", "list", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"list2", "=", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"img", "=", 
         RowBox[{"ImageApply", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#1", "+", 
             RowBox[{
              RowBox[{"Clip", "[", 
               RowBox[{
                RowBox[{"1", "-", "#1"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}]}], "]"}], "*", 
              RowBox[{"f", "[", "#2", "]"}]}]}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{"img", ",", 
             RowBox[{"list", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "2", ",", "count"}], "}"}]}], "]"}], "//", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"First", "[", "list", "]"}], "}"}], ",", "#"}], "]"}], 
       "&"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"list3", "=", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ImageSubtract", "[", 
         RowBox[{
          RowBox[{"list2", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"list2", "[", 
           RowBox[{"[", 
            RowBox[{"i", "-", "1"}], "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "2", ",", "count"}], "}"}]}], "]"}], "//", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"First", "[", "list", "]"}], "}"}], ",", "#"}], "]"}], 
       "&"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d6a", "=", 
     RowBox[{"Image3D", "[", 
      RowBox[{"Reverse", "[", "list3", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"d6", "=", 
    RowBox[{
     RowBox[{"ImageRotate", "[", 
      RowBox[{"d6a", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"90", " ", "Degree"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "}"}]}], "]"}], "//", 
     RowBox[{
      RowBox[{"ImageRotate", "[", 
       RowBox[{"#", ",", 
        RowBox[{
         RowBox[{"-", "90"}], " ", "Degree"}]}], "]"}], 
      "&"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.640980462582055*^9, 3.6409804738613873`*^9}, 
   3.6409805734949503`*^9, {3.6409820495123014`*^9, 3.640982064952674*^9}, {
   3.6428773156322656`*^9, 3.6428773193673077`*^9}}],

Cell[BoxData["140"], "Output",
 CellChangeTimes->{3.640980525419856*^9, 3.640980574750447*^9, 
  3.6409821585001893`*^9, 3.6410167165911684`*^9, 3.6410197383914204`*^9, 
  3.641030336396674*^9, 3.641031056432844*^9, 3.641551153065716*^9, 
  3.6415691455238123`*^9, 3.641901566204479*^9, 3.6427081176035223`*^9, 
  3.6427083051892705`*^9, 3.6427181652052946`*^9, 3.64272334127381*^9, 
  3.6428691753032*^9, 3.6455294776505556`*^9, 3.645530185534378*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rgblist", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ImageApply", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"List", "@@", 
         RowBox[{"rgbfunction", "[", "#", "]"}]}], "&"}], ",", 
       RowBox[{"list", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "list", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmp", "=", 
   RowBox[{"ImageMultiply", "[", 
    RowBox[{
     RowBox[{"list3", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"rgblist", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"acc", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"tmp", "=", 
      RowBox[{"ImageAdd", "[", 
       RowBox[{"tmp", ",", 
        RowBox[{"ImageMultiply", "[", 
         RowBox[{
          RowBox[{"list3", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"rgblist", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", "rgblist", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"result", "=", 
  RowBox[{
   RowBox[{"SetAlphaChannel", "[", 
    RowBox[{
     RowBox[{"Last", "[", "acc", "]"}], ",", 
     RowBox[{"Last", "[", "list2", "]"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"RemoveAlphaChannel", "[", 
     RowBox[{"#", ",", "White"}], "]"}], "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<tooth6.png\>\""}], 
    ",", "result", ",", 
    RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{3.642723148009794*^9}],

Cell[BoxData[
 RowBox[{"sum", "=", 
  RowBox[{"ImageApply", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{"{", "##", "}"}], "]"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"d1", ",", "d2", ",", "d3", ",", "d4", ",", "d5", ",", "d6"}], 
     "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6409808535431128`*^9, 3.6409809192361364`*^9}, {
   3.6409809788144646`*^9, 3.6409810714728537`*^9}, {3.6409811381551604`*^9, 
   3.6409811573876753`*^9}, {3.6409814512290983`*^9, 
   3.6409814564453526`*^9}, {3.6409816377772903`*^9, 3.640981815512148*^9}, {
   3.6409819757177715`*^9, 3.6409819846543427`*^9}, {3.6409821999726706`*^9, 
   3.640982311153242*^9}, 3.6409826844116745`*^9, {3.640982746877516*^9, 
   3.6409828130794077`*^9}, {3.6409828431302643`*^9, 3.6409828448253593`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"cl", "=", 
   RowBox[{"ClusteringComponents", "[", 
    RowBox[{"d", ",", "4"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.640982949275958*^9, 3.64098296535763*^9}, 
   3.640983125250169*^9, 3.6409832093328176`*^9, {3.6415717115279646`*^9, 
   3.6415717134807196`*^9}, 3.6415718189683924`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cl", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "0"}], ",", 
     RowBox[{"2", "\[Rule]", "0"}], ",", 
     RowBox[{"3", "\[Rule]", "0"}]}], "}"}]}], "//", 
  "Colorize"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cl", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "0"}], ",", 
     RowBox[{"2", "\[Rule]", "0"}], ",", 
     RowBox[{"4", "\[Rule]", "0"}]}], "}"}]}], "//", 
  "Colorize"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cl", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "0"}], ",", 
     RowBox[{"3", "\[Rule]", "0"}], ",", 
     RowBox[{"4", "\[Rule]", "0"}]}], "}"}]}], "//", 
  "Colorize"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cl", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "\[Rule]", "0"}], ",", 
     RowBox[{"3", "\[Rule]", "0"}], ",", 
     RowBox[{"4", "\[Rule]", "0"}]}], "}"}]}], "//", "Colorize"}]}], "Input",
 CellChangeTimes->{{3.6415712139039717`*^9, 3.641571239245944*^9}, {
  3.641571405161208*^9, 3.641571416671795*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"seg", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Import", "[", "#", "]"}], "&"}], "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"\"\<D:\\\\document\\\\work\\\\em\\\\segmentation\\\\\>\"", "<>", 
        RowBox[{"IntegerString", "[", 
         RowBox[{"#", ",", "10", ",", "3"}], "]"}], "<>", "\"\<.tif\>\""}], 
       "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "160"}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seg3d", "=", 
   RowBox[{"Image3D", "[", "seg", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.641569544634683*^9, 3.641569575012985*^9}, {
  3.64156960898709*^9, 3.641569625748347*^9}, {3.6415697557630744`*^9, 
  3.641569768449484*^9}, {3.641571840600566*^9, 3.641571842499484*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"cl2", "=", 
   RowBox[{"ClusteringComponents", "[", 
    RowBox[{"seg3d", ",", "4"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.641570711952781*^9, 3.6415708028573236`*^9}, 
   3.6415708986783175`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cl2", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "0"}], ",", 
     RowBox[{"2", "\[Rule]", "0"}], ",", 
     RowBox[{"3", "\[Rule]", "0"}]}], "}"}]}], "//", 
  "Colorize"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cl2", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "0"}], ",", 
     RowBox[{"2", "\[Rule]", "0"}], ",", 
     RowBox[{"4", "\[Rule]", "0"}]}], "}"}]}], "//", 
  "Colorize"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cl2", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "0"}], ",", 
     RowBox[{"3", "\[Rule]", "0"}], ",", 
     RowBox[{"4", "\[Rule]", "0"}]}], "}"}]}], "//", 
  "Colorize"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cl2", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "\[Rule]", "0"}], ",", 
     RowBox[{"3", "\[Rule]", "0"}], ",", 
     RowBox[{"4", "\[Rule]", "0"}]}], "}"}]}], "//", "Colorize"}]}], "Input",
 CellChangeTimes->{{3.6415713248946824`*^9, 3.641571355654977*^9}, {
  3.6415719580380754`*^9, 3.6415719585536513`*^9}, {3.642723372210498*^9, 
  3.6427233767141385`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"part3", "=", 
  RowBox[{"ImageApply", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"#2", ">", "0"}], ",", "#1", ",", "0"}], "]"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"sum", ",", 
      RowBox[{"Image3D", "[", 
       RowBox[{"cl", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "\[Rule]", "0"}], ",", 
          RowBox[{"2", "\[Rule]", "0"}], ",", 
          RowBox[{"3", "\[Rule]", "0"}]}], "}"}]}], "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ImageMeasurements", "[", 
   RowBox[{"part3", ",", "\"\<TotalIntensity\>\""}], "]"}], "//", 
  "N"}]}], "Input",
 CellChangeTimes->{{3.641571775675108*^9, 3.641571776315742*^9}}],

Cell[BoxData["1493.858823528509`"], "Output",
 CellChangeTimes->{3.641901623415727*^9, 3.6427081724619584`*^9, 
  3.6427083551006174`*^9, 3.6427182180454197`*^9, 3.642723418055771*^9, 
  3.642869245011194*^9, 3.6455295485962243`*^9, 3.645530254405324*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"dog", "=", 
  RowBox[{"ImageSubtract", "[", 
   RowBox[{
    RowBox[{"GaussianFilter", "[", 
     RowBox[{"d", ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Sqrt", "[", "2", "]"}], "/", "8."}], "*", "2"}]}], "}"}]}],
      "]"}], ",", 
    RowBox[{"GaussianFilter", "[", 
     RowBox[{"d", ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Sqrt", "[", "2", "]"}], "/", "8."}], "*", "4"}]}], "}"}]}],
      "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6427239714397326`*^9, 3.6427239833796234`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"bin", "=", 
   RowBox[{
    RowBox[{"MorphologicalComponents", "[", "d", "]"}], "//", 
    RowBox[{
     RowBox[{"Colorize", "[", "#", "]"}], "&"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"distance", "=", 
   RowBox[{
    RowBox[{"DistanceTransform", "[", "bin", "]"}], "//", "ImageAdjust"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zero", "=", 
   RowBox[{"ImageResize", "[", 
    RowBox[{
     RowBox[{"Image3D", "[", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"ImageDimensions", "[", "d", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"com", "=", 
   RowBox[{"ColorCombine", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ImageAdjust", "[", "d", "]"}], ",", "distance", ",", "zero"}], 
     "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.642723844279292*^9, 3.6427238445233774`*^9}, {
  3.642723947824543*^9, 3.642723951463998*^9}, {3.642724075834251*^9, 
  3.6427240763851748`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"MapIndexed", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<tooth\\\\\>\"", "<>", 
        RowBox[{"IntegerString", "[", 
         RowBox[{
          RowBox[{"First", "[", "#2", "]"}], ",", "10", ",", "3"}], "]"}], 
        "<>", "\"\<.png\>\""}], ",", "#"}], "]"}], "&"}], ",", 
    RowBox[{"Image3DSlices", "[", "com", "]"}]}], "]"}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClusteringComponents", "[", 
   RowBox[{"com", ",", "3"}], "]"}], "//", 
  RowBox[{
   RowBox[{"Colorize", "[", 
    RowBox[{"#", "-", "1"}], "]"}], "&"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClusteringComponents", "[", 
   RowBox[{"com", ",", "4"}], "]"}], "//", 
  RowBox[{
   RowBox[{"Colorize", "[", 
    RowBox[{"#", "-", "1"}], "]"}], "&"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"GradientFilter", "[", 
   RowBox[{"d", ",", "1", ",", 
    RowBox[{"Method", "\[Rule]", "\"\<Sobel\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.642869381911255*^9, 3.6428694471190767`*^9}, {
  3.642869477565384*^9, 3.64286947994141*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"ImageData", "[", "d", "]"}]}], ",", 
     RowBox[{"Flatten", "@", 
      RowBox[{"ImageData", "[", "g", "]"}]}]}], "}"}], "]"}], "//", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"#", ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", "\"\<Intensity vs gradient magnitude\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", "Dashed", ",", "Thick", ",", 
        RowBox[{"Opacity", "[", "0.6", "]"}]}], "}"}]}]}], "]"}], 
   "&"}]}]], "Input",
 CellChangeTimes->{
  3.64286952733636*^9, {3.642869570592806*^9, 3.6428695708847733`*^9}, {
   3.6428696902341447`*^9, 3.6428696976746697`*^9}, {3.6428698371224685`*^9, 
   3.642869952279693*^9}, {3.642869996410078*^9, 3.6428700243887568`*^9}, {
   3.6428723236440806`*^9, 3.642872324336136*^9}, 3.6428724124095*^9, {
   3.6428724616447268`*^9, 3.642872466440817*^9}, {3.642872526060215*^9, 
   3.642872529385069*^9}, 3.642872723861508*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{"z", ",", "y", ",", "x"}], "}"}], "=", 
  RowBox[{"Dimensions", "[", 
   RowBox[{"ImageData", "[", "d", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"index", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", "j", ",", "k"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "x"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "y"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "z"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"flatindex", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"index", ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"flatd", "=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"ImageData", "[", "d", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"flatg", "=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"ImageData", "[", "g", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dg", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"flatd", ",", "flatg"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pos", "=", 
   RowBox[{"Position", "[", 
    RowBox[{"dg", ",", 
     RowBox[{"_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"First", "[", "#", "]"}], ">", "0.2"}], "&&", 
         RowBox[{
          RowBox[{"First", "[", "#", "]"}], "<", "0.21"}]}], "&"}], ")"}]}], 
     ",", 
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "pos", "]"}]}], "Input",
 CellChangeTimes->{{3.642873133804207*^9, 3.6428731618737903`*^9}, {
  3.64287598862926*^9, 3.64287607852013*^9}, {3.6428761721453876`*^9, 
  3.6428762033017178`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"161", ",", "120", ",", "140"}], "}"}]], "Output",
 CellChangeTimes->{3.6455295984014263`*^9, 3.6455302997551026`*^9}],

Cell[BoxData["1247"], "Output",
 CellChangeTimes->{3.6455295984014263`*^9, 3.6455303065023284`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6428731745197687`*^9, 3.642873184990918*^9}, {
  3.642875982129239*^9, 3.6428759874105053`*^9}}]
},
WindowSize->{1602, 996},
WindowMargins->{{-9, Automatic}, {Automatic, -9}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{595.1999999999999, 841.92}},
FrontEndVersion->"10.1 for Microsoft Windows (64-bit) (March 23, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 4723, 136, 312, "Input"],
Cell[5306, 160, 14168, 374, 31, "Output"],
Cell[19477, 536, 811, 14, 31, "Output"]
}, Open  ]],
Cell[20303, 553, 549, 11, 31, "Input"],
Cell[20855, 566, 204, 4, 31, "Input"],
Cell[21062, 572, 2868, 92, 192, "Input"],
Cell[CellGroupData[{
Cell[23955, 668, 2987, 87, 152, "Input"],
Cell[26945, 757, 5993, 103, 236, "Output"],
Cell[32941, 862, 7276, 124, 247, "Output"],
Cell[40220, 988, 7289, 124, 247, "Output"],
Cell[47512, 1114, 3047, 54, 247, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50596, 1173, 2658, 79, 152, "Input"],
Cell[53257, 1254, 12336, 215, 247, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65630, 1474, 260, 4, 31, "Input"],
Cell[65893, 1480, 514, 8, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66444, 1493, 3127, 77, 152, "Input"],
Cell[69574, 1572, 724, 11, 31, "Output"]
}, Open  ]],
Cell[70313, 1586, 2244, 63, 132, "Input"],
Cell[CellGroupData[{
Cell[72582, 1653, 3171, 85, 172, "Input"],
Cell[75756, 1740, 738, 11, 31, "Output"]
}, Open  ]],
Cell[76509, 1754, 1970, 59, 132, "Input"],
Cell[CellGroupData[{
Cell[78504, 1817, 3286, 88, 172, "Input"],
Cell[81793, 1907, 622, 9, 31, "Output"]
}, Open  ]],
Cell[82430, 1919, 1970, 59, 132, "Input"],
Cell[CellGroupData[{
Cell[84425, 1982, 334, 6, 72, "Input"],
Cell[84762, 1990, 446, 7, 31, "Output"],
Cell[85211, 1999, 446, 7, 31, "Output"],
Cell[85660, 2008, 446, 7, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86143, 2020, 2710, 72, 152, "Input"],
Cell[88856, 2094, 556, 8, 31, "Output"]
}, Open  ]],
Cell[89427, 2105, 1968, 59, 132, "Input"],
Cell[CellGroupData[{
Cell[91420, 2168, 2860, 80, 172, "Input"],
Cell[94283, 2250, 514, 7, 31, "Output"]
}, Open  ]],
Cell[94812, 2260, 1968, 59, 132, "Input"],
Cell[CellGroupData[{
Cell[96805, 2323, 2965, 86, 172, "Input"],
Cell[99773, 2411, 452, 6, 31, "Output"]
}, Open  ]],
Cell[100240, 2420, 1968, 59, 132, "Input"],
Cell[102211, 2481, 809, 16, 31, "Input"],
Cell[103023, 2499, 334, 7, 31, "Input"],
Cell[103360, 2508, 1079, 33, 92, "Input"],
Cell[104442, 2543, 816, 21, 52, "Input"],
Cell[105261, 2566, 242, 6, 31, "Input"],
Cell[105506, 2574, 1138, 34, 92, "Input"],
Cell[CellGroupData[{
Cell[106669, 2612, 753, 22, 52, "Input"],
Cell[107425, 2636, 255, 3, 31, "Output"]
}, Open  ]],
Cell[107695, 2642, 643, 20, 31, "Input"],
Cell[108341, 2664, 1128, 33, 92, "Input"],
Cell[109472, 2699, 492, 13, 31, "Input"],
Cell[109967, 2714, 407, 12, 52, "Input"],
Cell[110377, 2728, 288, 6, 31, "Input"],
Cell[110668, 2736, 1310, 32, 52, "Input"],
Cell[CellGroupData[{
Cell[112003, 2772, 1978, 59, 172, "Input"],
Cell[113984, 2833, 157, 3, 31, "Output"],
Cell[114144, 2838, 99, 1, 31, "Output"]
}, Open  ]],
Cell[114258, 2842, 145, 2, 31, "Input"]
}
]
*)

(* End of internal cache information *)
