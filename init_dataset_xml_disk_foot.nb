(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     30551,        694]
NotebookOptionsPosition[     30066,        674]
NotebookOutlinePosition[     30410,        689]
CellTagsIndexPosition[     30367,        686]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"imagepath", "=", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<~images\\\\\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"names", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<_saliency_chart\>\"", ",", "\[IndentingNewLine]", 
     "\"\<_visibility_chart\>\"", ",", 
     "\"\<_visibility_saliency_brightness_chart\>\"", ",", 
     "\"\<_visibility_saliency_saturation_chart\>\"", ",", 
     "\"\<_visibility_saliency_weighted_chart\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"onames", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<_visibility_saliency_feature.png\>\"", ",", 
     "\"\<_visibility.raw\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xmlname", "=", "\"\<.xml\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"resultxml", "=", 
   RowBox[{"imagepath", "<>", "\"\<saliency.xml\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotpath", "=", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<~plot\\\\\>\""}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.650038067581571*^9, 3.6500380879937973`*^9}, {
   3.650038142090377*^9, 3.6500381654776726`*^9}, {3.650038269862339*^9, 
   3.650038292817396*^9}, {3.65003839200552*^9, 3.650038405492761*^9}, {
   3.6500384972842474`*^9, 3.6500385150264573`*^9}, {3.6500385480065203`*^9, 
   3.650038552793985*^9}, {3.6500386220883503`*^9, 3.650038695851278*^9}, 
   3.6500389619649057`*^9, {3.650137496777986*^9, 3.6501375152983866`*^9}, {
   3.650139251471568*^9, 3.650139256632738*^9}, 3.650139304024089*^9, {
   3.650139345376359*^9, 3.650139349362116*^9}, {3.6501395670094414`*^9, 
   3.650139572633778*^9}, {3.6501397645083466`*^9, 3.6501397737833133`*^9}, {
   3.650265780674996*^9, 3.650265800331646*^9}, 3.6502658564442043`*^9, {
   3.6503713944530315`*^9, 3.650371410909602*^9}, {3.6537507119249773`*^9, 
   3.653750712160721*^9}, {3.653750833179865*^9, 3.6537508488450193`*^9}, {
   3.653752280151143*^9, 3.653752282325086*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataname", "=", "\"\<disk\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"filenames", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"dataname", "<>", "#"}], "&"}], "/@", "names"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"othernames", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"imagepath", "<>", "dataname", "<>", "#"}], "&"}], "/@", 
    "onames"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expressionML", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<\>\"", ",", "\[IndentingNewLine]", "\"\<\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Disk 1\>\"", ",", "\"\<Disk 2\>\"", ",", "\"\<Disk 3\>\"", ",", 
       "\"\<Disk 4\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<left\>\"", ",", "\"\<right\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"imagepath", "<>", "#", "<>", "\"\<.png\>\""}], "&"}], "/@", 
      "filenames"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"imagepath", "<>", "#", "<>", "\"\<.txt\>\""}], "&"}], "/@", 
      "filenames"}], ",", "othernames", ",", "resultxml", ",", 
     RowBox[{"imagepath", "<>", "dataname", "<>", "\"\<.png\>\""}], ",", 
     RowBox[{"imagepath", "<>", "dataname", "<>", "\"\<.raw\>\""}], ",", 
     "dataname", ",", "plotpath", ",", "imagepath"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"imagepath", "<>", "dataname", "<>", "xmlname"}], ",", 
    "expressionML"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6500985295155053`*^9, 3.6500985721507006`*^9}, {
   3.650098623974819*^9, 3.650098636357939*^9}, {3.6500990793211937`*^9, 
   3.6500990846878033`*^9}, {3.650102651789183*^9, 3.650102656826255*^9}, {
   3.6501028171188307`*^9, 3.6501028203505692`*^9}, 3.650128258560772*^9, {
   3.650137537186204*^9, 3.6501375378031015`*^9}, 3.6502658210041533`*^9, 
   3.65026585648521*^9, 3.650370819066497*^9, {3.6537507177204037`*^9, 
   3.653750717951594*^9}, {3.6537521210637445`*^9, 3.6537521236558695`*^9}, {
   3.6537522857053404`*^9, 3.6537522857118783`*^9}, 3.657461173271468*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataname", "=", "\"\<foot\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"filenames", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"dataname", "<>", "#"}], "&"}], "/@", "names"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"othernames", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"imagepath", "<>", "dataname", "<>", "#"}], "&"}], "/@", 
    "onames"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expressionML", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<\>\"", ",", "\[IndentingNewLine]", "\"\<\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Feature 1\>\"", ",", "\"\<Feature 2\>\"", ",", "\"\<Feature 3\>\"",
        ",", "\"\<Feature 4\>\"", ",", "\"\<Feature 5\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<right\>\"", ",", "\"\<top\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"imagepath", "<>", "#", "<>", "\"\<.png\>\""}], "&"}], "/@", 
      "filenames"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"imagepath", "<>", "#", "<>", "\"\<.txt\>\""}], "&"}], "/@", 
      "filenames"}], ",", "othernames", ",", "resultxml", ",", 
     RowBox[{"imagepath", "<>", "dataname", "<>", "\"\<.png\>\""}], ",", 
     RowBox[{"imagepath", "<>", "dataname", "<>", "\"\<.raw\>\""}], ",", 
     "dataname", ",", "plotpath", ",", "imagepath"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"imagepath", "<>", "dataname", "<>", "xmlname"}], ",", 
    "expressionML"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.650103080725711*^9, 3.6501030946221623`*^9}, {
   3.6501054762775507`*^9, 3.6501054766525445`*^9}, 3.6501282610511184`*^9, 
   3.650137523878718*^9, 3.6501375994407687`*^9, 3.650265822820053*^9, 
   3.6502658564897103`*^9, {3.6502767580174756`*^9, 3.650276760940352*^9}, 
   3.6503708220499105`*^9, 3.653750722880949*^9, 3.653752127752531*^9, {
   3.653752285718342*^9, 3.653752285724843*^9}, 3.657461179060669*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"s", "=", 
     RowBox[{
      RowBox[{"InputString", "[", 
       RowBox[{
       "\"\<Enter xml file name\>\"", ",", 
        "\"\<engine_visibility_saliency.xml\>\""}], "]"}], "//", 
      RowBox[{
       RowBox[{"StringReplace", "[", 
        RowBox[{"#", ",", 
         RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}]}], "]"}], "&"}]}]}], 
    ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"xml", "=", 
     RowBox[{"Import", "[", 
      RowBox[{"imagepath", "<>", "dataname", "<>", "xmlname"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "tfifile", ",", "volumefile", ",", "legends", ",", "face", ",", 
       "imagefilenames", ",", "txtfilenames", ",", 
       RowBox[{"{", 
        RowBox[{"featurefilename", ",", "visibilityfilename"}], "}"}], ",", 
       "resultxml", ",", "imagefile", ",", "rawfile", ",", "dataname", ",", 
       "plotpath", ",", "imagepath"}], "}"}], "=", "xml"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Column", "[", 
    RowBox[{"xml", ",", 
     RowBox[{"Background", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Lighter", "@", "LightYellow"}], ",", 
         RowBox[{"Lighter", "@", "LightBlue"}]}], "}"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"LightGray", ",", "Thin", ",", "Dashed"}], "]"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"scoremap", "=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "resultxml", "]"}], ",", 
      RowBox[{"Association", "@", 
       RowBox[{"Import", "[", "resultxml", "]"}]}], ",", 
      RowBox[{"<|", "|>"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"resultxml", ",", 
      RowBox[{"Normal", "[", "scoremap", "]"}]}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6500156147112703`*^9, 3.6500156295805783`*^9}, {
   3.6500156921592216`*^9, 3.650015807191111*^9}, {3.650015921533003*^9, 
   3.6500159307146235`*^9}, {3.6500165421840696`*^9, 3.650016553141691*^9}, {
   3.65001665361473*^9, 3.650016660578137*^9}, {3.650017282041211*^9, 
   3.6500172865967913`*^9}, {3.6500173388982487`*^9, 3.650017458026077*^9}, {
   3.6500176507579393`*^9, 3.650017662035861*^9}, {3.6500177925409937`*^9, 
   3.6500177968839493`*^9}, {3.650018157533084*^9, 3.650018162540758*^9}, {
   3.650022217625165*^9, 3.6500222180598183`*^9}, {3.6500225452010098`*^9, 
   3.650022551270591*^9}, 3.6500231140622964`*^9, 3.6500249477788873`*^9, {
   3.6500388097117243`*^9, 3.6500388759537706`*^9}, {3.6500390235812745`*^9, 
   3.6500390612435393`*^9}, {3.6500391137794404`*^9, 
   3.6500391325733123`*^9}, {3.6500392114201612`*^9, 
   3.6500392127109685`*^9}, {3.650039248861974*^9, 3.6500392671053486`*^9}, {
   3.6500393004326563`*^9, 3.650039362564988*^9}, {3.6500394850585613`*^9, 
   3.6500394897101765`*^9}, {3.650039570909474*^9, 3.6500396641167297`*^9}, {
   3.650039755411337*^9, 3.6500397556613417`*^9}, {3.650042377522483*^9, 
   3.6500423832389755`*^9}, {3.6500449466805816`*^9, 3.65004498245288*^9}, {
   3.6500450760135813`*^9, 3.6500450788635054`*^9}, {3.6500451328366194`*^9, 
   3.650045142804812*^9}, {3.6500453107328563`*^9, 3.6500453258110223`*^9}, {
   3.650098062608247*^9, 3.6500980967777996`*^9}, {3.6500991022691936`*^9, 
   3.650099102894597*^9}, {3.650102688477276*^9, 3.650102690074266*^9}, {
   3.650102734957528*^9, 3.650102747650358*^9}, {3.6501028439489546`*^9, 
   3.650102844880715*^9}, 3.650103112568919*^9, {3.65012827269083*^9, 
   3.650128290892002*^9}, 3.650128994288485*^9, 3.6501294410285034`*^9, 
   3.650135259211527*^9, {3.650135305633783*^9, 3.6501353088126965`*^9}, 
   3.6501397576437798`*^9, 3.65026588563083*^9, {3.653750726266101*^9, 
   3.6537507661620164`*^9}, 3.6537521165475965`*^9, 3.6574605078723793`*^9, {
   3.6574608485436773`*^9, 3.657460849129735*^9}, {3.657461205550044*^9, 
   3.657461205822239*^9}, 3.6574612501122665`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\"\>"},
    {"\<\"\"\>"},
    {
     RowBox[{"{", 
      RowBox[{"\<\"Feature 1\"\>", ",", "\<\"Feature 2\"\>", 
       ",", "\<\"Feature 3\"\>", ",", "\<\"Feature 4\"\>", 
       ",", "\<\"Feature 5\"\>"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"\<\"right\"\>", ",", "\<\"top\"\>"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"\<\"D:\\\\document\\\\work\\\\time-varying-visualization\\\\~\
images\\\\foot_saliency_chart.png\"\>", 
       ",", "\<\"D:\\\\document\\\\work\\\\time-varying-visualization\\\\~\
images\\\\foot_visibility_chart.png\"\>", 
       ",", "\<\"D:\\\\document\\\\work\\\\time-varying-visualization\\\\~\
images\\\\foot_visibility_saliency_brightness_chart.png\"\>", 
       ",", "\<\"D:\\\\document\\\\work\\\\time-varying-visualization\\\\~\
images\\\\foot_visibility_saliency_saturation_chart.png\"\>", 
       ",", "\<\"D:\\\\document\\\\work\\\\time-varying-visualization\\\\~\
images\\\\foot_visibility_saliency_weighted_chart.png\"\>"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"\<\"D:\\\\document\\\\work\\\\time-varying-visualization\\\\~\
images\\\\foot_saliency_chart.txt\"\>", 
       ",", "\<\"D:\\\\document\\\\work\\\\time-varying-visualization\\\\~\
images\\\\foot_visibility_chart.txt\"\>", 
       ",", "\<\"D:\\\\document\\\\work\\\\time-varying-visualization\\\\~\
images\\\\foot_visibility_saliency_brightness_chart.txt\"\>", 
       ",", "\<\"D:\\\\document\\\\work\\\\time-varying-visualization\\\\~\
images\\\\foot_visibility_saliency_saturation_chart.txt\"\>", 
       ",", "\<\"D:\\\\document\\\\work\\\\time-varying-visualization\\\\~\
images\\\\foot_visibility_saliency_weighted_chart.txt\"\>"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"\<\"D:\\\\document\\\\work\\\\time-varying-visualization\\\\~\
images\\\\foot_visibility_saliency_feature.png\"\>", 
       ",", "\<\"D:\\\\document\\\\work\\\\time-varying-visualization\\\\~\
images\\\\foot_visibility.raw\"\>"}], "}"}]},
    {"\<\"D:\\\\document\\\\work\\\\time-varying-visualization\\\\~images\\\\\
saliency.xml\"\>"},
    {"\<\"D:\\\\document\\\\work\\\\time-varying-visualization\\\\~images\\\\\
foot.png\"\>"},
    {"\<\"D:\\\\document\\\\work\\\\time-varying-visualization\\\\~images\\\\\
foot.raw\"\>"},
    {"\<\"foot\"\>"},
    {"\<\"D:\\\\document\\\\work\\\\time-varying-visualization\\\\~plot\\\\\"\
\>"},
    {"\<\"D:\\\\document\\\\work\\\\time-varying-visualization\\\\~images\\\\\
\"\>"}
   },
   DefaultBaseStyle->"Column",
   FrameStyle->Directive[
     GrayLevel[0.85], 
     Thickness[Tiny], 
     Dashing[{Small, Small}]],
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {{
        RGBColor[1, 1, 0.9], 
        RGBColor[0.9133333333333333, 0.96, 1]}}},
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.6500396867043324`*^9, 3.6500397010382366`*^9}, {
   3.6500397419737*^9, 3.650039775282688*^9}, {3.650042371465991*^9, 
   3.650042395651179*^9}, {3.6500443711499977`*^9, 3.6500443760327*^9}, {
   3.6500447410130196`*^9, 3.650044784258623*^9}, {3.6500449509473476`*^9, 
   3.650044982936763*^9}, {3.65004507199037*^9, 3.650045079339932*^9}, {
   3.650045138629387*^9, 3.650045143674035*^9}, {3.650045320431927*^9, 
   3.6500453281191797`*^9}, 3.650097727709149*^9, 3.650098043307847*^9, {
   3.65009810234896*^9, 3.6500981141929803`*^9}, 3.650098145338987*^9, {
   3.650098292146079*^9, 3.6500982925991373`*^9}, {3.650099088782655*^9, 
   3.6500991085619106`*^9}, {3.6501026823465176`*^9, 3.650102750225094*^9}, 
   3.65010284930906*^9, 3.6501029242183256`*^9, 3.650102957780405*^9, 
   3.6501031147688637`*^9, {3.6501054791983624`*^9, 3.650105484093355*^9}, 
   3.65010609916742*^9, 3.650106218064643*^9, 3.6501064827438025`*^9, {
   3.650128279900745*^9, 3.6501283018258553`*^9}, {3.6501352438981247`*^9, 
   3.650135262130252*^9}, 3.650135314579119*^9, 3.6501374187378287`*^9, {
   3.6501376223116245`*^9, 3.6501376686796846`*^9}, 3.650139429704422*^9, 
   3.6501394741507196`*^9, {3.6501397771818852`*^9, 3.650139783420369*^9}, 
   3.6501398818748646`*^9, 3.6502658913677793`*^9, 3.6502662265721416`*^9, {
   3.6502767647967587`*^9, 3.6502767689797587`*^9}, 3.6503709031459813`*^9, 
   3.65037103044154*^9, {3.6503711343073*^9, 3.650371146307783*^9}, {
   3.6503714163165574`*^9, 3.6503714337168517`*^9}, {3.6510617017531605`*^9, 
   3.6510617056134696`*^9}, {3.6510619633800635`*^9, 
   3.6510619700671573`*^9}, {3.65106228702495*^9, 3.6510623118723526`*^9}, 
   3.651062342652485*^9, 3.6510625879567876`*^9, {3.6512665439163337`*^9, 
   3.6512665604263334`*^9}, {3.65127358008959*^9, 3.651273585146389*^9}, 
   3.6512737002562757`*^9, 3.6523861800527472`*^9, 3.652645315027128*^9, 
   3.6526454191548824`*^9, {3.6526464100870256`*^9, 3.6526464122106833`*^9}, 
   3.653750772974312*^9, 3.6537508556015315`*^9, 3.6537521412365723`*^9, 
   3.6537521746455493`*^9, 3.6537522965684767`*^9, 3.6537529129514265`*^9, 
   3.657460384486621*^9, 3.6574604481958075`*^9, {3.65746049765779*^9, 
   3.6574605221601925`*^9}, 3.657460759643081*^9, 3.657460852801606*^9, {
   3.6574611832771697`*^9, 3.6574612554409695`*^9}, {3.657488812085664*^9, 
   3.657488830447009*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"disk_left\"\>", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "0.1860150783562284`", ",", "0.1793446886565983`", ",", 
                "0.1355531272924656`"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
               "0.450036469730124`", ",", "0.3814733770970095`", ",", 
                "0.16849015317286653`"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
               "0.5345052723780661`", ",", "0.30891618336809384`", ",", 
                "0.15657854425384002`"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
               "0.1550098882612006`", ",", "0.7551333746326314`", ",", 
                "0.08985673710616804`"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
               "0.3447575803196333`", ",", "0.5320247790003626`", ",", 
                "0.12321764068000403`"}], "}"}]}], "}"}]}], ",", 
           TemplateBox[{"320"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
              GrayLevel[0.75], RoundingRadius -> 7]& )], ",", 
           RowBox[{"\<\"nucleon_naive\"\>", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "0.0962366184916345`", ",", "0.09566057284273961`", ",", 
                "0.13440003315331941`"}], "}"}], ",", 
              RowBox[{"{", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton",
                DisplayFunction->(FrameBox[
                  
                  RowBox[{
                   "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                  Background -> GrayLevel[0.75], 
                  BaseStyle -> {
                   "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                  Baseline, ContentPadding -> False, FrameMargins -> 1, 
                  FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
               "}"}], ",", 
              RowBox[{"{", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton",
                DisplayFunction->(FrameBox[
                  
                  RowBox[{
                   "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                  Background -> GrayLevel[0.75], 
                  BaseStyle -> {
                   "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                  Baseline, ContentPadding -> False, FrameMargins -> 1, 
                  FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
               "}"}], ",", 
              RowBox[{"{", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton",
                DisplayFunction->(FrameBox[
                  
                  RowBox[{
                   "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                  Background -> GrayLevel[0.75], 
                  BaseStyle -> {
                   "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                  Baseline, ContentPadding -> False, FrameMargins -> 1, 
                  FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
               "0.3453305493565747`", ",", "0.424197904783309`", ",", 
                "0.23047154586011637`"}], "}"}]}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 78, 28080096197477499949, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 78, 28080096197477499949, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 78, 28080096197477499949, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[78]]], "Output",
 CellChangeTimes->{{3.6500396867043324`*^9, 3.6500397010382366`*^9}, {
   3.6500397419737*^9, 3.650039775282688*^9}, {3.650042371465991*^9, 
   3.650042395651179*^9}, {3.6500443711499977`*^9, 3.6500443760327*^9}, {
   3.6500447410130196`*^9, 3.650044784258623*^9}, {3.6500449509473476`*^9, 
   3.650044982936763*^9}, {3.65004507199037*^9, 3.650045079339932*^9}, {
   3.650045138629387*^9, 3.650045143674035*^9}, {3.650045320431927*^9, 
   3.6500453281191797`*^9}, 3.650097727709149*^9, 3.650098043307847*^9, {
   3.65009810234896*^9, 3.6500981141929803`*^9}, 3.650098145338987*^9, {
   3.650098292146079*^9, 3.6500982925991373`*^9}, {3.650099088782655*^9, 
   3.6500991085619106`*^9}, {3.6501026823465176`*^9, 3.650102750225094*^9}, 
   3.65010284930906*^9, 3.6501029242183256`*^9, 3.650102957780405*^9, 
   3.6501031147688637`*^9, {3.6501054791983624`*^9, 3.650105484093355*^9}, 
   3.65010609916742*^9, 3.650106218064643*^9, 3.6501064827438025`*^9, {
   3.650128279900745*^9, 3.6501283018258553`*^9}, {3.6501352438981247`*^9, 
   3.650135262130252*^9}, 3.650135314579119*^9, 3.6501374187378287`*^9, {
   3.6501376223116245`*^9, 3.6501376686796846`*^9}, 3.650139429704422*^9, 
   3.6501394741507196`*^9, {3.6501397771818852`*^9, 3.650139783420369*^9}, 
   3.6501398818748646`*^9, 3.6502658913677793`*^9, 3.6502662265721416`*^9, {
   3.6502767647967587`*^9, 3.6502767689797587`*^9}, 3.6503709031459813`*^9, 
   3.65037103044154*^9, {3.6503711343073*^9, 3.650371146307783*^9}, {
   3.6503714163165574`*^9, 3.6503714337168517`*^9}, {3.6510617017531605`*^9, 
   3.6510617056134696`*^9}, {3.6510619633800635`*^9, 
   3.6510619700671573`*^9}, {3.65106228702495*^9, 3.6510623118723526`*^9}, 
   3.651062342652485*^9, 3.6510625879567876`*^9, {3.6512665439163337`*^9, 
   3.6512665604263334`*^9}, {3.65127358008959*^9, 3.651273585146389*^9}, 
   3.6512737002562757`*^9, 3.6523861800527472`*^9, 3.652645315027128*^9, 
   3.6526454191548824`*^9, {3.6526464100870256`*^9, 3.6526464122106833`*^9}, 
   3.653750772974312*^9, 3.6537508556015315`*^9, 3.6537521412365723`*^9, 
   3.6537521746455493`*^9, 3.6537522965684767`*^9, 3.6537529129514265`*^9, 
   3.657460384486621*^9, 3.6574604481958075`*^9, {3.65746049765779*^9, 
   3.6574605221601925`*^9}, 3.657460759643081*^9, 3.657460852801606*^9, {
   3.6574611832771697`*^9, 3.6574612554409695`*^9}, {3.657488812085664*^9, 
   3.65748883281153*^9}}]
}, Open  ]]
},
WindowSize->{1266, 788},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.3 for Microsoft Windows (64-bit) (October 9, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 2061, 45, 152, "Input"],
Cell[2622, 67, 2206, 52, 212, "Input"],
Cell[4831, 121, 2090, 51, 212, "Input"],
Cell[CellGroupData[{
Cell[6946, 176, 4140, 84, 152, "Input"],
Cell[11089, 262, 5363, 98, 419, "Output"],
Cell[16455, 362, 13595, 309, 131, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
