(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     49653,       1166]
NotebookOptionsPosition[     48690,       1132]
NotebookOutlinePosition[     49038,       1147]
CellTagsIndexPosition[     48995,       1144]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
  "path", "=", 
   "\"\<C:\\\\hg\\\\volume-visualiser\\\\VolumeRenderer\\\\build\\\\_tf\\\\\>\
\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", "path", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imgfilenames", "=", 
   RowBox[{"FileNames", "[", "\"\<*.png\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tfifilenames", "=", 
   RowBox[{"FileNames", "[", "\"\<*.tfi\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imgfiles", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"path", "<>", "#"}], "&"}], "/@", 
    RowBox[{"FileNames", "[", "\"\<*.png\>\"", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tffiles", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"path", "<>", "#"}], "&"}], "/@", 
    RowBox[{"FileNames", "[", "\"\<*.tfi\>\"", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6938317691371417`*^9, 3.6938317798248725`*^9}, {
  3.6938318914678497`*^9, 3.693831904530622*^9}, {3.693832212171274*^9, 
  3.6938322292718625`*^9}, {3.6938332733558426`*^9, 3.6938333003880615`*^9}, {
  3.693899271884914*^9, 3.693899317165264*^9}, {3.6942542984508066`*^9, 
  3.6942543149545975`*^9}, {3.6943295524835777`*^9, 3.6943295605149784`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"images", "=", 
   RowBox[{"Import", "/@", "imgfiles"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imgs", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ImageAdjust", "@", 
      RowBox[{"ImageSaliencyFilter", "[", "#", "]"}]}], "&"}], "/@", 
    "images"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"alphaimages", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"SetAlphaChannel", "[", 
        RowBox[{
         RowBox[{"images", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"saliencies", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "@", "images"}]}], "}"}]}], "]"}]}], ";"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6942448713837967`*^9, 3.6942448816029844`*^9}, {
   3.69425355109237*^9, 3.694253562584923*^9}, {3.6942535998177767`*^9, 
   3.6942536618725033`*^9}, {3.6943312995093555`*^9, 3.694331336105735*^9}, 
   3.6943313708357725`*^9, 3.6944373465499983`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"path2", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"path", ",", "\"\<alpha\>\""}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"DirectoryQ", "[", "path2", "]"}]}], ",", 
    RowBox[{"CreateDirectory", "[", "path2", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"path2", ",", 
         RowBox[{"imgfilenames", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"imgs", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "@", "imgs"}]}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6942541420557446`*^9, 3.694254144243306*^9}, {
   3.6942541744952497`*^9, 3.694254186957151*^9}, {3.694254235308695*^9, 
   3.694254256569885*^9}, {3.694254339643235*^9, 3.6942544498589773`*^9}, 
   3.694254499643545*^9, {3.694254542169927*^9, 3.694254542381078*^9}, {
   3.6942547112997704`*^9, 3.6942547115959816`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReadTF", "[", "tf_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "rgba", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"intensity", "=", 
      RowBox[{"ToExpression", "@", 
       RowBox[{"Cases", "[", 
        RowBox[{"tf", ",", 
         RowBox[{
          RowBox[{"XMLElement", "[", 
           RowBox[{"\"\<intensity\>\"", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\<value\>\"", "\[Rule]", "atrib_"}], ",", "___"}], 
             "}"}], ",", "___"}], "]"}], "\[RuleDelayed]", "atrib"}], ",", 
         "\[Infinity]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"r", "=", 
      RowBox[{"ToExpression", "@", 
       RowBox[{"Cases", "[", 
        RowBox[{"tf", ",", 
         RowBox[{
          RowBox[{"XMLElement", "[", 
           RowBox[{"\"\<colorL\>\"", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\<r\>\"", "\[Rule]", "atrib_"}], ",", "___"}], "}"}],
             ",", "___"}], "]"}], "\[RuleDelayed]", "atrib"}], ",", 
         "\[Infinity]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"g", "=", 
      RowBox[{"ToExpression", "@", 
       RowBox[{"Cases", "[", 
        RowBox[{"tf", ",", 
         RowBox[{
          RowBox[{"XMLElement", "[", 
           RowBox[{"\"\<colorL\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"___", ",", 
              RowBox[{"\"\<g\>\"", "\[Rule]", "atrib_"}], ",", "___"}], "}"}],
             ",", "___"}], "]"}], "\[RuleDelayed]", "atrib"}], ",", 
         "\[Infinity]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"ToExpression", "@", 
       RowBox[{"Cases", "[", 
        RowBox[{"tf", ",", 
         RowBox[{
          RowBox[{"XMLElement", "[", 
           RowBox[{"\"\<colorL\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"___", ",", 
              RowBox[{"\"\<b\>\"", "\[Rule]", "atrib_"}], ",", "___"}], "}"}],
             ",", "___"}], "]"}], "\[RuleDelayed]", "atrib"}], ",", 
         "\[Infinity]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"a", "=", 
      RowBox[{"ToExpression", "@", 
       RowBox[{"Cases", "[", 
        RowBox[{"tf", ",", 
         RowBox[{
          RowBox[{"XMLElement", "[", 
           RowBox[{"\"\<colorL\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"___", ",", 
              RowBox[{"\"\<a\>\"", "\[Rule]", "atrib_"}]}], "}"}], ",", 
            "___"}], "]"}], "\[RuleDelayed]", "atrib"}], ",", "\[Infinity]"}],
         "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"alpha", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", "/", "255."}], "&"}], ")"}], "/@", "a"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"rgba", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", "/", "255."}], "&"}], ")"}], "/@", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"r", ",", "g", ",", "b", ",", "a"}], "}"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"rgba", "[", 
      RowBox[{"[", 
       RowBox[{"2", ";;", 
        RowBox[{"-", "2"}]}], "]"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.693832571463951*^9, 3.6938326905848913`*^9}, 
   3.6938371727860637`*^9, {3.694157739461074*^9, 3.694157747501871*^9}, {
   3.694267825256255*^9, 3.6942678425990486`*^9}, 3.6942679360595956`*^9, {
   3.694268013042596*^9, 3.6942680174481072`*^9}, 3.6943289454846296`*^9, 
   3.6943290450324745`*^9, 3.6943400437843027`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tfs", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{"#", ",", "\"\<XML\>\""}], "]"}], "&"}], "/@", "tffiles"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"opacities", "=", 
   RowBox[{"ReadTF", "/@", "tfs"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"output", "=", 
  RowBox[{"Length", "@", 
   RowBox[{"opacities", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Length", "@", "imgs"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "4"}], "]"}], "]"}], ",", 
     RowBox[{"PlotRange", "->", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}], "&"}], "/@", 
  "opacities"}]}], "Input",
 CellChangeTimes->{{3.6938326362065163`*^9, 3.6938326406137977`*^9}, 
   3.693832675614315*^9, {3.6938327521829057`*^9, 3.693832779969428*^9}, {
   3.693832848532448*^9, 3.6938328608399644`*^9}, {3.693832952731682*^9, 
   3.6938329689215775`*^9}, {3.693834944902812*^9, 3.693834956806285*^9}, 
   3.6938371140565033`*^9, {3.6941577882770247`*^9, 3.6941578028444433`*^9}, {
   3.694168461020999*^9, 3.694168500229258*^9}, {3.694244941297056*^9, 
   3.6942449458435984`*^9}, {3.694268169587529*^9, 3.6942681909251366`*^9}, {
   3.6942683379404273`*^9, 3.6942683430491347`*^9}, 3.6943400437999253`*^9, {
   3.694437213631852*^9, 3.6944372249602923`*^9}}],

Cell[BoxData["32"], "Output",
 CellChangeTimes->{
  3.6938329694371815`*^9, 3.6938331475227957`*^9, 3.6938333235502977`*^9, 
   3.693833529360584*^9, 3.6938335774878454`*^9, 3.6938336848710375`*^9, 
   3.6938337715041647`*^9, 3.6938343234566593`*^9, 3.6938349579321036`*^9, 
   3.6938359413146334`*^9, {3.6938371082763023`*^9, 3.6938371149931707`*^9}, {
   3.69383718787999*^9, 3.69383719048989*^9}, 3.6938374684316807`*^9, {
   3.693899249950246*^9, 3.6938992611682577`*^9}, 3.693899331083208*^9, {
   3.693899397031272*^9, 3.693899423541217*^9}, 3.6939039330259333`*^9, 
   3.6939040364905176`*^9, 3.6939041244879704`*^9, 3.6939139743860784`*^9, 
   3.6939165280254736`*^9, 3.6939181288420258`*^9, 3.693918433044157*^9, 
   3.693920162317235*^9, 3.6939232919202967`*^9, 3.6939235140018063`*^9, 
   3.693924387750845*^9, 3.6939247404918804`*^9, 3.694157753863455*^9, {
   3.694157805034997*^9, 3.6941578108952*^9}, 3.6941581208210783`*^9, 
   3.6941623601476297`*^9, 3.6941627429584727`*^9, 3.69416291679116*^9, {
   3.694168404047927*^9, 3.6941684219818387`*^9}, 3.694168481088464*^9, 
   3.6941685409876394`*^9, 3.6941688667353916`*^9, {3.694179069702075*^9, 
   3.694179092961113*^9}, 3.69417916258218*^9, 3.6941793086559896`*^9, 
   3.6941800935458*^9, {3.694244948497138*^9, 3.6942449565960493`*^9}, 
   3.694245283363882*^9, 3.694245382991042*^9, 3.694245773717471*^9, 
   3.6942464148760805`*^9, 3.694246685722104*^9, 3.6942469312217045`*^9, 
   3.6942473701084003`*^9, 3.6942483269690776`*^9, 3.6942532859158344`*^9, 
   3.6942535109522896`*^9, 3.6942538208166885`*^9, 3.6942549155446773`*^9, 
   3.6942674948799543`*^9, 3.694268043128316*^9, 3.694268191847002*^9, 
   3.6942683453764515`*^9, 3.6942684036580954`*^9, 3.6942686490294476`*^9, 
   3.694329885769167*^9, 3.694331366616742*^9, 3.6943341617023635`*^9, 
   3.6944374220364923`*^9, 3.694437476204392*^9, 3.694437853800311*^9, 
   3.6944381203444605`*^9}],

Cell[BoxData["64"], "Output",
 CellChangeTimes->{
  3.6938329694371815`*^9, 3.6938331475227957`*^9, 3.6938333235502977`*^9, 
   3.693833529360584*^9, 3.6938335774878454`*^9, 3.6938336848710375`*^9, 
   3.6938337715041647`*^9, 3.6938343234566593`*^9, 3.6938349579321036`*^9, 
   3.6938359413146334`*^9, {3.6938371082763023`*^9, 3.6938371149931707`*^9}, {
   3.69383718787999*^9, 3.69383719048989*^9}, 3.6938374684316807`*^9, {
   3.693899249950246*^9, 3.6938992611682577`*^9}, 3.693899331083208*^9, {
   3.693899397031272*^9, 3.693899423541217*^9}, 3.6939039330259333`*^9, 
   3.6939040364905176`*^9, 3.6939041244879704`*^9, 3.6939139743860784`*^9, 
   3.6939165280254736`*^9, 3.6939181288420258`*^9, 3.693918433044157*^9, 
   3.693920162317235*^9, 3.6939232919202967`*^9, 3.6939235140018063`*^9, 
   3.693924387750845*^9, 3.6939247404918804`*^9, 3.694157753863455*^9, {
   3.694157805034997*^9, 3.6941578108952*^9}, 3.6941581208210783`*^9, 
   3.6941623601476297`*^9, 3.6941627429584727`*^9, 3.69416291679116*^9, {
   3.694168404047927*^9, 3.6941684219818387`*^9}, 3.694168481088464*^9, 
   3.6941685409876394`*^9, 3.6941688667353916`*^9, {3.694179069702075*^9, 
   3.694179092961113*^9}, 3.69417916258218*^9, 3.6941793086559896`*^9, 
   3.6941800935458*^9, {3.694244948497138*^9, 3.6942449565960493`*^9}, 
   3.694245283363882*^9, 3.694245382991042*^9, 3.694245773717471*^9, 
   3.6942464148760805`*^9, 3.694246685722104*^9, 3.6942469312217045`*^9, 
   3.6942473701084003`*^9, 3.6942483269690776`*^9, 3.6942532859158344`*^9, 
   3.6942535109522896`*^9, 3.6942538208166885`*^9, 3.6942549155446773`*^9, 
   3.6942674948799543`*^9, 3.694268043128316*^9, 3.694268191847002*^9, 
   3.6942683453764515`*^9, 3.6942684036580954`*^9, 3.6942686490294476`*^9, 
   3.694329885769167*^9, 3.694331366616742*^9, 3.6943341617023635`*^9, 
   3.6944374220364923`*^9, 3.694437476204392*^9, 3.694437853800311*^9, 
   3.6944381203444605`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"rules", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"imgs", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"opacities", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "4"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Min", "[", 
        RowBox[{
         RowBox[{"Length", "@", "imgs"}], ",", 
         RowBox[{"Length", "@", "opacities"}]}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.693832904233738*^9, 3.6938329290062094`*^9}, {
   3.693832973387186*^9, 3.6938329871862164`*^9}, {3.6938338102240143`*^9, 
   3.693833812849102*^9}, 3.6938342995951166`*^9, {3.693834331562725*^9, 
   3.693834344665789*^9}, {3.69383473211836*^9, 3.693834752102578*^9}, 
   3.6941684973982162`*^9, 3.69426857457895*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"lenet", "=", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ConvolutionLayer", "[", 
        RowBox[{"20", ",", "5"}], "]"}], ",", "Ramp", ",", 
       RowBox[{"PoolingLayer", "[", 
        RowBox[{"2", ",", "2"}], "]"}], ",", 
       RowBox[{"ConvolutionLayer", "[", 
        RowBox[{"50", ",", "5"}], "]"}], ",", "Ramp", ",", 
       RowBox[{"PoolingLayer", "[", 
        RowBox[{"2", ",", "2"}], "]"}], ",", 
       RowBox[{"FlattenLayer", "[", "]"}], ",", "500", ",", "Ramp", ",", 
       "output", ",", 
       RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", "output"}], ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", 
         RowBox[{"ImageDimensions", "[", 
          RowBox[{"First", "@", "imgs"}], "]"}]}], "}"}], "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6938348847890368`*^9, 3.6938349287272987`*^9}, {
   3.693834961920926*^9, 3.693834964559804*^9}, {3.694157914597273*^9, 
   3.694157930541663*^9}, {3.694179130406028*^9, 3.694179130733999*^9}, {
   3.694268382590272*^9, 3.694268385855994*^9}, {3.694268556693015*^9, 
   3.694268558568057*^9}, 3.69443737481646*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"trained", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"lenet", ",", "rules", ",", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "4"}], ",", 
    RowBox[{"BatchSize", "\[Rule]", "1"}], ",", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<CPU\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"results", "=", 
   RowBox[{"trained", "[", "imgs", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.694157950677066*^9, 3.694157950942238*^9}, 
   3.69415807919805*^9, {3.694162346116088*^9, 3.6941623500380545`*^9}, 
   3.694162731175502*^9, 3.69416885163113*^9, {3.6941694262775636`*^9, 
   3.6941694313422127`*^9}, {3.694179058853314*^9, 3.6941790833094263`*^9}, 
   3.6941816537655144`*^9, {3.6942456091627636`*^9, 3.6942456128384976`*^9}, {
   3.6942456553334017`*^9, 3.6942456650745687`*^9}, {3.6942457366410503`*^9, 
   3.6942457402711287`*^9}, {3.6942462394659634`*^9, 3.6942462396847663`*^9}, 
   3.694246392010192*^9, 3.6942466676216636`*^9, {3.6942469052981014`*^9, 
   3.6942469206567516`*^9}, 3.694247357518898*^9, 3.6942483160913544`*^9, 
   3.69443731911178*^9, 3.6944374375314875`*^9}],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`NetChain`PackagePrivate`grid$$ = 
        Grid[{{
           MouseAppearance[
            Annotation["", {"Inputs", "Input"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation["Input", {"Inputs", "Input"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"encoded", " ", 
               Row[{"tensor", " ", 
                 Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                   Row[{"3", "512", "512"}, "\[Times]"], "\[VeryThinSpace]", 
                   ")"}, BaseStyle -> GrayLevel[0.5]]}]}], {
             "Inputs", "Input"}, "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["1", 
              GrayLevel[0.5]], {"Layers", "1"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[ConvolutionLayer, {"Layers", "1"}, "Mouse"], 
            "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"tensor", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"20", "508", "508"}, "\[Times]"], "\[VeryThinSpace]", 
                 ")"}, BaseStyle -> GrayLevel[0.5]]}], {"Layers", "1"}, 
             "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["2", 
              GrayLevel[0.5]], {"Layers", "2"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[ElementwiseLayer, {"Layers", "2"}, "Mouse"], 
            "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"tensor", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"20", "508", "508"}, "\[Times]"], "\[VeryThinSpace]", 
                 ")"}, BaseStyle -> GrayLevel[0.5]]}], {"Layers", "2"}, 
             "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["3", 
              GrayLevel[0.5]], {"Layers", "3"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[PoolingLayer, {"Layers", "3"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"tensor", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"20", "254", "254"}, "\[Times]"], "\[VeryThinSpace]", 
                 ")"}, BaseStyle -> GrayLevel[0.5]]}], {"Layers", "3"}, 
             "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["4", 
              GrayLevel[0.5]], {"Layers", "4"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[ConvolutionLayer, {"Layers", "4"}, "Mouse"], 
            "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"tensor", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"50", "250", "250"}, "\[Times]"], "\[VeryThinSpace]", 
                 ")"}, BaseStyle -> GrayLevel[0.5]]}], {"Layers", "4"}, 
             "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["5", 
              GrayLevel[0.5]], {"Layers", "5"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[ElementwiseLayer, {"Layers", "5"}, "Mouse"], 
            "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"tensor", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"50", "250", "250"}, "\[Times]"], "\[VeryThinSpace]", 
                 ")"}, BaseStyle -> GrayLevel[0.5]]}], {"Layers", "5"}, 
             "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["6", 
              GrayLevel[0.5]], {"Layers", "6"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[PoolingLayer, {"Layers", "6"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"tensor", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"50", "125", "125"}, "\[Times]"], "\[VeryThinSpace]", 
                 ")"}, BaseStyle -> GrayLevel[0.5]]}], {"Layers", "6"}, 
             "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["7", 
              GrayLevel[0.5]], {"Layers", "7"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[FlattenLayer, {"Layers", "7"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"781250"}, "\[Times]"], "\[VeryThinSpace]", ")"}, 
                BaseStyle -> GrayLevel[0.5]]}], {"Layers", "7"}, "Mouse"], 
            "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["8", 
              GrayLevel[0.5]], {"Layers", "8"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[DotPlusLayer, {"Layers", "8"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"500"}, "\[Times]"], "\[VeryThinSpace]", ")"}, 
                BaseStyle -> GrayLevel[0.5]]}], {"Layers", "8"}, "Mouse"], 
            "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["9", 
              GrayLevel[0.5]], {"Layers", "9"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[ElementwiseLayer, {"Layers", "9"}, "Mouse"], 
            "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"500"}, "\[Times]"], "\[VeryThinSpace]", ")"}, 
                BaseStyle -> GrayLevel[0.5]]}], {"Layers", "9"}, "Mouse"], 
            "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["10", 
              GrayLevel[0.5]], {"Layers", "10"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[DotPlusLayer, {"Layers", "10"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"32"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Layers", "10"}, "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["11", 
              GrayLevel[0.5]], {"Layers", "11"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[SoftmaxLayer, {"Layers", "11"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"32"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Layers", "11"}, "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation["", {"Outputs", "Output"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation["Output", {"Outputs", "Output"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"32"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Outputs", "Output"}, "Mouse"], 
            "LinkHand"]}}, Alignment -> Left, Spacings -> 1.1], 
        NeuralNetworks`NetChain`PackagePrivate`assoc$$ = Association[
        "Type" -> "Chain", "Layers" -> 
         Association[
          "1" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`TensorT[4, {20, 3, 5, 5}], "Biases" -> 
               NeuralNetworks`TensorT[1, {20}]], "Parameters" -> 
             Association[
              "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "InputChannels" -> 3, "$GroupNumber" -> 
               1, "$InputSize" -> {512, 512}, "$OutputSize" -> {508, 508}], 
             "Inputs" -> Association["Input" -> NeuralNetworks`ChannelT[3, 
                 NeuralNetworks`TensorT[2, {512, 512}]]], "Outputs" -> 
             Association["Output" -> NeuralNetworks`ChannelT[20, 
                 NeuralNetworks`TensorT[2, {508, 508}]]]], "2" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> Ramp, "$Dimensions" -> {20, 508, 508}, "$Rank" -> 
               3], "Inputs" -> 
             Association["Input" -> NeuralNetworks`ChannelT[20, 
                 NeuralNetworks`TensorT[2, {508, 508}]]], "Outputs" -> 
             Association[
              "Output" -> NeuralNetworks`TensorT[3, {20, 508, 508}]]], "3" -> 
           Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Channels" -> 20, 
               "$InputSize" -> {508, 508}, "$OutputSize" -> {254, 254}], 
             "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[3, {20, 508, 508}]], 
             "Outputs" -> Association["Output" -> NeuralNetworks`ChannelT[20, 
                 NeuralNetworks`TensorT[2, {254, 254}]]]], "4" -> 
           Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`TensorT[4, {50, 20, 5, 5}], 
               "Biases" -> NeuralNetworks`TensorT[1, {50}]], "Parameters" -> 
             Association[
              "OutputChannels" -> 50, "KernelSize" -> {5, 5}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "InputChannels" -> 20, "$GroupNumber" -> 
               1, "$InputSize" -> {254, 254}, "$OutputSize" -> {250, 250}], 
             "Inputs" -> Association["Input" -> NeuralNetworks`ChannelT[20, 
                 NeuralNetworks`TensorT[2, {254, 254}]]], "Outputs" -> 
             Association["Output" -> NeuralNetworks`ChannelT[50, 
                 NeuralNetworks`TensorT[2, {250, 250}]]]], "5" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> Ramp, "$Dimensions" -> {50, 250, 250}, "$Rank" -> 
               3], "Inputs" -> 
             Association["Input" -> NeuralNetworks`ChannelT[50, 
                 NeuralNetworks`TensorT[2, {250, 250}]]], "Outputs" -> 
             Association[
              "Output" -> NeuralNetworks`TensorT[3, {50, 250, 250}]]], "6" -> 
           Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Channels" -> 50, 
               "$InputSize" -> {250, 250}, "$OutputSize" -> {125, 125}], 
             "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[3, {50, 250, 250}]], 
             "Outputs" -> Association["Output" -> NeuralNetworks`ChannelT[50, 
                 NeuralNetworks`TensorT[2, {125, 125}]]]], "7" -> 
           Association[
            "Type" -> "Flatten", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Dimensions" -> {50, 125, 125}, "$Rank" -> 3, "$OutputSize" -> 
               781250], "Inputs" -> 
             Association["Input" -> NeuralNetworks`ChannelT[50, 
                 NeuralNetworks`TensorT[2, {125, 125}]]], "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {781250}]]], 
           "8" -> Association[
            "Type" -> "DotPlus", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`TensorT[2, {500, 781250}], "Biases" -> 
               NeuralNetworks`TensorT[1, {500}]], "Parameters" -> 
             Association["Size" -> 500, "$InputSize" -> 781250], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {781250}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {500}]]], "9" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> Ramp, "$Dimensions" -> {500}, "$Rank" -> 1], 
             "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {500}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {500}]]], "10" -> 
           Association[
            "Type" -> "DotPlus", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`TensorT[2, {32, 500}], "Biases" -> 
               NeuralNetworks`TensorT[1, {32}]], "Parameters" -> 
             Association["Size" -> 32, "$InputSize" -> 500], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {500}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {32}]]], "11" -> 
           Association[
            "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
             Association["Size" -> 32], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {32}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {32}]]]], 
         "Connections" -> {
          NetPort["Layers", "1", "Inputs", "Input"] -> 
           NetPort["Inputs", "Input"], 
           NetPort["Layers", "2", "Inputs", "Input"] -> 
           NetPort["Layers", "1", "Outputs", "Output"], 
           NetPort["Layers", "3", "Inputs", "Input"] -> 
           NetPort["Layers", "2", "Outputs", "Output"], 
           NetPort["Layers", "4", "Inputs", "Input"] -> 
           NetPort["Layers", "3", "Outputs", "Output"], 
           NetPort["Layers", "5", "Inputs", "Input"] -> 
           NetPort["Layers", "4", "Outputs", "Output"], 
           NetPort["Layers", "6", "Inputs", "Input"] -> 
           NetPort["Layers", "5", "Outputs", "Output"], 
           NetPort["Layers", "7", "Inputs", "Input"] -> 
           NetPort["Layers", "6", "Outputs", "Output"], 
           NetPort["Layers", "8", "Inputs", "Input"] -> 
           NetPort["Layers", "7", "Outputs", "Output"], 
           NetPort["Layers", "9", "Inputs", "Input"] -> 
           NetPort["Layers", "8", "Outputs", "Output"], 
           NetPort["Layers", "10", "Inputs", "Input"] -> 
           NetPort["Layers", "9", "Outputs", "Output"], 
           NetPort["Layers", "11", "Inputs", "Input"] -> 
           NetPort["Layers", "10", "Outputs", "Output"], 
           NetPort["Outputs", "Output"] -> 
           NetPort["Layers", "11", "Outputs", "Output"]}, "Inputs" -> 
         Association["Input" -> NeuralNetworks`EncodedType[
             NetEncoder["Image", 
              Association[
              "Parameters" -> 
               Association[
                "ImageSize" -> {512, 512}, "ColorSpace" -> "RGB", 
                 "ColorChannels" -> 3, "$AugmentationFunction" -> None, 
                 "Parallelize" -> False, "MeanImage" -> None], "Output" -> 
               NeuralNetworks`ChannelT[3, 
                 NeuralNetworks`TensorT[2, {512, 512}]]]], 
             NeuralNetworks`ChannelT[3, 
              NeuralNetworks`TensorT[2, {512, 512}]]]], "Outputs" -> 
         Association["Output" -> NeuralNetworks`TensorT[1, {32}]]], 
        NeuralNetworks`NetChain`PackagePrivate`opart$$, 
        NeuralNetworks`NetChain`PackagePrivate`part$$, 
        NeuralNetworks`NetChain`PackagePrivate`selected$$ = Null}, 
        DynamicBox[ToBoxes[
          Column[{
            EventHandler[
            NeuralNetworks`NetChain`PackagePrivate`grid$$, "MouseClicked" :> 
             If[
               ListQ[
               NeuralNetworks`NetChain`PackagePrivate`part$$ = 
                MouseAnnotation[]], 
               If[NeuralNetworks`NetChain`PackagePrivate`opart$$ === 
                 NeuralNetworks`NetChain`PackagePrivate`part$$, 
                 NeuralNetworks`NetChain`PackagePrivate`selected$$ = Null; 
                 NeuralNetworks`NetChain`PackagePrivate`opart$$ = Null, 
                 NeuralNetworks`NetChain`PackagePrivate`selected$$ = 
                  Part[NeuralNetworks`NetChain`PackagePrivate`assoc$$, 
                    Apply[
                    Sequence, NeuralNetworks`NetChain`PackagePrivate`part$$]]; 
                 NeuralNetworks`NetChain`PackagePrivate`opart$$ = 
                  NeuralNetworks`NetChain`PackagePrivate`part$$; Null]; 
               Null]], 
            NeuralNetworks`NetChain`PackagePrivate`fmtSelected[
            NeuralNetworks`NetChain`PackagePrivate`selected$$, 
             NeuralNetworks`NetChain`PackagePrivate`part$$]}, Spacings -> 1], 
          StandardForm],
         ImageSizeCache->{314., {106., 111.}},
         TrackedSymbols:>{NeuralNetworks`NetChain`PackagePrivate`selected$$}],
        DynamicModuleValues:>{}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{3.6944388147350426`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"#", ",", 
     RowBox[{"PlotRange", "->", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}], "&"}], "/@", 
  "results"}]], "Input",
 CellChangeTimes->{{3.693835665416915*^9, 3.693835707467659*^9}, {
   3.6939187589450645`*^9, 3.693918761261733*^9}, {3.6942683664584503`*^9, 
   3.694268374293954*^9}, 3.694268605908342*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"intensity0", "=", "intensity"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alpha0", "=", "alpha"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rangeOfAlpha", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"Length", "[", "alpha", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"First", "[", "intensity0", "]"}], ">", "0"}], ",", 
    RowBox[{
     RowBox[{"intensity0", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", "0", "}"}], ",", "intensity0"}], "]"}]}], ";", 
     RowBox[{"alpha0", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", "0", "}"}], ",", "alpha0"}], "]"}]}], ";", 
     RowBox[{"rangeOfAlpha", "+=", "1"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Last", "[", "intensity0", "]"}], "<", "1"}], ",", 
     RowBox[{
      RowBox[{"intensity0", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"intensity0", ",", 
         RowBox[{"{", "1", "}"}]}], "]"}]}], ";", 
      RowBox[{"alpha0", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"alpha0", ",", 
         RowBox[{"{", "0", "}"}]}], "]"}]}]}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"intensity0", ",", "alpha0"}], "}"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "rgbfunction"}], ",", 
     RowBox[{
     "PlotLegends", "\[Rule]", "\"\<user specified transfer function\>\""}]}],
     "]"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"fun", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"intensity0", ",", "alpha0"}], "}"}], "]"}], ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"fun", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "rgbfunction"}], ",", 
     RowBox[{
     "PlotLegends", "\[Rule]", "\"\<user specified transfer function\>\""}]}],
     "]"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"index0", "=", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Position", "[", 
       RowBox[{"alpha0", ",", 
        RowBox[{"_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#", ">", "0"}], "&"}], ")"}]}]}], "]"}]}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"index0", "=", 
  RowBox[{"rangeOfAlpha", "[", 
   RowBox[{"[", 
    RowBox[{"2", ";;", 
     RowBox[{"-", "2"}]}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6943292674127316`*^9, 3.694329282600588*^9}, {
   3.6943293312111015`*^9, 3.6943293786965914`*^9}, 3.6943298529878645`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", 
   ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15", ",", 
   "16", ",", "17", ",", "18", ",", "19", ",", "20", ",", "21", ",", "22", 
   ",", "23", ",", "24", ",", "25", ",", "26", ",", "27", ",", "28", ",", 
   "29", ",", "30", ",", "31", ",", "32", ",", "33"}], "}"}]], "Output",
 CellChangeTimes->{3.6943303079972906`*^9, 3.6943317993446746`*^9, 
  3.6943345673399243`*^9, 3.6944374328906837`*^9, 3.6944388661892624`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"WriteTF", "[", 
    RowBox[{"peaks_", ",", "filename_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "a2", ",", "rgba2", ",", "intensity2", ",", "rgbafunction2", ",", 
       "rgba2denormalized", ",", "xrgba", ",", "strlist", ",", "alphaMode", 
       ",", "gammaValue", ",", "domain", ",", "threshold", ",", "k", ",", 
       "int", ",", "split", ",", "colorL", ",", "keylist", ",", "keys", ",", 
       "TransFuncIntensity", ",", "VoreenData", ",", "xmlobject"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"alpha0", "[", 
            RowBox[{"[", "#", "]"}], "]"}], "=", 
           RowBox[{"peaks", "[", 
            RowBox[{"[", 
             RowBox[{"First", "@", "#2"}], "]"}], "]"}]}], ")"}], "&"}], ",", 
        "index0"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"a2", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"IntegerPart", "[", 
          RowBox[{"255", "*", 
           RowBox[{"alpha0", "[", 
            RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "&"}], "/@", 
        "rangeOfAlpha"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rgba2", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#", "/", "255."}], "&"}], ")"}], "/@", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"r", ",", "g", ",", "b", ",", "a2"}], "}"}], "]"}]}], "//", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"RGBColor", "/@", "#"}], "&"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"intensity2", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"intensity0", "[", 
          RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", "rangeOfAlpha"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"rgbafunction2", "=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Blend", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"intensity2", ",", "rgba2"}], "}"}], "]"}], ",", " ", 
           "#"}], "]"}], " ", "&"}], " ", ")"}]}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{"for", " ", "return", " ", 
        RowBox[{"only", ".", " ", "not"}], " ", "used", " ", "in", " ", 
        "this", " ", "function"}], " ", "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"rgba2denormalized", "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"r", ",", "g", ",", "b", ",", "a2"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xrgba", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"intensity2", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "}"}], ",", 
           RowBox[{"rgba2denormalized", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "intensity2", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"strlist", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ToString", "[", "#1", "]"}], ",", 
           RowBox[{"ToString", "[", "#2", "]"}], ",", 
           RowBox[{"ToString", "[", "#3", "]"}], ",", 
           RowBox[{"ToString", "[", "#4", "]"}], ",", 
           RowBox[{"ToString", "[", "#5", "]"}]}], "}"}], "&"}], "@@@", 
        "xrgba"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"alphaMode", "=", 
       RowBox[{"XMLElement", "[", 
        RowBox[{"\"\<alphaMode\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<value\>\"", "\[Rule]", "\"\<1\>\""}], "}"}], ",", 
         RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gammaValue", "=", 
       RowBox[{"XMLElement", "[", 
        RowBox[{"\"\<gammaValue\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<value\>\"", "\[Rule]", "\"\<1\>\""}], "}"}], ",", 
         RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"domain", "=", 
       RowBox[{"XMLElement", "[", 
        RowBox[{"\"\<domain\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<x\>\"", "\[Rule]", "\"\<0\>\""}], ",", 
           RowBox[{"\"\<y\>\"", "\[Rule]", "\"\<1\>\""}]}], "}"}], ",", 
         RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"threshold", "=", 
       RowBox[{"XMLElement", "[", 
        RowBox[{"\"\<threshold\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<x\>\"", "\[Rule]", "\"\<0\>\""}], ",", 
           RowBox[{"\"\<y\>\"", "\[Rule]", "\"\<1\>\""}]}], "}"}], ",", 
         RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"k", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"int", "=", 
             RowBox[{"XMLElement", "[", 
              RowBox[{"\"\<intensity\>\"", ",", 
               RowBox[{"{", 
                RowBox[{"\"\<value\>\"", "\[Rule]", "#1"}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "]"}]}], ",", 
            RowBox[{"split", "=", 
             RowBox[{"XMLElement", "[", 
              RowBox[{"\"\<split\>\"", ",", 
               RowBox[{"{", 
                RowBox[{"\"\<value\>\"", "\[Rule]", "\"\<false\>\""}], "}"}], 
               ",", 
               RowBox[{"{", "}"}]}], "]"}]}], ",", 
            RowBox[{"colorL", "=", 
             RowBox[{"XMLElement", "[", 
              RowBox[{"\"\<colorL\>\"", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\"\<r\>\"", "\[Rule]", "#2"}], ",", 
                 RowBox[{"\"\<g\>\"", "\[Rule]", "#3"}], ",", 
                 RowBox[{"\"\<b\>\"", "\[Rule]", "#4"}], ",", 
                 RowBox[{"\"\<a\>\"", "\[Rule]", "#5"}]}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "]"}]}]}], "}"}], "&"}], ")"}], "@@@", 
        "strlist"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"keylist", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"XMLElement", "[", 
          RowBox[{"\"\<key\>\"", ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<type\>\"", "\[Rule]", "\"\<TransFuncMappingKey\>\""}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"#1", ",", "#2", ",", "#3"}], "}"}]}], "]"}], "&"}], "@@@",
         "k"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"keys", "=", 
       RowBox[{"XMLElement", "[", 
        RowBox[{"\"\<Keys\>\"", ",", 
         RowBox[{"{", "}"}], ",", "keylist"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"TransFuncIntensity", "=", 
       RowBox[{"XMLElement", "[", 
        RowBox[{"\"\<TransFuncIntensity\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<type\>\"", "\[Rule]", "\"\<TransFuncIntensity\>\""}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "alphaMode", ",", "gammaValue", ",", "domain", ",", "threshold", 
           ",", "keys"}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"VoreenData", "=", 
       RowBox[{"XMLElement", "[", 
        RowBox[{"\"\<VoreenData\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<version\>\"", "\[Rule]", "\"\<1\>\""}], "}"}], ",", 
         RowBox[{"{", "TransFuncIntensity", "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xmlobject", "=", 
       RowBox[{
        RowBox[{"XMLObject", "[", "\"\<Document\>\"", "]"}], "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"XMLObject", "[", "\"\<Declaration\>\"", "]"}], "[", 
            RowBox[{"\"\<Version\>\"", "\[Rule]", "\"\<1.0\>\""}], "]"}], ",", 
           RowBox[{
            RowBox[{"XMLObject", "[", "\"\<Comment\>\"", "]"}], "[", 
            "\"\<This is a Voreen transfer function created using Wolfram \
Mathematica\>\"", "]"}]}], "}"}], ",", "VoreenData", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{"filename", ",", "xmlobject", ",", " ", "\"\<XML\>\""}], "]"}],
       ";", "\[IndentingNewLine]", "rgbafunction2"}]}], "\[IndentingNewLine]",
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.6943401234643607`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"path3", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"path", ",", "\"\<tf\>\""}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"DirectoryQ", "[", "path3", "]"}]}], ",", 
    RowBox[{"CreateDirectory", "[", "path3", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"WriteTF", "[", 
     RowBox[{
      RowBox[{"results", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"path3", ",", 
         RowBox[{"tfifilenames", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "@", "results"}]}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6943294588251305`*^9, 3.694329458918883*^9}, {
   3.6943294952791104`*^9, 3.694329519951564*^9}, {3.694329605781705*^9, 
   3.694329667955037*^9}, 3.69433125264357*^9, {3.694331846218486*^9, 
   3.694331853784919*^9}, 3.694340123479987*^9, {3.6943403874433546`*^9, 
   3.6943403905996585`*^9}, 3.694438888986663*^9}]
},
WindowSize->{1536, 877},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1280, 33, 126, "Input"],
Cell[1841, 55, 1100, 30, 69, "Input"],
Cell[2944, 87, 1231, 33, 69, "Input"],
Cell[4178, 122, 3585, 90, 183, "Input"],
Cell[CellGroupData[{
Cell[7788, 216, 1491, 34, 107, "Input"],
Cell[9282, 252, 1922, 27, 30, "Output"],
Cell[11207, 281, 1922, 27, 30, "Output"]
}, Open  ]],
Cell[13144, 311, 926, 24, 30, "Input"],
Cell[14073, 337, 1320, 30, 50, "Input"],
Cell[CellGroupData[{
Cell[15418, 371, 1131, 20, 50, "Input"],
Cell[16552, 393, 17854, 360, 257, "Output"]
}, Open  ]],
Cell[34421, 756, 431, 10, 30, "Input"],
Cell[CellGroupData[{
Cell[34877, 770, 3484, 103, 202, "Input"],
Cell[38364, 875, 559, 9, 30, "Output"]
}, Open  ]],
Cell[38938, 887, 8515, 208, 468, "Input"],
Cell[47456, 1097, 1230, 33, 69, "Input"]
}
]
*)

