(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    996557,      18459]
NotebookOptionsPosition[    993372,      18367]
NotebookOutlinePosition[    993748,      18383]
CellTagsIndexPosition[    993705,      18380]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"s", "=", 
     RowBox[{
      RowBox[{"InputString", "[", 
       RowBox[{
       "\"\<Enter xml file name\>\"", ",", 
        "\"\<engine_visibility_saliency.xml\>\""}], "]"}], "//", 
      RowBox[{
       RowBox[{"StringReplace", "[", 
        RowBox[{"#", ",", 
         RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}]}], "]"}], "&"}]}]}], 
    ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"xml", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
       "\"\<~images\\\\disk.xml\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "tfifile", ",", "volumefile", ",", "legends", ",", "face", ",", 
       "imagefilenames", ",", "featurefilename", ",", "resultxml", ",", 
       "imagefile", ",", "dataname", ",", "plotpath", ",", "imagepath"}], 
      "}"}], "=", "xml"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Column", "[", 
    RowBox[{"xml", ",", 
     RowBox[{"Background", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Lighter", "@", "LightYellow"}], ",", 
         RowBox[{"Lighter", "@", "LightBlue"}]}], "}"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"LightGray", ",", "Thin", ",", "Dashed"}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.650098474241387*^9, 3.6500984889025035`*^9}, {
   3.6500987005963297`*^9, 3.6500987039419265`*^9}, 3.65010278920039*^9, {
   3.6501028588549147`*^9, 3.650102859805411*^9}, 3.6501029769317045`*^9, {
   3.6501062258597665`*^9, 3.650106226359769*^9}, {3.6501085008289022`*^9, 
   3.650108504105978*^9}, 3.6501294474798627`*^9, 3.6502659270324445`*^9, {
   3.6502713114967165`*^9, 3.650271313369028*^9}, 3.6510611700321026`*^9, {
   3.653751024450316*^9, 3.6537510388832254`*^9}, 3.653752349237511*^9, {
   3.6574888611886263`*^9, 3.657488863209909*^9}, {3.6824489672247276`*^9, 
   3.682448973442727*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\"\>"},
    {"\<\"\"\>"},
    {
     RowBox[{"{", 
      RowBox[{"\<\"Feature 1\"\>", ",", "\<\"Feature 2\"\>", 
       ",", "\<\"Feature 3\"\>", ",", "\<\"Feature 4\"\>", 
       ",", "\<\"Feature 5\"\>"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"\<\"left\"\>", ",", "\<\"right\"\>"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"\<\"D:\\\\document\\\\work\\\\time-varying-visualization\\\\~\
images\\\\disk_saliency_chart.pdf\"\>", 
       ",", "\<\"D:\\\\document\\\\work\\\\time-varying-visualization\\\\~\
images\\\\disk_visibility_chart.pdf\"\>", 
       ",", "\<\"D:\\\\document\\\\work\\\\time-varying-visualization\\\\~\
images\\\\disk_visibility_saliency_brightness_chart.pdf\"\>", 
       ",", "\<\"D:\\\\document\\\\work\\\\time-varying-visualization\\\\~\
images\\\\disk_visibility_saliency_saturation_chart.pdf\"\>", 
       ",", "\<\"D:\\\\document\\\\work\\\\time-varying-visualization\\\\~\
images\\\\disk_visibility_saliency_weighted_chart.pdf\"\>"}], "}"}]},
    {"\<\"D:\\\\document\\\\work\\\\time-varying-visualization\\\\~images\\\\\
disk_visibility_saliency_feature.png\"\>"},
    {"\<\"D:\\\\document\\\\work\\\\time-varying-visualization\\\\~images\\\\\
saliency.xml\"\>"},
    {"\<\"D:\\\\document\\\\work\\\\time-varying-visualization\\\\~images\\\\\
disk.png\"\>"},
    {"\<\"disk\"\>"},
    {"\<\"D:\\\\document\\\\work\\\\time-varying-visualization\\\\~plot\\\\\"\
\>"},
    {"\<\"D:\\\\document\\\\work\\\\time-varying-visualization\\\\~images\\\\\
\"\>"}
   },
   DefaultBaseStyle->"Column",
   FrameStyle->Directive[
     GrayLevel[0.85], 
     Thickness[Tiny], 
     Dashing[{Small, Small}]],
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {{
        RGBColor[1, 1, 0.9], 
        RGBColor[0.9133333333333333, 0.96, 1]}}},
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.6500987058927507`*^9, 3.6500994554032335`*^9, 3.650099653846678*^9, 
   3.6501023366616616`*^9, {3.6501024987518344`*^9, 3.6501025157837567`*^9}, 
   3.6501029786400347`*^9, 3.65010303600008*^9, 3.650104376457595*^9, 
   3.6501052071460133`*^9, 3.6501055088538513`*^9, 3.6501056670649767`*^9, {
   3.6501057645304666`*^9, 3.650105773960114*^9}, 3.650105951825099*^9, 
   3.650105993246457*^9, 3.6501062293135977`*^9, 3.6501067866029873`*^9, 
   3.6501068864535294`*^9, 3.6501083061599283`*^9, 3.6501085074784107`*^9, 
   3.6501297676528144`*^9, 3.6501298212622185`*^9, 3.650129867485292*^9, 
   3.650129899274763*^9, 3.650129984851795*^9, 3.650130420407654*^9, 
   3.650130601019348*^9, 3.650130699578558*^9, 3.650132576440652*^9, 
   3.650132624489984*^9, {3.650132801405373*^9, 3.6501328275002985`*^9}, 
   3.6502668840924673`*^9, 3.650266940445202*^9, 3.65026720425113*^9, 
   3.650271621126274*^9, 3.6502717735601473`*^9, 3.6502723845572124`*^9, 
   3.650272487153616*^9, {3.6502727261685944`*^9, 3.650272732910441*^9}, 
   3.650272804941623*^9, 3.6502728624557076`*^9, 3.6502736986064053`*^9, 
   3.650273800485259*^9, 3.6502746122418256`*^9, {3.6502752574008846`*^9, 
   3.6502752795270543`*^9}, 3.651060900591488*^9, 3.651061212897069*^9, 
   3.6510613421927023`*^9, 3.651061430207326*^9, {3.6510619817691126`*^9, 
   3.6510619997290716`*^9}, 3.6510623526209297`*^9, 3.6510626557932835`*^9, 
   3.6510626931472387`*^9, 3.651274478302847*^9, 3.651274768315908*^9, 
   3.65746016062251*^9, 3.6574605297235484`*^9, 3.6574607687750607`*^9, 
   3.657460858956711*^9, 3.6574609989536867`*^9, 3.6574887473856535`*^9, 
   3.6574888713218417`*^9, 3.68236465022945*^9, 3.6823648233217583`*^9, 
   3.6823651711555376`*^9, 3.6824489530037274`*^9, 3.6824493606060677`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"d0", "=", 
   Graphics3DBox[
    TagBox[Raster3DBox[CompressedData["
1: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
      "], {{0, 41, 41}, {41, 0, 0}}, {0, 1},
      ColorFunction->"GrayLevelDefaultColorFunction",
      Method->{"FastRendering" -> True}],
     BoxForm`ImageTag["Bit", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    AxesStyle->{},
    Background->None,
    BaseStyle->"Image3DGraphics3D",
    BoxRatios->Automatic,
    Boxed->False,
    ImageSizeRaw->41,
    PlotRange->{{0, 41}, {0, 41}, {0, 41}}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"ColorConvert", "[", 
    RowBox[{"d0", ",", "\"\<Grayscale\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cl", "=", 
   RowBox[{"MorphologicalComponents", "[", "d", "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"normalized", "=", 
   RowBox[{
    RowBox[{"cl", "//", "Image3D"}], "//", "ImageAdjust"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"pos", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"First", "@", 
     RowBox[{"PixelValuePositions", "[", 
      RowBox[{"normalized", ",", "#"}], "]"}]}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "/", "3."}], ",", 
     RowBox[{"2", "/", "3."}], ",", "1"}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"clusters", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "\[Rule]", "0"}], ",", 
       RowBox[{"3", "\[Rule]", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "\[Rule]", "0"}], ",", 
       RowBox[{"3", "\[Rule]", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "\[Rule]", "0"}], ",", 
       RowBox[{"2", "\[Rule]", "0"}]}], "}"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6428765733599215`*^9, 3.64287658860163*^9}, {
   3.642876630165004*^9, 3.642876634338988*^9}, 3.642876742107828*^9, {
   3.64287740919394*^9, 3.642877415534359*^9}, {3.6428779954599943`*^9, 
   3.6428779956787415`*^9}, {3.642879105558359*^9, 3.642879123792756*^9}, {
   3.6500963256232233`*^9, 3.6500963317969294`*^9}, 3.6500984961115427`*^9, 
   3.6501033076996164`*^9, {3.6501033505484037`*^9, 3.650103516628434*^9}, {
   3.650103549495682*^9, 3.650103556661353*^9}, {3.6501035895865374`*^9, 
   3.6501035898209305`*^9}, {3.6501037720267334`*^9, 3.6501037913229837`*^9}, 
   3.6501043017046614`*^9, {3.650105687339527*^9, 3.650105716530513*^9}, {
   3.6501058097258253`*^9, 3.650105810460205*^9}, 3.650129588516657*^9, {
   3.65012963662167*^9, 3.650129759261659*^9}, {3.6501298633279448`*^9, 
   3.6501298834490767`*^9}, {3.650130271486188*^9, 3.6501302720222197`*^9}, {
   3.6502748939511595`*^9, 3.650274933604384*^9}, {3.650274970946679*^9, 
   3.6502749754698715`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"25", ",", "27", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"31", ",", "14", ",", "39"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"37", ",", "10", ",", "29"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6501057683206325`*^9, 3.650105779958516*^9}, 
   3.650105957726052*^9, 3.6501060229818993`*^9, 3.650106235237362*^9, 
   3.6501067925841675`*^9, 3.6501068924079046`*^9, 3.650108312094813*^9, 
   3.6501085134640117`*^9, 3.6501297678543415`*^9, 3.6501298213666706`*^9, 
   3.650129867676275*^9, 3.6501298994577713`*^9, 3.650129985027835*^9, 
   3.6501304205381737`*^9, 3.650130601166936*^9, 3.6501306997214713`*^9, 
   3.650132576572668*^9, 3.650132624636553*^9, {3.650132801574356*^9, 
   3.6501328276322727`*^9}, 3.6502668842689714`*^9, 3.650266940606233*^9, 
   3.6502672044026737`*^9, 3.650271621269169*^9, 3.65027177370018*^9, 
   3.6502723847147326`*^9, 3.650272487310664*^9, {3.6502727263201284`*^9, 
   3.6502727330199556`*^9}, 3.6502728050957203`*^9, 3.6502728625952826`*^9, 
   3.6502736987504454`*^9, 3.6502738006277704`*^9, 3.650274612391342*^9, {
   3.650275257469894*^9, 3.6502752795989933`*^9}, 3.651060900702005*^9, 
   3.6510612129291124`*^9, 3.651061342464805*^9, 3.6510614302653213`*^9, {
   3.651061981837124*^9, 3.651061999821582*^9}, 3.651062352688464*^9, 
   3.6510626558838053`*^9, 3.651062693223768*^9, 3.651274478392836*^9, 
   3.65127476842894*^9, 3.657460160788067*^9, 3.6574605298210487`*^9, 
   3.657460768847049*^9, 3.657460859059687*^9, 3.6574609989926853`*^9, 
   3.657488747695134*^9, 3.657488871409315*^9, 3.6823646503614635`*^9, 
   3.6823648233917646`*^9, 3.682365171211543*^9, 3.682448953138727*^9, 
   3.682449360705077*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", ":=", 
   RowBox[{"#", "&"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ImageDimensions", "[", "d", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ImageHistogram", "[", "normalized", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"features", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Image3D", "@", 
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"cl", "/.", "#"}], ")"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}], "&"}], "/@", 
    "clusters"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"N", "@", 
    RowBox[{"ImageMeasurements", "[", 
     RowBox[{"#", ",", "\"\<TotalIntensity\>\""}], "]"}]}], "&"}], "/@", 
  "features"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"rawfile", ",", 
    RowBox[{"Flatten", "@", 
     RowBox[{"ImageData", "[", 
      RowBox[{"normalized", ",", "\"\<Byte\>\""}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Binary\>\"", ",", "\"\<Byte\>\""}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colorized", "=", 
   RowBox[{"cl", "//", "Colorize"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"chartcolors", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"RGBColor", "@", 
     RowBox[{"PixelValue", "[", 
      RowBox[{"colorized", ",", "#"}], "]"}]}], "&"}], "/@", 
   "pos"}]}], "\[IndentingNewLine]", 
 RowBox[{"colorizedfeatures", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"ImageMultiply", "[", 
     RowBox[{"colorized", ",", "#"}], "]"}], "&"}], "/@", 
   "features"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"viewpoints", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<top\>\"", "\[RuleDelayed]", "Top"}], ",", 
     RowBox[{"\"\<back\>\"", "\[RuleDelayed]", "Back"}], ",", 
     RowBox[{"\"\<left\>\"", "\[RuleDelayed]", "Left"}], ",", 
     RowBox[{"\"\<bottom\>\"", "\[RuleDelayed]", "Bottom"}], ",", 
     RowBox[{"\"\<front\>\"", "\[RuleDelayed]", "Front"}], ",", 
     RowBox[{"\"\<right\>\"", "\[RuleDelayed]", "Right"}]}], "|>"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"MapIndexed", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{"StringReplace", "[", 
          RowBox[{"imagefile", ",", 
           RowBox[{"\"\<.\>\"", "\[Rule]", 
            RowBox[{"\"\<_\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"First", "[", "#2", "]"}], "]"}], "<>", "\"\<_\>\"", "<>", 
             RowBox[{"face", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "<>", "\"\<.\>\""}]}]}], "]"}], 
         ",", 
         RowBox[{"Show", "[", 
          RowBox[{"#", ",", 
           RowBox[{"Boxed", "->", "False"}], ",", 
           RowBox[{"ViewPoint", "\[Rule]", 
            RowBox[{"viewpoints", "[", 
             RowBox[{"face", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}]}]}], "]"}]}], "]"}], 
       "&"}], ",", "colorizedfeatures"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "face", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"StringReplace", "[", 
       RowBox[{"imagefile", ",", 
        RowBox[{"\"\<.\>\"", "\[Rule]", 
         RowBox[{"\"\<_\>\"", "<>", "#", "<>", "\"\<.\>\""}]}]}], "]"}], ",", 
      RowBox[{"Show", "[", 
       RowBox[{"colorized", ",", 
        RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
        RowBox[{"ViewPoint", "\[Rule]", 
         RowBox[{"viewpoints", "[", "#", "]"}]}]}], "]"}]}], "]"}], "&"}], "/@",
    "face"}], ";"}]}], "Input",
 CellChangeTimes->{{3.642876876243903*^9, 3.6428768785876627`*^9}, {
   3.6428774638927116`*^9, 3.6428774674193573`*^9}, 3.6428775098906727`*^9, {
   3.6428778710703883`*^9, 3.64287787132038*^9}, {3.6438355586062717`*^9, 
   3.643835572716616*^9}, {3.6438356058949704`*^9, 3.6438356110535803`*^9}, {
   3.6438356822421846`*^9, 3.6438356918096476`*^9}, {3.6438357413781366`*^9, 
   3.643835741840716*^9}, {3.6438362012718315`*^9, 3.643836207251805*^9}, {
   3.6438365989202147`*^9, 3.6438365995542517`*^9}, {3.6500962839944763`*^9, 
   3.650096340714178*^9}, {3.6501028670126276`*^9, 3.6501028678039274`*^9}, 
   3.650103898458123*^9, {3.6501042797858505`*^9, 3.6501042837350388`*^9}, 
   3.650104342085314*^9, {3.650105815506685*^9, 3.6501058163817*^9}, {
   3.6501058753385086`*^9, 3.6501058779161816`*^9}, {3.650107194994239*^9, 
   3.6501071959095397`*^9}, {3.6501297969361286`*^9, 
   3.6501298022197046`*^9}, {3.6501298610716057`*^9, 3.650129862187636*^9}, {
   3.650130275185714*^9, 3.650130275285041*^9}, {3.650130521605769*^9, 
   3.6501305766174507`*^9}, 3.6501306504643836`*^9, {3.6501306823559875`*^9, 
   3.6501306892514772`*^9}, {3.650132568203968*^9, 3.6501325726743836`*^9}, {
   3.6501326044644475`*^9, 3.650132620915634*^9}, {3.650132695272237*^9, 
   3.650132713896721*^9}, {3.6501327488915453`*^9, 3.650132789084734*^9}, {
   3.6502722746430073`*^9, 3.650272291325998*^9}, {3.650272330797243*^9, 
   3.6502723495313826`*^9}, {3.6502724703375263`*^9, 3.65027248495905*^9}, {
   3.6502726965710063`*^9, 3.6502727400633593`*^9}, {3.65027492036491*^9, 
   3.6502749783411818`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"41", ",", "41", ",", "41"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6438362082830906`*^9, {3.6438365967033477`*^9, 3.6438366002591567`*^9}, 
   3.6438889114466057`*^9, 3.643889402055092*^9, 3.643890150034555*^9, 
   3.6438901844277716`*^9, 3.6439085653970146`*^9, 3.643918541345237*^9, 
   3.6439640251238575`*^9, {3.6439777861533804`*^9, 3.6439778154524403`*^9}, 
   3.6439792087698383`*^9, {3.6439937413293867`*^9, 3.643993757259465*^9}, 
   3.643999252440775*^9, {3.643999309704074*^9, 3.6439993344503145`*^9}, 
   3.6500485778783827`*^9, {3.650049056915801*^9, 3.6500491239454*^9}, 
   3.650049250356423*^9, 3.650049930475437*^9, 3.650096391373875*^9, 
   3.6500994556437654`*^9, 3.6500996545058956`*^9, 3.6501023373037815`*^9, {
   3.6501024989127693`*^9, 3.650102515940007*^9}, 3.6501029789640455`*^9, 
   3.6501030361998787`*^9, 3.650103868254572*^9, 3.650103899210182*^9, 
   3.650104284444893*^9, {3.650104327246071*^9, 3.650104342896619*^9}, 
   3.6501043831251507`*^9, {3.650105202766468*^9, 3.6501052134064603`*^9}, 
   3.650105515517064*^9, 3.6501056736940966`*^9, 3.650105780550191*^9, 
   3.650105958303628*^9, 3.650106023525278*^9, 3.6501062357223463`*^9, 
   3.650106792851927*^9, 3.6501068927094083`*^9, 3.6501071967823105`*^9, 
   3.650108312706993*^9, 3.6501085140611687`*^9, 3.6501297679198484`*^9, 
   3.650129821446171*^9, 3.6501298677887793`*^9, 3.650129899572726*^9, 
   3.650129985149828*^9, 3.650130420600672*^9, 3.650130601223337*^9, 
   3.6501306997809486`*^9, 3.650132576638607*^9, 3.6501326246935062`*^9, {
   3.650132801640405*^9, 3.6501328276917534`*^9}, 3.6502668843264256`*^9, 
   3.6502669406886773`*^9, 3.6502672044616466`*^9, 3.650271621318187*^9, 
   3.650271773755173*^9, 3.6502723847751875`*^9, 3.650272487370641*^9, {
   3.650272701831828*^9, 3.6502727330815125`*^9}, 3.650272805149151*^9, 
   3.650272862651231*^9, 3.6502736988128815`*^9, 3.650273800686212*^9, 
   3.6502746124347954`*^9, {3.650275257488896*^9, 3.6502752796210575`*^9}, 
   3.651060900716035*^9, 3.6510612129431314`*^9, 3.6510613424798746`*^9, 
   3.6510614302843475`*^9, {3.651061981867152*^9, 3.6510619998530827`*^9}, 
   3.6510623527019367`*^9, 3.6510626559043055`*^9, 3.651062693238224*^9, 
   3.651274478453806*^9, 3.6512747684468565`*^9, 3.657460160816511*^9, 
   3.657460529858551*^9, 3.657460768884063*^9, 3.6574608591037154`*^9, 
   3.657460999026717*^9, 3.6574887477161794`*^9, 3.657488871463322*^9, 
   3.682364650372465*^9, 3.6823648234057665`*^9, 3.682365171226545*^9, 
   3.6824489532037277`*^9, 3.6824493607450814`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJyF10dKBVAMheGjrsSVmDW4BMGxW8gSHDp04MCBoPhEVESuvffee6+4ApGn
DwTf+TNJPm5IpjfNbR2t7Y2Smhqk72yjshjVIlv+PnSCu8Dd4B5wL7gPPAAe
BA+Bh8Ej4DHwOHgCXMCT4CnwNHgGPAueA8+DF8CL4CXwMngFvApeA6+DN7wT
rE3vBGvLO8Ha9k6wdrwTrN3//dkf1f46rsWed4K1751gHXgnWIfeCdaRd4J1
7J1gnXgnWKfeCdaZd4J17p1gXXgHOMEFrEvvACe4gHXlHeAEF7CuvQOc4ALW
jXeAE1zAuvWOOq6MRnVfHdf2gXXnHeAEF7DuvQOc4ALWg3eAE1zAevQOcIIL
WE/eAU5wAevZO8AJLmC9eAc4wQWsV+8AJ7iA9eYd4AQXsN69A5zgUse//1F9
gH/u/dr9/1Gb9wXBbGqF
    "], {{{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{
         PolygonBox[{{2, 1, 3, 258}, {84, 87, 86, 85}, {170, 173, 172, 171}}],
          PolygonBox[{{254, 259, 257, 256, 255}}]}]}, {}, {}}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwV0wO3EAYABeBs2/Wybdt8S2t5Ge9l27btWtqqbS0by7Zt21/3nO+e+wdu
QNPgwKCQIUSFIrQZhrCEIzwRiEgkIhOFqEQjOjGISSxiE4e4xCM+CUhIIhKT
hKQkIzkpCCAlqUhNGtKSjvRkICOZyEwWspKN7OQgJ7nITR7yko/8FKAghShM
EYpSjOKUoCSlKE0ZylKO8lSgIpWoTBWqUo3q1CCQX6hJLWpTh7r8Sj1+oz4N
aEgjGtOEpvxOM5rTgpa0ojVtaEs72hNEMB3oSCc604WudKM7PehJL3rTh770
oz8DGMggBjOEoQxjOCMYyShGM4axjGM8E5jIJCYzhalMYzozmMksZjOHucxj
PgtYyCIWs4SlLGM5K/iDlaxiNWtYy5/8xTrWs4G/+Yd/2ch/bGIzW9jKNraz
g53sYjd72Ms+9nOAg/zPIQ5zhKMc4zgnOMkpTnOGs5zjPBe4yCUuc4WrXOM6
N7jJLW5zh7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jIJz7zha984zs/
vx+SH5bYgTg=
        "]]}}}], {}, {}, {{}, {}}},
  AspectRatio->NCache[
    Rational[1, 3], 0.3333333333333333],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{False, False}, {True, False}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 1.}, {0., 13158.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6438362082830906`*^9, {3.6438365967033477`*^9, 3.6438366002591567`*^9}, 
   3.6438889114466057`*^9, 3.643889402055092*^9, 3.643890150034555*^9, 
   3.6438901844277716`*^9, 3.6439085653970146`*^9, 3.643918541345237*^9, 
   3.6439640251238575`*^9, {3.6439777861533804`*^9, 3.6439778154524403`*^9}, 
   3.6439792087698383`*^9, {3.6439937413293867`*^9, 3.643993757259465*^9}, 
   3.643999252440775*^9, {3.643999309704074*^9, 3.6439993344503145`*^9}, 
   3.6500485778783827`*^9, {3.650049056915801*^9, 3.6500491239454*^9}, 
   3.650049250356423*^9, 3.650049930475437*^9, 3.650096391373875*^9, 
   3.6500994556437654`*^9, 3.6500996545058956`*^9, 3.6501023373037815`*^9, {
   3.6501024989127693`*^9, 3.650102515940007*^9}, 3.6501029789640455`*^9, 
   3.6501030361998787`*^9, 3.650103868254572*^9, 3.650103899210182*^9, 
   3.650104284444893*^9, {3.650104327246071*^9, 3.650104342896619*^9}, 
   3.6501043831251507`*^9, {3.650105202766468*^9, 3.6501052134064603`*^9}, 
   3.650105515517064*^9, 3.6501056736940966`*^9, 3.650105780550191*^9, 
   3.650105958303628*^9, 3.650106023525278*^9, 3.6501062357223463`*^9, 
   3.650106792851927*^9, 3.6501068927094083`*^9, 3.6501071967823105`*^9, 
   3.650108312706993*^9, 3.6501085140611687`*^9, 3.6501297679198484`*^9, 
   3.650129821446171*^9, 3.6501298677887793`*^9, 3.650129899572726*^9, 
   3.650129985149828*^9, 3.650130420600672*^9, 3.650130601223337*^9, 
   3.6501306997809486`*^9, 3.650132576638607*^9, 3.6501326246935062`*^9, {
   3.650132801640405*^9, 3.6501328276917534`*^9}, 3.6502668843264256`*^9, 
   3.6502669406886773`*^9, 3.6502672044616466`*^9, 3.650271621318187*^9, 
   3.650271773755173*^9, 3.6502723847751875`*^9, 3.650272487370641*^9, {
   3.650272701831828*^9, 3.6502727330815125`*^9}, 3.650272805149151*^9, 
   3.650272862651231*^9, 3.6502736988128815`*^9, 3.650273800686212*^9, 
   3.6502746124347954`*^9, {3.650275257488896*^9, 3.6502752796210575`*^9}, 
   3.651060900716035*^9, 3.6510612129431314`*^9, 3.6510613424798746`*^9, 
   3.6510614302843475`*^9, {3.651061981867152*^9, 3.6510619998530827`*^9}, 
   3.6510623527019367`*^9, 3.6510626559043055`*^9, 3.651062693238224*^9, 
   3.651274478453806*^9, 3.6512747684468565`*^9, 3.657460160816511*^9, 
   3.657460529858551*^9, 3.657460768884063*^9, 3.6574608591037154`*^9, 
   3.657460999026717*^9, 3.6574887477161794`*^9, 3.657488871463322*^9, 
   3.682364650372465*^9, 3.6823648234057665`*^9, 3.682365171226545*^9, 
   3.6824489532037277`*^9, 3.6824493608640933`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4089.`", ",", "6579.`", ",", "4089.`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6438362082830906`*^9, {3.6438365967033477`*^9, 3.6438366002591567`*^9}, 
   3.6438889114466057`*^9, 3.643889402055092*^9, 3.643890150034555*^9, 
   3.6438901844277716`*^9, 3.6439085653970146`*^9, 3.643918541345237*^9, 
   3.6439640251238575`*^9, {3.6439777861533804`*^9, 3.6439778154524403`*^9}, 
   3.6439792087698383`*^9, {3.6439937413293867`*^9, 3.643993757259465*^9}, 
   3.643999252440775*^9, {3.643999309704074*^9, 3.6439993344503145`*^9}, 
   3.6500485778783827`*^9, {3.650049056915801*^9, 3.6500491239454*^9}, 
   3.650049250356423*^9, 3.650049930475437*^9, 3.650096391373875*^9, 
   3.6500994556437654`*^9, 3.6500996545058956`*^9, 3.6501023373037815`*^9, {
   3.6501024989127693`*^9, 3.650102515940007*^9}, 3.6501029789640455`*^9, 
   3.6501030361998787`*^9, 3.650103868254572*^9, 3.650103899210182*^9, 
   3.650104284444893*^9, {3.650104327246071*^9, 3.650104342896619*^9}, 
   3.6501043831251507`*^9, {3.650105202766468*^9, 3.6501052134064603`*^9}, 
   3.650105515517064*^9, 3.6501056736940966`*^9, 3.650105780550191*^9, 
   3.650105958303628*^9, 3.650106023525278*^9, 3.6501062357223463`*^9, 
   3.650106792851927*^9, 3.6501068927094083`*^9, 3.6501071967823105`*^9, 
   3.650108312706993*^9, 3.6501085140611687`*^9, 3.6501297679198484`*^9, 
   3.650129821446171*^9, 3.6501298677887793`*^9, 3.650129899572726*^9, 
   3.650129985149828*^9, 3.650130420600672*^9, 3.650130601223337*^9, 
   3.6501306997809486`*^9, 3.650132576638607*^9, 3.6501326246935062`*^9, {
   3.650132801640405*^9, 3.6501328276917534`*^9}, 3.6502668843264256`*^9, 
   3.6502669406886773`*^9, 3.6502672044616466`*^9, 3.650271621318187*^9, 
   3.650271773755173*^9, 3.6502723847751875`*^9, 3.650272487370641*^9, {
   3.650272701831828*^9, 3.6502727330815125`*^9}, 3.650272805149151*^9, 
   3.650272862651231*^9, 3.6502736988128815`*^9, 3.650273800686212*^9, 
   3.6502746124347954`*^9, {3.650275257488896*^9, 3.6502752796210575`*^9}, 
   3.651060900716035*^9, 3.6510612129431314`*^9, 3.6510613424798746`*^9, 
   3.6510614302843475`*^9, {3.651061981867152*^9, 3.6510619998530827`*^9}, 
   3.6510623527019367`*^9, 3.6510626559043055`*^9, 3.651062693238224*^9, 
   3.651274478453806*^9, 3.6512747684468565`*^9, 3.657460160816511*^9, 
   3.657460529858551*^9, 3.657460768884063*^9, 3.6574608591037154`*^9, 
   3.657460999026717*^9, 3.6574887477161794`*^9, 3.657488871463322*^9, 
   3.682364650372465*^9, 3.6823648234057665`*^9, 3.682365171226545*^9, 
   3.6824489532037277`*^9, 3.682449360919099*^9}],

Cell[BoxData[
 TemplateBox[{
  "Export","chtype",
   "\"First argument \\!\\(\\*RowBox[{\\\"rawfile\\\"}]\\) is not a valid \
file specification.\"",2,877,214,32608824972693628946,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6824489535757275`*^9, 3.6824493610451117`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.7725490196078432, 0.8509803921568627, 0.7333333333333333],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.5150326797385621, 0.5673202614379085, 0.4888888888888889],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[{0.7725490196078432, 0.8509803921568627, \
0.7333333333333333}]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.7725490196078432, 0.8509803921568627, 0.7333333333333333]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[{0.7725490196078432, 0.8509803921568627, 0.7333333333333333}],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.8117647058823529, 0.22745098039215686`, 0.8549019607843137], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.5411764705882354, 0.1516339869281046, 0.5699346405228758],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[{0.8117647058823529, 0.22745098039215686, \
0.8549019607843137}]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.8117647058823529, 0.22745098039215686`, 0.8549019607843137]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[{0.8117647058823529, 0.22745098039215686`, 0.8549019607843137}],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.3764705882352941, 0.6313725490196078, 0.5843137254901961],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.25098039215686274`, 0.42091503267973857`, 0.3895424836601308],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[{0.3764705882352941, 0.6313725490196078, \
0.5843137254901961}]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.3764705882352941, 0.6313725490196078, 0.5843137254901961]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[{0.3764705882352941, 0.6313725490196078, 0.5843137254901961}],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6438362082830906`*^9, {3.6438365967033477`*^9, 3.6438366002591567`*^9}, 
   3.6438889114466057`*^9, 3.643889402055092*^9, 3.643890150034555*^9, 
   3.6438901844277716`*^9, 3.6439085653970146`*^9, 3.643918541345237*^9, 
   3.6439640251238575`*^9, {3.6439777861533804`*^9, 3.6439778154524403`*^9}, 
   3.6439792087698383`*^9, {3.6439937413293867`*^9, 3.643993757259465*^9}, 
   3.643999252440775*^9, {3.643999309704074*^9, 3.6439993344503145`*^9}, 
   3.6500485778783827`*^9, {3.650049056915801*^9, 3.6500491239454*^9}, 
   3.650049250356423*^9, 3.650049930475437*^9, 3.650096391373875*^9, 
   3.6500994556437654`*^9, 3.6500996545058956`*^9, 3.6501023373037815`*^9, {
   3.6501024989127693`*^9, 3.650102515940007*^9}, 3.6501029789640455`*^9, 
   3.6501030361998787`*^9, 3.650103868254572*^9, 3.650103899210182*^9, 
   3.650104284444893*^9, {3.650104327246071*^9, 3.650104342896619*^9}, 
   3.6501043831251507`*^9, {3.650105202766468*^9, 3.6501052134064603`*^9}, 
   3.650105515517064*^9, 3.6501056736940966`*^9, 3.650105780550191*^9, 
   3.650105958303628*^9, 3.650106023525278*^9, 3.6501062357223463`*^9, 
   3.650106792851927*^9, 3.6501068927094083`*^9, 3.6501071967823105`*^9, 
   3.650108312706993*^9, 3.6501085140611687`*^9, 3.6501297679198484`*^9, 
   3.650129821446171*^9, 3.6501298677887793`*^9, 3.650129899572726*^9, 
   3.650129985149828*^9, 3.650130420600672*^9, 3.650130601223337*^9, 
   3.6501306997809486`*^9, 3.650132576638607*^9, 3.6501326246935062`*^9, {
   3.650132801640405*^9, 3.6501328276917534`*^9}, 3.6502668843264256`*^9, 
   3.6502669406886773`*^9, 3.6502672044616466`*^9, 3.650271621318187*^9, 
   3.650271773755173*^9, 3.6502723847751875`*^9, 3.650272487370641*^9, {
   3.650272701831828*^9, 3.6502727330815125`*^9}, 3.650272805149151*^9, 
   3.650272862651231*^9, 3.6502736988128815`*^9, 3.650273800686212*^9, 
   3.6502746124347954`*^9, {3.650275257488896*^9, 3.6502752796210575`*^9}, 
   3.651060900716035*^9, 3.6510612129431314`*^9, 3.6510613424798746`*^9, 
   3.6510614302843475`*^9, {3.651061981867152*^9, 3.6510619998530827`*^9}, 
   3.6510623527019367`*^9, 3.6510626559043055`*^9, 3.651062693238224*^9, 
   3.651274478453806*^9, 3.6512747684468565`*^9, 3.657460160816511*^9, 
   3.657460529858551*^9, 3.657460768884063*^9, 3.6574608591037154`*^9, 
   3.657460999026717*^9, 3.6574887477161794`*^9, 3.657488871463322*^9, 
   3.682364650372465*^9, 3.6823648234057665`*^9, 3.682365171226545*^9, 
   3.6824489532037277`*^9, 3.682449361051112*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   Graphics3DBox[
    TagBox[Raster3DBox[CompressedData["
1:eJzt3THKrUkZhdELOhFDx2DQc3AIgrGhU9MRKTgJsU0aDsqW6t9+qu5acJKT
fcET1n5/84c//f6Pv/727dtvf/L71TcAAAAAAAAAAAAAAAAA4AZ//cu//P2H
3/3oHz/8+Ud/++F//f+X/g542c/VqX7h/++r+9U1fB39wr30C/fSL9xLv3Av
/cK99Avv0S/cS7/wHv3Ce3QKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN8P
dwbhXvqFe311v7qGr6Nf6PulOtUvnKv1q2vY1TrVL+xqneoXzukX7qVfuJd+
4V76hXvpF96jU3iPfuE9OgUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXuWeAvS5
cwT3cmcQ+twJhXvpF+5V61fXsKt1ql/Y1TrVL+xqneoXdrVO9Qu7Wqf6hV2t
U/3COf3CvfQL99IvvEe/cC+dwnv0CwAAAAAAAAAAAAAAAAAAAAAAAAAAAPDf
2WmHe+kX+twpg3vpF+5V61fXsKt1ql/Y1TrVL+xqneoXdrVO9Qu7Wqf6hV2t
U/3CrtapfmFX61S/sKt1ql84p1+4l37hXvqF9+gX3qNTeI9OAQAAAAAAAAAA
AAAAAAAAAAAAAACa7DnDvey0Q587KXCvWr+6hl2tU/3CrtapfmFX61S/sKt1
ql/Y1TrVNexqPeoXdrUe9Qu7Wo/6hV2tR/3CrtajfmFX61G/cK7WqX5hp1O4
l37hPfqF9+gX3qNTAAAAAAAAAAAAAAAAAAAAAAAATtitgj57ktBnpx3upV+4
V61fXcOu1ql+YVfrVL+wq3WqX9jVOtU17Go96hd2tR71C7taj/qFXa1H/cKu
1qN+YVfrUb+wq/WoX9jVetQv7Go96hfO1TrVL+x0Cu/RL9xLv/D90CkAAAAA
AAAAAAAAAAAAAAAAAAV2b6DPHh302XmGe+kX7lXrV9ewq3WqX9jVOtUvfKr1
qGvY1brTL+xq3ekXdrXu9Au7Wnf6hV2tO/3CuVqP+oVdrUf9wq7Wo35hV+tR
v7Cr9ahf2NV61C+cq3WqX9jVOtUvnNMp3Eu/8P3QKQAAAAAAAAAAAAAAAAAA
AAAA/0/2rKDPHizcS79wr1q/uoZdrVP9wq7WqX7hU61HXcOu1p1+YVfrTr+w
q3WnX9jVutMv7Grd6Rd2te70C+dqPeoXdrUe9Qu7Wo/6hV2tR/3CrtajfmFX
61G/cK7WqX5hV+tUv3BOp/Ae/cJ7dAoAAAAAAAAAAAAAAAAAAADAjezhQJ89
SbiXfuFetX51Dbtap/qFT7Ue9Qu7Wo+6hl2tO/3CrtadfmFX606/sKt1p1/Y
1brTL+xq3ekXdrXu9Au7Wnf6hXO1HvULu1qP+oVdrUf9wq7Wo35hV+tRv3Cu
1ql+YVfrVL9wTqfwHv3Ce3QKAAAAAAAAAAAAAAAAAADA98yeBtzLzhX02ZOE
e9X61TXsap3qFz7VetQv7Go96hp2te70C7tad/qFXa07/cKu1p1+YVfrTr+w
q3WnX9jVutMv7Grd6Rd2te70C+dqPeoXdrUe9Qu7Wo/6hV2tR/3CuVqn+oVd
rVP9wq7WqX7hnE7hPfqF9+gUAAAAAAAAAAAAAAAAAAC+jve80GdPA/rs0cG9
av3qGna1TvULu1qn+oVPtR51Dbtad/qFXa07/cKu1p1+YVfrTr+wq3WnX9jV
utMv7Grd6Rd2te70C7tad/qFc7Ue9Qu7Wo/6hV2tR/3CrtajfmFX61G/cK7W
qX5hV+tUv3BOv3AvncJ79AsAAAAAAAAAAAAAAAAAAACfvMeHPntWcK9av7qG
Xa1T/cKu1ql+4VOtR13DrtadfmFX606/sKt1p1/Y1brTL+xq3ekXdrXu9Au7
Wnf6hV2tO/3CrtadfmFX606/cK7Wo35hV+tRv7Cr9ahf2NV61C/saj3qF87V
OtUv7Gqd6hfO6Rfeo1N4j34BAAAAAAAAAAAAAAAAAOCc9/hwL3s40GfPCu5V
61fXsKt1ql/4VOtR17Crdadf2NW60y/sat3pF3a17vQLu1p3+oVdrTv9wq7W
nX5hV+tOv7Crdadf2NW60y/sat3pF87VetQv7Go96hd2tR71C7taj/qFc7VO
9Qu7Wqf6hV2tU/3COf3Ce3QK79EpAAAAAAAAAAAAAAAAAACc8x4f+uzhwL1q
/eoadrVO9Qu7Wqf6hU+1HnUNu1p3+oVdrTv9wq7WnX5hV+tOv7Crdadf2NW6
0y/sat3pF3a17vQLu1p3+oVdrTv9wrlaj/qFXa1H/cKu1qN+YVfrUb+wq/Wo
XzhX61S/sKt1ql84p194j07hPfoFAAAAAAAAAAAAAAAAAICv4z0v9NnDgT57
VnCvWr+6hl2tU/3CrtapruFTrTv9wq7WnX5hV+tOv7Crdadf2NW60y/sat3p
F3a17vQLu1p3+oVdrTv9wq7WnX7hXK1H/cKu1qN+YVfrUb+wq/WoX9jVetQv
nKt1ql/Y1TrVL5zTL9xLv/AencJ7dAoAAAAAAAAAAAAAAAAAAOe8x4d72cOB
vtqela5hV+tUv7Crdapf2NU61TV8qnWnX9jVutMv7Grd6Rd2te70C7tad/qF
Xa07/cKu1p1+YVfrTr+wq3WnXzhX61G/sKv1qF/Y1XrUL+xqPeoXdrUe9Qvn
ap3qF3a1TvULu1qn+oVz+oX36BTeo18AAAAAAAAAAAAAAAAAAAC+Z/ZwoM+e
Fdyr1q+uYVfrVL+wq3Wqa9jVetQvfKp1p1/Y1brTL+xq3ekXdrXu9Au7Wnf6
hV2tO/3CrtadfmFX606/cK7Wo35hV+tRv7Cr9ahf2NV61C/saj3qF3a1HvUL
52qd6hd2tU71C+f0C+/RL7xHp/AenQIAAAAAAAAAAAAAAAAAAPA9sIcDfbU9
Ol3DrtapfmFX61S/sKt1qmvY1XrUL3yqdadf2NW60y/sat3pF3a17vQLu1p3
+oVdrTv9wq7WnX7hXK1H/cKu1qN+YVfrUb+wq/WoX9jVetQv7Go96hfO1TrV
L+xqneoXzukX3qNfeI9O4T36BQAAAAAAAAAAAAAAAAAAAKDMnhX01fYkdQ27
Wqf6hV2tU/3CrtaprmFX61G/sKv1qF/Y1XrUL3yqdadf2NW60y+cq/WoX9jV
etQv7Go96hd2tR71C7taj/qFXa1H/cKu1qN+YVfrUb9wrtapfmFX61S/cE6/
8B79wnt0Cu/RLwAAAAAAAAAAAAAAAAAAAAAAX8EeHfTV9mB1Dbtap/qFXa1T
/cKu1qmuYVfrUb+wq/WoX9jVetQv7Go96hd2tR71C7taj/qFXa1H/cKu1qN+
YVfrUb+wq/WoX9jVetQv7Go96hfO1TrVL+xqneoXzukX3qNfeI9O4T36BQAA
AAAAAAAAAAAAAAAAAAAA4KfsScK97DxDX61T/cKu1ql+YVfrVNewq/WoX9jV
etQv7Go96hd2tR71C7taj/qFXa1H/cKu1qN+YVfrUb+wq/WoX9jVetQvnKt1
ql/Y1TrVL+xqneoXzukX3qNfeI9O4T36BQAAAAAAAAAAAAAAAAAAAAAAAHiD
PVi4l5126Kt1ql/Y1TrVL+xqneoadrUe9Qu7Wo/6hV2tR/3CrtajfmFX61G/
sKv1qF/Y1XrUL+xqPeoXdrUe9Qvnap3qF3a1TvULu1qn+oVz+oX36Bfeo1N4
j34BAAAAAAAAAAAAAAAAAAAAAAAAAH5Z9pzhXu4swL30C321TvULu1qnuoZd
rUf9wq7Wo35hV+tRv7Cr9ahf2NV61C/saj3qF3a1HvUL52qd6hd2tU71C7ta
p/qFXa1T/cI5/cJ79Avv0Sm8R78AAAAAAAAAAAAAAAAAAAAAAAAAAAA/L3vs
0OdOCtxLv3Av/cK9av3qGj7VetQv7Go96hd2tR71C7taj/qFc7VO9Qu7Wqf6
hV2tU/3CrtapfmFX61S/cE6/cC/9wnv0C+/RKbxHvwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAD/5p4C9LlzBPfSL9xLv3Av/cK9av3qGna1TvULu1qn+oVdrVP9
wq7WqX5hV+tUv7Crdapf2NU61S+c0y/cS7/wHp3Ce/QL79EvAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAPAqdxagz50juJc7g9DnTijcS79wL/3CvWr96hp2tU71
C7tap/qFXa1T/cI5/cK99Av30i+8R6dwL/3Ce/QL79EpAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABwC3cWoM+dI+hzZxDu5U433Eu/cC/9wr30C/fSL9xLv3Av
/cK99Avv0S/cS7/wHv3CvXQKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADf
D3fKoM+dULiXfuFeP1e/uoav89Wd6he+jn7hPfqFe+kX7qVfuJd+4T36hXvp
FAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgJe40w33+k/96hr69Av3
0i/cS79wL/3CvfQLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAwIl/AjtB+aI=
      "], {{0, 41, 41}, {41, 0, 0}}, {0., 1.},
      ColorFunction->"RGBDefaultColorFunction",
      Method->{"FastRendering" -> True}],
     BoxForm`ImageTag[
     "Real", ColorFunction -> Automatic, ColorSpace -> "RGB", Interleaving -> 
      True],
     Selectable->False],
    AxesStyle->{},
    Background->None,
    BoxRatios->Automatic,
    Boxed->False,
    DefaultBaseStyle->"Image3DGraphics3D",
    ImageSize->Automatic,
    ImageSizeRaw->41,
    PlotRange->{{0, 41}, {0, 41}, {0, 41}}], ",", 
   Graphics3DBox[
    TagBox[Raster3DBox[CompressedData["
1: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
AAAAAAAAAAAAAFD2H+Lk+Lc=
      "], {{0, 41, 41}, {41, 0, 0}}, {0., 1.},
      ColorFunction->"RGBDefaultColorFunction",
      Method->{"FastRendering" -> True}],
     BoxForm`ImageTag[
     "Real", ColorFunction -> Automatic, ColorSpace -> "RGB", Interleaving -> 
      True],
     Selectable->False],
    AxesStyle->{},
    Background->None,
    BoxRatios->Automatic,
    Boxed->False,
    DefaultBaseStyle->"Image3DGraphics3D",
    ImageSize->Automatic,
    ImageSizeRaw->41,
    PlotRange->{{0, 41}, {0, 41}, {0, 41}}], ",", 
   Graphics3DBox[
    TagBox[Raster3DBox[CompressedData["
1:eJzt3bGtZVkVRdGSIAhcTHz8yoEQkLDJDZLBRgSCaIdGqKXVfftXzX3/GNJz
nnWdaZ61f//nv/7pL7/98uXLH370+80XAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPhfv/vBP77+8Qf/+vr3v/3H
P7/+1P/f+3uB/9Iv3KVfuEu/cJd+4S79wvvoFwAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAgIt+6k63+93Q8XM71S90/Fr96hq+Pf3CXfqFu/QLd310
v7qGj6NfuEun8D76hbv0C++jUwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
eB93BqHPnVC469fqV9fw7ekX7vrofnUNH0e/cJd+4S79wl36hbv0C3fpF+7S
L7yPfuEuncL76BQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALjCnQXoc+cI7nJn
EO7SL/R9rzvduobn9At36RfuqvWra9jVOtUv7Gqd6hd2tU71C8/pF+7SL9yl
X7hLp/A++oW7dAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfDb22OEudxbgLneO
oM+dULhLv3BXrV9dw67WqX5hV+tUv7Crdapf2NU61S/sap3qF3a1TvULu1qn
+oXn9At36Rfu0i/cpV94H50CAAAAAAAAAAAAAAAAAAAAAAAAAAAA/DJ2m+Eu
e+zQ5x4K3OXOEdylX7ir1q+uYVfrVL+wq3WqX9jVOtUv7Gqd6hd2tU51Dbta
j/qFXa1H/cKu1qN+YVfrUafwnH7hLv3CXfqF99EpAAAAAAAAAAAAAAAAAAAA
AAAAAADA92X3Fe6y5wx97inAXe6kwF21fnUNu1qn+oVdrVP9wq7WqX5hV+tU
17Cr9ahf2NV61C/saj3qF3a1HvULu1qP+oVdrUf9wq7Wo37huVqn+oWdTuEu
/cL76BcAAAAAAAAAAAAAAAAAAAAAAAAA4B3sQ8Jddl+hz54z3OXOAtxV61fX
sKt1ql/Y1TrVL+xqneoadrUe9Qu7Wo/6hV2tR/3CrtajfmFX61G/sKv1qF/Y
1XrUL+xqPeoXdrUe9QvP1TrVL+xqneoXdjqF99EvAAAAAAAAAAAAAAAAAAAA
AAAAAD9mXw7ushsJffZg4S477XBXrV9dw67WqX5hV+tUv7Crdapr2NV61C/s
aj3qF3a1HvULu1qP+oVdrUf9wq7Wo35hV+tRv7Cr9ahf2NV61C/saj3qF56r
dapf2NU61S/sdArvo18AAAAAAAAAAAAAAAAAAAAAAAA+gn0quMvuHPTZk4S7
7DzDXbV+dQ27Wqf6hV2tU13DrtajfmFX61G/sKv1qF/Y1XrUL+xqPeoXdrUe
9Qu7Wo/6hV2tR/3CrtajfmFX61G/sKv1qF/Y1XrULzxX61S/sKt1ql/Y1TrV
LzynUwAAAAAAAAAAAAAAAAAAAAAAyuzbwF12q6DPHh3cZQ8W7qr1q2vY1TrV
L+xqneoadrUe9Qu7Wo/6hV2tR/3CrtajfmFX61G/sKv1qF/Y1XrUL+xqPeoa
drXu9Au7Wnc6hV2tR/3CrtajfmFX61G/8FytU/3CrtapfmFX61S/8JxOAQAA
AAAAAAAAAAAAAAAAAPgM7GPAXXZvoM+eFdxlTxLuqvWra9jVOtUv7Gqd6hp2
tR71C7taj/qFXa1H/cKu1qN+YVfrUb+wq/Woa9jVutMv7Grd6Rd2te70C7ta
d/qFXa07/cKu1p1+YVfrTqewq/WoX3iu1ql+YVfrVL+wq3WqX3hOpwAAAAAA
AAAAAAAAAAAAAPCc9/XQZzcD+uzhwF326OCuWr+6hl2tU/3CrtaprmFX61G/
sKv1qF/Y1XrUL+xqPeoXdrUe9Qu7Wo+6hl2tO/3CrtadfmFX606/sKt1p1/Y
1brTL+xq3ekXdrXu9Au7Wnc6hV2tR/3Cc7VO9Qu7Wqf6hef0C3fpFAAAAAAA
AAAAAAAAAAAAAHbe3cNd9jSgz54V3FXrV9ewq3WqX9jVOtUv7Gqd6hp2tR71
C7taj/qFXa1H/cKu1qN+YVfrUdewq3WnX9jVutMv7Grd6Rd2te70C7tad/qF
Xa07/cKu1p1+YVfrTr+wq3WnU3iu1ql+YVfrVL+wq3WqX3hOp/A++gUAAAAA
AAAAAAAAAAAAgG/Pu13o8x4f+uxZwV36hbtq/eoadrVO9Qu7Wqe6hl2tR/3C
rtajfmFX61G/sKv1qF/Y1XrUNexq3ekXdrXu9Au7Wnf6hV2tO/3CrtadfmFX
606/sKt1p1/Y1brTL+xq3ekXdrXudArP1TrVL+xqneoXntMv3KVTeB+dAgAA
AAAAAAAAAAAAAADAx/GeF+6ypwF99qzgrlq/uoZdrVP9wq7Wqa5hV+tRv7Cr
9ahf2NV61C/saj3qF3a1HnUNu1p3+oVdrTv9wq7WnX5hV+tOv7Crdadf2NW6
0y/sat3pF3a17vQLu1p3+oVdrTv9wnO1HnUKu1qn+oVdrVP9wnP6hffRKQAA
AAAAAAAAAAAAAAAAfHve7UKf9/jQZw8H7qr1q2vY1TrVL+xqneoXdrVOdQ27
Wo/6hV2tR/3CrtajfmFX61HXsKt1p1/Y1brTL+xq3ekXdrXu9Au7Wnf6hV2t
O/3CrtadfmFX606/sKt1p1/Y1brTL+xq3ekXnqv1qFPY1TrVLzynX7hLp/A+
+gUAAAAAAAAAAAAAAAAAgI/j3S7c5T0+9Nmzgrtq/eoadrVO9Qu7Wqe6hl2t
R/3CrtajfmFX61G/sKv1qF/Y1XrUNexq3ekXdrXu9Au7Wnf6hV2tO/3Crtad
fmFX606/sKt1p1/Y1brTL+xq3ekXdrXu9AvP1XrUKexqneoXdrVO9QvP6Rfe
R6cAAAAAAAAAAAAAAAAAAADw/7zHh7vs4UCfPSu4q9avrmFX61S/sKt1qmvY
1XrUL+xqPeoXdrUe9Qu7Wo/6hV2tR13DrtadfmFX606/sKt1p1/Y1brTL+xq
3ekXdrXu9Au7Wnf6hV2tO/3CrtadfuG5Wo86hV2tU/3CrtapfuE5/cL76BTe
R6cAAAAAAAAAAAAAAAAAAPBxvOeFPnsacJc9K+ir7dHpGna1TvULu1qn+oVd
rVNdw67Wo35hV+tRv7Cr9ahf2NV61DXsat3pF3a17vQLu1p3+oVdrTv9wq7W
nX5hV+tOv7Crdadf2NW60y/sat3pF56r9ahf2NV61Cnsap3qF57TL9ylU3gf
/QIAAAAAAAAAAAAAAAAAAMDOu3vos6cBd9m5gr7anqSuYVfrVL+wq3Wqa9jV
etQv7Go96hd2tR71C7taj/qFXa1HXcOu1p1+YVfrTr+wq3WnX9jVutMv7Grd
6Rd2te70C7tad/qFXa07/cJztR71C7tajzqFXa1T/cJz+oW79Avvo1MAAAAA
AAAAAAAAAAAAAAAAPgO7GdBnDwfuskcHfbU9SV3DrtapfmFX61TXsKv1qF/Y
1XrUL+xqPeoXdrUe9Qu7Wo/6hV2tR13DrtadfmFX606/sKt1p1/Y1brTL+xq
3ekXdrXu9AvP1XrUKexqneoXdrVO9QvP6Rfu0i+8j04BAAAAAAAAAAAAAAAA
AAAAACizewN99ujgLv1CX20PVtewq3WqX9jVOtU17Go96hd2tR71C7taj/qF
Xa1H/cKu1qN+YVfrUdewq3WnX9jVutMv7Grd6Rd2te70C7tad/qF52o96hR2
tU71C7tap/qF5/QLd+kX3ken8HnoFAAAAAAAAAAAAAAAAAAAAACAb8luFfTZ
k4S79At32XmGvlqn+oVdrVNdw67Wo35hV+tRv7Cr9ahf2NV61C/saj3qF3a1
HvULu1qP+oVdrUf9wq7Wo37huVqn+oVdrVP9wq7WqX5hV+tUv/CcfuEu/cL7
6BQ+D50CAAAAAAAAAAAAAAAAAAAAAACwsDsHffYk4S57znCXnXa4S7/QV+tU
v7Crdapr2NV61C/saj3qF3a1HvULu1qP+oVdrUf9wq7Wo37huVqn+oVdrVP9
wq7WqX5hV+tUv7CrdapfeE6/cJdO4X30CwAAAAAAAAAAAAAAAAAAAAAAAADw
bnYjoc8eLPTZaYe73EmBu/QLd+kX7qr1q2vY1TrVL+xqneoXdrVO9Qu7Wqf6
hV2tU/3CrtapfmFX61S/sKt1ql/Y1TrVLzynX7hLv/A+OoW79AsAAAAAAAAA
AAAAAAAAAAAAAAAAAADwy9hzhrvstEOfe0ZwlztlcJd+4S79wl21fnUNu1qn
+oVdrVP9wq7WqX5hV+tUv7Crdapf2NU61S88p1+4S79wl07hffQL76NTAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAOCzsccOfe6hwF3uHEGfO6Fwl37hLv3CXfqF
u/QLd9X61TXsap3qF3a1TvULz+kX7tIp3KVfeB/9wl36BQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAB+LneLoM89MrjLnUG4S79w10f3q2v4OPqFu/QLd+kX
7tIv3KVfuEu/8D76hbt0CgAAAAAAAAAAAAAAAACfx78B/zTJqA==
      "], {{0, 41, 41}, {41, 0, 0}}, {0., 1.},
      ColorFunction->"RGBDefaultColorFunction",
      Method->{"FastRendering" -> True}],
     BoxForm`ImageTag[
     "Real", ColorFunction -> Automatic, ColorSpace -> "RGB", Interleaving -> 
      True],
     Selectable->False],
    AxesStyle->{},
    Background->None,
    BoxRatios->Automatic,
    Boxed->False,
    DefaultBaseStyle->"Image3DGraphics3D",
    ImageSize->Automatic,
    ImageSizeRaw->41,
    PlotRange->{{0, 41}, {0, 41}, {0, 41}}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6438362082830906`*^9, {3.6438365967033477`*^9, 3.6438366002591567`*^9}, 
   3.6438889114466057`*^9, 3.643889402055092*^9, 3.643890150034555*^9, 
   3.6438901844277716`*^9, 3.6439085653970146`*^9, 3.643918541345237*^9, 
   3.6439640251238575`*^9, {3.6439777861533804`*^9, 3.6439778154524403`*^9}, 
   3.6439792087698383`*^9, {3.6439937413293867`*^9, 3.643993757259465*^9}, 
   3.643999252440775*^9, {3.643999309704074*^9, 3.6439993344503145`*^9}, 
   3.6500485778783827`*^9, {3.650049056915801*^9, 3.6500491239454*^9}, 
   3.650049250356423*^9, 3.650049930475437*^9, 3.650096391373875*^9, 
   3.6500994556437654`*^9, 3.6500996545058956`*^9, 3.6501023373037815`*^9, {
   3.6501024989127693`*^9, 3.650102515940007*^9}, 3.6501029789640455`*^9, 
   3.6501030361998787`*^9, 3.650103868254572*^9, 3.650103899210182*^9, 
   3.650104284444893*^9, {3.650104327246071*^9, 3.650104342896619*^9}, 
   3.6501043831251507`*^9, {3.650105202766468*^9, 3.6501052134064603`*^9}, 
   3.650105515517064*^9, 3.6501056736940966`*^9, 3.650105780550191*^9, 
   3.650105958303628*^9, 3.650106023525278*^9, 3.6501062357223463`*^9, 
   3.650106792851927*^9, 3.6501068927094083`*^9, 3.6501071967823105`*^9, 
   3.650108312706993*^9, 3.6501085140611687`*^9, 3.6501297679198484`*^9, 
   3.650129821446171*^9, 3.6501298677887793`*^9, 3.650129899572726*^9, 
   3.650129985149828*^9, 3.650130420600672*^9, 3.650130601223337*^9, 
   3.6501306997809486`*^9, 3.650132576638607*^9, 3.6501326246935062`*^9, {
   3.650132801640405*^9, 3.6501328276917534`*^9}, 3.6502668843264256`*^9, 
   3.6502669406886773`*^9, 3.6502672044616466`*^9, 3.650271621318187*^9, 
   3.650271773755173*^9, 3.6502723847751875`*^9, 3.650272487370641*^9, {
   3.650272701831828*^9, 3.6502727330815125`*^9}, 3.650272805149151*^9, 
   3.650272862651231*^9, 3.6502736988128815`*^9, 3.650273800686212*^9, 
   3.6502746124347954`*^9, {3.650275257488896*^9, 3.6502752796210575`*^9}, 
   3.651060900716035*^9, 3.6510612129431314`*^9, 3.6510613424798746`*^9, 
   3.6510614302843475`*^9, {3.651061981867152*^9, 3.6510619998530827`*^9}, 
   3.6510623527019367`*^9, 3.6510626559043055`*^9, 3.651062693238224*^9, 
   3.651274478453806*^9, 3.6512747684468565`*^9, 3.657460160816511*^9, 
   3.657460529858551*^9, 3.657460768884063*^9, 3.6574608591037154`*^9, 
   3.657460999026717*^9, 3.6574887477161794`*^9, 3.657488871463322*^9, 
   3.682364650372465*^9, 3.6823648234057665`*^9, 3.682365171226545*^9, 
   3.6824489532037277`*^9, 3.682449361060113*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"top", ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "list", ",", "count", ",", "img", ",", "list2", ",", "list3", ",", 
      "tmp"}], "}"}], ",", 
    RowBox[{"(*", " ", "top", " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"list", "=", 
      RowBox[{"Image3DSlices", "[", 
       RowBox[{"d", ",", "All", ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"count", "=", 
      RowBox[{"Length", "[", "list", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"img", "=", 
      RowBox[{"First", "[", "list", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"list2", "=", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"img", "=", 
          RowBox[{"ImageApply", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#1", "+", 
              RowBox[{
               RowBox[{"Clip", "[", 
                RowBox[{
                 RowBox[{"1", "-", "#1"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "]"}], "*", 
               RowBox[{"f", "[", "#2", "]"}]}]}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{"img", ",", 
              RowBox[{"list", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", "count"}], "}"}]}], "]"}], "//", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"First", "[", "list", "]"}], "}"}], ",", "#"}], "]"}], 
        "&"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"list3", "=", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ImageSubtract", "[", 
          RowBox[{
           RowBox[{"list2", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"list2", "[", 
            RowBox[{"[", 
             RowBox[{"i", "-", "1"}], "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", "count"}], "}"}]}], "]"}], "//", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"First", "[", "list", "]"}], "}"}], ",", "#"}], "]"}], 
        "&"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d1", "=", 
      RowBox[{"Image3D", "[", "list3", "]"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.6497658087551594`*^9, {3.6500192087685156`*^9, 3.6500192515699186`*^9}, 
   3.65001931599556*^9, 3.6500195767484913`*^9, {3.6500207005273647`*^9, 
   3.6500207022587805`*^9}, {3.6500207616615167`*^9, 3.650020797308521*^9}, {
   3.650021623097101*^9, 3.65002162514269*^9}, {3.650021797399176*^9, 
   3.6500218313512917`*^9}}],

Cell[BoxData[
 RowBox[{"back", ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "list", ",", "count", ",", "img", ",", "list2", ",", "list3", ",", 
      "tmp"}], "}"}], ",", 
    RowBox[{"(*", " ", "back", " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"list", "=", 
      RowBox[{"Image3DSlices", "[", 
       RowBox[{"d", ",", "All", ",", "2"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"count", "=", 
      RowBox[{"Length", "[", "list", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"img", "=", 
      RowBox[{"First", "[", "list", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"list2", "=", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"img", "=", 
          RowBox[{"ImageApply", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#1", "+", 
              RowBox[{
               RowBox[{"Clip", "[", 
                RowBox[{
                 RowBox[{"1", "-", "#1"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "]"}], "*", 
               RowBox[{"f", "[", "#2", "]"}]}]}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{"img", ",", 
              RowBox[{"list", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", "count"}], "}"}]}], "]"}], "//", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"First", "[", "list", "]"}], "}"}], ",", "#"}], "]"}], 
        "&"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"list3", "=", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ImageSubtract", "[", 
          RowBox[{
           RowBox[{"list2", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"list2", "[", 
            RowBox[{"[", 
             RowBox[{"i", "-", "1"}], "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", "count"}], "}"}]}], "]"}], "//", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"First", "[", "list", "]"}], "}"}], ",", "#"}], "]"}], 
        "&"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tmp", "=", 
      RowBox[{"Image3D", "[", 
       RowBox[{"Reverse", "[", "list3", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"d2", "=", 
      RowBox[{"ImageRotate", "[", 
       RowBox[{"tmp", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"90", " ", "Degree"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "}"}]}], "]"}]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.649765805341769*^9, {3.6500192439946237`*^9, 3.6500193143560224`*^9}, 
   3.650019578620598*^9, {3.6500207059592953`*^9, 3.650020707377428*^9}, 
   3.650020760061062*^9, {3.650021629072118*^9, 3.6500216314020195`*^9}, {
   3.6500218360636835`*^9, 3.650021849898097*^9}}],

Cell[BoxData[
 RowBox[{"left", ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "list", ",", "count", ",", "img", ",", "list2", ",", "list3", ",", 
      "tmp"}], "}"}], ",", 
    RowBox[{"(*", " ", "left", " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"list", "=", 
      RowBox[{"Image3DSlices", "[", 
       RowBox[{"d", ",", "All", ",", "3"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"count", "=", 
      RowBox[{"Length", "[", "list", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"img", "=", 
      RowBox[{"First", "[", "list", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"list2", "=", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"img", "=", 
          RowBox[{"ImageApply", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#1", "+", 
              RowBox[{
               RowBox[{"Clip", "[", 
                RowBox[{
                 RowBox[{"1", "-", "#1"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "]"}], "*", 
               RowBox[{"f", "[", "#2", "]"}]}]}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{"img", ",", 
              RowBox[{"list", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", "count"}], "}"}]}], "]"}], "//", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"First", "[", "list", "]"}], "}"}], ",", "#"}], "]"}], 
        "&"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"list3", "=", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ImageSubtract", "[", 
          RowBox[{
           RowBox[{"list2", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"list2", "[", 
            RowBox[{"[", 
             RowBox[{"i", "-", "1"}], "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", "count"}], "}"}]}], "]"}], "//", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"First", "[", "list", "]"}], "}"}], ",", "#"}], "]"}], 
        "&"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tmp", "=", 
      RowBox[{"Image3D", "[", "list3", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d3", "=", 
      RowBox[{
       RowBox[{"ImageRotate", "[", 
        RowBox[{"tmp", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"90", " ", "Degree"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "}"}]}], "]"}], "//", 
       RowBox[{
        RowBox[{"ImageRotate", "[", 
         RowBox[{"#", ",", 
          RowBox[{
           RowBox[{"-", "90"}], " ", "Degree"}]}], "]"}], "&"}]}]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6500192975707765`*^9, 3.65001932564369*^9}, 
   3.65001958231664*^9, {3.650020727332138*^9, 3.6500207583385878`*^9}, 
   3.650021632866537*^9, {3.6500218603927*^9, 3.6500218750593405`*^9}}],

Cell[BoxData[
 RowBox[{"bottom", ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "list", ",", "count", ",", "img", ",", "list2", ",", "list3", ",", 
      "tmp"}], "}"}], ",", 
    RowBox[{"(*", " ", "bottom", " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"list", "=", 
      RowBox[{"Reverse", "@", 
       RowBox[{"Image3DSlices", "[", 
        RowBox[{"d", ",", "All", ",", "1"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"count", "=", 
      RowBox[{"Length", "[", "list", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"img", "=", 
      RowBox[{"First", "[", "list", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"list2", "=", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"img", "=", 
          RowBox[{"ImageApply", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#1", "+", 
              RowBox[{
               RowBox[{"Clip", "[", 
                RowBox[{
                 RowBox[{"1", "-", "#1"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "]"}], "*", 
               RowBox[{"f", "[", "#2", "]"}]}]}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{"img", ",", 
              RowBox[{"list", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", "count"}], "}"}]}], "]"}], "//", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"First", "[", "list", "]"}], "}"}], ",", "#"}], "]"}], 
        "&"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"list3", "=", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ImageSubtract", "[", 
          RowBox[{
           RowBox[{"list2", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"list2", "[", 
            RowBox[{"[", 
             RowBox[{"i", "-", "1"}], "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", "count"}], "}"}]}], "]"}], "//", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"First", "[", "list", "]"}], "}"}], ",", "#"}], "]"}], 
        "&"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d4", "=", 
      RowBox[{"Image3D", "[", 
       RowBox[{"Reverse", "[", "list3", "]"}], "]"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.6497658020910916`*^9, {3.650019338101508*^9, 3.650019345475997*^9}, 
   3.650019584341308*^9, {3.650020732095336*^9, 3.650020753502533*^9}, 
   3.650021634494136*^9, {3.65002187818571*^9, 3.6500218805210433`*^9}}],

Cell[BoxData[
 RowBox[{"front", ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "list", ",", "count", ",", "img", ",", "list2", ",", "list3", ",", 
      "tmp"}], "}"}], ",", 
    RowBox[{"(*", " ", "front", " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"list", "=", 
      RowBox[{"Reverse", "@", 
       RowBox[{"Image3DSlices", "[", 
        RowBox[{"d", ",", "All", ",", "2"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"count", "=", 
      RowBox[{"Length", "[", "list", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"img", "=", 
      RowBox[{"First", "[", "list", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"list2", "=", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"img", "=", 
          RowBox[{"ImageApply", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#1", "+", 
              RowBox[{
               RowBox[{"Clip", "[", 
                RowBox[{
                 RowBox[{"1", "-", "#1"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "]"}], "*", 
               RowBox[{"f", "[", "#2", "]"}]}]}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{"img", ",", 
              RowBox[{"list", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", "count"}], "}"}]}], "]"}], "//", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"First", "[", "list", "]"}], "}"}], ",", "#"}], "]"}], 
        "&"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"list3", "=", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ImageSubtract", "[", 
          RowBox[{
           RowBox[{"list2", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"list2", "[", 
            RowBox[{"[", 
             RowBox[{"i", "-", "1"}], "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", "count"}], "}"}]}], "]"}], "//", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"First", "[", "list", "]"}], "}"}], ",", "#"}], "]"}], 
        "&"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tmp", "=", 
      RowBox[{"Image3D", "[", "list3", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d5", "=", 
      RowBox[{"ImageRotate", "[", 
       RowBox[{"tmp", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"90", " ", "Degree"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "}"}]}], "]"}]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.6497657988527136`*^9, {3.6500193496801004`*^9, 3.6500193633094206`*^9}, 
   3.6500195861089973`*^9, {3.6500207393306293`*^9, 3.650020751777588*^9}, 
   3.650021636503191*^9, {3.650021882655937*^9, 3.6500218848054028`*^9}}],

Cell[BoxData[
 RowBox[{"right", ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "list", ",", "count", ",", "img", ",", "list2", ",", "list3", ",", 
      "tmp"}], "}"}], ",", 
    RowBox[{"(*", " ", "right", " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"list", "=", 
      RowBox[{"Reverse", "@", 
       RowBox[{"Image3DSlices", "[", 
        RowBox[{"d", ",", "All", ",", "3"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"count", "=", 
      RowBox[{"Length", "[", "list", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"img", "=", 
      RowBox[{"First", "[", "list", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"list2", "=", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"img", "=", 
          RowBox[{"ImageApply", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#1", "+", 
              RowBox[{
               RowBox[{"Clip", "[", 
                RowBox[{
                 RowBox[{"1", "-", "#1"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "]"}], "*", 
               RowBox[{"f", "[", "#2", "]"}]}]}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{"img", ",", 
              RowBox[{"list", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", "count"}], "}"}]}], "]"}], "//", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"First", "[", "list", "]"}], "}"}], ",", "#"}], "]"}], 
        "&"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"list3", "=", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ImageSubtract", "[", 
          RowBox[{
           RowBox[{"list2", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"list2", "[", 
            RowBox[{"[", 
             RowBox[{"i", "-", "1"}], "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", "count"}], "}"}]}], "]"}], "//", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"First", "[", "list", "]"}], "}"}], ",", "#"}], "]"}], 
        "&"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tmp", "=", 
      RowBox[{"Image3D", "[", 
       RowBox[{"Reverse", "[", "list3", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"d6", "=", 
      RowBox[{
       RowBox[{"ImageRotate", "[", 
        RowBox[{"tmp", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"90", " ", "Degree"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "}"}]}], "]"}], "//", 
       RowBox[{
        RowBox[{"ImageRotate", "[", 
         RowBox[{"#", ",", 
          RowBox[{
           RowBox[{"-", "90"}], " ", "Degree"}]}], "]"}], "&"}]}]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.649765795310811*^9, {3.6500193731011477`*^9, 3.6500193819016256`*^9}, 
   3.6500195880127926`*^9, {3.650020744122963*^9, 3.650020749622173*^9}, 
   3.6500216381851196`*^9, {3.650021886848531*^9, 3.650021888732789*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"renderslices", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<top\>\"", ":>", "top"}], ",", 
     RowBox[{"\"\<back\>\"", ":>", "back"}], ",", 
     RowBox[{"\"\<left\>\"", ":>", "left"}], ",", 
     RowBox[{"\"\<bottom\>\"", ":>", "bottom"}], ",", 
     RowBox[{"\"\<front\>\"", ":>", "front"}], ",", 
     RowBox[{"\"\<right\>\"", ":>", "right"}]}], "|>"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6500215264129553`*^9, 3.650021533651047*^9}, {
   3.6500216405604234`*^9, 3.6500216408404727`*^9}, {3.650021911258396*^9, 
   3.6500219116333833`*^9}, {3.650022247470479*^9, 3.650022247939203*^9}, 
   3.6500224427254667`*^9, {3.6500224792985053`*^9, 3.6500224802269278`*^9}, {
   3.65002263181735*^9, 3.6500226711148643`*^9}, {3.6500988120778847`*^9, 
   3.650098821558402*^9}, {3.6500989941394567`*^9, 3.6500989945300865`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{"lightness", ",", "chroma", ",", "hue"}], "}"}], "=", 
  RowBox[{"ColorSeparate", "[", 
   RowBox[{"ColorConvert", "[", 
    RowBox[{"colorized", ",", "\"\<LCH\>\""}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"opacity", "=", 
   RowBox[{"ImageApply", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", "#", "]"}], "&"}], ",", "d"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6439093534929314`*^9, 3.643909372804966*^9}, {
   3.6439094648775344`*^9, 3.643909471660237*^9}, {3.6439095045225763`*^9, 
   3.643909507683779*^9}, 3.64391178264575*^9, {3.643912266263461*^9, 
   3.6439122695829086`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   Graphics3DBox[
    TagBox[Raster3DBox[CompressedData["
1:eJzt2bHO9EYdhfFPEFAaLiEFJS3UKOIWQkP7IUEVCSkUiJqL47aSKSxZlr3e
nf85njP280hBUOzol12J1z7z+7//64d//urLly///vaX//jh63/+8tNPX//7
19+2//GPrz/+6Y8//vqX//qH1T9EREREpOnP//vb98s/oy3b1rYZfGlGfLXw
1cJXD1+9dF8r2UZERERERERENGvp29VsvjRjsm/PNoMvxYivHr5a+Gql+1rJ
tqV0XyvZRkRERERERHT3kneD9O0lebtK39Zm9aUY8dXCVwtfPXy10n2t2Xyj
PXupfb/75tvIf88lfLXSfURERERERNvS382Tfenb0Ky+FCO+Wvhq4auFr1a6
r+XwtW1Xte86fQpjuu/IqPI5jEqb8p5Bebfl8KnCVwtfvWQbEREREeWWurss
PW0bUpa+r+Grha/WK1+CER++O/pU25rDp97+3D7Xd9h73tN8R0alz2FM862N
lTOcPkX4aqX7WrP5Rnv2Sve1km1ERET0uoSt5ai0TWhd6m61NKsvxYiv1sy+
BCM+fHf0PeX+4wpfxYjPa0z29Z7n2J/xcX/0bke+FGOyrYWvHr56ybalZBsR
Ed2/hC3oqLTNal3qrrY0qy/FiM9jSzDiw3dXn+q994p9PN03w/1Cik+9neLL
uj965XN8hwm+I2PPOU/1bZ29n3f7qqX7Wvhq4auXbGul+1rJNiIiun9Jm9q2
xN1v3ay+FCM+jy3BiA/fHX1XbffKDdBlvJvvafcL+GrGdN+ZEV+/secc5/1C
um9t7P2821cNXz18tfDVS7YtpftayTYiovSSNrVtibvfull9KcZkn2ObvNI3
2ogPX+/Zjr3KtbGl+1zbuHo/vZvvHeOTfI7fGN/cvjMjvn5jzznO/f4Kn8rY
+3m3r9rsvpG2GXwtfLXSfa0ZfaNN29J9RERJm99eabvkusTddJ1jO1WW7HNs
p1f6Rhvx4es927EHuTasdJ9jl3Tsk/hqPocRHz6n78yo9qm/Q3z9xp5zXL49
Y5pvbez9vNtXDd+9fe8Yk32jba10XwtfvWQbEV1Xwt53VNImuU29S6pzbKfK
8HlsCUZ8+HrPVm4Zat8Vu+RdfVftkk/0OYz48H3i+9SY7jsz4qsZk30957h8
e8Y0nyJ8+Eb63jHi6/eNti3hq5dsW5dsI5q9pE1ym3qXVKfe/tTh89gSjPjw
9Zyreua7wufYrBz7Vbqvx4ivZkz3vWN8mk/9G+Ob23dmxFczpvj2jD1nOH1b
Y6KvGj58+GpGfP2+0baldF8r2bYu2UZ0luK51Jlq93Ok3CUdKd/dHCX7HPsa
PnwJPvVWoPS5NyHHPpTu6zHiqxnx+X9jtU/9HeKb23dmxDe/75Uxxbdn7DnD
6Vsbez/v9lXDh6/37N/8/7vv2z939r1jxNdvrJz5JN+eUXGm0rc0+v/ziCop
nktdqZ7rXSnfjRzh89gSjPhyfcp3cbXPvbk49pd0X4/xat+nRnz39r1jVPvU
3yE+fE7fmRFfzZji2zP2nOH0bY2JvmpP9iXfLyy2GXwVIz7/b/wEn8vYe95s
vortlbFyntq3pPqb5vIpS7YlV33uc6Z4rneleu9wpXx3czSzb7TRsf/h0/jU
7+JKn2vPcPnUm5BrH8JX831qxOf/jdU+9XeID5/Td2bEVzPi6zf2nOH0rY29
n3f6ZrlfSPfd+X7hKl+vMd33jhHf3L5Xxt7znubbM1bOcvjUzeQbbTkq0aZ4
LnWm2iUdKd/dHOGrpd43rrThG+Nz7QUun3pzce0v+Gq+T434/L+x2qf+DvHh
c/rOjPjm970ypvj2jD1nOH1tO0j1cf9xX9/eNpl0/4HP43MZ8c3te2XsPU/t
OzIm+bbGyjkun6pk29JMvtGWdapd0pHqvcOV8t3N0cy+BGOyz7GfzuBz7QUu
n3pzce0v+Gq+T434/L+x2qf+DvHhe7LvzIivZkzxHRlTfMt7uePZT+lbjD1n
XOXj/uMZvh4jvnv73jHim9v3ythzlsN3ZOw9i/ujWvjqpdpUu6kj5bubI3y1
1PvGk3yOfXdJ8TfN5VM9Fzh8yuc+fDUjPv9vrPapv0N8+J7sOzPiqxlTfEfG
FN9s9zNJvit2P7VvhvuPdN8d7xfw3dv3jlHpc3yHo31nxmRfz1kO35FR7eu1
7TkrZ6Tff+Crl2pT7bqOlO+WjvDVUu8v+Oo+xd/cK329xjOben9J9zmM+LJ8
nxrx4cPXb8RXM6b4jowpPu5n+n3cz3h8d9zH8c3l+9SY7nvHiG9u35kxwXdk
7DnH5dszpvlUzeob7VpK97VSfapd15F6e1aHr5Z6H5rFV/2b5vSpngscPvWu
ga9mxFcz4sOHr9+Ir2ZM8R0ZU3zL+5rj2UrpWxtTfO7NyuFz7H5q3wz7Pb6a
7273H/juf/+R7jsz4us39pzj8m2NvWc4farw1Uq2LaX6lLu4I+U2rk693aub
2ZdgdPgUf3Ov9FWMV+6T6b4eI765fJ8a8d3bd2bEN7/vlTHFd2RM8S3vQ45n
F6VvbUzxuTchh8+xq6l9M9wv4Kv57na/gO/+9x/4uJ9J8O0Z03yK0n0tfLWS
bUupvsTdfl3q3UJLvd2rm9lXMVb/pjl9qucCh0/5XIWvbsRXM+K7t+/MiG9+
3ytjiu/ImOJb3jcczy7qDSHN596EHD7Hrqb2ObbJp/nutt/jwzfS944RX82I
r9/Yc47LtzX2nuH0KUr3tfDVSve1Um2pdwtLyfcfrWSf+u5DnXqfbCn+5l7p
qxiv3HfTfT1GfHP5PjWm+86M+PC5fa+MKb4jY4pveZ53PBuoN4Q0n3tzcfgc
u5Xa59gmn+a72z6OD99I3ztGfFk+tTHBd2TsOcdhOzKm+RThq4evVrqvlWxL
vFtYSr7/aD3RV/l79q7vjvczR75e45X7eLqvx5juOzOqfervEB8+t++VEV/N
mOJbnpe5n+F+JsXn2P6e5vvUiA8fvppR7VN/h/hqRnz9xp5zXL6ts/fzbl+1
ZNsMvha+Wum+VrIt9e6j9cT7GWXO+6PK3zWXT/VccOZLuD9S+9TPzvjm8vUY
8d3b98qIr9/Yc4bT155HU33rZ+Y0n/K5/iqfcnNx+Rzb6dN86u0UH74n+94x
qn3q7xBfzYiv39hzjsu3Z0zzKZrdN9I2g6+Fr96MvtGmdYl3H0updzNL3B/l
+FTPLVf6KkbuP/CpfGojvnv49ow9ZzzZtzUm+dbPpI6/bep39CSfe3Nx+dS7
Fb4836dGfPhG+t4xqn3q7xBfzYiv39hzjsu3Z0zzKcLn9Y20LeGrle5rJduW
0n1J9x7bEu9mllLvjpac90e9zwUun+q574k+9bsHvrl8vcZ0354RX82Y7Ov9
vNOneOZz+Vx7gXN/wVfzqXe1J/o+NeLDN9L3jlHtU3+H+GpGfP3GnnNcvj1j
mm9t7P2821cNn9c30raEr96MvtGmbcm2GUq8m1lS3x9V/ubu5bo7UjmfcD+T
7lO/G70yPtFXMeLT/sbJvt7Pu33VnupTv4s7fco9w7kPpfvUu9oTfZ8a8eEb
6XvHqPapv0N8c/vOjAm+V8ZkX885Lt/W2ft5t68avnv7zoyjbS189dJ9rWQb
0SdVngmOUt5tVZ+r9nLdb6mMd/ep343waY3pvmr48PWerXwXV/tUz6UO3xWb
kGsfwndv36dGfPf2vWNU+9TfIb6aEV/NmOzrOcfl2zp7P+/2VcOHb6TvzDja
1kr3tWb0jTZtS/cRvVvlmcWd4rnPleq52ZXy3eNKG766b7QRH747+tRbgdNX
MTp8V2xWrv0KX833qRHfvX3vGJ/mU//Go31nRnw1Y7Kv5xyXb8+Z6KuGD99I
35lxtK2Fr166r5VsI7pTvc9TV6R4LnWl3P0czepLMKrfzfFlGfHh6zlX9Vx6
lU+9WTn2q3Sfepd8ou9TY7rvHSM+fJ/41EZ8/caec57q2zp7P+/2VcOHb6Tv
zDja1sJXL93XSrYtJduIyF/SJrlNufs5mtWXYkz2qbeNq32jjfhyfcotQ+1T
PTdf5VNuVs79D9+1vneMSp/jO8SH7xOf2oiv39hzjsu3Z0zzrY29n3f7quHD
N9L3jjHZN9rWSve1ZvSNNm1L9xERJW2me6XtuuvUu6469XaqDl8t9T70JJ9j
f57Fp9xa1D7HHuT0KTc15z6Jr+brMeK7t+/M+DSf+jdO8B0Ze85x+faMab61
sffzbl81fPhG+t4xJvtG21rpvha+esk2IqJZSthLj0radPdK253XpW7jS/hq
zexLMD7Vp3pmdvgce5XTp9z8nPspvpqvx5juOzPim993ZOw5Z3af0pjmU4QP
H75+42hbC189fPWSbURE9IySNt1tibvzumRf8nbfwldrZl+C0eVTPdM7fO5d
8s4+9bt5uu/MqPQ5vkN8/caec57q2zOm+dbG3s+n78/48OHrN462tfDVw1cv
2bYu2UZERPcvYc89Kmlz3pa4i6+b0ZdkxNdf8t3RksOnfOdw3W25dtMn+tTb
uGN/TvepjfhqxmRf7xkzb7v48D3d18JXC189fPWSbeuSbURERPS6pM15W+Iu
vi51u28l3y20nnj/oeyJPuU7kfv+I93nMip96u3+rj7nNsT9x/idAx8+fK/D
VwtfrXRfa0bfaNO2dB8RERERZZe2269LvVtYwlfriT7lO5vrfktldNlcRrVP
ff+R6FsbU32K0vc1fLXw1cJXC1+tdF8LX71kWyvdR0RERERE9KrEu5l1+Gop
77aS33uT381n213SjPhqpe+n+Grhq4WvHr5aybaldF8r2UZERERERET0hJLf
y2fZNRKNM25r+N4PX630/R5fvRl9o03r0n0tfEREREREREREzy55c0nfhdK3
q9l8aUZ8tfDVwldvJt9oCxEREdFd+hkmbb9c
      "], {{0, 41, 41}, {41, 0, 0}}, {0., 1.},
      ColorFunction->"GrayLevelDefaultColorFunction",
      Method->{"FastRendering" -> True}],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    AxesStyle->{},
    Background->None,
    BoxRatios->Automatic,
    Boxed->False,
    DefaultBaseStyle->"Image3DGraphics3D",
    ImageSize->Automatic,
    ImageSizeRaw->41,
    PlotRange->{{0, 41}, {0, 41}, {0, 41}}], ",", 
   Graphics3DBox[
    TagBox[Raster3DBox[CompressedData["
1:eJzt2THLLEkdhfGrC+LXMHRDzVeMzNfE9AoayIKwImJqvB/araChabqnZ+p/
Ttep7ueBKxpM8WMGfLtP/eav//z+77/88uXLv3798398//U/f/zxx6///fOv
2v/429cffv+7H775+b/+dvWPiIiIiDT970/ffrf8G23ZtrbN4Esz4quFrxa+
evjqpftayTYiIiIiIiIiollL365m86UZk317thl8KUZ89fDVwlcr3ddKti2l
+1rJNiIiIiIiIqK7l7wbpG8vydtV+rY2qy/FiK8Wvlr46uGrle5rzeYb7dlL
7fvLP77+QXGOK3y10n1ERERERETb0t/Nk33p29CsvhQjvlr4auGrha9Wuq/l
8LVtV7XvOn0KY7rvyKjyOYxKm/KeQXm35fCpwlcLX71kGxERERHllrq7LD1t
G1KWvq/hq4Wv1itfghEfvjv6VNuaw6fe/tw+13fYe97TfEdGpc9hTPOtjZUz
nD5F+Gql+1qz+UZ79kr3tZJtRERE9LqEreWotE1oXeputTSrL8WIr9bMvgQj
Pnx39D3l/uMKX8WIz2tM9vWe59if8XF/9G5HvhRjsq2Frx6+esm2pWQbERHd
v4Qt6Ki0zWpd6q62NKsvxYjPY0sw4sN3V5/qvfeKfTzdN8P9QopPvZ3iy7o/
euVzfIcJviNjzzlP9W2dvZ93+6ql+1r4auGrl2xrpftayTYiIrp/SZvatsTd
b92svhQjPo8twYgP3x19V233yg3QZbyb72n3C/hqxnTfmRFfv7HnHOf9Qrpv
bez9vNtXDV89fLXw1Uu2LaX7Wsk2IqL0kja1bYm737pZfSnGZJ9jm7zSN9qI
D1/v2Y69yrWxpftc27h6P72b7x3jk3yO3xjf3L4zI75+Y885zv3+Cp/K2Pt5
t6/a7L6Rthl8LXy10n2tGX2jTdvSfURESZvfXmm75LrE3XSdYztVluxzbKdX
+kYb8eHrPduxB7k2rHSfY5d07JP4aj6HER8+p+/MqPapv0N8/caec1y+PWOa
b23s/bzbVw3fvX3vGJN9o22tdF8LX71kGxFdV8Led1TSJrlNvUuqc2ynyvB5
bAlGfPh6z1ZuGWrfFbvkXX1X7ZJP9DmM+PB94vvUmO47M+KrGZN9Pee4fHvG
NJ8ifPhG+t4x4uv3jbYt4auXbFuXbCOavaRNcpt6l1Sn3v7U4fPYEoz48PWc
q3rmu8Ln2Kwc+1W6r8eIr2ZM971jfJpP/Rvjm9t3ZsRXM6b49ow9Zzh9W2Oi
rxo+fPhqRnz9vtG2pXRfK9m2LtlGdJbiudSZavdzpNwlHSnf3Rwl+xz7Gj58
CT71VqD0uTchxz6U7usx4qsZ8fl/Y7VP/R3im9t3ZsQ3v++VMcW3Z+w5w+lb
G3s/7/ZVw4ev9+xf/PTv79q/O/veMeLrN1bOfJJvz6g4U+lbGv3/eUSVFM+l
rlTP9a6U70aO8HlsCUZ8uT7lu7ja595cHPtLuq/HeLXvUyO+e/veMap96u8Q
Hz6n78yIr2ZM8e0Ze85w+rbGRF+1J/uS7xcW2wy+ihGf/zd+gs9l7D1vNl/F
9spYOU/tW1L9TXP5lCXbkqs+9zlTPNe7Ur13uFK+uzma2Tfa6Nj/8Gl86ndx
pc+1Z7h86k3ItQ/hq/k+NeLz/8Zqn/o7xIfP6Tsz4qsZ8fUbe85w+tbG3s87
fbPcL6T77ny/cJWv15jue8eIb27fK2PveU/z7RkrZzl86mbyjbYclWhTPJc6
U+2SjpTvbo7w1VLvG1fa8I3xufYCl0+9ubj2F3w136dGfP7fWO1Tf4f48Dl9
Z0Z88/teGVN8e8aeM5y+th2k+rj/uK9vb5tMuv/A5/G5jPjm9r0y9p6n9h0Z
k3xbY+Ucl09Vsm1pJt9oyzrVLulI9d7hSvnu5mhmX4Ix2efYT2fwufYCl0+9
ubj2F3w136dGfP7fWO1Tf4f48D3Zd2bEVzOm+I6MKb7lvdzx7Kf0LcaeM67y
cf/xDF+PEd+9fe8Y8c3te2XsOcvhOzL2nsX9US189VJtqt3UkfLdzRG+Wup9
40k+x767pPib5vKpngscPuVzH76aEZ//N1b71N8hPnxP9p0Z8dWMKb4jY4pv
tvuZJN8Vu5/aN8P9R7rvjvcL+O7te8eo9Dm+w9G+M2Oyr+csh+/IqPb12vac
lTPS7z/w1Uu1qXZdR8p3S0f4aqn3F3x1n+Jv7pW+XuOZTb2/pPscRnxZvk+N
+PDh6zfiqxlTfEfGFB/3M/0+7mc8vjvu4/jm8n1qTPe9Y8Q3t+/MmOA7Mvac
4/LtGdN8qmb1jXYtpftaqT7VrutIvT2rw1dLvQ/N4qv+TXP6VM8FDp9618BX
M+KrGfHhw9dvxFczpviOjCm+5X3N8Wyl9K2NKT73ZuXwOXY/tW+G/R5fzXe3
+w9897//SPedGfH1G3vOcfm2xt4znD5V+Gol25ZSfcpd3JFyG1en3u7VzexL
MDp8ir+5V/oqxiv3yXRfjxHfXL5Pjfju7Tsz4pvf98qY4jsypviW9yHHs4vS
tzam+NybkMPn2NXUvhnuF/DVfHe7X8B3//sPfNzPJPj2jGk+Rem+Fr5aybal
VF/ibr8u9W6hpd7u1c3sqxirf9OcPtVzgcOnfK7CVzfiqxnx3dt3ZsQ3v++V
McV3ZEzxLe8bjmcX9YaQ5nNvQg6fY1dT+xzb5NN8d9vv8eEb6XvHiK9mxNdv
7DnH5dsae89w+hSl+1r4aqX7Wqm21LuFpeT7j1ayT333oU69T7YUf3Ov9FWM
V+676b4eI765fJ8a031nRnz43L5XxhTfkTHFtzzPO54N1BtCms+9uTh8jt1K
7XNsk0/z3W0fx4dvpO8dI74sn9qY4Dsy9pzjsB0Z03yK8NXDVyvd10q2Jd4t
LCXff7Se6Kv8PXvXd8f7mSNfr/HKfTzd12NM950Z1T71d4gPn9v3yoivZkzx
Lc/L3M9wP5Pic2x/T/N9asSHD1/NqPapv0N8NSO+fmPPOS7f1tn7ebevWrJt
Bl8LX610XyvZlnr30Xri/Ywy5/1R5e+ay6d6LjjzJdwfqX3qZ2d8c/l6jPju
7XtlxNdv7DnD6WvPo6m+9TNzmk/5XH+VT7m5uHyO7fRpPvV2ig/fk33vGNU+
9XeIr2bE12/sOcfl2zOm+RTN7htpm8HXwldvRt9o07rEu4+l1LuZJe6Pcnyq
55YrfRUj9x/4VD61Ed89fHvGnjOe7Nsak3zrZ1LH3zb1O3qSz725uHzq3Qpf
nu9TIz58I33vGNU+9XeIr2bE12/sOcfl2zOm+RTh8/pG2pbw1Ur3tZJtS+m+
pHuPbYl3M0upd0dLzvuj3ucCl0/13PdEn/rdA99cvl5jum/PiK9mTPb1ft7p
UzzzuXyuvcC5v+Cr+dS72hN9nxrx4Rvpe8eo9qm/Q3w1I75+Y885Lt+eMc23
NvZ+3u2rhs/rG2lbwldvRt9o07Zk2wwl3s0sqe+PKn9z93LdHamcT7ifSfep
341eGZ/oqxjxaX/jZF/v592+ak/1qd/FnT7lnuHch9J96l3tib5PjfjwjfS9
Y1T71N8hvrl9Z8YE3ytjsq/nHJdv6+z9vNtXDd+9fWfG0bYWvnrpvlayjeiT
Ks8ERynvtqrPVXu57rdUxrv71O9G+LTGdF81fPh6z1a+i6t9qudSh++KTci1
D+G7t+9TI757+94xqn3q7xBfzYivZkz29Zzj8m2dvZ93+6rhwzfSd2YcbWul
+1oz+kabtqX7iN6t8sziTvHc50r13OxK+e5xpQ1f3TfaiA/fHX3qrcDpqxgd
vis2K9d+ha/m+9SI796+d4xP86l/49G+MyO+mjHZ13OOy7fnTPRVw4dvpO/M
ONrWwlcv3ddKthHdqd7nqStSPJe6Uu5+jmb1JRjV7+b4soz48PWcq3ouvcqn
3qwc+1W6T71LPtH3qTHd944RH75PfGojvn5jzzlP9W2dvZ93+6rhwzfSd2Yc
bWvhq5fuayXblpJtROQvaZPcptz9HM3qSzEm+9TbxtW+0UZ8uT7llqH2qZ6b
r/IpNyvn/ofvWt87RqXP8R3iw/eJT23E12/sOcfl2zOm+dbG3s+7fdXw4Rvp
e8eY7Btta6X7WjP6Rpu2pfuIiJI2073Sdt116l1XnXo7VYevlnofepLPsT/P
4lNuLWqfYw9y+pSbmnOfxFfz9Rjx3dt3ZnyaT/0bJ/iOjD3nuHx7xjTf2tj7
ebevGj58I33vGJN9o22tdF8LX71kGxHRLCXspUclbbp7pe3O61K38SV8tWb2
JRif6lM9Mzt8jr3K6VNufs79FF/N12NM950Z8c3vOzL2nDO7T2lM8ynChw9f
v3G0rYWvHr56yTYiInpGSZvutsTdeV2yL3m7b+GrNbMvwejyqZ7pHT73Lnln
n/rdPN13ZlT6HN8hvn5jzzlP9e0Z03xrY+/n0/dnfPjw9RtH21r46uGrl2xb
l2wjIqL7l7DnHpW0OW9L3MXXzehLMuLrL/nuaMnhU75zuO62XLvpE33qbdyx
P6f71EZ8NWOyr/eMmbddfPie7mvhq4WvHr56ybZ1yTYiIiJ6XdLmvC1xF1+X
ut23ku8WWk+8/1D2RJ/ynch9/5HucxmVPvV2f1efcxvi/mP8zoEPH77X4auF
r1a6rzWjb7RpW7qPiIiIiLJL2+3Xpd4tLOGr9USf8p3Ndb+lMrpsLqPap77/
SPStjak+Ren7Gr5a+Grhq4WvVrqvha9esq2V7iMiIiIiInpV4t3MOny1lHdb
ye+9ye/ms+0uaUZ8tdL3U3y18NXCVw9frWTbUrqvlWwjIiIiIiIiekLJ7+Wz
7BqJxhm3NXzvh69W+n6Pr96MvtGmdem+Fj4iIiIiIiIiomeXvLmk70Lp29Vs
vjQjvlr4auGrN5NvtIWIiIjoLv0ftuaVQg==
      "], {{0, 41, 41}, {41, 0, 0}}, {0., 1.},
      ColorFunction->"GrayLevelDefaultColorFunction",
      Method->{"FastRendering" -> True}],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    AxesStyle->{},
    Background->None,
    BoxRatios->Automatic,
    Boxed->False,
    DefaultBaseStyle->"Image3DGraphics3D",
    ImageSize->Automatic,
    ImageSizeRaw->41,
    PlotRange->{{0, 41}, {0, 41}, {0, 41}}], ",", 
   Graphics3DBox[
    TagBox[Raster3DBox[CompressedData["
1:eJzt2UHKLEkZheGrgjh3BQ57qhNHNm6hXcFtsEcNQjsQRw5cirtwb4Idg4Qk
yaysiu+cjBOZ7wtXdFDBQxX4Z5743fd/++6HX3758uXvv/n5P777+o8///TT
13/+5dftf/z1649/+P2Pv/r5v36z+kdEREREmv74v//+afk32rJtbZvBl2bE
VwtfLXz18NVL97WSbUREREREREREs5a+Xc3mSzMm+/ZsM/hSjPjq4auFr1a6
r5VsW0r3tZJtRERERERERHcveTdI316St6v0bW1WX4oRXy18tfDVw1cr3dea
zTfas5fa969///Ct4hxX+Gql+4iIiIiIiLalv5sn+9K3oVl9KUZ8tfDVwlcL
X610X8vha9uuat91+hTGdN+RUeVzGJU25T2D8m7L4VOFrxa+esk2IiIiIsot
dXdZeto2pCx9X8NXC1+tV74EIz58d/SptjWHT739uX2u77D3vKf5joxKn8OY
5lsbK2c4fYrw1Ur3tWbzjfbsle5rJduIiIjodQlby1Fpm9C61N1qaVZfihFf
rZl9CUZ8+O7oe8r9xxW+ihGf15js6z3PsT/j4/7o3Y58KcZkWwtfPXz1km1L
yTYiIrp/CVvQUWmb1brUXW1pVl+KEZ/HlmDEh++uPtV77xX7eLpvhvuFFJ96
O8WXdX/0yuf4DhN8R8aec57q2zp7P+/2VUv3tfDVwlcv2dZK97WSbUREdP+S
NrVtibvfull9KUZ8HluCER++O/qu2u6VG6DLeDff0+4X8NWM6b4zI75+Y885
zvuFdN/a2Pt5t68avnr4auGrl2xbSve1km1EROklbWrbEne/dbP6UozJPsc2
eaVvtBEfvt6zHXuVa2NL97m2cfV+ejffO8Yn+Ry/Mb65fWdGfP3GnnOc+/0V
PpWx9/NuX7XZfSNtM/ha+Gql+1oz+kabtqX7iIiSNr+90nbJdYm76TrHdqos
2efYTq/0jTbiw9d7tmMPcm1Y6T7HLunYJ/HVfA4jPnxO35lR7VN/h/j6jT3n
uHx7xjTf2tj7ebevGr57+94xJvtG21rpvha+esk2IrquhL3vqKRNcpt6l1Tn
2E6V4fPYEoz48PWerdwy1L4rdsm7+q7aJZ/ocxjx4fvE96kx3XdmxFczJvt6
znH59oxpPkX48I30vWPE1+8bbVvCVy/Zti7ZRjR7SZvkNvUuqU69/anD57El
GPHh6zlX9cx3hc+xWTn2q3RfjxFfzZjue8f4NJ/6N8Y3t+/MiK9mTPHtGXvO
cPq2xkRfNXz48NWM+Pp9o21L6b5Wsm1dso3oLMVzqTPV7udIuUs6Ur67OUr2
OfY1fPgSfOqtQOlzb0KOfSjd12PEVzPi8//Gap/6O8Q3t+/MiG9+3ytjim/P
2HOG07c29n7e7auGD1/v2f/57S++bf/u7HvHiK/fWDnzSb49o+JMpW9p9P/n
EVVSPJe6Uj3Xu1K+GznC57ElGPHl+pTv4mqfe3Nx7C/pvh7j1b5Pjfju7XvH
qPapv0N8+Jy+MyO+mjHFt2fsOcPp2xoTfdWe7Eu+X1hsM/gqRnz+3/gJPpex
97zZfBXbK2PlPLVvSfU3zeVTlmxLrvrc50zxXO9K9d7hSvnu5mhm32ijY//D
p/Gp38WVPtee4fKpNyHXPoSv5vvUiM//G6t96u8QHz6n78yIr2bE12/sOcPp
Wxt7P+/0zXK/kO678/3CVb5eY7rvHSO+uX2vjL3nPc23Z6yc5fCpm8k32nJU
ok3xXOpMtUs6Ur67OcJXS71vXGnDN8bn2gtcPvXm4tpf8NV8nxrx+X9jtU/9
HeLD5/SdGfHN73tlTPHtGXvOcPradpDq4/7jvr69bTLp/gOfx+cy4pvb98rY
e57ad2RM8m2NlXNcPlXJtqWZfKMt61S7pCPVe4cr5bubo5l9CcZkn2M/ncHn
2gtcPvXm4tpf8NV8nxrx+X9jtU/9HeLD92TfmRFfzZjiOzKm+Jb3csezn9K3
GHvOuMrH/cczfD1GfPf2vWPEN7fvlbHnLIfvyNh7FvdHtfDVS7WpdlNHync3
R/hqqfeNJ/kc++6S4m+ay6d6LnD4lM99+GpGfP7fWO1Tf4f48D3Zd2bEVzOm
+I6MKb7Z7meSfFfsfmrfDPcf6b473i/gu7fvHaPS5/gOR/vOjMm+nrMcviOj
2tdr23NWzki//8BXL9Wm2nUdKd8tHeGrpd5f8NV9ir+5V/p6jWc29f6S7nMY
8WX5PjXiw4ev34ivZkzxHRlTfNzP9Pu4n/H47riP45vL96kx3feOEd/cvjNj
gu/I2HOOy7dnTPOpmtU32rWU7mul+lS7riP19qwOXy31PjSLr/o3zelTPRc4
fOpdA1/NiK9mxIcPX78RX82Y4jsypviW9zXHs5XStzam+NyblcPn2P3Uvhn2
e3w1393uP/Dd//4j3XdmxNdv7DnH5dsae89w+lThq5VsW0r1KXdxR8ptXJ16
u1c3sy/B6PAp/uZe6asYr9wn0309Rnxz+T414ru378yIb37fK2OK78iY4lve
hxzPLkrf2pjic29CDp9jV1P7ZrhfwFfz3e1+Ad/97z/wcT+T4NszpvkUpfta
+Gol25ZSfYm7/brUu4WWertXN7OvYqz+TXP6VM8FDp/yuQpf3YivZsR3b9+Z
Ed/8vlfGFN+RMcW3vG84nl3UG0Kaz70JOXyOXU3tc2yTT/Pdbb/Hh2+k7x0j
vpoRX7+x5xyXb2vsPcPpU5Tua+Grle5rpdpS7xaWku8/Wsk+9d2HOvU+2VL8
zb3SVzFeue+m+3qM+ObyfWpM950Z8eFz+14ZU3xHxhTf8jzveDZQbwhpPvfm
4vA5diu1z7FNPs13t30cH76RvneM+LJ8amOC78jYc47DdmRM8ynCVw9frXRf
K9mWeLewlHz/0Xqir/L37F3fHe9njny9xiv38XRfjzHdd2ZU+9TfIT58bt8r
I76aMcW3PC9zP8P9TIrPsf09zfepER8+fDWj2qf+DvHVjPj6jT3nuHxbZ+/n
3b5qybYZfC18tdJ9rWRb6t1H64n3M8qc90eVv2sun+q54MyXcH+k9qmfnfHN
5esx4ru375URX7+x5wynrz2PpvrWz8xpPuVz/VU+5ebi8jm206f51NspPnxP
9r1jVPvU3yG+mhFfv7HnHJdvz5jmUzS7b6RtBl8LX70ZfaNN6xLvPpZS72aW
uD/K8ameW670VYzcf+BT+dRGfPfw7Rl7zniyb2tM8q2fSR1/29Tv6Ek+9+bi
8ql3K3x5vk+N+PCN9L1jVPvU3yG+mhFfv7HnHJdvz5jmU4TP6xtpW8JXK93X
SrYtpfuS7j22Jd7NLKXeHS057496nwtcPtVz3xN96ncPfHP5eo3pvj0jvpox
2df7eadP8czn8rn2Auf+gq/mU+9qT/R9asSHb6TvHaPap/4O8dWM+PqNPee4
fHvGNN/a2Pt5t68aPq9vpG0JX70ZfaNN25JtM5R4N7Okvj+q/M3dy3V3pHI+
4X4m3ad+N3plfKKvYsSn/Y2Tfb2fd/uqPdWnfhd3+pR7hnMfSvepd7Un+j41
4sM30veOUe1Tf4f45vadGRN8r4zJvp5zXL6ts/fzbl81fPf2nRlH21r46qX7
Wsk2ok+qPBMcpbzbqj5X7eW631IZ7+5Tvxvh0xrTfdXw4es9W/kurvapnksd
vis2Idc+hO/evk+N+O7te8eo9qm/Q3w1I76aMdnXc47Lt3X2ft7tq4YP30jf
mXG0rZXua83oG23alu4jerfKM4s7xXOfK9Vzsyvlu8eVNnx132gjPnx39Km3
AqevYnT4rtisXPsVvprvUyO+e/veMT7Np/6NR/vOjPhqxmRfzzku354z0VcN
H76RvjPjaFsLX710XyvZRnSnep+nrkjxXOpKufs5mtWXYFS/m+PLMuLD13Ou
6rn0Kp96s3LsV+k+9S75RN+nxnTfO0Z8+D7xqY34+o095zzVt3X2ft7tq4YP
30jfmXG0rYWvXrqvlWxbSrYRkb+kTXKbcvdzNKsvxZjsU28bV/tGG/Hl+pRb
htqnem6+yqfcrJz7H75rfe8YlT7Hd4gP3yc+tRFfv7HnHJdvz5jmWxt7P+/2
VcOHb6TvHWOyb7Stle5rzegbbdqW7iMiStpM90rbddepd1116u1UHb5a6n3o
ST7H/jyLT7m1qH2OPcjpU25qzn0SX83XY8R3b9+Z8Wk+9W+c4Dsy9pzj8u0Z
03xrY+/n3b5q+PCN9L1jTPaNtrXSfS189ZJtRESzlLCXHpW06e6VtjuvS93G
l/DVmtmXYHyqT/XM7PA59iqnT7n5OfdTfDVfjzHdd2bEN7/vyNhzzuw+pTHN
pwgfPnz9xtG2Fr56+Ool24iI6BklbbrbEnfndcm+5O2+ha/WzL4Eo8uneqZ3
+Ny75J196nfzdN+ZUelzfIf4+o095zzVt2dM862NvZ9P35/x4cPXbxxta+Gr
h69esm1dso2IiO5fwp57VNLmvC1xF183oy/JiK+/5LujJYdP+c7hutty7aZP
9Km3ccf+nO5TG/HVjMm+3jNm3nbx4Xu6r4WvFr56+Ool29Yl24iIiOh1SZvz
tsRdfF3qdt9KvltoPfH+Q9kTfcp3Ivf9R7rPZVT61Nv9XX3ObYj7j/E7Bz58
+F6Hrxa+Wum+1oy+0aZt6T4iIiIiyi5tt1+XerewhK/WE33KdzbX/ZbK6LK5
jGqf+v4j0bc2pvoUpe9r+Grhq4WvFr5a6b4WvnrJtla6j4iIiIiI6FWJdzPr
8NVS3m0lv/cmv5vPtrukGfHVSt9P8dXCVwtfPXy1km1L6b5Wso2IiIiIiIjo
CSW/l8+yayQaZ9zW8L0fvlrp+z2+ejP6RpvWpfta+IiIiIiIiIiInl3y5pK+
C6VvV7P50oz4auGrha/eTL7RFiIiIqK79H+YSp6x
      "], {{0, 41, 41}, {41, 0, 0}}, {0., 1.},
      ColorFunction->"GrayLevelDefaultColorFunction",
      Method->{"FastRendering" -> True}],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    AxesStyle->{},
    Background->None,
    BoxRatios->Automatic,
    Boxed->False,
    DefaultBaseStyle->"Image3DGraphics3D",
    ImageSize->Automatic,
    ImageSizeRaw->41,
    PlotRange->{{0, 41}, {0, 41}, {0, 41}}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6439122700448637`*^9, 3.643918542913349*^9, 3.6439193178738503`*^9, 
   3.643964028304661*^9, {3.6439777874786444`*^9, 3.6439778166211123`*^9}, 
   3.6439792117564883`*^9, {3.643993744001266*^9, 3.6439937585250463`*^9}, 
   3.6439992534529257`*^9, {3.6439993108915415`*^9, 3.643999335637781*^9}, 
   3.6500485858430176`*^9, {3.650049057983523*^9, 3.6500491251368217`*^9}, 
   3.650049251620263*^9, 3.650049931918555*^9, 3.650096396674556*^9, 
   3.650099457796765*^9, 3.65009965755655*^9, 3.650102340036194*^9, {
   3.6501024999395094`*^9, 3.650102516704212*^9}, 3.6501029796914067`*^9, 
   3.6501030369846616`*^9, 3.6501043872781076`*^9, 3.6501052178792105`*^9, 
   3.6501055220750475`*^9, 3.650105678029475*^9, 3.6501057843286147`*^9, 
   3.6501059620680323`*^9, 3.6501060275346613`*^9, 3.6501062396765127`*^9, 
   3.6501067967719083`*^9, 3.650106896995102*^9, 3.6501083193570876`*^9, 
   3.650108520423433*^9, 3.650129769714102*^9, 3.650129822777318*^9, 
   3.6501298692058334`*^9, 3.6501299008325267`*^9, 3.6501299860941334`*^9, 
   3.6501304219626603`*^9, 3.6501306024286156`*^9, 3.650130701810484*^9, 
   3.650132578089801*^9, 3.650132626637924*^9, {3.6501328034810715`*^9, 
   3.6501328314718423`*^9}, 3.650266890101596*^9, 3.650266942411552*^9, 
   3.6502672062398868`*^9, 3.6502716240873404`*^9, 3.6502717753484955`*^9, 
   3.650272387707738*^9, 3.650272490460312*^9, {3.650272728111319*^9, 
   3.650272734928915*^9}, 3.6502728069035077`*^9, 3.6502728646132884`*^9, 
   3.650273701121809*^9, 3.650273803463068*^9, 3.650274613960711*^9, {
   3.650275259481124*^9, 3.650275281371222*^9}, 3.6510609035557413`*^9, 
   3.651061215479244*^9, 3.6510613451026344`*^9, 3.6510614328068323`*^9, {
   3.6510619846688156`*^9, 3.6510620033437004`*^9}, 3.65106235435198*^9, 
   3.65106265873472*^9, 3.651062695600498*^9, 3.651274482136118*^9, 
   3.651274770232485*^9, 3.6574601630353255`*^9, 3.657460533110915*^9, 
   3.6574607721019897`*^9, 3.657460861604558*^9, 3.6574610012784233`*^9, 
   3.6574887541354094`*^9, 3.6574888771719055`*^9, 3.682364655370964*^9, 
   3.6823648254869747`*^9, 3.682365173201742*^9, 3.6824489550097275`*^9, 
   3.6824493635143585`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"g1", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"ImageSubtract", "[", 
       RowBox[{
        RowBox[{"GaussianFilter", "[", 
         RowBox[{"lightness", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Sqrt", "[", "2", "]"}], "/", "8."}], "*", "2"}]}], 
           "}"}]}], "]"}], ",", 
        RowBox[{"GaussianFilter", "[", 
         RowBox[{"lightness", ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Sqrt", "[", "2", "]"}], "/", "8."}], "*", "4"}]}], 
           "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", "g2"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"ImageSubtract", "[", 
        RowBox[{
         RowBox[{"GaussianFilter", "[", 
          RowBox[{"chroma", ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Sqrt", "[", "2", "]"}], "/", "8."}], "*", "2"}]}], 
            "}"}]}], "]"}], ",", 
         RowBox[{"GaussianFilter", "[", 
          RowBox[{"chroma", ",", 
           RowBox[{"{", 
            RowBox[{"4", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Sqrt", "[", "2", "]"}], "/", "8."}], "*", "4"}]}], 
            "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", "g3"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ImageSubtract", "[", 
         RowBox[{
          RowBox[{"GaussianFilter", "[", 
           RowBox[{"hue", ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Sqrt", "[", "2", "]"}], "/", "8."}], "*", "2"}]}], 
             "}"}]}], "]"}], ",", 
          RowBox[{"GaussianFilter", "[", 
           RowBox[{"hue", ",", 
            RowBox[{"{", 
             RowBox[{"4", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Sqrt", "[", "2", "]"}], "/", "8."}], "*", "4"}]}], 
             "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", "g4"}], "=", 
       RowBox[{"ImageSubtract", "[", 
        RowBox[{
         RowBox[{"GaussianFilter", "[", 
          RowBox[{"opacity", ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Sqrt", "[", "2", "]"}], "/", "8."}], "*", "2"}]}], 
            "}"}]}], "]"}], ",", 
         RowBox[{"GaussianFilter", "[", 
          RowBox[{"opacity", ",", 
           RowBox[{"{", 
            RowBox[{"4", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Sqrt", "[", "2", "]"}], "/", "8."}], "*", "4"}]}], 
            "}"}]}], "]"}]}], "]"}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"g1", ",", "g2"}], "}"}], "=", 
    RowBox[{"ParallelMap", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ImageDifference", "[", 
        RowBox[{
         RowBox[{"GaussianFilter", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Sqrt", "[", "2", "]"}], "/", "8."}], "*", "2"}]}], 
            "}"}]}], "]"}], ",", 
         RowBox[{"GaussianFilter", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"4", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Sqrt", "[", "2", "]"}], "/", "8."}], "*", "4"}]}], 
            "}"}]}], "]"}]}], "]"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{"lightness", ",", "chroma"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"diff", "=", 
      RowBox[{
       RowBox[{"ImageSubtract", "[", 
        RowBox[{"opacity", ",", "d3"}], "]"}], "//", "ImageAdjust"}]}], ";"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"r", "=", 
     RowBox[{
      RowBox[{"ImageApply", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "1", ",", "#2"}], "}"}], "*", 
          RowBox[{"List", "@@", 
           RowBox[{"rgbafunction", "[", "#1", "]"}]}]}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"d", ",", "diff"}], "}"}]}], "]"}], "//", 
      RowBox[{
       RowBox[{"Image3D", "[", 
        RowBox[{"#", ",", 
         RowBox[{"ColorSpace", "\[Rule]", "\"\<RGB\>\""}]}], "]"}], "&"}]}]}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"dog1", "=", 
      RowBox[{"ImageSubtract", "[", 
       RowBox[{
        RowBox[{"GaussianFilter", "[", 
         RowBox[{"opacity", ",", "2"}], "]"}], ",", 
        RowBox[{"GaussianFilter", "[", 
         RowBox[{"opacity", ",", "4"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dog2", "=", 
      RowBox[{
       RowBox[{"ImageSubtract", "[", 
        RowBox[{
         RowBox[{"GaussianFilter", "[", 
          RowBox[{"opacity", ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Sqrt", "[", "2", "]"}], "/", "8."}], "*", "2"}]}], 
            "}"}]}], "]"}], ",", 
         RowBox[{"GaussianFilter", "[", 
          RowBox[{"opacity", ",", 
           RowBox[{"{", 
            RowBox[{"4", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Sqrt", "[", "2", "]"}], "/", "8."}], "*", "4"}]}], 
            "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{"path", "<>", "\"\<disks_saliency.png\>\""}], ",", "dog2"}], 
        "]"}]}]}], ";"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.643910041909129*^9, 3.643910046087372*^9}, {
   3.643912175655772*^9, 3.6439122188625774`*^9}, {3.643917921043622*^9, 
   3.643917927968502*^9}, {3.643919296501563*^9, 3.6439193154233165`*^9}, 
   3.650098850102075*^9, {3.650106769603752*^9, 3.650106770458682*^9}, {
   3.650267200415278*^9, 3.6502672013044667`*^9}, {3.650267506164878*^9, 
   3.6502675121706533`*^9}, {3.6502675449904943`*^9, 3.650267545294223*^9}, {
   3.650274582135762*^9, 3.650274584733821*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   Graphics3DBox[
    TagBox[Raster3DBox[CompressedData["
1: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
bl4mlGqNAo9dM7HEIRw3P0OIN+gmH1YnQ0ylM3bMP4TqBxfin46LONZkO6pM
OYaeQ0sw8UQgdrSdotb6ptK/rSmG3lzDZrVPkNzm9b2748htnvqI26o+Tdap
0cqZnjDm5JO2SBVhrhw101AWFPqN23SA4PyXhkjsvuexRPVmEUFYUTxiY+FL
VXK/ynM4vc0RCZ9hMNy3C0rm3oEUmxuQo4gn55Qp4ediU/imb4n96Y3oGB6I
K07aY7vuNXQeHIl0TSYcvqiC11gnHOpXRO0eHk7jIRNmb2ARO/OthuQJv98P
/Py28vps102T1d5q4YjvIzhFV6i08MZ0ruuYvsy9UlW2SmbJDelrlGyQm4hr
cRJDEO38DE3xr0bBsJ1gOtsDFNOCkUgZQnnpGcHJUAesuBmIowYXYuDJp2Cn
KsFdd0dhjjHfJSulmJrdhC1f92KTyRnMCduEzkXH4I5jCuUS6UY/MVVmykMS
WdGXZ+Iq3h/3+fs7y+83Vv3/9PmsHMER3qFSxdnpXEmmvqxskprs41rk3md8
khgOmSdu3JXEEB1baIIw5Geo4DWaUuLXu6jOkQohYZ4uJIJWCy3JmZT67QRs
+OBByvuOCjpS7wqqJnjjy0t50PU2FB9VZmD63RVY6BghcNycirZ3f5B/+n5h
5cGhtElJvejT+znsIT7/+vh8CeP9e5L3x9/76+D3q/P9//TJz0znFLy+GxZq
Mr1M5N6u/CZZEL1GbKJ6hNE+W87rK/nfjgmilv9cISSLNtNeIw1FtYNGiAjV
D3TZmXqhz+Qt1GcjBhnvKVBxbCDu0J+AP6UuWP8iB6/PuoLH5XNxKR2DCZqJ
kC+5ids3Zwt1BKtFF8RqbBLfH3/4fEY+/1z5fFnB+1fA++N/98fv14efXyiv
7zavbxmvzyfim2T8ubXiJvlxJmNnDV3bfez/za+H/zyT1+shCqv9KWqq9GKI
YSKGcPgtemfQQl/RcBUaMvbYNzgFfMOmoM/Zc/i8Kg/T/M/ihbhTKN+Rip9W
BKCoZjxaSO5Qw+9epq+ExDFjLNXEJN9vF/n+OMvncyKff218vvz1L8H74+/9
FfH6Gnl9S3h9C3l9E2vWintDjjO6zhfo6uXlVIfxcV6fIX+L8TShOCEi5HuZ
DT4CtlYEbO3jHYzpuwyRZ46APrB2L9WhuAN9gUOxYYM9GWkHmOlrjqoqk7G2
shYv/GiDpBQLdAr5jMeUtOizq++LrKsjWNtxX8UCvn938/3mzfdHN5/Pf/NP
wefLX//+9Ucpf38GvL4JvL6zVWvFE6cfZ35/qKEzNE5R/aaR2PJxNK8viSbk
VSJC5zxDTE1jLb0miqWDTMTQMoHVvVor2rTAgJ750J36emMc6s+KRq/Hm7Gx
YyVeGl+DZqYpKOWz58CkxVjzKQzPaUYK/axniaJKlNgrPF9F8vyygucDH75/
l/L95sP3hw+fz3/z72++ePD+fc37o3DVN0k/r0/gepxRu1dDt6ifpFKXP8dG
kznCpEPFvL4LIkJQxygGZbMdbQKxU9UccUXyOLF/lw4bdTxNFN92Rehc/BsV
O8cCoa2MQYE8p7/PxsHKG9C2cQcaJh3D6erKOCGRocqHbqLTPgHjuusc+3DZ
IMlknq+6eH4J4vmgmu9fhu+3v/2RzudzMJ9/y/l86ef9eyxyjfia93Fm8qVq
uvBkFvXN/DYObAgWen7toAMSNBmi9DajyDnE+gycI95jslTsu85ebOyewPbd
YhlGr5C+F9hGMXUcElu2AQHRuJEO4189ezBiDmJ64Rly7qsicIl7Q2o9SKSK
5GV0zd0Epp/n51qeT2/y/NfB85Ulzy+2PB+Y8/37t9/+9kcUn8+BfP7Vq84T
T/hxmGl/X0NfnXqIcnwQiGnDPYRfXZ/RN3QZZuZAW1b+bx3rk5EkHmr5Vdzv
kybOVBOILzuNYmszC0XK8zuEhts1KSJAAPwtAKE6D2dmFENAxAa836IMI5zc
4fS3DWTLpgKIpUKpqsul9N6V25hE1RHiHTw/qxycLV3B898qnq+G8/wSyPPB
EL5/F/D9Vsf3R66tiTg4OYmZGX+Gzsk5THW+88W5PWOF32YcohMTNZkrg23Z
59kScfyEYvENd6nkXFqOZKLKE7GX7CI7rGQhk7m0jA78cpmqfZOORJAHEn65
SNQuQ4Xjebhq1wv5q+LItVhFjvdNJ30WJQpytqygfjqtpV8y45m1m/PZ4R1l
4lOZMyTOfvcl5jz/FfN8lcbzixHPB/EnTorVvuSxErNJzLLeMPptVy5lPmsp
OubpCp2FCbT1sAsiuzO3mSPH69hcXt/qgf9ITl8ulITkWEuOpo0V952uZ8wf
g0g9cZ3QVCkfPfS3o6JvKRLNfAa0xWP59ULywbciCKq/av3Nnn/DL+TfYG/v
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
g7PcjbpsqcPGgRJikzFLKG7Qf3/vQRC12JIdjac08ilimUJILMwSbn68UqiY
Moc6lE2g9o0a6Dm5T2BVLQfn2dlgvvUXNMnFAhurM7jjSQ3uvD+AsqLtcPPk
Ozir8T51UC2Xviy0Z2Ie3GUbgJWM4u9vL7/f//j5mfP6nFQuc64bJ3K1X2dL
FeFF0oRPhVzEbFJmurGdG0EP4GTP4yXKPVUsISjld6wj/KuPIEqpPxHVwgWm
obSp3FhE1JqJPr3opct+3xHqbF1Edf0ph+c7VCF3hgJDJh5G145cdNlWi52P
XqJBwRts2zkBpXvDsVW3hPomiqVX77RmfO5Xs4OkZhIp799hvD9W8ff3d79/
5xfE65M/dJIq5h2QKtoLuYARpGxQ+TOufKch93NwrcT70Uix/BwyBKHJz/Dv
Hyde53Y6bsJykdckJUYe5scQI/0Ya181Zn7VM/rs8znCVK9yHPE6Bf67nQVF
W7eD5vhLGF30HreH3EahczZeKWvB2q0rqbfKEvqSmQrzrjmX9eDzuYLPP4LP
l2bev3/9kc7fX88h7n/zK+T1dT4s5BoMSdnPmmdc9rgRnHZes6TPeapY7BvN
3N8Szusr5HecLyQUKiLCdBiTMfQSozPPliUWuLDEtXGsddAY5kf7CXpX3QfK
dL0VWnPH4J8YD/Qd7Q3R6tfwYMxVrPPZhuOi/DD0hw41ufeZsMulSHRHyZk1
GHdZ3ML3RxWfz3/zz43PFwHv3x6P1f+7v7/7DWr/P33qF55xdeNHcNYvmiWR
sS7iQVaZTLzFfnp7VCuvr4HXx4gI1yiGMA9km9Z/Y322e4qJWBuxwltVPK7v
FdNwaZ5o0+004flbVzHBSgXIDfZInZ8O+rfVcf6uRCQm7baeZeuGmol2wlTb
0aIRPL/8hOliO75/f2++JG3k+6OUz+e/+fc3X/7614f3RxB/f/78fr/z86vh
9T173ixxjXMRfxRnMmYq+2i7uE5K2FvP73eaiJDvYQjTcpao2iEOPacjaVih
Jwn8mCh+p5HFZhwUMUV6u+jeoEMUsW8Jue5gAm6KrMcMLz6XuqdjGCSh5hlT
XCmIonp7w2gz7cnMS+lptoDnFy+eD/T5/jXj++1vf6jy+VzL519tzOv/+VfB
+0OVv78D/H7teX15W13EcdaZTLfhAVpR1UpN93ssdBbPFREdexlCUMMSuw6J
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
tZ0xWReMocZHYddNK6yOisCsUwGYWxKGLwJ24zaPWrz/4D62K7mI8XdOMTPy
VrJNxh34he03Czcf3hD/LnwjWT68JAc+SlIGfW2vCSAzjuoep2inJ8jacQkS
Rd2TGsLbK/lHvijVFraay5nrld5z3GR3i5MiZfiZ6Hv43/sflb3z1FEaPc7C
5jWXtsyFP2G1hbfynco3Lpe5j9XF6ml3/sVu64thzz4WR53bgvovdmDj5Sl4
/eVeTB8ZhTe3b8MS5y1ML/dB7IChv7ki40jh5OgbYiM5vzZE30miz/9be01N
k4Um35To6x4vU4abJarZDqnG5apsNqpC2b2Y12y+sku58yhC3tXcVKISdM8/
/DmKilJTlIodl7yE6/IkiY+Nmys0vCgXGOG8cEk7QfjSqi/f8+pO9qrDcWZJ
/ino8OswdB1ljeHNPsCL+DIM2vmXjgjS4oGRcZh94JU6vPM+bjDx72niD7Hi
tdSDzHcZ0TeX6Asg+pwM4hSq+TaZOhIoUU/CJKfoXTIfn64Y/eE1wSUXlVPj
y+UtGh8pdPwhgSrTPf/QfcdZIUuVPeHGORgK2aMNxKjaDDHAz1I67WQhnfwe
JAZaM0J5l93cn/Nn1AG95+LLNrm44I8TdjS5gXLkDjRPbst4u1gyv9r7qX1X
A1ff6RGfUz1ZzCX+bbfugjyJ3D8NmW8d0eet0/czTqY2LJEoOlgq65ki245L
Vcoz+mv8D31QEjeZK/5fDkpJBWbieQ2QGQeylLYHR9UM5ylLH8Hn0nyxzJiR
Ak5mS5SZmTzbw0B+R/bJG25HBLRryWf96MgOGJmNY7xeYXa/UORGJ2OLHaXo
lHAMBX1D9YFR19hhbcP4J8uai1auE6V6ki9biX8Pn/7f/Ssz/f/ziyL6PqyW
yv7slM2Gpyoxi0g2fmhQQmrtlR57a6VDuWPFilFb+HK6kpyflqPS8ngqokig
VheIxQn7JIfhA2XVur3ynfSjcseDW+TfZO8NXNJSXPia47nPjixywei6Ohir
uGgMHd4Tuxt3R0a8x3SMz2A375/IN8W8EwKeeEoMyeefJP+A5Esa8W8s8Uea
7v4dJfOF4P/0ubqmKhZEn/m3BiV8eV/llfMPiWobLGrflPJU93Zc32/ZHFVl
IFCxXUTtyZZS2fI/kkXaQTm9l7mSNs9FeWnuoTSz+y7vI/t5Q9EBscimlteM
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
Htdn0A7dg317IGfINsiwc4dL+5fCyhAdvHkzHxzneMLSYzbQu9Adgix3kKC6
jSD2UgosHzEAzoZsgSGLj4DcqTVYzJ8D909shvXBK6HQ6znYaG4BN+AAHNh2
Et7UuYgaAzWMMU3LXKrWde04miva+ZI/OZCKQ7Cfv8L++wr7ZTb2t3HYj5ph
/yhHvh+A/Dwd+bTZzSL+54zj7NAe78Br8TmwHBgA5g4Xof7L/4H/7BRQ5WxU
jx+UpJ5f4QB/T44nk4ZNBF13R3Km2QFi0g2EmBGfSe6TVmRoXgjsa4vzmvMD
2n3/BUUdi2FW+HGomjoAwuskYa611TFpsWxm2+Pc88DP/K62AeL3zqulK+2j
KRNQQSv+9dKbDnbQqw78omm5VbS4+TD9tAuLqY+nVvLpGCWM7T6V69bKVtO7
3gsoTIiF1sv2QkVRFjH1eqnSaUfC/FWziZSwEwbLP9VXLkeSvHEXyE4/C2g5
mBKyapY6cFgrcvE+Cy26vIVifhmwj67CFE0h5Pd4Sy7p72jIhEU6xmzByS19
+XfbBgktOgWKdjMTpCfT4qk5006vOd5Jn/bmE3WJT6SmFgNoL5t06vK5n77R
rkhqy+kkn9VRwmHvqVy99EiwbB8LZTffkBj1YAh9VRdmN99JRhZdJx5eJeqY
BzKpcOyqlpEbKj46g7FBEamel0iG9t9E7B7uVd9+OA4+6cuJ35ptENj6EdS/
uRSO/3itWaXdrGufCxyj3sqriq4I+2tli1W110svvBKopYWTPne0sz40NZ2q
6vpQ93XrpYB1dWhhaDHdk9FSv2qwjpZsPCRu/sfMr+KPs9XdC8HpxnOyrqU7
SXe+S7LKG6ndE5fDu11biGlcTGf3nmby09gVXtXbAg6TGwJ86QSyTwOoKj2h
Cnl8hVTObQX1zYchJ/M79P63vuZmbpXm7aRMXefN/bkAzVVernES/znaRDK8
uyLN3JJEiwc56avxk7Y9icou1yRmPpHSNkZLhUUpNKebj/6J1SW69/4WKTC3
tmjq4sAn7d+hm97/L4izHq/2TLhOlomNNWXFw8Gy13Di8KsFBIZTteUsWX2S
jYD0MS6gmxsKsR2aQeHHY+SEXQkZmX8SlvW6DW6Hc6Dgn9aweVepZnPUbt2t
LcFcWcpLvmQWFa+7jpNMGzrST7PTqecoZ70B19DsnUDNW9ZL8sfrIvOikSQ3
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
n3JlDZWnYH70CI2XYZFul08UV3djD+E78v175Of6yKfeyH9G5CuFX+SK67/z
1x3zTckPM/rzIPS/w+gvzOVYiRlCMVvy+HeNO3CmZ86cXJXEc/dqi5uzdVIF
6pve6Ag1vimhOTGLqW3tr5JhSxNJHp4oyjFRkruDTCtxrnsU2NFOuZmiaUo1
z1jX5n4/S+vNcJgfFK3dalzLbhEn8KuwHz3E/vEW+f4T8rPCpwHIfwpfKfyi
8IER83cu5htgfpxHf45D/2M+dxaZYJxfuR0nj3bmmK94/nD9eNRnRn0LUN/d
1yXUsGAxde/1RWLUdpI8YYkob/CTzJf60ked39NF6I8Dh+uluFcZAlOdh/qQ
MZTnLKuaw7xTC3UXBkdzj972FM4eKhFvYD/ai/1D4Xtb5GcD8qk78p8R+coT
+UXhg/qYvwTzbQrmB1OrochUo/+5O3KMyYmTUZ876vNEfc9QXzTqM6E+1bzF
VPb8IsnLbSWm2QJRruwupci9qHXiI3rLL5a2x5w5MMVLZFaG84whGLMo57/r
Hzlqp9QjurlFJ7m4xBjhCvbLaOxvE7AfuWP/UPhe4WcT8mkI8l8E8pUL8ssq
5INNmL92xRcEptco/G+WYvbacoxbIp+G8zsX50NEfVNQXyHqc0d95kZfJFN6
I4kZEyYyDYgUmu9HC+s+oIMDk+n6ywXSbMzrUsurPMO8ZpXrhH/uoTHiJ4vk
6I/qer/+yJ15bxICsf86Y79Uvl+Xgv3IgP1D4ftc5OcPyKdrkP/aIl8lIb80
2zZHGNwU89eUyjIRmB/ZK/kI9D+f6yqpNs7vI5yPEDx/qgV/1u+3vgO9RVNu
C6mwtYaqjPfpc8N6qpp+Wyo9Gy+6RVkJ3k2V6z1t/7tPSrnHR7lGYyKLhOm6
5yvWcj4fjYIZ+/kM7L/K9/+U/qb0o53YPxS+r0J+vop8ugz5b+zKhsLVsDTu
q8SxjBHX0HsmnzXusZCN/vwa/Y9hDlFHnF8TzocKz59J2d+/cP1Ot5Di1J2p
7ZZLtNeRjdTb4p7UTbNevBnpJHS0COJ2dgr9T18W+X0dyViAv54kVwp6a52X
jWe7lwC/7ek1QcR+PhD7bxT2S3vsb0o/Oor94zTy/byp+cLm4ET+yGIPbrD+
vE43CPllXTfe5HlIaI/59stgTWX0Z8X/BqO/BCjzi/OhnD9lf824foq+A0kH
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
iWs4Cnn3ns6W+8oWeTTjiyOdBPeW6ULKvXHigX5/iTcdQgS/1K/c9/8Bu2av
Jxl62Apc4ifB9ZggeG95Ajzv7YLBXaw1DbdXajL+2a379DaYm1TzgZ+B+lxR
n7tFApWqHfXmb076ihrsCn1vSIYJTSWmtUZkHCaJhg8JkmeTBFow3En/LsBB
//LdEjrjeleJSz4iMLJyDc6eZeRwlnFfy4VKK3jLIbsFFfYx94raUs62JGmJ
RZzUaE6SeCuihVB2dyTnOSSMhM8nsLVeKRz+3wWwjd4AfrFPIOfyR419hx06
k28gF2cs41VsgBiM+7sY168r6pv51UmvepRCTeWXJSbmncjo7ETm5ATRaE6Q
4homUENrJ32NpZN+4LY4WlVrsZR+uL6Y3Vt5BoxyDe4CyxQ488xONyEOqoRr
uQ2lLOyNUzra/35ODtu/E135fLRU2aBM0NMWfLu2jeGoIQSqhSyYXeUFmRFu
cCI6WvO43gKd3ZAunKP8iA+65yda4nwo58+5/M/6/db3AvV1fCsyH+qITE2I
KN9LkGxRn6O7k97UzEkfcSqexjZeLUWwKtHssZGXn5Xi+tXimJxQnumYJsgv
4sTK7oIUeLgNLcR+G206SL20uTR9bwL1sTsvsbX8xRsBMXy/s8009qtVkJZk
gEGdMmCeZrrGbbCTrs9BCy5OyOKLbnQWs9FfZuD8ZuJ8KOevCvdXxvWTO6C+
G6gvIkR0v5UgFdsk0JyWTvrB+AmxSqDnmiRgt/UT5Rl5vHy9KWfrb8cxm1by
TOPHAuNbI1a0ypHcW3ajFeOPUDP28KpHJipdvUTzZTt90lFXmqcuFTUr2giv
Xi+H+l82ga5PD7gydgUE/BijdS+ezY6z8eWXXXkn2KI/P0f/m4f+4onzm4nz
oZy/3/tbgfqmhIhG1GdGfVmoLRQ/cdYJdNioBOnszf6inP2Il2dKnO2ZJtwG
SOSZv/8V0nq6S7301lSunEeLXhTQXtMvU+XnzSnWhHKtIqkr2OiDRjWlW888
FPOt3ITu7a+A59GmmnlLPTU9LlpovVbd1N3P2sFd2TJIqNPrnihjfhShPyv+
l4X+YsL5lZX54PD8/fr/+rJR2xT8pKG+5NEJUkenALHi8kteHjGQk38148o6
JPPdtluIRlEtRbh60FHBqXTM2dfUfVo2VY3vSZWfayj3fyjPWbH130lnh26T
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
VXX191Mt9QUXc6guxILuW7FCXGuTw9OyvaxmeBTUkFrwyt2avPPTQK/PC0jC
Sj+I9lypvii7EPtnRfA17wScuXcE5jpugpcrNGA5IBmuuK4CtjgcEq2bQIjl
HrjqW18zc2MrzfQfSVBU4v1/bL15XE3b/z++NQlRpGRKSIXKOXvts+d1HIRM
SaakOAjpJpWuG8KhIiF1JElxJPMUkigcc4pkTqbMyVDmUPm9dnW/7/v4PH5/
7MdRcnve11qv5+v5XK+91kL/TI1FRfrDUC8qFUQ1ychsVrCJq99xlg+HCLWH
lolusyZh2eIrWN50/4x0fnbQdTulETlPOVUWiq/d7CcmHlvKu76cy1rmaRFb
HENSm5PIFqmGiOh/S1ZRF4fGjrdB06lUcqRqKro0uIgcW94DqYv7yEanWaME
axpRnjqy7ZTp5Oh2m9Biwop6vZii7v0xpf7cuY7+OliBhl+tpV7uCaAJ1UNG
49mRm/nUkT82ebxwqqdWNMpIwMVL2igPNJ1vpv4/55vFnIb6rlWIBL2Cn1UV
zGbt2IbczFUoyKIV6MYVMpqdiVK/26Lp1/qjlz6zSbe5BHr5aC+yMHhBJnXa
QE5DhuhGjDGy8M0nC/LzSO+8XWjJxOPo2LG36ITtQ2SjrEDNkporSgO20QM/
IJYQtnGz7hbyf5plC32NNonve2uxqYGVMneqdcP7naqm/TOyJGNcEFCKMzO7
KdeOo/HZLUcE3btybs26E4w1uQCpVl+T5w8cjiyOq+S+78+iVw9fkPn+j8nK
KSPIazVJaLPhcTJn91Q0IG40WuldT+6ya4ta31yL1jqeQStcO1O67RzlM8mO
qsvhqCNjzRVBtvvpLYu9Wcv4R1xuU38mWNEOf32xBZuctVL6NvVn9E39Gcn/
loO/lPzbRfBHs8F/zAZ9r9pjye1O2k2vCLmAbpxpg2rNSpGh9jnyXP4I2Rwy
RNHFbdCOVh7IwqwzIt6PkxmcO4ZiRTWK69YbBSTlIt375pTrvhbU6I3dqB6l
xtRnA44q8TFRrDHeT/910ZcdeuYjF7J6tJCuXiueSVyBi+ZW4mtpzsqQm22V
ushEbNdtg0hcWiXolxmLui5uOGi+udLB3VzZgR+IJ9TeEYjF1jxR0469vGa0
4tf5W2jZXgNFyZmHiq39POk0jyH0RmKCYsSrB2g7DkG1qQWILE4jc9sNR/bq
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
NLMZzn2VjF1VllrpuE6bfNBdm9xCp33+cLnWqg6Ly7OaoOPX/AWbQ125j7/E
MBlH5zKRQxYyr9v9SRd6nKL1Jt2Yigmt6HWV7ZiosnR6/l+XmcgJx5ndK04y
yXvmMM5P9tK6c3XoXlpnWnHxuNL92jM6sl4QPTF8L517ui79oSCdXhveXHX8
aoL6zhV7ljobD5rVRLil8xP5vFUo9++leFzDSqwfyWnDu1hpA8N24bgtoZjb
dB0HnR2qnU8twEI2jTatkYTMblO5Nu9zadV7O+Zw1FL64wJ3emTgcdpKCGT8
BjxXasJY2nX5UPrV5VTm7ZLRzIDcYXSg1QJlSMEU+uOFI7TedrTy/d+n6JZv
/6J7f1jLmDSNp11Gb2AiO29SfRnrqhlcupd1GW7FKzJ6CZEmC0TF1nVo8fm1
WBjQTJv2srVW6peLdcnDsU7chfTBpjgw9zbuN7aj9uEQH1yeeVEc0uU7T/Up
Yg+0tFFVHctggo47MDcn1GFmPc+izWMW0V8OHKVT3nvRdzo1ZHbcOcy4FbDM
6zPLGMremTmROoU5nWPB/LGjPxOX/MkzPfaS8tOeibTHdyVj1/6GqvW1ZZpZ
7ew5hXksP7N/gSDkvhBdoi4D312PGX8bbeRgG21m+nqsd8hDkokS6evNRlLM
Cux9RqF1mvEGo4cmeBwDv9P5baDLl7AdUxxVSbc60qGhKUxhxgHVMuVC9bp3
krpwyDLVEWcbJr3xCOb874uYPYv1tLl/I0ZndotOtk2gsYuKjk7qS6et7UwP
6OTGvNlzgmlh8lxVr22q5n7Tftykh7f41S87ieGnhqP0tl7Y88pFPDO8tTZw
YjNtxvW1OIVPQJS4XpTu3BeDY2yw751KOC/O2qftluP2fTGiTm8XqFdnQUcn
ahLT26p2Lu+vPuY9UWPoVYedVXmBlU6fZVt47NG4/tFWvUWKZyImFtBpM6cq
FbcGMJUGitFPXMbUedaBif56ir7fYSX9MaSYPv/svmqEsFdj8jKIy4wr48uK
BojmgWtRatQavO2WhdY8mNf6zv+IDQ2XYd3L1YgyTBOp12GizmIjCg7ehj2+
c1q72Iu4+KgeVYT3FqnAdcBzyez4ODWiytVBr/pD7BvGUZ0quej1x/gjTzJ4
1ftdXPHXDuwfwwLUq+x7MpkNBbo/d5gOu7iRzolQ0YVJmUxZr7VMZ729atqE
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
6yq7PCpS2XyU+H1lnwTvGh2N+4/8VKb+I5pfy7m+gugLEzDSTzDOh9O2S8Ka
0Ymktraeuu3MuuoP90PIx7w6+KnndGHaJ9rfcwFki1YhzS4Ond7PBx7eLeSM
2ioWhqhxdoP1uOGcdFzrjCv2/PujsClmBD910ApV3cjGbM6BKDbwwh0mYeYx
ptGox8yJLtPkdbJbKPemVeU0vuv52d9cxIGNR+HxjWPI5uu1jfPr6PtxY/6v
2a8Yve4popbjROllIvapm0iy4eyjkIt60/p4ktZ0Di5DdURD4BDe4LRKhfQP
gSN14lHJNAEtHyS6zmmOyyRrMj0xjMQ3TCPNEpPJxBhCEhSD8erWd4XFN+z5
9NkLWBkex3Z/PZOpPzCefR/+mK13wUk5L64qd4rL5ltdaS8e2z4HT6y+gGzb
42Dcr1HyLc30vp3mJy9XF9HEkaJ0NREXmvt7BsNPuHUiKaD9PYl+Ihp/kpdU
DTiZ4MChzDge2d0VNF2+icgzB8s8OgEmAOzU/jUpL9YTfOEcOSs5qDfub0T2
+D4U5XFNBdfhndi5SXrWcHeeb+dLNeV7mz1V1Mm6reKY9fzEgvbiLu1SnLou
nrQb7qS+ccK0/8jwJRlLQ8z1owODRf3ORGxf+/v8tas1E8nlmESctbCvKPV9
waMtA7jp4xpy12jf/dKqouahD850ak4yA1PIY7GIxF8EfJr3C8meW4WgBk2I
TZ8CktxuKBld7IwfHOonTKqozkpDUhj3hZ+YV37JCpe/t6jENxKv++wiZoH+
EkG+aeBbsgea+6PofpLgYBGFmOpHNH8aYn4/Tt9n03lyTeYn4lV/9BUdXEz7
IWR1PDguMJWvDfgXPVXhklwlYIuDJLb1bYInrSTx+1sQabUf1i/zxNM3OxK8
0kDeLVcQ/eeP4rDbPsLqjEnM8+g67PuzRFHeMkwlDu7Cn3z7SegB9+93ON82
oL9MkE/XOJGgNSBfG/P8uv+nPtMD5LOj/SkepXzFgAhOM8SDiwDe1d48/6pw
poq4+x0x5pft7f0J2nsTa745Yml0jKj9HINt4ucS/akr5M2UN9i68W/i+mor
eesTHBvw8rS8YIWt6mX6F66B/z6hO9jvOLCPLLh/hhMm/RnSQb5m5vqMeT6X
pf6xqVJ/SnpWX3Fgk1I+iosAnurBLeiXyscAv2HM818Whpr2/2ovqIz7a6UM
OivIUZR8HXDgckKy3xcR+Zgogof0xGUlWcJl/5Ncztos+eK1m5UzdiZyW3f0
EMrPPRMzwb9sqrR/xrjfqs33/qjK/Uf0jPPN87kkON+3jUv5wLVjODTSg5OA
9y8dYOqfSaqUm/qv/TMa//e4lfs+Imuyj9RzeY/n0/0z6ASfGX1Mdb/tamWf
zhB/Ib6d8I0W24B/pv7PCvwLnT9psMw3szLVZ6RK9a0N5vxzpGW+mayULzgE
8ilN+1O0oL82IN8K83yVH+a/LAF+nm2ab4bOmOabzdMXkZHphCys6oSlN3EC
Cj/ASV+2KPft6sr1dX7BX93eT2wD8Y3GjwWV+mfQkB/rM5b+Msv8P03l+WF0
vtlsU/2D5idizfUZS37yf/LPwM/p+8k04JcFwN/ajJ1D8hOisETfhzlreeP7
Jm13xbFnV3g6Q7Iq4AN7uHdjzfUZdMNcn9GZ6jOV61urzPnxjlS+TJDP2Tw/
TGOaX0flo/09GSDTuUr5oX/za5b+AG8OlwE/p+8nZwC/rDhejiNpfSa2cn1G
wzbd7y16Ar4aCfjFBvDBdIi/eRDfNDR+UP8M/s+w8vv9W2Ouf/QG+UIs+qP1
I72p/iGZ9zOl/6Q/TeX8X8z3/fG0PhMG/Pwp8N/bwC+lxcDfbPaCfHvp2xrA
HTK5HvDpbsB/d8AHUvyiBXwgK4L4+6anMX4YwD9H1vreH3XGXD+SgX0kNAT5
tOb5Yeb5dXkg3zpzbjm3cv75p/0zlvxud9pjMUlFPu9V4sPbgf+mVarPaMYY
+2dsVH7kG+BTiv8ovjLiF4oPmo8zxjdX8/w1i/+j+48eg3yvvUt5l3Jz/aiX
qf7mbO4/svS//dtfJv1Y/7DUj2ield4HW0cOizeqibIGleoz2lFwF4Ph+6O5
w4Dv7QE/U3wqUfx3EPDVoUhRB/igxLy/x9I/04HOJYXzTWhUyk+yieDuDDbZ
h948nysj+vv8tbyf+yvmm/azl1Tq/6D54O7wuV/h88ffpPDbfKuDTLYqNP2p
SubZmidVXAS0x1vIAv4hAb7PpvgZ8KkR/1F8VdeED6j+zpv930PQX7l7KT/3
zhiu3lQPTm7e/0bnS6VEf5/N9EN+V/bjfhLLv9kPv4+Ez40E+5IrUvk3o5y4
tXPTVGjeKi4+KZ5vFH1MODptlSjF7xUpP6L8QwP4XvPVCVN86j/atB8xGOSj
80hbgXy5W/uKVeH+TUobw13q6cHt9k/lXYJN9rv9p/rMD/0Lc036s+RPaR17
p1k+Wl9I0qTy04T63JvuH1XxNdrz3BaV0MLTTqy72hP3HXoPh5+sSuwpf6P8
CPgHxfdG/Az4dDbgvwmAr/SAX/qCfy5oWcrfZiK47ic8uG0DUvlO8P20j2Od
2X4t8+s0lesfc3+sX+aa85NBlvx9SCr/V5Ablz21EfeX/SL+2qVDQrFdpiiv
EYLTzxFSq1EG0XY5R7TAL2XA31yBH1H+QfE9A/h5O+DTC4D/ohb1Fcsg/qJr
YzgdnO8UwAdZ5vcR683yWfpDUWX9ST/aB+0PoPreZ5kvNcBU/zjwuA13446O
P6xEYuMZTjh55U0c6jWMFNcHfLbcVm3z6S7JBv5L+SXlb32BH00G/lEC+F4D
+DkwwU/U9wT8pxvDSXM9uKrwvRzoz85cf6N2mfn/9B9Vrs/QOizN5ftUnm9G
6zMGL67P4Sx+9R57cfIrHi+o6U4ClyWQrdWfk9j85yTnn2Si3d2VxAM/zwf+
WxP4ZX/gb9mUH52vgyXA91LESR6FDuDQF3fOAPH3dzN+2RH9Y//gz/pD5vpC
trl+mWOuLxjl8zP3z9D6Qrud/IfY+uKy1F8wm60hh5/sJtPCrdVLJ14lgSVj
iBRlSyLrNiKJA9YSe89wYgv89yTwS6QeLKI20wXkM4RH9rQW1ZCTIH70h+//
1Rx/9ZXO9+f4Yan/ZlaST2c+X6mnWT69F/jUnbwU7ibOeBmE2fy+BB2+QurN
s1Y/7rOH+Fj5E/0/B7HhH3cy/U0OGbl+NHYqr459gJ8HhQH/DQB+WX8DyAZ+
wN2Bk7xT+XDwXz3+o375w/nOM9mvpb661+yfNZb6G30HstSsPw7+xjw30RDR
H08YFkS0+26RGxUvSU5JAimb4QE8bhzW7jyKndltRPX2CTmQtVu4eaabIOt2
hq/4+wPgvlMqVOWKsiDgoSpqXRx/Pa6qmAj4/gbg5+Wh3/db/Xu+rX6sD+4z
96fQ9zyrLPUtkA/dceNinUC+QJN80oL+uDA/iEj1ikhe6ztE4x9OtO+KsLSc
wfqCSGxoMZGEj6+trvtkNClcv49z6RvAdTl3UPVkxn0lSqul9G8/W/U5qhMf
VueuEAD86D3wD2fA92WAn+Nnm/cPzvsePyrXz3PM50vt/ho9XyGV18D5brrv
xfXqDuc7103UgnyRF4OIumkRKUi4TbL/HgI8KRVL/RFGAf7YUNCXRDp8JReH
ZpDq/ffg5a2LFaPaFShOcTUVe+Ly5fGd9ytP99/FDX04TZgI/HI78LcA4Ee0
fkDxvRE/L/2x/61yfyPt10wB+bzB/+2He6x/6cal/ePFxXTbyT8F+RDINxLk
CwT5ZPG3ib5gCEH/AEboWCDqA9rg7HtdiY/TM/KwYi/xn/ISn41bLkq3Dvok
//7Zt3NCBlvrwDHFRcf7qkM39vOR8YNEDPx3O/BLCfibDPiRBPwD1QF8vx3w
cwdT/YjiqzyzD6d8pTXIlw/6+xNwkAz8S7LOiwtrv5OXj3ETB/7WHxfD+XJm
+couDyGys0lYunhG1NtVxfEfPUjmnqvk2j8FJHBbI4JvXxFrvpALa14uYV4t
V7FFK4/KGyFHVYynNZ94bLewcE5z3AX4+T3gvz7AL/V7bpr4EeUfwZ7G/nNk
7j/qYpaP2scosC+mRyqfHOPGSVfbcM/zs/ho8C+XwX5ngX3MpvcvwaQ/wxmQ
L/GkiHreE9HGr1jatZ+cbf2U2G3uRDL6OeDspDhBHnaMy0uyZ4ovy9kh3npF
nXcu3OGB1YWzYVtF27nWxGr0XrIU+LkE/BcBv0SdHI37j+h8Zdp/RPknfT+U
ba4f0f2PHNy/NfPqc1LvRpz0QMfL99qLXuD/CPgXar8FYB96uH/6b3C+oD8q
n67bZ+xfbTeZ/u4DQW1/IYm1W2P96P0CQjX5yc/rqZrXY1nXcyq5ruZspWed
U5zv801C/EA1npsYRorbvyZl534heuDnaEyMkV9S/qYFfmQA/jEF8H0J7T/a
p8QS4D/0KoXPBvwitatQSY0W8YUqJP4J8cML/DP1f9S/+ID9asA+6P2T4Hyp
/qh89kc+Ev/kfmTGlfa4oDhPQFNbAdYNVGlnKhV+33qzB/seZbckualKnmv4
QWGu4sEG63FKwzRSVqwn+rlViLTME0vAzyn/bQT8MgH4mzfwI5WlfrQL8HMz
wKdawH8l4Fed2vMawAerIf4mQXyj8cMR/HM2+D8N9S/Ufnu3wTq4f1FwvjNA
f11APnVVFuuHXAEfreCRNAmwbqQCMfXZfc9z2cw/6sk7dnBSTYsT+MOdnMUO
c9Ixk5hMuAvnSIVbE6Ld7Eho/iAT+HlD4L8TgF9uBf42j/Ij+j6M4nsjfgZ8
umYVZ/hDJQQ4ZIrFgA+CIP5GQ3y7AfHDAP4Zgf+TfvE32u8msI+bcP/qwPn2
Bf2tGwryveQAH8w0v3HXsKhsia8Q5MBmhDVle9f7qrh5ZRFn93G68PW0Kx4Z
Q0ie5KCm+SGflQaSe+oK0YyJIu7Az7OA/9oCvzwSB/ytzFI/ilQim6cqaXU8
/6WJndgL8FUQ4JdNgA90NP5CfKPxw+ifwf9R/3IL7Nce7CMN7t/DojzhOKH6
mwHfNRnkk3wRWseibo+Z+S/y2Q3RB9jwzqnyqTcF1QJBztv+/VFYrhiMV+5v
RJa3G0rQCgU5NuUN/vZrT3yy5yIxuRQU3lLL319BY9sBOhcK+NFolT1uzRtm
HxNUgE9TAf89Bnw1H/CLFvABjb96iG80fowE/0z9Xyj4l9dgv1nh+4Xi+a34
Zc/gfKVYkO8Li1AT2ofkqxF3+7T9u4T1i9rLBk0S2fot1ylmWq9TcdNH8Gta
3BUKfR6Kr+4447OfPoodG/wmik+zBPk/el425wD3LHmyave0EoWRXxpGKA1j
g7n7/zgLBYDvHQE/WwE+pfgvD/BVPOCXMsAHrSD+hkF8uw7xozn459SiK6Im
Pk6o89mWt8vtrYofMFGBDE1ZpJvNoiAfFjl6M9MPnPdt9Hch+3vYb+zV8Ch2
6Iup7NUHZxUPe65QDXhmz59a3FT4crifkHnXR3hru5L/3f8k92fZMVWmc6Yy
srSf4phNCvxfw+Ro9GLll1nRXPEOb+EJ8I8wwPcRgJ+tAJ8GAv6j+IriFwbw
QT2Iv0qIb8UQP9yfy4UFs45xg4fUU4W5qxXnShuxTKvOrHzIeKbigydTfjaA
PRl6iNVczmVC+tZk5G9vMHWn12XKI9uz9vJhvgNv1mN2+nVg0i7l+1bMt2VG
3JjDDu+VLc+0W6Lc+prlvkUe4+vcbS6uA35++2o3MqfzbTK7Znd1Ya1C4rOr
IdG0Bh86M5DIA1zVI6d/IJM3IuI3bKqY/SidRzWmqyi3hzNgRmEZW3FrHlvg
25JFGp3Psu5adsayBuyilWPYEp0t4z3BidEvy2B6Xe3EHGaTmJc7OrP9Fu5h
WnRg2as+9VjD+2ifkHlHmBNnj7FZ7/bLZb4blLJOfblV3g94Q6Kf+O3IUmP+
4KCurtrnSDt1tnCO2GcSItmPxShpK5Yt20T0p7Da/s+D5OTJlXj65GqAmxsC
Bs839s7QHh/Zzhh2751MuU3TGAUamKxodXCEQhrnJN+/fziT00rBJj994VvG
JjNHZx5mbjqtYAryOHbZkCMMmvDVO4Mfy4Q2dmcXPbFlG8b+Jd8z5KKy/TOJ
C3CrIsQM7yf+xiQa38fe+8tZXfzeRV12O42g1ItYqtUC6zvNxf6tFpC0Zk7q
Nefqqrd5DiCXNNXx5E5BgNNpf08DkBHJ6Y6c49+WKkc/H60KL6nKoVMjuZ71
ArgBz1jVivo7Feg3T/nwLu2ZdjZbGO3imWy7CFumV9A4ZlO6C3u273NGvnEn
u+3JePaBdUPFp9GflG7sZm6BpoXgXmWWOOxaMj7ZNpFsbWyqH2nYRGI4koLR
K50oPamNfYLakvDWb4n/43bqIdJq4psTg6tOrSPGb7H098Qa+3sQmqLa/Gs6
5xo0nTf89oXX3BoiZE/pJTzo8AtfZ/N91daqLZTPBhB5nqRnNh/rw0gdsnwc
d9xhvrQMYSf89YA5NDWbXTSio0KDfVXPym5zcwpDhciXe8TqC8/igSfSSEfQ
XfEXZ7V/9USi+ZSIUewkEbFRor7ZGiwLWk/yNnmpB+98TZYvcyTb/9ohZhy0
Fxq1pP09U0G2Zipk6M4hm8F8tQtjhahactFwJFP0sbfHuwOq47Pf3MTyPnv5
0om23N+XXZUfpjZmfc7YMYlxS9jsnECmpxjEtq1IZV/EpiguL5umGtfejfdN
ShTqGUrERJUjkZ07TVZZeam5pXWN758NtH50ZIKIUiNFg0sSzgxKJDkfXdR2
WQ7q28NjiL+2By7pdUaQFdTis215FdLvVSFtLR4VNxSkXFtx+sRvYlnSDuyd
50DKhY4kp8KHyMJWYuuxPUXHU1v4PxbpVY5PQtk11xTsfN/NTFmXu4zccz9b
NC5DsfnNUlWHRl34mtfzhaz99XH+6rYk7shrYqXljfsh9KM6m95n0/pRs3Gi
9mUitqmbSNZ4uqhj67ioJ09MINbnl2L0V3sR/bOaRxkPVZrtVhzSTOZRq92C
ptkeUbdzKtaMa0ParE8jFTPvEs3M9+Tb2Brqgvw5ZG/AMhzraC2OP92cj8ya
xBS61GO7fPJiz4+Yy7ZK/l3Rc+A0VX95F/7ohVeCgEAPkweSqKEfiQx7mfaf
/3IZzvaViMqqi2j8SFF71ZS/ovmh8XQGkQ3IOiQR9yjoLaLdxTwajrmybfU5
TyaJRzP/FgzdZFijtiFLy2cSw+M8wk06T5o5SURnwxCuyVwiY2urw4e4kXnH
7ohFNdyFd529mNNFz5npdTf5ur61Uiyu4qva6+fG17uWL9QH+Q4kzCMlE+uq
v+xtoi77lk5kUelYcooR0aQMY/+RpX60yZx/pvWj4fMTsS6zrxj+5Q0vVR/F
BSY25kZ0SOX/6AD8ZpkKh+xXkKrV9pL4sSUk52A6cS1tS3Sx87DePxAXDJWT
oJtfSMhMwKzzSkTP/i2Etq0vMXbH9rLr1XaKMN8vyjZfb3O3khOF6XC+70F/
j0A+TV49tf3uFGJwW4nRmVARSbMAPwWLupWJWFvr+/txmv/rD/LdpfOHWpby
QSMiuMhAD+58SCr/D+DzDBcO20xXkVTFEVL+Jpe4cr2IflkhljJdMBqUJOrX
LsLhB+aTmgUXyGXXEhzoMVzs2HkF/znsJjMlskBe4HxB+cJ5M+dQFCp0Afv4
E+6fBOdbAfqj8kkVycBVB4poU6SAWpn6PyzzuSz5Z5o/bQ/yrWxcylt9HsNJ
1zy4zMBU/pD5fftK4BNDKDcbBvzyFfDLc12wFLhBRM7uomZdfVxST024AcAj
NswiqwZ1x2WpW4XIr0e4MaOuy2cFZyhjCiSuvFMLYTP4lz/AfmPBPuj9o+er
aQD6iwH5nEG+pt/rW5b5YTfM8tH6zPimpXxshXk+18BUvkGIlTjb3F9x0py7
KKT1mT7ALc7WBn6eIEhN00RZtQ+4ou0+Yl93HynuXo5PKxaCLzvGx5YeVt1e
tUTZle/LWblWEdqhWaIV+D8n8C82YL/Z1D7g/qHTcL6ZIJ/sx/04a8z1hX/3
u7iW8q9mjeH0Uzw4qaupP6CWub5lye39+744AfhviLtxf63+djTOjp1DVh4q
Iss7EpLRrQ5G4+cIyEfHofzFSr6bnHNt/4CPHNFPnALxIwT8M93/lgn+RUbt
l9oHvX+tfpQv3bx/xrK/x7I/RZ8E+gv+3p+y3dzf88N+Ekt9pmMNUWPePxNa
UkRQxBzSqE8U1tL5z4begO37q5DMXdF77jG+LMlP7APxNwfiG4H4oQH/XFB5
vtkvwSLt57Kcbwb83IbfR1vqW40qzTcbaOoP4Mzzm86G/jSfZl6l9+PtOeP8
DTrfLAL42+Hj5Tibzjc7+xa+j/bvF0LMtJIvuddcrJG7FO8BfJAB8beE7oGz
9M+8A/932NQ/Y2Pez7TOfL4j6X57S31Gb65/DDHl76l8+yu9H/83/xzz4/tx
+v50LPDzcOC/fwG/PE/rM7F0PsMeM77PBtyhkW8B/LcX8NVdwC/hgA/8LfWZ
UogfkSNFtMvkXyz1Szp/rQ31f2AfVu5m+TTm+WbBpvlmKdHf98/8K9/87+/H
Le/vaX6D7kE4Afy8OfBfK8ov99H6zADTfDM9nW+2SFkC+DQH8F8JnLE/S9+/
wPnlTjC+j9Ca6zOW+n6huT5N97M18yjlk9+NMfXPBJrqbzTPveG/6gs/9adY
5vtY6jO/OXI4lNZnGv7UP5Ng6p9ZCPhZDvjUAPhPmwv4ajHgl+RIY/w1VKof
5Zv3l1WAfBvh/nW8PYbjYs39R8Gm+kxqpf6e/8k/x5jykxb9URnpe3g6l6o3
nV/5KIUPCaD9M8B/C56qdGxrvryai4CyvYUYwPd6wM9GfAr4D8mjRFQvCdvX
Nc1fSzP7Z1pffQDyxXiW8isujeGeHvXgegXA/TPPT9xTqb6g//l9e6X9GpYc
MO0PoJ9bCJ/vL6TyEe2duK18mgolr+J0++P5lruPCbnbV4lo3V6xBPhH2VbA
94CfKT6VAP9lA77SeZrwAY2/XiDffoi/A1xK+dYXxnBdFB5c646p/BazfWys
dL6Gn/2L9F1/lho77Z8Za67PlHRP5Q+ur89tD/2qWj1bwceOVwsLc+3EtKpN
8T2f+1hfXNXIjyj/MAC+jwT83ArwqR7w30LAVzobEz4oAvtNA/0F4Ahu/x8e
3H2Iv+NDvst3zhw/Siqfb6X9PZb5dbROd96cH9eY939UueLG1cuScXUXL+MH
PTkrjNq8X4zrOAinWnUg/8zcROQl54gE/E0D/CgQ+IcW8H0u4GdHwKdRgP/i
AV9xIF8g9c81I7jsIg/Ot38qvwbun2g+X33oT/MT5/6Yvy+s1N9D8/29aP55
gHn/DGrAFXh4cz6jtvKbP9iKjtNa4GXrPuJB9UcT/7o3CaOqorbZXUgk4JeU
vyUDP6L8Yyzg+xLAzwjwqSvgPw3tny6E+DvTg8voncrfAP3Nr1T/sNgH+ul8
0X/Mr5Ms/RWW+ofBixvlvZMfOr6+2KP9L/hmVAdiJ99BHn76TPJ+v0XKrk0g
ga/qEw74bx7wy3Tgb6HAj3TAPxDge+lde1HKAXxqP4pDzTw4g38q7xxs6o/K
MOODf/cf/VSfseTvjfuHQivtn6H5e425P4XWP/x38hfC3cSdL4Pwo3N9idXW
K+QGfT++dx+JL/An0uetWLMhCY8Ffm4N/FcH/LIG8Df9ux0iCjgjoFcU32Pw
fY05Ce7fZTgfAn9nc/R/7H/7yX7LKsmXXUk+qYdlvpk3+P2dvBTjJo4a1x/3
GRVErh2+RfQVLwlXkQBnIiOaW1OwBp/Asv2DyNSNiDwGft68Y3WcDvxSs89e
QMXAibY/VEm36xv7GwuDTf15tF/siFk+il/0/1H/rTzfzNI/Q/vLJOrn3RqY
5AsC+ea7ifrF/fHC60HkS/siUnz7NjG4hxPZ8yKsKVNiWWwK1t+KIwWvG6pn
jpgqdphcTezdNUjI0gH/7Qv80sCr9AlW3B+KJL6ZxkqMdzHpz1I/+kF/zf67
Pk37tw6Z9wtJ9J0A2Memqt7G86XyyeL6Y1wYROJ6F5H4bUXE3m0QkT4mYTTy
vYgUDEaPehHX05/JqzMppP7zdP7I0IZ84ejx3K5ZwM+7TFJGftur6tRsMq8F
fkT5hxvg++Hmu/9Df2MlfFB5/xGdp+kG8r2i5wt+FH1043Kve3EeHUG+eSb9
2RQFkWYDiuA+FBEd35/o6w7F6Og6EX1FWG8jI+HNrpFbFy4RV8aGWN+ZrrqQ
dlG5opWbstXjBEXBn56q1jNr8aUtdguXgL9RfrQa+Ece4HsD7T9v9mP/0c/7
rWh9ay7IR9+X3aX9ZQvduPJTXpwtyFcV7p8O5CsH/XEgn8/gIqJ17E+kvwdi
5DdCREknRN3Vz/i0/34yNeIp8WrTifSOtcFL7drIH1Szkud8bS5veMFXueVx
dy76YUPhbdM9Yifgl47A3yqAH0mvzPh+xf/OF7Xsf8sx9/ecBf1dgThZ27cB
F5nvxR3uvJMPBvmc4kz604B8MpAv0AH0twfkaxosSo6pouzTLVywdQfp9fJv
8kkRSHLFtrhIt0foVTyVOTCoPWv1rq9iJpms8rAfzL89YivmAj+fDvyX8ksf
4G8a4EfoHPAPLeD7zqb6kRbku2g+X9pvSPsHvUC+D53BztaB/d734h6od/Jh
cL5+oL82oL8GIF8rkE8D8qFVIF9qoIgmaEXd4WSc/TCB1NxtrY7cHkGcTvph
/SWD8KQJx0+/W8Zs62Atf9JjifJpk3TOO2+sYD3pm9h2XBtyA/h5NvBfifJL
yt/aJBj5B91/ZGOuH/Uwy2fxL9+4VF62342TzoH/Y+H+jXETx4F/iQf7TQD7
OB1qOl/NXpAvBeR70FXU3BqF9Z/GEptCa3Xurwmk4fQVGN2Siah/DD8iPV3V
ecBSpiz6qLz+mnDVlIHT+cjactE5eQfm16cR/0nniQ3wcz3lv/Xc4YzTRM2d
aGwP/CMb8P1IwM95gE9ljub4hlP5TRvAXx2TcVLYVl6aUF8sAf/cF/zfJ/Av
OrDfeN58/1oA/4jUihLI5xMYTny8v5Lks9vJuitXcd6wqSK6fwGw5N8qTU6+
IiU1mfXomajI/1CV85v8hffIzRQH5DmQzzPvElcniRhi5xn5OQL+S/mlHvib
FvjRVOAfb839R9LNaiL6ksIjyYlD07+pUOIyXv/RVsyB+FYC8eMO+Gfq/xD1
L9R+u44w3j8tnC/VHwfylbnvIik3/sI5KjivL3YC0hHAknIlmr+MjR/Vh7nu
nqJoGzaSkxcOEdrb22Oav+oy8z0psGGIpnsgpvkDA/Bzq3b7yGrglx/GzCGP
gR+V0voR7Y93BvysA3yqX6lC0Qpe8/SskDu1BX4K8dca4lsOxA/kEW7yf+Bf
JLBfLdhHJr1/cL6poL8tIF/DPTtFlNIG4ukUkM/U44NQGJN66FdWt3OMws43
gNs8pZeQFlAdH67wIRVja6g1TeYSmn+h+Y1eA26TGsDPJeC/xwKjMAP8bYCl
/4jiew3g58hVnDRRLcQCvsoA/OIM+CAf4q+MxjeIH0b/TP0f+JdCsF9qHyfh
/qXA+d4E/X1JBPnKFoF8a+ieIdrjwyBpDCOJCT4ttD3kvWuzqiUdfuFDv7mJ
TcNW4rv5c4g7W1sdePMLsS64QM5umEUedi/HU4Gff5htK2adecvnjAP+JtH3
axOUSHqqkrbH8yMBnw4F/NcD8FUx4JcbgA/sIf5KEN8kOYMLwD/ngf/rAf6F
2q8n2Eeudqp4tMJOGOg5xSxfM5Avm0VoHovWFDGaoO7s8skp7B+GHYr0xPuq
Ff328rZje4qbApbhAUPcyNiZLchx1xIcO6g77qNYKN6ImCNE3erN+zPO3AkP
Op/hsgJlh6niudb87b3HBNdqTfE6wKcawH+nAV9JgF8oPqDxt+xhL6KF+DEb
/DNSBhIW/EsW2O/uogv86BWEU12Jge9bDfJtYpC+K4sqBrPSqiym55++rH7D
bLZL89byrcObK60jbLmmZ7bwj52sxeXH7oh/zysRW8qGiwVpW4XR8mP8iPY6
7rjdAFXE6BsKmxYr4PvClZrEYG7ON2dhMvCPGr73MZoF+BnwKcV/WoqvAL/k
AD5oBPH3LsQ3b4gf+8A/z7tiEML7xvCGiX+ris77KIt3dZYj6SiDNPV8kW8n
xn9rO2b5w19Ybm8E83HHembt11ZM3CAn+Z2dbsrwGL1q0MPm/HBrd6F4cAvB
h6zg97fM5Xo1O6xiFscqDamNFJuaT2CK4/NZNDNWGZgTzaFt3kLC2r3iZeAf
AuB7V8DPGsCnFP/5AL66DvilBPCBI8TfKIhvWRA/8htzfNyFdFXm49OKkA4L
WO2uTewrhwNM1uE6bFB5O3bsxx3Mpt+asV1cqjK9Qtb7crc8mU/aZ0zJXSum
uIcv22PnW2ZnwhBGa9+Vve3am9kwPEb+ucYsZazOnRs1bhPv+7yW2DCkC/6g
9CMLgP/6Teyuzr58g9h/dCPo1XSsu9CTlO9wVv9yyEbtp25Heny8KI5XuQua
sa3gzl0z9s7Q+kzm0c0MetPAB3W4xaDsLWx8za7s8LePmVttUhi9lZVPgXdn
361NerOLFq9ixk5JZNs3mM08brmQXdq0ExtYdJhNBt909tFRdtbVB/LPg1cr
d07qyuXcus5/ZHjx9+Q5eE1FjPF9J60faWqcJoFTWhDpfR+snbUJx77Vkfl9
fNWNptyDu1eF7H+wUAx4dBg4zC5zf4/E0h05Q5jDiuxGU5WGAw1UqKKlym5c
ufKJw03Fsnex8sCQU2zT2aVMSMkKX8Y/gEVjNvo2ODqDwW0KfBf33cgGFTdn
Ty2cwYZPvitv5rlVqZg7kButesmv6RQo7j+QgOc+jycn+zupdaH11AW304hG
ex5LrWtj/edZOPzjfBL+h6Oaae+ovqKcR5iPoO/ROULq2L9Ah/fMeZxskNNB
tanYhXO9cIrT2XXl0dBgnnVvzneMrc0lz1+gjFt+Sb7m41tGk3zPV50Uz/gP
u+db0OI4s+eBLVvScCibPK49u/n4LfmivpnKnZOHcmvbvuPje/cXmXVJeKF7
IvG3d1GHhJj6j2j9SOq7XtQn22JDw7akxPYt2TIQ+OWKdSSAT8aGW3LR2yud
9/x8EnRYV2l8D6y5p0L+1nzW+OpCl42bhcCqjURDSltxxghr8e2Xl3y1F8M5
/YRU5Yuhc+XXbi5hM2s4+f7dNocZUq2Eqb2uO9tkw59MtUXl8pLr+cqjjedx
ByZVE/p3Gyi+/ScVp85KIQeOu6jDq5rmv6BqEDviJomobJZo+JaOXbuvJ7ET
vNTOr8tI36etydUNT8Uv6/oJeeIKrmDZJZBvtgrF7+LQ2AM8mrFHuJyyVSz0
74BlCzfi0xn7ca0dK/BtPk6UT7QVdPdUnP15b6X+nzWMLmkh00y3jHV/2Y9t
8jWN7b3JXWG394ty2h+buWYPWgreWBKzw9LxqPfp5PeoJsb92HT/kXE+zXFT
/UjjkoTL+iWS5A8uatuDDmpvdj7BE0Zi6dM3QeJ68ahBvEp26qEK5XXiUfJ0
AZUOFnVvW+D3B61Jg7bhZPXTdWRh6/3kN81iIsw9if8i/cVGNil8/L1E1cWZ
a9lnbEO2me1s5pV/Knv14Dt5kuNn5bHeB7kqGf2EgVX3iUGv8nHVaRnkG++l
Dpz5kdD93Xq6f4EPML5/1rxMxK6g0zRPF/XWOqDfyQnkb59l2C6IiNKvh3jU
yJnTPrfnkvbH8SjsrqDv+Y8Y73sYS539yMW2+4hh4AuiK99BNBlrSJrdc9Lr
VASJX9ceT3q7WLC+kcB1bpnF9o44x344zbAzV96Td29wRfl74WbuG8j3qdtN
cYXCkdxzziPb33Nq3aXXJDuzLUGj3TBSOkDsHSnKzPWjfR4u6gjaw2CTSOYP
TcSvnQPFIaef8FJUX05TrSG3pV0q3zujqqgVfXF8oxZkbOgqMu74M9JoIsTK
sG5E2laApbZ3sDR9PanbawsJDd+Am4x2Eg/LGX5Qjae+f1xczX6Y+liOJmUq
z3WexzW611LoDfqbBvLdGPeCTG/Hq31a5pGCAkciPXkhIsNl4/4jOn/I3jy/
LtG8XyiAzjfL6itGNCnlZcERnMbTg1vSJ5X/E/Bl2VcVNripSFmjQyRo7AXi
s3IWCa9mS/SnvLA09ZGoaXgV26zdSQJbriHRMWtw4GF70bqHDx+5ZRtbvuxP
+YWQTUoPfigXMLGa4Av3rwuc703QXxTI53p5M9G7X8So1wERTc4S0KKBxv1H
4bW+50/PmusLp0C+Po1K+e2PxnCaWA/OLziV9wN8Xg9w+oMoFckYAPx3M/Bf
G0w07BwsjTgloomiqP/mhQNfdCNl/7wggW1GkPibDNYfThAa9lvP6Y6my8O0
6cq/xg3kznq+40PBfjPAPiqmZpCdcL5UfxKVr3qKiPyTBfRnsChLTsQy8/ym
leb6lsZcX3AH/bVrE8FJOz04aUAqPxL0N8ycH6LcXPOraf64dJLHyLW5iOTZ
App9SGx13JZojx0gXMJuklalFN94O1dETgf4cbt2qYILZyqFwK5cU/VLvhX4
vw/gX8LAfr+AfWTC/dPD+aJfQH8BIF+3YFEf/+N++0JLf8o2U/0js3gMp4/y
4NDQVN4A+ptWaT7/v/srWgCffEPfdzYX0OXmouarhAMvzyUn2xaR3OOYhE+s
jaWLUQLKXMuh24uUs9LdufWPrvPrIH5w4J8TwP9NAf9C7Zfah/H+0fMtBP6R
YJJP5/F9PlJg5f4ZA8h3HuQbbqrPpJnzL5b5YYaf82vda4ia9iI2tNeQ2m1v
k57d5pA1TlFYelsD7nx3wM49VEhyVXyeuYlvKefFixDfFkP8OAj+uRD8Xzz4
F6P9Pgb7WDDQeL6W/TMbzPndUZb6TLPv/Sk0f0Xzs5QnUr5def/CD/ud55nm
m8UCv6T7a+/a7CX16f7VYYkiQvB9BXU5Y+8HimRDX9QS+wI+mAXx18/etD8v
BPyzcf8b9S90f9ka0/4ZmhtPMZ8v7a84+Ye5fkTlk8mM9RmqP3/zfpKzof9P
/4z5fazW3D8zAPglB/zNY5h5/wz34/6Z18FdcCbgl2OAD0LM880QnX8qBhjn
d1L/YqnPrDfn7yNAvjcg36TmlfbPBJnmc9H629mf+nv+3X9Uqf5RaLahQPi5
Avw3Gvil+86f6zNjjbv5KP77Yu6fKetljr8nIb61MNVnZLW/zw+7DvJ1p/PX
QL5MON/mz77vx6H5sbHm+X+W+sIP+7t/mu+Tbc6P03zcMuDns25UE7u6Ar/U
0/rMZCXShanQ+GD4/mguBvCpj7k+gyz1GYi/+kr9M7R/6xzI1xfkGw3y1WxZ
yv9ZMIb7Ntw8vy7E1J+yw5w7+5/3942+vx+39H/QHAydR7UYPtcA7se5Fyl8
uIe5fybyqQo1bc3nIhcBZXkL/oCfAwGfGoaeN+Ir9GaWKLl8r8+sNPvnliBf
PtWfeynfbd0YzvuQB9ea9vcEm/T3R/T32Uf/0x8w9/t+Icv8oaP0LT58LgD+
f33+j68vAatx+/7fEipTIg2GjikhOZ33nPMOe+/jmEMIlaKrEEKXzJlfmYdI
lMwHISRxDSGcS8jcNV3hJrOLq8yz+1/7nDfie/+/+zznud3nUp/23mutz2ev
vdYSksUls6sL+96n8Kj/CiFhR4JYe9cRSQ36yAj6Iwv4fQTjz8BPUZI9Qf+u
IigwkaYCPxii4KsL+DSAr2aTIrH5qSHCvPkewqBfksUXcP5MSn8uZh8/zN9i
9/be3++fS+ansD5PrD9cjpKf2d8jWVx4xEWoNfkr33ChTiwGfT76aFWcB/py
t+Y2cf3Lhha/daPGt92JDPyZ8VNH4H8pwK9Sgb+sA37QBvBVA//33rlIvHRn
iHDsnYdwAuKbqZe1fia9lH3kluCbWmq+1X/054otlZ95/pebsC1eJbzaEC+W
dTslJefvxe069iYPKrSks6en0nN/n6Iy00egPxi/Lwb+nAL8tCzwv83Ar6YB
fxkE6xdQs0iUlw8RinM8BKd+yeJ6+P3ZHJk9U773N/s2v6fU/XjJfJLsUjmc
rJL8R4D1/r6Nzkd4s3iL2KixA46/5Un6xLwnMbrB1K/BVRpcpYzBf+F1mgn6
jemjaNAfW4DfOwJ/9gJ+inzjSQrwK9kV/AvEN/SHh7Cql7X+KELBV/pn/3D+
frq/L6n/kJX+Upb59kp+oVvrDPGYyQWvP9mFRKYb6S9LdtInmz5To/kqLUwA
HhlXgz4Gfcn0Gw/6yB30RwzwezPwZxREMfr9gYiKAV+uh2AenCxqYX/Kugjk
dKn4ljvlf+MHKuX/8pQ/Yy6pPyrBJ1vzC8tmumG7nkFk/YeetLb/FRpW/Qtt
e3gnzazWmiI8hpgnCaQH6F8n0Je5oN/8QR/JoD8Q8HsUCfzZs4eACusKMqzf
RMC3HH7OhSnf64/Yz5bZ/k4DXK7fz19J/Qz7c+dK5Qct+Q+Tkp/xz2B35bjv
vCBy4FIgHdUkn5qb3KTFL6OpPP8zMQ9rS+QWnYnR7yUJBn1eAfRvf9CXbf/U
YrS+J8Qi0B/F1QGfu6X+kvEXVsd2Rom/P8yPilPwlYof6UoO4qKyfsx+5Z7g
55so/c38AB+sn6zkP/Z0y6fLtufT4ka9aeHNZcTYqiyR37Yk6usd6PXfD9L5
787hJ6DP3wzKkmo2WSUi9WIB5S3m0TFHIc8T+EGwdb7VNiW/VVI/862+1vXH
+g+2fiwPWzLfhcUfVuds/uQmVHplzb+x/BYCfLXzA+nU4Hya1jufRjQLouZL
fQl6tQqj7h8wOtCQzl1VSBe0/oM2wHWlSg8Oir9PfCWMPA7698Z5vXneXd47
Y754db0NTgN+/3yyNb//A38p9f6gJL6lK/bB/OUpwBfVG9aP1R9x7kKkxkdw
7wnrN8sNRwA+b8B3BPBN7pVPVU8DYb1DCEIhGO1bhc3P88me17vp5N336Tbv
ZvT2AS/hw6cM/rlHgf5J46r6GIep/Na81mIV0G+9QB8x/bEt2Dpf8of8uev3
/GpJfQ87f78p+f3tsH4NII4bl7gJNVx9hLddM0T3UvhyAN99+CT8FUjl9sEE
FXEYTQMNkr2MmN8todm9yxsydkfSJVXUxC3smu7fAqTre3yr9uLC3/S75+0U
EhfHSiNAX84F/fYW9FHqJmW+kGep+Psf/etYDnY+4Itl+MB+/T+6CbFnmguF
bTLEk7C/X8E+GgK+g4DtMcvRAD6zDvCNUGOk0WNz/AASkx9Ne18pb/AJXEKP
jFpE9ixzxWEP2mhyNq/lJozer9vgc5t/MGmfeA/0+RzQvwNAXwaAfisEfYSO
g/4oAnxqxT83/L5+JfOjmN/0A3zP4Py9b+kuyOCfp4L9jgP7qAfrVx/wZQO2
Qvg4Mnw+gC+vBXwvDps/hpGIAQNolvyZHnHaQVPwJWKaMA6venBKzDntpcka
e0K7rEU1/o865cX143ZLC194ksmgzweB/jWCvjSDfkMujaz6o5N1/lGE8v7g
B/8M9n+1bbI4E4H9/t1ckDtmiHGAT6PYx0Flf9Vsfxm+HoCvAD71Q4japTed
u/0pLd9qDw27+IHMXb4Jy9VqSKKxtbBmbBzXY+BRXW+XmkLnUeWkx0lbcPH+
8vRCsz1UBfo8BvSvRV/6gH473wibQX/I263vm0ryR9/mgwE+9W43QT4L+LpY
86vhsL8i+BcZsMWCfZgYPp2yfrfhEx1M5L5BNAx8Y2D6RTo3ui71q34Ly++7
SmhughAzK17vPfA217X+VP0ChxzBI3WTlNaxJcHNouiV0CfW+wPQ50z/Mn3J
9Ntjpo9Af/QAfn8C+LPZSakfZPl9k4uAilSCvGiLaFrvgqtA/DgC/jkD/N9q
8C+OTxX7GAXnrz6H5XohJALwLVx6gw7tdIXGxLSkD+tVJ2b/RAkVXgNf+liP
Zu7R3oj5wgWm1Ob3O7cTB9vUxr6zN5K1D9fSlNc7rPcb4+6BZmhOjEz/gr50
Bf12D/RRJ9AfgSx/dK0sRsVK/sj4lZc3xosRwA/uQvxdAvGtP8SPlO1W/2d0
Af9SDPar1WMZzp8R9jcE1i8c8F1bZaR3vjQixkZZElI7gV5oBnzckdXQqCeH
eGlfl2vCz+jdS2yb3Az/vWEvmdVkr+V+iN2/sPsN45MONAT0OdO/YaAvG4N+
M4A+mpth7V+HjMCfjcBP5+pEo/spKQX4y1TgB14QfzMBQyHED/Mf4J/Lgv+b
GoplsN8AsI+FcP66w/7+CusnfW1EUu1OSCi1GeDrC/gCLD2xEErXRFRN4Hbt
e62vqmok2kSWx9yOxSTGOI8mVP2bzo1dR9n9y/1/n1D9kl30MOjzg6B/JdCX
ZEacFL+V5Y9O8BZ+L68Q0HCDVAj8LxX41RjgLyHAD9CraGqG+GaJH8w/g/9j
/iUb7NcF7GMinL/FsL/+nlnSP0mAzzge8MlKjY/cAqEwzY2xTtojDfN120Iq
Cdqyz8QwaT4OmH6MhB0fSiv7b6a9G6+mEU0H0NQyRWTQyErkYXEFvP75c7Gq
tEs4xAdZ648Q6I9dCWLI4ap4KvDTSOB/74Ff+QF/YfyAxV8W30wQP5h/7g/+
7wD4l4Fgv7+CfYzunChxsL+3/X6B33UW4DvIIaTyRa7bOCS/0jiuCPAdVsuo
zZk/Ux9VfoDw9yh7KcQQhOevbUFWR60nphmrybGrGlL0Yjr+eHyytP5BR9F3
aRWBb7hDP331OTbflEe6JuL4zCPSGeD394A/twd+yvgf41cW/gL8QAXxl8W3
LIgfTcE/zwX/dy95Ey4E+32Tfk04X74pX2ZcsA7JoYDLRYPIQA5VApwv8jXv
y3zhts0qoz2bmqfdkpikF67ygqZykmh8MU8qF1UdD8h2xOUPLZH09faJD8es
EVq86chfrnNCN6v7dO3Rx5F6NKeXMKOMszQF9NFG0B8zgd+HAH9m/JTxPwu/
Av6SAPyAxd/tEN82QvyYPXEcrl29huQ3O0Ho3/lvfdKwD9qWNTpzqPi5BonT
NAHHDmqMbjV9n1+9pwmZcc7XdKKLZvsIB+7dptHa4xU1+qstlvKeb5cIca01
Yu8BatBB64SHfCa/qdNs/UIfd92I3TM478dUO73tHL0d6N9au32k5aDf/r1l
Q/NAfwjA7xl/RpPB1wP/ywN+NRP4y0HgB6Mh/s5e6ooP/H0KNG9roULrRXpf
zqTtVG0cl/Nbqi+Z/1xTPvWdpnhSrm/wYCOXfO+8JqLsfc2VkNeakEFvNNff
HucOTxvPSSt2ch/tq3BDIytwqpMzNRurjtBWuOmvb+ZkKyTHzBMdXt2RNj5y
JKw/Outvwd4nsvxRzBA3inrHEnl/Z5q+rIYhvYm94cYIjqLEF7hK2VDpZNf5
oOnH6K25GWsOaUT5FdrHUbJO7j5bhxIG6V6276JtSpI0Jz+314Tcl30dRwf7
ej4L4uxeVOQeB533zbu7RjNvg8QN1chcWduDGvNXR27Y5QVarWecvuYvLQTd
tcPiTNwYh9ceSJyTe9NB419T1r+OvZ+06N98PyKHbiQxBaCP3HwNtvvu0Myl
rjSkvBnvvl5b6rGAA79cSanvMcJZjtf7zofz7G4joKhIARUPEJZy9sLz7gX6
a9Na6hY93cZFXgrU1H50R5MRt0lzsd0arn6VkZxr8AnuyjM7Lk1/wPd+q0Tt
BmmxvnKZdsLXxbdEz9HtcaNzC8nvfyymdxs5WuYfFavX0cKkc8TI9PnJCST3
wUxqu8XJsI06Gdo5zqBP6oWTa5GvpGNqLJ6u2o1ntUcINdUjeTSPHFcJkV6x
YqH6s2g0REiooL+0bJSjNOfwM6G9Uxhvvpuse38nnTMYnvgOb4W4+ll7NGE5
FzT7tpbXlLt5nIs9fVzbd+Eqvd/WbkL6iQdi9b+64Wb1E8nEY6BpP9SwzE9m
848s/ev+MWF2fxDj0IzKFV5Q2z7NDcc3QqwyJ5GgYW3xnpHZYuCx8sLDpRGA
rSbg7Ajr2UdEx6Kl4IpaHPA0DauvVCPrdjuTVTbHcNqAndLWT41FtSGUD9xm
0M26sI6LqZjrKxzexHlFYd/2by5pctft0c5emqq/OzdUWDHrqej3VwD2nZRI
PjVJpEIPZ4OpmrNBrp9II1h//r1jrPVHX1cRP7911BX0eZW3xXT8uKa0Xlvg
/JUmS+jIYQFddOIf227lUW45ES2sJcmH7LF53FfsYNpB0ho50WXD2tErTl3p
w8bvyOyxjcjKfenSw0oPhfDsy/qeft24t6Jek7XPwFUpd11z2LwVKPdWvdYQ
LnSs/1KMCQvC9/cuJS1CEults7MhcHB1Q1RRAjWx+dMxMZb+dSbnpZb7l7lv
nQ2q/dUMvXQz6f6PkeTwRDuMmsaAvtzPC/OQcCtxuIhaZ0jmD7uwcd84Mje2
KTXvSKGvOxTQMSn/0NSM17S4XmPD13ZFZGvRAUxC7KTIG5/5zLk3fW0GuWtU
Hgmc+ugG7fkrm/Tn6oYLW/q/Em97h2AX2+Ukam0Sbd63piEMfn6ewyyK4mXQ
370s849kpf6Ivd/dXNnZsG3MElpZE0/KraB4FD4morhGgireWfjbbal4resH
SdaoSLHRjro6T6J+Xqdpbq/T1FhvGr2OmtDMqz2oettbumxyS3ppcDniPquV
9LoeL+S2n+I7c+Qc7tm97dqH61bpd80MFe7Xeym+AHy1G64gr+6tokN31TP4
T6tiiBgyg8oegwhqCBo3e7Bl/kKhUn80kN1R2iXSX8ITyWfnABz/4IGY4Bwi
+P1VS9hJk8UIoy2eFc+TgP06GlX9N5rz+BFVbV1BC/9sSk2q6URe0prE1G5C
a3g9p29xK+ofX5lEJPSSRmwMEfrOSeI+bFyjVd1fpI+b3k0Imv5UPN0nCFeF
9XsP+C6u9jYUx72jhTNCqTG6M0Gb62B0oT9GRxKJWrk/XaPcr7H7+xD2ftyj
SAxIHiIYJ3gI1Tsli+OBX4rOArkQy9P2+BCttD2bxlTzoxGZBwk6Z0vkafOx
sd504td4Gh2lKaDj5lSj7ws2YzTprVj/94/8kA1TtNVfTdf369xOaHPsgRh5
KwBfhPM3CvZ3OKzfe8AXc605NbdxI2gRcEU5HBfuSCRZFb/Pd7mk4GP3959U
RaKp7lABZXkIMuiaXoAvWJmvMZW97QwHfWkGbeHXkqC1Q+D7fZXk87bEfKMp
rRR+mnqvS6GHj6cTORN4sDRc/Fvfi3/VsIv+THALgYD/i77ZDb+dmEjqgX00
gvPXFvYXzQylqC3g83kgoXNh2Ljxe35rudLfx7GkP1elIvH9miGCuZm1Pxd7
33UU1m++8v6eaR9WR4F4wdrf29hTQpuG4MKsg6T2wRU05XYuPfKpCU2PfYnl
JoESCpkuoD+66R3q2gpfLx8WD4N/dgD/9wb8y19gvyFgH+z8WfaXrd/ZMGxa
C/tb8Xv90fWS9Usv1d8s0Hp/b1TmQ+wsdf/8TZ+z/ujXQV/a2WO5Z0sSoPGj
6dGP6dY346h/01HEtBxh5EhEZBZ4FFFBlz98nnhWaowrQ/wYD/5ZA/4vDPzL
dbBfi32w8zc13LJ+6lL913IAX+uS+p7aP+YX2P2YqlR/lR/m95R6H2sWBWI8
B+talE2//ptJi1JfEtOGBIzOPRGRY0XBOtvezIlv7kh7If6aIb7NgvixGvwz
838q5l/qg/2e64+NGYkkAPAtVOpnWP6I3e/6l54/Y7LmF0rqZ0reZ5f0R/p5
/gL7b9Z3j9WfDWx0iL4J1tKD9g4EecdJqDhTyc9kWubPbAb+UgX4QSHE3zCI
bwkQP2Tmn1mPvUPgXw4nksxS+RlW/9EL8KXC+rWpbe3vaMEXYl0/1t8sY8r3
+TM/9L/6KT/D9LkAn6iRPJ2xRk/cZoA+imH5mV4QLy382VI/cxH4VSTwFwL8
wBJ/S+bP7LHOn1GXqk9h+aNAwJcO69etVpFI3ij1R0p9T6ySv/z/1vfM+LF/
0xElP9MO9O8ANn+G9TeTWX5mOJvTycup1vqZkv5m74G/GBk/YPH3YIwlflxX
8C1T+od1Bnz3wP/dqVkk/vYC8HWx1vcYlffje5T1+2F+t/zj/pasX65yfzAW
/t4AOB/VHiWJw8az+hkHHiU85OUmTcRx/9aw1M/MVupnGL9i9dNIA/wA4i+L
b3uU/BarjzIAvkmAr3udInHjoSHClvYeQkt/a/4oqlR+4Yf6o5L6slL9r0r6
++xT8jMP2f2LIVksiqouXEqx1s8E7E8Q74M+CgX9YV77G05j/Pmn/Mz7ntb4
G6X011MBvnKAL7lqkTj97hChbDsPIRvWz6eXNb/A3vuXzN/64f7U+8f5Lux+
9UCp97vsfvcB/J5/TnMRnl76wjccqxPtxhmkKaAvl4F+GwX6SPWXDZWB35uB
PxtPTCABwP+MwK8Yf0kDfrDGztr/9ACcPyObf9RuqEBjPYSV4cniJ/j+R5X6
t9LzP36oT1HyqyX1KWz+Aqu38Sq53wU/5XbWTTj/TCWEbowX37idko6CPt8P
+reMXUu6FPRbIegjc2gsMQG/zwP+nAD8tDbwv1rgv1cDfwkDfvAR4kcCy89s
GyKovD2E1WAf/eD81FfqV7N/vn/+yb+Unk+SAF9XKj3fJcJNuH68uTB2zhZR
3cQBX7nlSeqNek82gz6fBfq3oHIZAwL9xvRRLOgPO+D3jD/XBH4aAvzPCPxq
bs0A+DlF1vxHgoeg7ZMs/qHUrx5Tzt+3/MJP9T3GUv3DDpa6n/yW/zBa6ysm
t88Qsze64H25XciWnUb6cflO+nXLZ5qbfZUWjxlK80bXoGmg35g+2gr64xzw
+1jgzxHAT+XlFBsfPhBRwBDLfDWj0j+xlRLfSvoT/pA/9/qxf2JJ/QJbP1TS
3wzsA8lKfy5jhlhuhhtuExhEmn/tSR3Cr9ArJz7TyM07qXymFUUHRhDjQB3Z
BfqyIui3INBHZ0F/mBm/nwz8OQT4adMQAcVY35ew/CibU7W/1M/+n/gW92N+
mp3TPVNKzZ/xV/IzDF9ba/6j9vwgcv1qII0g+TRryQ0aoI+i5t8+EHkAIai8
N5Ef3iVM/5pAX7rVDyeRoI+QHeiPhsDvixsKqHxtS/x1DLHyA5bfOh32H/WD
Db/nP0rux5l//lZ/FGw9f/JVpf6IWOs/jIDPPR/wBefDmYVPeBBFqwYSlPEn
NravS9TTmlFhzAb6EPR5VAUzfjb4leQ3NVtE50AfFe/jUZqz8LmN1T8vVupr
S8+nQ6X9s+L/3k/53h+Tnb8FJfmtDuBHL7kJWYe+52cYPrVyPx7TK58a2f1p
yxCCxkRg9DIHGzWVaexvudR+HDKYy4dKh67VlgwaLLa8Ul5A4U58xHok2KmW
ihda2uJ5EH9X/7S/3+qPfuovytaXveNhfKcn4CNK/zXzfjdBdbO58Mlo7b/G
8kcNlfxMoXI/bmwZTNBlDqPUUKwakkzUh5Npj8qf6PXbv9ALK+cLvos5oZ02
gL+2K1yvqrqVL7NwuCh0/yAdAf3B+P3ksJ/mD8780b+8V/CxP3MQvk5ldeFw
PlowHnTQTcj9u7nwuXOG6Krk37wA3xnl/l6+FUjNDQHf0BYYbeawsaAviekQ
RWtcK2+IPrOI4sA5ROgwVq/uXE7vdCJa577Lhd90pZwY0iZDWgf6bSDoI3/Q
H4jVH08txV+8f+QHJfWNLN6wunUD4OvbOVlc7eAuqB80FyrD/s6H/a2v4GP5
oyssPwP4kDvgG++DkZMPliuEELlhb7rw41Pa99ouanpwjbjy4/Cncc21vx79
xIVsVeuTJ3QUloM+fw369wvoyxjQb46gj5j+sPD7Wcr+lsoPltQ3Wnqksv6n
gO8fOMfP8sA+sI8wlmaIOsAXXSq/lQufzJuArzLgMzXHiDbHxrrBxNQVbMbr
Jviei9TLpi7N7HwB58/2lRauDOOGjW2ti5g6mh/+ordYdNAeB4M+/1RjEs0F
fRkB+s3M9BHTH4zfz/lev1pSA26a8r0/YSjoVBPsr/y+uSCDf54G588T8NUA
fMcA23X4mBi+coCvsjdGOz2BNwQRs0MQXdb6Bj3T9wq1ndSSFlSpTsxPF0n9
rp8S8r3dtQmui/UN2q4SauZGS5vGf8XxsU1pN9Dn3qB/LfpyHei3tqCPAKcM
/D5ByR/9Hva9/lJW8vu5GYDPw0eQYX/NsH4hgK8O4Dun4EO3lPWrBPgCVVi+
2pWoJwdS1cZ8GnThGt17uxUdZ9+YGPsdAB9YXUyJacqfbbBNO2LgYD5LGyuG
V9Lih+t2kP07Uiz3B3mgz42gf5m+RBuHWPSRH+gPVn+mB3zzS62fJf4y/5wO
/gUDvjhrftAD8O1U7DcC8Mnuyv7C+hmvdSXF9oE0pGM+3dwsn7Y/24M27CER
41Lg45UwxKPhPHLU6zoHJ+reDrURXmo/i8OepuHsRk70c4cCGlBvGpVV0wkC
fW7Rv6AvmX5j/TkiQH+MBn7fwqlUfajsIqBClSADP1BtcMGxEN/uQvyIUvJb
LH+JGgG+sWAfLZtjGfZXBetnBHz9W+ZT3ceedKS6CzEGgCb0joJ4vhb4eAro
hWRNmReLdIvkSKFZywipzpVqhN1fsfuhQtSEsvsNud50Ugj6vAbo3yzQl69A
v70HfZQO+uPOJdC0j5NAf1QXkPyFR2ut+aMU4AftIf7GsPjG6rfAP6OWin+p
4YPNYB/s/LH93QjrpwJ8c090IVdew5l/PVuZE5EH+EwcQrO5qe5jdPPeDBDG
/dVfWr7bmZxy6kqzMl5T89UelN2/qBtPo47hp2ki6PM9oH+/gr5MAv02JO6G
lF5TqT+SgT9P1okm11OS8JcnSQX+UhP4QSbrPwnxzRI/LnEW/8f8ixnsdy7Y
RyCcv96wv91g/Q6+sceFIfGgMf8CfF9ZfkaDkJrdR6sXtpuuzVfbC/dGOkr9
bY7h4sbvyNt6jQ3s/srV6zkdrimg9dal0D2fmtBzTUaRCaB/GzWJk6Rojehd
Tulfl7BCMI8ySOnAT2sD/2P8Kg/4i4UfrBxojW+bQq3+GfyfK/gXZr8bwD68
4Pxt64rwCFi/fXGAz1wV9FY6h+TjHDKOYhg1057e5bYcKNRX2f9MyO23U2o1
thG53K6IzJ/ckn7FreiYOdVoxvF0cjf2Jd6QjLDq/BOxizlTWNoimN9rHgnf
7xEvZyWIxcDvZwN/zgJ+WrzFyq8Yf2H8AL3KwTLENxnix2TwzyHg/9zAvySB
/Q4C+/D3jBJvcDn8lbls/Vw5VGinRe/nAb7hPqAPNR8iVmq4roG622f68OPu
Nhbr7EuXdEUH8KzB5UhsfGVyumAzrpapxq4+gVLMJyz+aawoxHRM1z/acEZ3
e/8gXuabiGm7jkgpoD/eV2gJseiqhZ8y/sf4FeMvjB94QfytDfHtF4gfDuCf
a1etTo5EHJCmVsbixsI1/KteZ3VTy/bnkGNnDnV4x6kcTnDP4lM1yFjg++QV
0Xgd2eWrmjZbdyc8hM8o81CIDrWTTsW1kuYu7iWJ8luxGj9c3LxoupCqFfnE
nWbdRN0G7ZFGw/Qvd/USjpVxlh6BftsE+iiF6Q/g945jh1Ij8FMz8D8j8CsZ
+Etb4AdREH+3QHz72ukCPvB8kST7VBe58b/yx/+M111fYK/xmiFw6m1qrm7A
BM7phQ1XY6O9pvG9ZlyUkKVOTU/0HXN/LpeynOhee1/S31r3ma/0Qi+s/D1E
+FzwkV8fHswfuB2o921gr2uwyUEb+yVam1w0T9/1yBSB7vGRToK+rAn67Tro
o88Lrlv4vTlSZ+GnRuB/5YBf5QF/kYAflIP4mzndVzKXyRVY/rfP9G666MiT
mpxlFzTDzWrO3qkit+fvJpqoxM++jbXruZeTB3Hq2su5KmsHcTO5PM7wVz/u
XvAhztXZxJ2c0oHLSm6p6bPiLFcrvZK+yqlTfK07PcVNmbule7sf4tW+f5Cs
Tzso6z/O+tehd27U2DuWGPd2ppNBf5xuam9wXMbRmUPf4rUTf5V+ydkqzJzM
etQv1FrzR+wuJ0e3OHSCPiTWlUcd4fP4mX7rhdO6iBl+WtOM2b6mD601M4+M
514KdbiACbEcablG45D4VXPhVX3Ni2FO3JkQV83uqm203bZh/ZQ2FQT5ykpx
zA4H/PBeK2K/uhW9NO4C1V0VDXMvPbP2t2D1R6Avi/NNNNfV1/DxyB26tIEb
zVh5CV9v3UZKaxwnFE6ZrNwzpeos83BlZyHN/bhQ3Ku1iPz9RflIA/FyeD3B
68kO/boLxVpVfGcuctMGzZd3FTi5XXvu1pR13PvJwzk6wYObmbdBE71vsLbG
lD76RFpXuBx+QPzjRQu84N+pJOefGZQ8rmTwo80N7//Iscw/svTf+DTJkj8a
s9nJcAX022qnGfT5rnDSfp8N7mkMF20fL+TP+PwO2BL0SP6DRzFIRFXKSbXb
bpJMm92xuZYnjh1YHp8rqCgl5a8Wkv58on8QXUln2zpMEyKe1YRVnKhJafLI
d8zd9Zqe2rrclX6R2jlVpukjijhhYYuzYpkUit+dXkgi1iXQlt2rG673rWkw
3UmhaPIpy/wj1h+Eve9k+twV9O9r0JduJ5NIWMt2WB59UlR1chPsyHx9pUnt
Ye2Wg17YLaIZOyU5YguW3VuSpn9uILM+7yZZtkvI1hHb8MYZnaSMT6uF8HuZ
+hPOWu3z3nW5zNAWvjG4NldjVFfN3PurtAl75ulT7dsJSb/dElfeaI8rTown
0pgl1N7G2SAHORsCOiZSuV8S6LZFWP4rDptY/7qO1vxRDdDnC8Y3pUMWfMBJ
2+MkNPGSgFY35QOKjvLzezcW0ep+khzbG6vyPInXvvI0pUkUPfNwLQ2R99L5
fDztG/eJ1InZhtvDevZoX0+g7Y7p1P67fF9eAZ9Uda2mSttEbdMKi/Q+mZ2E
wlUPxCG3uuHdDRJJx9wlNMPZ2ZADn5SzS6hpO8sfjcRo5WiI/0uJKdBaf8Ty
R4G6mTTpUyRZudoOe9aZIKIRubzJp4LgHRgnzpIuSuapr3DEpAMkl29Pzc32
UNteT2jIqR00L3Elfb3mBk0BnPdhPdvCvte42UC8W/m5PuJ9tvpcsppbeG6i
NuBfWc/HtxPOpT0QZ3sG4MpjEsnDJon0Wk9nA4E1LBzHamvjCbobidGN4biw
yDr/iN1fbajsbEiDtX7vG0/ewdnQ9D8m1r7dREj5p6aQ9SJJXBlhg5ueVxP0
eyMa130F7Xv0EU0Ztoe+j+hATZF5RPa/Tm4BzkhYz3TY98d1gLsF+Yurt7ny
seVuaja9idFekAboU//lhBOnb4k7YP16AD4nmkirHHU22A6obshMTaBmAfBN
7INR9WgsFyYS18rf649W2iXS2PBEoqkZgNV3H4gRbiGCuaC2cKt9shgN+tr8
iSeza/J0kMsBGhZ9lsZOn0TlNDsqD2pO5Pd3sQw4LesJ+87D+eyU5o7lqNZi
ZDs3fpJwkSMVRP0Tj7pChudZcR+cvx2wv49h/coCvug/qhkcq8yicgeZoPdd
MPoTuO7lRGJS3renlO5vtq0H3uxSJAa+GyIYN1vvd8cFW/vL35oMfD0Y9O8m
4O5fMJVPTCFy0n6MZuuwGXAWw3o6wr6z8zkR7Ah12CShGseF6B2T9SsuO+pH
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
VhtM9+sOcBxPBLsbhOeqaO0P3SKxgJ9jlf0zOwFfNVL2z9D4e6uhn2RsaN4/
IyeA/sB+l1eaX5cT/N38q+/2x1vkM9Uw51fa79JdqS/Q+kzPNKHGNkfp/bl+
eMJ+HRm/9iB5s7OC9DXeIKWxYcSwyDzfbAbgZ4pPCwD/yYCvDMp8M/np7wKK
Bf8C968I9FcE9ycFfk/hfHN/VKri/77sT6lU37LkT88p+WeDRT7fSvUP3zSh
QbSzNMY/AA9U5ptdAn6u33WQhFeab0bnH7wFfL8J8LMr4FMd4D95szLfrHqQ
af4k7SvJDzTXL4/M/3b+2vf1o8r9b2eVO2CwnG+PSu+ffb/mJ3+/4W/Kv7gp
/TMGpX9GVvpn/IEfpQH/UAO+D7XUZxzmAPdtx6Nr5vlmRqU/OaNS/Pjin+Vv
87vPFPlOVaq/mfKTXUE+p6/yocXm+ged7zNL2R9P8y+I5jeiCyTKz/XAf4uA
X16d+17a/PCa5POrlWQfd05Ai67xKLWAQ9cb8REUv4B8Ad/Vp8vnf9f/Fv21
fp6q/Dt0HukFS30LcJr82JmPYJT9OMr8MHvlffszS31mRCDwXk5CTKikOxWH
U4tXk+2F9bVVjk8V2wN/q9MnVKjatBmPYr04XVQNvrRineCn1LdOzP86H/Ob
/S7K/MnK8+uuBZv7U07Af+dP5RsEcRLkK+rmxS9Q3t+XLDfLZ1Tet+to/o/m
1wZ2lFAOnd07DJecCyEvcv8hGXW2klWd0viHLgl8Z+st3DqreI287Cxn22aJ
oLpeVeoH+JTOa7T05xkr37//qB/lK+8PpoJ81P4nwj1Gn5x5j35efOP+acIe
pX/GoVJ/BaL1mb8DMLrqIaEsL9B5IPYTAsilVndI9RWXyfxp9kTVN1dz6Mw2
za2Db9V/64dwmo2M8Pf+26IN4PuLgJ97VsIvqDI+kL+tX1rq03NBvqkg3z9w
vpOcXfi7Lb341l3ShOYg3+tK+stW6h9yIa0vtAF/1EjSHfDHJff9SfieYhJ+
4iZxH6IjKx3q4gUnUlQnw66rbvqkaVq1PsSvAf7W5odauDvwj8GA78P15vnF
38xfizbXB5Eyn8vSv0rtox7IVwdw7g5HF17u4cU3HJAmLAb5AkF/9UG+IyDb
JaW+gNJAvqDmEkr9RZSd3DGqNYj4eRSTMbpiMo4dTJ5oRbzpz0LRr01NFZlz
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
LD5esF4wPqjL1z8W8qW+Zf4YWLntZBbJd+mcR/iU+JQeGcDYeNowu4bnMdaG
DT5ElcPc2H+QUQ3uwA6St/o8c77vU76vBjPaOF41c2uExukeww+LPyF0H1tN
6vrJFj+5UJfMiDtGjj9qp9XdRFr7Vh9IUm9JOy3iPRmp9SDquNcSN2eymNUy
jecmH9ecfh6tulsosPtWT1DvCC7RsKttIS5d5dG63UJ2tcGis+tosSS8mzhq
YIyw8JDAn3u7VdNHvKgKwhNYtCuOQU3KmUZdvZlB448x7XenM+c7xjFOQS2Y
4kY/qkav26UZJkXzKdeaiJFomXQhIQmXh08hzrk1tYa09lr7lo9I+K4MEi7b
as/d9NbW+vUoqaKpQozVjdJh365ip+YJfEj2Vo1GPKOq2fW5OudpNOc2+yHf
La+KaKyaKZY/mCe1emGLz09vhsve1MRnUF8ps0FdMbfZXN66aJPGuGAQ6Lou
+O+x7PLtLVinjRy7t/Uktgw5s79u2ajympStuXBnC9/8WQ9xDjFKmR5VSOqC
o2TxPG9tq4c1tLGbw0l4vTHEsONnYnggaq0/viH7WwQS/QdfLI99K3ZhRwp2
BZs5G7ZMLQ88pHnj6czfOhwmdBtiEBPm7ZZeLByIu9f/gB2WdiOJU6YQfKM3
camXhx1TEqTcAdXFYVXa8yUFtTVIToWzX8TwK2OZSVlv2ImRG9nVyYtUaXmn
NP/s3MM/bB8i7j1ULDlWcya7zt8nNv9ibVLhZaJL70gMeisS2jGFtIp10zqN
qKsduX0Zsc9ejHW/qiQ0I0eY0cWZJx1jNfoLAZxhQga/LbJMyBphL42c1RRr
ztmQrD4yOXuxiJTPv0O8Gx4jtmN/J8n74oh3nRT8uX8LqUfUEEHuz9Nd4rQP
gG16piobU20m26XGT6oN+dmagqV7+Im548SIsieSsYsbkQ79RozGjtpb8TuI
8d1jLN8/hOUVy4n7ybraWw5u2hWFm0lSQD7Wvz0goc2ATeSTfFGTDpy8O59D
Kxhh0JJFYu+IOGlMTiSu011L7jU7QtInAx73WEj8ptoSo/waW4/fSFqpc8iF
BQ9wauZCKZ2cFdCjSxwyLlNTOy/RNWCPzp+muv5mtybixRaeeISIfUG+jhvb
kAPHXxGP/h7aIG4d6G4XLhm2FhsDRxC/G2UkbRqvjb55nkz0cSAlBXUw6n0W
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
O/UPfQZsVLwH+5KVCOngc3e66hU/+nPABvr45WjaOKUJPW7lUjrK5Xev+mPa
UHGdr3gZb4RQp24z9KmpY+gVG7ZTfOAAelt+FmXtOV3NZkzmonwmCxvyG0th
W/vheODnycB/Cb/MBP4WD/yoH/CPSYDvHwJ+dgJ8ugLw34j4FD4zTcHZVpvK
/P0tWtZlDLTZxkQaGcbDZ3va1JcS1af3rD+kvL+lLr1zopY2Wtaj9KsyvMIH
7qUUXQZRCvtLXp/GKagdw65RPbO+U6Wrd1EHfLvRLR0a0MnuA1TSYp7LpnyE
bGQFvsvhkMKWGsLPw4H/3gB+GQ38jfCjaOAfRsD3VZ9dFM4UxvBZl2pzzauP
YxrujFU17NdHts1UIwrrlqgkNVwI/UMh/TaKxJ59AktfOcTTC09+pSibSVRQ
Dq/sXbcOrU938Fpd3pYaX2UNlRFlTS3eFq3SWGYw3eYu4erbOgnGqLGi5c6+
0qj7D6TQEh/smBeIQ1eH4wbDq+MRW8ZIU0fOEJ9jF8FyVAznt+cwc/jREVV2
XiJdc6S7Whq+m+m63pZLsPfmeyaIwvOWu4QV/pJ4KDZRTLO+LdyRTvFT9gzh
LjlmML53zqi0caNoFPSFQkXesMZr6eKQ/vTzkQzlc3sQVc5Mo9L9r9FXIg6r
/fBEdubbV9ynpQOEaKvzYlbyG2n1i2i8UX8NP7i5RFOvTQn2XhyHLf2/SyPf
VpP8plUV0ZPjkLdpbnXvCKaN4qXKK6NIXVI/kO2w+AiXmVdFGAb4rzj4q9hy
bi8pseMZqXZitjTac5JU8jFcTJnYRBhcEMlJixIYPbtWhYxDaKQl5+EtfXnq
X3S/mgOo0Jv51MwzgSqHMRwTEGXBuW9czN9+bhDG57wWuaxWeAD7EMcNH615
3r6bJjhnoIZpVI4PfAjBD5evk5LdY4Hj+wto2hsOlfdh40fnq708Upm8i7W4
RRf78K9fxAj9wneLHQCfbnfzwo1+j8JJ11PwjSpumuqOQ/DhIZekTzPWivrT
FsK2C004NKka+NUh2vzuQ0E/93Gh/UeeoKytnVSlXTjm7sWW3JVmt3l/xlcc
OWqgpLnJ4pvrLTXubShNcJKdxkbdSuM3sq3Gzu0otimsjnd1rCbpx2YLKDEA
MNUZiClDmfSZXdjkzelcePlLPmNedXG4RT2JPmeDFwB+tlz4HQeVZWNjxDJ8
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
GXv6/8UcjNjG1n6by31uNpm/V3syX/EulxvTdxtbUCYwkyUvze1JVUzzhoWc
64xJQrL0SGTnt5W5SR3IdbccUjTwHKkM6k50LRfIuumPJH1clFx5tjexXnWH
DBmUTBpPuSqHa9ZIWTc8RKpXGk/p7rN5M+5qliYfpOf8cMbabzG4zYYp+BSz
AI+M/huX1tfhftcplLM8EU102IRXTMHMvjub2b+u5HJ+tSbz8ZfC+D3bcjn7
7ttY+81jGC88V+PbvSO7/NwnLrXbYiGd+yqu6yLKHVp4k7LHRUT1Tw4pv9GB
6Md2lCldvESd6iir3rqRlIt5pOLeIbI52IXkUzZyvE2mSF13FaigaNDRaUyz
9knY13UB0l2dhanEeDyhPsZNzH3ww1nZ6HuTH2jz2mNoUmM/PHDnbQ1bPIHV
nM7g6GeT+J7vwviWDQ5x3fals60KhzAzkm9oguIj2D6xbvycF7nC34K9ZPGJ
yKW+3clj6SbJOrSehJvWI9qLZjK1iJEo+FkHnytfL4ffL4HvO/GRyHPhz+le
5oJ9bsCRMw13EdP9mzBPFwLzjljI6ZEHP2tKR56Omc097tKRvXRou+bD5X9R
3r5j2LxfKtOsjguXNKIzv73dGH7O7RzOj93GjrTtzyT6FGnOvExi3bqM4Bd+
qBYOgE507Bsps6C7KdtbRD1lDVHuW3SjTxryW8o9W1rWEVm5t1waWkFy/FaT
53Ouy4m+GyWxkSRS1FF4xo1gDfUMRW1m+1Re58JVN/i0p1sF/Vki7tkgiNr2
sYK0WuTT96Szg48e04xfNhu3iNuuSfrRik16wHJjGvTgXvw7j31vS5jZdxM1
05ZPY3dJI3j/Z7bi3cvLpDTpoBydM4sk9akg1KDVpDz7uqy8V2x4/3nbeEl5
n1xn40uCQi8QR9MDJNuuLdFHWckjizNEi73tBEobD/b5sZQulKOy8vjAPreF
r1P0om7SAqnEz0xObEHJOyN8pT6UtbhvxXz+0+dNbMNt3fFYzz24V945Tfbo
XMbr0kkm4eFLTR91ew1/wJ0dvtmNf/W9WngN9m0Yf01W+n7ETK8g4dNnk6CF
eTK1NammP+GltpLSr1D/UzL0L/zqfJhEHGTInodq2bX8tahvEyGoLK6CfXU5
qrwtT4VMEKiTq0R7Zr2krRonu94zI+c3S2RaoSe5W69AtjFNlvKq64knUtU8
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
/S6pl7HPTEcBjSRYukdBmfZj0vh6MFg+PQr7Wv1BFsuSzcfy4OPCrzBrkS1a
kn8GhpY5gUuvJHK1xyDWNYHjd+D5bRWej2Lw/OH59/4ZwHx6FfOfCvPVIswv
nTAffH1lLJTuO8FpbpPYQakdmI6lhyjHxlLkn9xGWr/Jl/35DEV9P04wXltX
GaHEWaJSnyE5AJG6n5z2QQt0Y7SQ9alYUuX0A27d+gatPzeSX/d0BzN9M2RR
bA7FHXPBIXoLerFyHZrWNgm9rt3AMG07OMpwopCC57eneD4yw/OHHeb7XZif
WzGfxmL+W4f5qg/mF93HqdyngVbsg6A4evlFGWWKHiD7EVfIs32vQGa8l7p3
4fcZl/IQEAaLcO3UZ5pWTsT159AcH4o+OwTDo9O/ILPtGvgHL4MRnUyRrHYx
mbpvtowdOAMauY4kU9MVQq40gc/3aNA9WUTeCltCF6zYzuobzuAj8Xypj+e3
RDwfJeD5oyPme2PMzyXMQWGrbT5v1xbNVa43Yk/MC6K3bj8o91vjiSr77ITK
UhlqifoIUeZ6WFMUEFkdscaXZHMPUX1GCETXOvAkVbA7NgpdKNgLe0e0g1J/
EUkcSCDd9+SBR6QrSk18Ax51ndCscSdg2u3N6NKi7WiD1l1w899F/rfJmnos
H8kcKrPhcvD8uwbPl0/w/DYDz0eOeP7Yifn+ym4HPiR2IEc1P2Wcr7vTWhuC
5D2o/VC/g0bvtiWCfHchnA+aCrsGHQQiYwwQcw+CccU8CPTG66ywcooZlwbX
lfpIr2orsvTfB+cPfwPlcl6We0gf9f1ujRY7iajsQhM0uVyCBYn4/6/uBxk3
qS+ENdrC05YbMMLjBLJdWUzR244xKXg+vxAVy0fi+XICnt8O97PnNetZzv3V
RpbusoK5mmhEn7QZKi+2zwDr19Gk//qZoAqslRncrAUdg2wI0q6G6nFf4FiY
BfIdzIDngH4Q0H4GlPe3yhRlWfDzWhBa2K0ODDw7o+zrt8DCYyRqeOqCjIt/
QOKvu5BQ1wWVNKaRh07UgP1SF1n9jHhS2pxOKk7ecVJ5laCs3d+p8LuJTI1v
A9u/10Hu0cN29nb7CrZeI4zZN3E/rTd7FdU6oxlFt8aT1Vp6ZCSjBNuzyYCu
eCD91afI980kajbyQ7a+eWSGjSFpf9IUyo4eIqvqnoPwqSPyHtpA/vymQFNn
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
wizp82tdZ2ujZKl5CS1ZS0FStcEL6ebAG1JEgqaUlF8jVFts4Ym6dpbIsmcI
wub32Ydt7yoIHRILY17tQDeI/fLavTxju3USF+tpI4Rif96P/U/tL9a4f9tx
f9zF+y8bry+P67cX63s13Vgg1n/miOAzLEH4ML/fhWJRzyi9N3PmxZrCt5Yh
4sLTw6X7H8qkBo1Gydg/SPLXKhCNOxJS1rc4qfC8njPle0jK0aoTJx9JEdrU
zx9NUZ8fbf/7fQECeRpsB/eduqhk6lVESNr08KaNrMX3UL6lyEJcgfOjFPuz
LvY/tb+ocP+SuD964v0Xjde3Ftfv2Wasrx7rU05k1HdZExkvGWViDKfb10ho
0vEV3QfNlPK1X0sxS8olay03ibBdKCrLgsX6Mi/J0eyVVPWrTOqa5iI1GwwQ
Tz8u5hkvCv899fkR9k9CfedCKkmcQ1A6rBt6k+knH2eLmPviWO7Gj+5CZ5y/
pTjf1PeoqP1ZC/vfdewv1bh/d+D+yMP7z/baB67HXHX9JuG/uYQmYl4yqTkx
3JjLRsLSoVNEhfk8qbq1TarMyZWIvtaSspkWVXIQ63WtpTK3s9L4N9+lyJML
pNGhO0XXmSuEy+1GfGj48r/nR0HyP58FeQNRoIuKoqJQ1pkKKmKFARtJNHFH
Mb8A5oMxOH+1cb5NwfkxA/tzBPY/OfaXX7h/+757x7UR2WxeZ/X6rqCJ+pcM
cS6Gk7C+FaOmiIuoeVJLWrs07fJpSbmlXVQM1RSJ8d+F+nc1ourbLsm/Usf5
gukpadW97+I2syeCjftufj9pyuVaqp8/ilDX8M/3scvWIkKWAQPvF0KLbh2t
ONXEhs06zS/AfNWE+WUT5oM2nL8LcL5dxvnRC/vzi1hCuFPUyF2IzmLftHgz
bnkhNGH9ilGejeH+VdcP68vF+prT2yXfo6clVc53kch8KBCfigTr+fGicmSg
pGx9I008ek/qtHqItE6vv6gV+4h/ZhvIlTkVMbVluJeVXeWEkkOEdXcgUlZg
zmCQaRLIJ0Zk0sH/7mO917nzOzD/qZ+XT8b8ImA+iMP564nzbcr60/xCtzNc
b+x/fWaMYHpbzqJfdsf9kRTD6RcYCQFYXybW1yWjXUo9gus3E+vzvSMQBsmC
wm+X2FzmJ+naP5aac6uk8Jte0mxyrLjJQV+4YxTLwS8NdshtkX4d7S4nFMeA
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
bXiRbGFZtWzfsIuya0vsZVsaVkhFrw/xP0VnOdfknazKGlZytmMXo7u1Fs33
PKBNN6SKK8cas2fH+XPaLgv4aS9NpDeX35ZOmCcs1jf1kub7fuWDKC2+z9zj
7KWeNpIvI9YySzO60ooB7kg5rxDWjjtA+SAbCpbtg8kFU2HUlR+wLGUzHnk4
Fuc7WTMa7BDJ5JB29kbAWn6x0N8f+oWypQK+526XZS4rvGSWlsnS32on+Jzf
Ss7CMIdVqI2SUO+VTOm7RXRN14vM8llrJAFzXrDvU3vwAxaLpFer+8i0Du+V
hfmryaf9qJU1GiTKJv42k+Vyg6VR32q5zT3HsaEr88SU+2OaCjvR+Y6kqHP9
3cLfg5rqLTAoJB3yQ9zRff0ENBLvoPtdyhCX18ewsQJ/ywR+zBTm76fQ3wNC
/bwEfF+m/ZbqN/aSDrnchafiS1iqY5KEcr7KUClZdAOC+EG6Ciuzj+dOpp3j
H/EXpcb6ZbKw3PFyzbid8uIubk7tY7PlcSnu8skJx2VPNbdIy/T68lPdCtlP
P+0klOEGhnL+8t87nANw7EMHDOwyDVjGEU/He6FdeTl+I8eZyQcLJOq3orht
3Zp5fYG/7wR+EGH+qKX2sjFC/QoEfDp6A/jdGc//fU9Z8ZKhqHya+jhHrIyU
s8u3NnLx6a7SeAd/mcngwfLQ8JPylHxjJ+ceak5jfnZ38tx5Vx70dob8nnup
zGd3mtRuTF/+lF48e+hUReceEppSeHWef4RUjhfORQ08mn4CSs2dcIuSQqcZ
S+nf+7LE6+nlbD8jPd5N0L93rd1ktwX+SgR+uD1fIR0o9Hf31S78nezn7PKA
9RKKahPwZdBUfLA4Z6cvazpKl1d83Ch1G1chq/22Xn7jCeXUcKlafsAxRh59
bZ887EKHfKWySl533l7eFDBd1v+iq3R2ciPH/XBm965YIqZMR9AU9VzQJxFS
FuoYVb0d9rsWYO/PZ2BipBlqqe1kEpt3StqjZ3JHBP/4IeiznqB/noK+WAr8
3f3mEN/rl5Kj40pYY9MlklP/vEd9gKacZ4sbdvuyOSo9eZvo7dL+M57K/pjt
kacnd3NS/k2XK1Z2k7f8NZdb4GH5rHBtpwcz9sjtF7+TvX54S3osNVHgoxan
N99bklk0j6ECaKHPvwlVoIcWN9Kw4gKDTjYLkRu1GksOPsUExUCxqlo3tqY4
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
cC03b7HUhHMS5ceN4gZPKybg0XWsehxO/3rBiC3F7ZI6diZnvnwtH/+ZlT6j
1GVR8bekQ+47yYyl2dKHN3tK9SfH8BbdZ3FpvT5J7GttxW6TTWlF0SdHaqku
UIV2/6y9LW6kiww9WTC42V/Q/28wY+N0PDzfHxONymnZsiLxh4P+LMWf5/YL
81cl9NdNqN8gmzx+VJaU367twj0p12Yp5SExRQ1lKAtjWnFwJa3kYsX7noxk
K3KaOI0klDZetZG9Y6tkqrqsXC+2j1wlUk8+RT9PFnfJVHbUboh0sc4z7taY
Eax1rUJcVMTTivU/CeXXeea5B1CaBTBFtwa+5wVik0SBYckZsHmZsGZijiK+
e8IYrMmRyIb35bp0E/GFAj/62X3lR6Qn8pOOXeD09F24ecCy6991vqc8g6Ea
9GhKuZTO5hLFbxRL2W025ryn/1bp2RXlsqtjZ8sD5lTLQ29ZOdmcKpe3li2T
73p/T2aYai07XSaS1s55yU2c5c4GW68VH/3pQZd+XUWoXX0JZXMdFKsNMVY6
H+32OuLpwLdQa6SEpE01RMPxDB1XsltcfYBjFRPiubuRI/jmvjN5J7UJ/PKd
+Rwv9De1Tpt9pN4ofnVjEfPPvivFStq5NUE8T3s1m2pgz+tqFUo1u/2Ule84
IT+wQtOpyrRYXnGpXC7f/k3ewm+Qe6fclilW3JA2hF7gZ5yK59ZzKuyzN7TY
6gDSTqcPwcSih+DdRRVHfPFDy+YcjGi8C+91h2N00gEoqT6MU7MvMCmTNkuO
1OtzWoI+Hz49gZ/zVMRnd8vk1k6+wP71OSd5bXZIXHo1iBGndr5HHU1T1xPF
Bu6rWUWxA5++5YR0/gUVeYjrFXnH9ydy5+Mj5AG6feTRH0vlDp9fybu9miO3
mlQkO5eYLDV/T/Pr551lC7cZSwZyHNNlz3Xslb4VqbYRxNJrCCZLFmNQ1EaM
PTyF3Mq5AZqrzckB18H0o8KeYnF/paSpzoprUzXnt08bxGsM28y596tgh5aV
SQK+bRSPCKOZF/kXMOfuVJpqSBTn9FvNnhXwee46Ia2vV5GL3lyRmx5/IHd+
byIPyE2TiU5Okdd+MHN6c2mr3Ag05aviNWVPcov4if1YjumXLTmZfp0Z1fwL
B35zwzNnTdA12QpWeq2BuRd18Mq7sRjexwzcTgoZ0jQIn4Qk0fIn9uLxL1Il
86q3sKcBOMMAEXdp9m42NPWYpPLhBrFDN0vmje5X/HI9jL51KkEc22s1Gyzg
CxTw6T9Rkde8vSJ3Tnogz4kxkitWsLIAj1ZZzfkyucLltvywna18qa5I9iTV
VFrWdIVTrnJhT8Qliw3rc+lj2X1hytd1eFt7ORouHoVMaVfsmJeK/jP+Qpjl
VqjSMIWqm1Uk4YKcsd98R3z18C9JUrOYLcz3Y6tsf0pyBvlKEpZPELvt0maW
v7qPO5Yup2ceTBSHNa1iC4878DsFfL0FfHUCPkrA17LISO48m5Epml7IPKL2
yNWXUE5vnvnLh07cIFOTLJF+iyN8g1EVSznbSU7IpjCm8ZYYFNgHb6b5otWJ
+WjhMhyr4zzhzYOlOLfnKXDa7gUvLp+DmhWW8IodSHccvs5c8fggXmzdS7Lr
kqnEYcgacWFGFbN1dyXted8de/YIpx8ax4r7Ll7KVuja892F+Wuo/7d+nfic
I4X6/aBlzrMbZKYRO+VvpVpOqqmr5CkLt8nG9z0gbaJjeFFIb47atkVCUY+Y
7Sba9MpXD+FnXgYEiF1wef/5eGNFd6y66g18bAz++eODTqsPw/iJ6tgwIAgq
Ei+SA1Mm0Ioxc5iq6YlMYcx6Zv3ck/T2fYPo7zsZDB1Xh78fMOIz1Cj2uLU5
f7xboXSRwA8Q5o8W8NUs+hcflflM1mC4Q16uMHAyXZAlP179VLZLdFcafGAf
rz/Og6PilQK+3v/8fq8otyR3Tp+FhsRbQOXoolqFCPVMfHDJfSN8lqWPruk5
MG3sBvhldogEReoAhl8E/pALGNmXoGh2LYomRGLGwqHI5K/FM9rq2GXBLmaf
artk8d4mbo6gf6qCvoS6/suPlM75E/pLCfV7IODbdd3A6ZDObnnYQn15opGe
rObtdV69YAFHdTQJ+CT/uzte3cQRvR2HIOVXK+g2i2/L16Hui79QG7wDEucy
eNFbC9jXMlDcXCuidabAANWrcExjNP6euQe8vxwW9Q3Txp3iGLQbHozTc1Tp
s+cYSenomdwYwT9uCvpcJugf9ePJP/xVCvzIEeZPX+hvZ/0OCvjasnvIH7f0
l5Gzn/ntNxO5Db5dWYoa9e/dOP/tTSl+3B0pWgMpxVjhewVGdx2BisQWeF/s
gPQpDzA80gTTMlvJ87WqGFM/HMY//AtaTiIsOF4Dbm7bYebv4ZAzy1Y0TdlB
4j32ML9K17HXl63l2wR/uyn4R4Ggz5365yzoi0Lgr7PAjyZh/jr7GyPU74uA
L2n3H56OyeRKG/XYA0aB/+H73/MZdI5dI+Db+9/+lCCcOLwEXMwQlYVFoo6Y
ctJU7Yp3XqZBZdI9EqX8RabZnYdD3p5oNy8GjnaoYnvdITBky0D/70e4s2uQ
xDo6iOvZykq/CP4bIvibUvCPTn22EPSvU1+6CvxVEfhRJMxfttBfM+Vnfsm6
TM55vDF7amWYmNct+j981P/OXeOXCRg7z1io/2efj0XLU6j1+QDKsljyRjUE
7g/cDgmaG8BBJx8Y7R6YsqwBLlToQkMuEK2vNLzcfhI8ns6F1d/W0kt2cOwN
dOW/CPmFEvJBiOC/lYK/dfrHPUGfO/WvTtCXDQJ/Lwv8mNd8nWfuJnKq7/XY
rE9h4tsGubT9pOz/9vV03tlD/Xv+Vc7gf/YHU1SOI6XsDx31+lhhtFHoGwcS
e3289iUSGvgakSb/jny1vgSetsdhapwLWoycTOjupZA8fjv4hZ+Gr85vmYkR
zuwmLxv+mJCvDIX8Yi/kA5ngv0Twt07/2Cfo8wBB/8SCvlwS+Ot8YgFns6Ir
+37YdHFfnRy6ZctKdBi8Hf+926Xzr/MM7DJCmXbuBfnQeXeKiHoQA7+W3YY4
mwBo/HieOA80FMUyzeC9myIxs7vDy8mZMKprL3h6zhCqtr4iN9sew4VeU8iH
0NfgsqpVXN9Llfsj5FMLIf91LNSTvxHyyxshH2gL/ttT8LcRgn/MEi+RXhL0
b89oDy6BeS3h5V7iV1M20fWtw+BwNIU9NHj899lWKlAWrwUebxHq94NQzp3v
eaSD86ZScH2VB92HyMFmeI5ol1Y99K2YgkrN96Jfk16S6B1m0FH8hOyK2wsn
/PrgGRUPdN6w2TElicYLtlJxwQU3ttdPE368kE9HCvkvU8hXrJBfWCEf5Av+
e1zwt+PrCD9sdm9uw3qlZI2TRKwSGk9HKNQwve9pKCqqg5tunTP4UsB2jFAt
DqA41Xl/byChHm0Eqnk+KEO2EE29roSKbHcUEg943VTBKL0QrH2uC162C6DH
zOnQc0EJTLMPIn1qP0LE5D6oK9VHXofHHxE1jGnrLYkdu41LFfLzXCGfftxi
LbMX8lWHkF8Ue4p4g9dXuGiVKlZ78xbJ5ixjcd+36+iYPd44X2yFKntt0LnX
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
S9QujAMHDQ+kaqwcP5CBoHquHNSN9sL/A0FO0g0=
      "], {{0, 41, 41}, {41, 0, 0}}, {0., 1.},
      ColorFunction->"GrayLevelDefaultColorFunction",
      Method->{"FastRendering" -> True}],
     BoxForm`ImageTag[
     "Real32", ColorFunction -> Automatic, ColorSpace -> Automatic, 
      Interleaving -> None],
     Selectable->False],
    AxesStyle->{},
    Background->None,
    BoxRatios->Automatic,
    Boxed->False,
    DefaultBaseStyle->"Image3DGraphics3D",
    ImageSize->Automatic,
    ImageSizeRaw->41,
    PlotRange->{{0, 41}, {0, 41}, {0, 41}}], ",", 
   Graphics3DBox[
    TagBox[Raster3DBox[CompressedData["
1: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
YatOjuW8k5QlPwtrJcMEfb8K/DkK+LZdG2Vek8zyvafkJAtMI9gP+xpoXfIX
pX3uFZa2hiGCeCFgDEfEDwXcOKwPpi7Nh2UlhuBXnI1y0o2QyNRMJHvPBs+9
l0qSaUh8fWg4vWvWVmav8P6xqvQMk/TYkHVsnM3Y2R2kj7VaiAmPCpJQrcZS
s2J8lc2jdsWspJf61DPOnZrc/teKkt+1tyXGgj/8hfvLFPRFAn/tAj6bNyMl
Kw8ns8uKZRhulZE486Q1Wfs5GhUUFYNHwF/oL5iDVOcwWMHzJ8ytNwHHivkw
fOFUqLoegczHbgZeuRj5UI7ovu42sudBPuW85IQ4+OI2cYdZgji7cwztdHS0
2DavnCSSL2AiNAgT1Dq8I28sdfXYB3Gl4S7Gddk99uWBz1ykkH87hHzpFPz7
c+sp/oxwf1qCvm0Cf3VByeyj6hFMWREjLii3IWcHfIIH5uGgtbEeXt7WxYZD
ObDwG41/XGahUfcnGlY2Cxx9h6KJP+5A07Rv0F8xF21KeYxeL9TB78t+4alu
oaT9xwZ8RncdXuDjgjPdIzCx8ArWJNOwVKSBvRRHkS3z9cUucuV0RsoEdgnj
wJ1+uVXiJ+TzLCH/7gv54if4N0bwh1i4P2eTCLarVIaJS6DFetuB7HXJQNr7
3yBxdRMQAUOx91wdrKplDv2xCrj8wCvk830bGvz5Gr0kOpHjlh0iy8+P0Oac
4RC4ZhcsuTUBX2i/BQeyp+G+7rM44O4R7GgVj4OUwnDSU3dc9tYA61cpYocP
o6ncC3XiEb8XMxZKaexyoX9fzfGT+Aj94SXks5OQf169VhJfv4McMceBnb2t
gZ6wzVBs20qT4uIhcLB7MYjav8Dp4pPQcu0yFAU9A5OFf9BEtyoYfycbyWNl
tPqcCFn7SpH+8ttmXOFG8Kj1g/fuL6BX/TNsf70J79aKwm0nErG93jksn/IN
PmylsbmlHPZbbg0PWTXS5E8LdZwMpDNcbzJe886zPUtSOdf4dm6p0G9qQn98
m7SZ8xTyL769kaHeRNLGOj8oiw3jSd2VR+Dckgsgg9xgav49mJFZCKGL3iLT
ZC+o7fksGpRkQP753chO9BqZ/A4XZeutApPCESjy7moYuFqIDErOA5RI8Yv4
0zhn7B1c7foSBw0LwZt/bsGfm15A169x+MH3maAHw8g5sz9TKZ3hdPX1EiZU
2Fcl//bLjz521GRFriSohB3cV8Pkmo5k7gf8FCtMC6V23vmJi65ySGvPXJy/
XhuGWpZDf/MdJJN7HoLGpSIzs0CofReOemungtGkDJTqrIdU93xAhcceorOX
CGSfIULZNZYw5g6JZd6l4Albk/Gyoss4cFMCvqJwAHtkidHIER3wLG85GoiM
RwEBiuTvzBvU0nVz6AOBqxiFvGCm96QFq2gcz8zav4qJHTmUmX9tCL1IpCFu
oKpJKn0v5g9kwpTtg+CsIsZNtiq4kzTFLiZDcVGYPI6+4Y30jXmIPyNFjtt1
EMvTApfzRL6TktEj62pUvHsvuF9+gyIfWkMmxeKTP9JwGTqJrezCcUGKId5U
EIgu81GQMzwMWW48bvbd+RvMeq0A7SPOkAyeIt76hKFtD6jRi9wK6PT7feKq
j2Hi2hvDxBut35IhRyfgsoh28GzeA423sqGzfCx2ybHEGZ3fwdnvMaTuNYLS
hExInWqALJEn0l/zEfnrNIv8T2bA6zMjIefMPVHxgu9INcQJLteXomiNTChK
k2Ly1kK89stbsIsZQB+M86A8OUhE/iJwZNYpcNqxAUK8COywYydcORCM3005
S978mEetHnCnXizoobYEaVJ21+aRv3fPxW8/irF2SiBKdXo5fWBHCxgn3IYh
VBAEBVB4p28WTBnSijqW3xRZpBlB82w99GHqOTR6ojY8mhWPosgGeKRejTy2
laKtJ0Lha+59UN2bDFSpEU70XYdfPY2BUa7fQN+oC/XuOw9lsz2ga9gofLNb
AYf7WsGBMZ5Qf/kKNA3Jh79lV6Hn2S+cfvsmThqYRB4IWITrR43DGi4H4dCX
WPCmdfCyPg72dJRCfFwY5CRMwbPCtfHdk/ao3P8B+ns1CPRXW0EhyUFT0D7I
vt+KTjctgZxgeeycEYP82m8KuS6DLWo6YPooe9yZq413a+vjgNtnQJyrg09a
mUOBriOYSsuBMp+Ah4f+hKgpY+DDDV14lp0o8l97HIjWLWa3amVx2e/N2PSt
BD92McUv93P47rQW0b19w/H4iqH4y50y6CqMg6c2n+FEmx4u2qyAHNhA0Lh4
GAZdC2GcswlM7o6Cl+ONoWXeGWS+QNDuxWsInW2F3PoV8Knicrha5YS714fi
1IsLcVLDEMhbLQffXUbCBgNzbN0sg016pHAs9zhsvqeKU51UkaYhAb2qC1FF
Wy500aVoS8878I2fDKyKMl5w4zD0RsiBTwpG5rAH1sRPxKJzrnjF+cVwolIL
VBJfgM3H16h3ShN6HJkIzOFsdNlcDkunHoNeFU20+lo+churiVpt309fdWQ4
FC6YiRc/vA4Llm/AB2sdcOlVJex2pgat8JVDd1dUo4Dz/SA7chg+PO4dpPh7
4Vnz1uDxYzeAmSkPz2YpgY99F8ofOwR9DRkPj4d6YnmHEGzZI3jUOwOO7H0G
E33aEFkzEhc414LtimxUvIKC029eQPT3aaK/uxeBVUUOjHlmBJqv1HGj410o
31Eh6j+vgsTXxoHVBmdk42QCbk95/CwwGM7qvYWrFUr44KI0eDbjISy7EgX+
7Yog0hiCW/NrRMx8YxhjmIITJrwFYnsV6tp3CWkPrUDLLBTBo2AWKuhXAtUa
K1z6sh9CtyWLXEaYw4DPEDQY/hHO72kGrR368GvEF7RibCTEPH+GBtaXotyd
BSA6e8zs2Oh54LXBDbveVsOWzn0o6bEZGimMmv0SF8iYA/DVVQunvnBCfinW
8GT4dpi/vxz1Sszw/eI4CDfcAPrblJD+tGjRyu1qWKfFFh+xVcZ9OcogtY0z
8+gLQA/fJ6ClfT5QOZgOo1ZMxJpC/ps4+CF05iYYvzwF4w58h5RUGfJVsRz1
xkyDVJJvg9Caa5BSex1EdSq4Ozkd7B6ng/vEt3BZ7ihItzFo+lVd0FkxFFaP
/IxcfGZBVd5xkD4bj6I3FoukX6pRq/tQ7Gu9DS+5p4NrtjfASN14KBtdAuK3
i/G0zjoQzT8F8sOXogdcFiS5SWDgqQtMuLQbvuWPwBI8ACWq+XCp7jdyD06E
XB9XctiMcOpRm7ZYPqVK/MFMWVzslk7OXvURCrN7Ic28HPTnD8W/VrfDyLZf
ULyDh9TGRFTTVgJrQyPBYedE6M25htYrmYCcvjtsGfIUyGdSiHnkiFuq1+A7
gvcGVtShbE8P+L4vG4ZuDMJZbc+hJXYkjuo+BmvVusGCVoVvp0PAz10eTqT9
gFkrW2G5ezOYFduTDWGhVNPrQPE5djedMKOaThjtzBydco023xokfqjxl1wy
OQ0vXpMBJaMHIX3/dUBoH9RapIkO7TkERrLbIXWtPlpfnCsy7YgQ/h+tIkJr
Klpfehr8RBNx2/EHkL9egvUs9qHyXcfQD8NieLR2DVRdkOD4PB6I0nfwesRh
CA+uhYqjg6B+ohA0x5NQuloN5Pesw9EbX5EL75Ni19NzaZ37FDN2ylh2XZUr
O/3aSTbvvYj95a/MnFx4SIytc8n13yIg8fI0nGNwAUqJ/VAZ2AKzhO3jFPIC
6jcJ9z7tI+qN3QtbvxmC+UVZuEcpYzzDEHdryeGN7jReM0UXTBOOglakCxDt
c9Hr3cp4IOoV8rP7CettQ4Svw0CkWiN96+8wx2wPTo83wv4hk6iclGyxx4pO
+s+QZmbb7TvsdNFJzrPzJjf8fSl3c9oRLm3HDnZKdBeNNmiJvXbLkT0zT0H0
/BWihPk7wLdfB7s4G2D/dwmQp38Y7IavQet/O6Hu0GCArhZwl9HHJY9E+PCk
eqg9oY6fRU5DtV5B0KOriOqvLwXbGnnIvWUA7T93QR/OAu1bF9H//p13+QtR
67rhuNFjKTXQ1S92bpzDqLqvZIfFTuMuNOhJiqdXSsJmy/GKH4byupsvSWZ0
pHGd23TZy9I59FMFCeVZKQs2hB02+vYGvvauwF71q3Bi9CzYGROJ9reNBil9
TORmUgRncr7D8/Mj8Qp5NRxw4Q58KYqFx5amoFs+FNLVXMC0EYMHMwTVmn0B
xXe/wP+tMtgVnhDejeKFjrHE8U99KOkDHfrJ3WPM5VEVbPnVy9ycQFeJw+jJ
/N0F0fzMwzf5+r1X+IwyK17jjZfkk287azx8NLNgw1Bx+EELzFXpY50BGewz
i8K3wAxuzNWEdVr+4OI6ArBMKFwx1MSU8A7h/cIV+oxjUYaJPWIq/6LChSGo
J/ghGvsyHxEyU6FfIwGlluuh8Upa0B57HsVXfxZ4VCGlKQkUv2IKPdz/IrPe
Q5HzLhwnefO2TeJz1YMPk9zm5asUzR1265qXm1HmX/7z4d1LzSWnlU+yVvdS
6RN1w6kDPX9AatMBmyYcgONt8jjo6UxoD81Bx43joDxjOtwfSuBQr3tQRiRC
98NQ1PThFGJOnQLm6mxk91PYR2FVqLJ8OsxrkMVxzxxB7pMCyKkEoNArV1H3
mGkk0fqM0t9rT8t1FjF/R+lx5RF2EpvDU3hRYxLvl9PPexyVN/crfs67tT/i
B9lx5m6pvnyX/2TJiTk72fWPNtLBlAw58ZEH3uRVCbIvPqExs5rhwwZj0E9X
BsfHgah8HohWPlXA0UeHoa5lusgmHSPFKechLaMBLFTCQOlQPXLbMQn1oFL4
/l0Zz/TyQeUzYmDZOHl878Nossy5hyJM1tE7h1cyhx5M4nR3LZccP7SAr/1U
xqsSauZKlW2844SDvCVvznvop/ImllPNrdfN4i9EK0neWNqzofc52u79POwq
lgIx2hstmWkAJuX9yGdUALK/PQxajfNElqvnirrqvotmnohDGa7LIL7aB4ot
m1DPrI9w6aU/lE5+Coqd+jh18kcYGXIaBu3LkEVPGWSoAvnmaTe1VXE9nTOy
inG0MOJsYY0kh/biZdNf8VywmnnRxFt867jlfGphlUR1BeZ5hR4+93kJ/+pk
mcQ0E3GF/W4MYT9RHGuhgI1SP8GS7hF4z4SbUHP2K7jpR6E5gKD3TTLcMvIF
BzVdVKRQiArPVsN4NBT6b5TCkU3lcAUlQ87+GOhYehtuPN8K4d6VIH//KYwO
1SPnWX6kkuLX0ZJpVcyAvxH38dsaSex/q/iBG228ygx584rcM7z0PuKlnmmS
1Nj7EmlrBt+hpWD+ZhTJ1xx6zBUd0GalB/VogrhMyqkWgt7xTmDCl2OLZd04
Ya0Gif/TxV/i3KHi1U/IXR0FFSwjGr9WiqYoseAhHQ2Lb+yE3C3zYOPmXkim
n8HBkslQNEMNd12nsG2LJamy4iPlGbiOpqZUMRpxRtxRr7WSifQafm5ZJ9/q
PMjnP0rkLb20ecJ0gUSaFSTx2BbAm/armxe2RvORHlsk0YPVbPnYrzQhTaf+
/X4mfeYxrNOwnuxapENlbH1JdbQ1UaOcH5JnCzIx3TMGT3t+Hp6Ni0SfDAuA
q3dEtiEvkPNdY5z44iZEj6wRld6lABTK0MM6TXy5RIYMCqyhpu9dS39Ur2IS
BP4GBHwemWv46/YfeKWD3bzlmj28dHKXxLJuisTyz0KJfrEbr+Q0wNdqlvFv
uReS1OmenCV1iiFUY8RCrpIEIU9atk6n3sdPEA9ZWic2CNtHf873pd2vuogb
3z4mPdfvxO82XIV6ci7ETOiEnhd50LFhAtgp5ULF2usi+0PZqJ/fBTMDz0Pg
wjgcx56iDC/a0/pqlYyWlRH3S9DXRuDvioBvdetHvnyzD5/6LlUijZOREM5z
JdG+Tjzh28n3xrbyg+tN+KSEOq71sxFLMLygsYzAISNgvEJdu/lBHHO5nO7q
c2Na199k+MfZjGhlLP3lkrJYPcCavN2RDROb5PGTEWp43oswqNj7XsRP2w9F
r5vRbNnhMD+ax9c6lHDm+D1UYP4U2uNDEfOtYhLnLfgjTLg/d0FffYG/WgGf
dGWKhNjZzEmn2UpSDZ14y/wOfuC/d7xlnQP/oktHUih/jA06XSbgKxbwdQv4
xooJS1/6VrY/08tOZA3mpbOp3pfZqw9D2WOu65k+uZdi72A1iksagp/cHYO9
alSwxRIeFM/8QdODXoFv9iPIt/oOIot7kJu7lDLmdOnH+y8y7UL+1e1cLnkk
+JcoaeMbhftzFPQlOgT+djRzhI+NpFXBiZfmdPAX5Dr4RcbzeXKfmcR5Wxn7
Z+EoRuutiaCxF0VYHhcT+pU0kU2w1wuqWVUZJ0674To38PcG17tmK3dax4b9
Mr+QTmx5T73aKkf+PtgOz7a8AVu3Z0Bay+OxGu9g1t7dcOzqHHyjy4iaFdov
hrpjjIyXInck0k5yRsg/AyFfVAX/Rgv+IKZ0/Z++An+9Ar7UCx38RwHf5ynz
ec0eM8n3U9XsuiYzZkvYKnGuTIrAYa+Y8JnOEPKLWELqznV9lZfIGUsl+Zlh
EpviFRKHunXcxj9DWFLems46uYSSBphj4+UUDDt9DaSRgaB9thOGyOXBlFE0
1pG2kFFB2eJVT+cwbkL/Zgn9tlbojxYhn02E/PuXLyLBv//88e/+pIK+QQJ/
fQI+panz+V8CvpCn1ay0RMyk/pSK7bovUspDRtJE6lqGeHqKJZ7mca0bYiRS
W0U+66Q3L6+1nE9S1+FPjhspUUcRLL+5kD74PIdy2yKHeb1mpP7tKPwPTWcC
FfP//f+3Nkl7SUSiEFLzuq+Z9z5jVAghhOxZIrIkZUmYoj2kXUIqJEkSQmUQ
skRIQpLs2UII4f/q+/n9jzOn4xxnzu3e+3w+H7c57yRo0fD8ihW+F/8efTux
UCoppmlH1WsmzHsuZ3K6iHd70SRgkm/m1H/+7E/8Tz1kgkAR/foTfbBk/wr/
r38an5wET1Lf0BM0S4VsplWNRTKHPYbM27nLWGr8IU4ZdId3m/FAmCNJElcc
7yQ/fl5bPixip9jvRKHQcnUBfxeVsrs/PKZVuselrwe+g5QF5livrBmC93eF
k656mFLq42bvONmKKHeG0qlnlxO+Wkf4JZ3wwSaSv1ok3/6XH8SfG4n/KYm/
tK16LbYRffiS/av74CQUkPrMqmn2uMFm2ibihMyj3IwZvSiIHTw0n6MO3OPf
+DUIcx4eFH9PUsrha7R8rcMmeaBTs/hzR66wO8WcdwnmWA9LI5pSbcWevTNB
dOmCX/cxw42JzyQPkmnYU+Mj1SgJowvuyljtK5e4A4T/JhK+SiH80sEHLMlf
b5JvKpIfHsSfdYn//SX+Mpro15/oY+KeKu73c5r9qxtKtzSflKVXmjOdxm1i
vx85w2XIX/FRbKOwfWuuWJE2Qs4HpMgHfCyRf38UKjc5cFJ8EzxO8PJI5pi1
6QxV3PEcZ28cPEQXhn2SY7OX9aDnvRzpJ6dDb5dY2Z5T6xlf6M3Zo1S+jPBp
NeG/Dr7q4JcOPqBI/vqTfOvIjyvEn7WW2IvxxF9UQee5We+c2Ec+obQ5OiEz
TjVjoPcmdm30RW5bg5awsVJPdNh9VNx1zl3+NT9bfjfhstzWLFdelt1XvnDy
d0FMncN3bY5j1QN9aEp9ouMZOqjmvkmqdF+C8aVcYE8XSTbo6Esj7lrSD5Kr
mIG1U7lowvdRhJ9HEj51JfznQfjKjfBLBx+8JvnbkW/6wkPBOP0OT2nu5Kg1
Zuzmg+T9bU7IMqONmFnuQezlvDOc31MtwfiinehRryUfstlbfnZZqXxqaouc
u/lI7p8eJa8IPyO+OuQh6HZN5by/7Gaoljsdz3GSGlUoXq8BKSOr4dXJF3Az
wQd32dxV1vPZTXo7P4ktO5vKlZL7oyvh+xrCzyWET9sJ/9kRviom/EKZS8UG
kr+NJN+oFpIf3sSf1YPo4m05sjoHI8Zm2TLWaGA+N4jMN5n0bzSpT//HTvmI
YU/lLfEGCrcd0Yoa6Wl5DjVEblj8Q9h3wouvPBDGUlXTiIcCqY/6X41wIQr5
ehyAjAOlQFnbOum2dZMukxjSZTNOM04fJVwFuY/eLDsuXCd8j1v8xamET6cQ
/vtN+Mo0/BY/618VR4kkfyk5YYRTMqpxnsz/+0faI3oR+3vCIe5z9j1eTvaP
JvO1Jv0bSerzeGKssA/colAkNshXdJ8l3y6XiVbtpbzOji7c1Ww90sOzpIcq
CUWVkDskE8KfJoCWeBtdKdmJlEldnNp/ucGdEcXSZtdw+qDKgL0cEsQNIfdR
Hbk/1p6XC4nrBwl2O/WF84T/jLZYcmG9OvgliXzf38n73pYqv++kqcGOrHXV
bu5CwB1+HtGvP9HHDrJ/JWS+Hf3rqC/O7Ln87/1A+azeE0V8/gNv3ODKdV22
ggnQH02YuR+54TJIfdUSqlAXzxp0CbaGvEbz3x1HGbs5eP9qIUq5ngpfVrVL
9+4Oo0s3vmHGrbTiqFUvuGmGqVy2yxouVzGGS33vxd4M7MXMrd3f8fwqqW+R
VPnNkm57eJ1p+efJRd85xjdPfyDMJP6iJvr9TPQxhezfSDJfZ9I/rdpA+edn
M8Ti7ZRg330+t+1mKhM/b6+sc7QMUxdZoJo0MZWxRaJzeCt2Sy4AftxClDl5
F6zZpIlct4xB9rNbJSOfz8H3z+RKF4RZ0K0wmhHbzdmdLzKZY+Z+zIUTPINd
bOlrnqelRUauZGf0papdRbLK5FXMapK/tRtn8TkkP5TEnzv8jyP+cp/olyb6
6Ni/VWS+bqR/K0l9kWl+HDN4P2Mw5KCspXULvu1cA/mLH8LWO73xIokPLBo4
GEc+7A3aiVIY22MAqGuNnXjvTvB1oxb4XUyAAs1a+HWmv/Tn1WEyi/Wa9HQT
I9kEzWd41uk+uKvqDZSUjMEV+WGYMhogO9rwhv6Sto41PV7FDSD5O5nk2yKS
H47En62J//Un/tKh371EH+Fk/7qUf+A1Ledzm4z2M6cLc2SdalxwjVskUv95
Ap9qeuA1LUPwlcv68OxWLYjf+qGMLeckMQGmsFe/Bv39NgV+jjbHL+50h6jQ
9fCk4RMMLCoEpzEYD9qZivd+3YZvXbgJHztlAvvvG7yJnSwdfLwPbe+sZuaz
/bgf1ES+ZoBKSCf5m0vybQXJjy/En68Q/ztK/KXgxA/hze9SXv+xK/f5dCoz
ryVbtmnoVBy9JQjOvj8BRrvvgEraBIOZf7B1ykPkejcJ7lZFoPiL+kg/YTwo
ZzhL3G7GIb0DSbA25yjwEXo477AWPj1oDbaq8MNxBkH40ohROKNiA+onPkDx
yy1x513dZDRU00yNF3vQPZv7ff8M30D45YPFbHEQyd9lJN+0SX6cJP68mfif
dZEXbxrXhXPtsYJZ2j1VpjI/Dg+PGsCjfpmQV/Ib9mQ1QPoDASZdiwNft1YU
tTcV/mzZhpJ2KWHgp3y4Gx+C/E21UJdpRxEbWiOxjnHA2xbF4z1eCVj8lYW3
TD+EJ226BEeW9YJN4hWU8U1Dqiyql91YuZG57FbGzvUt4qr+nuO7EL7q4Jf+
hA9OkvwdQ/Jtc9ocfphOKvcoN4w9cUWPyew5VjbDaylWGfbFL0YNBfxSC/sP
dUBeqwrgDRxDBz8egnVxu6HI/DH6G+gI8TY6cPfVfigxPCGxy7iNqLUYnk/o
i55UMDhhrR+2DNqCN/8KxUovLxw5bjfI7+vgXdZF6GTGe2xcVSPTygtgjAvy
2E9Xozie8On6W4v5MMJXFyoW8JsTzfnZ7smc5as41sI4gwlYMZV2NzghLVWc
g6QUJT74msft2givWe+C375+CSszrLCx7jSkvzQC0oxyUOX17yhlpQPUHDiE
Qpx0wLXLGPCr7YwXvR4Eei6XYZGlI3aemYQnQQj+zrrgQ58q4dKXmfiq2hlv
2j8UFLgPDAs9KW0aN5nuMjqJKXH2Zbv3cuX0Omlw0YT/1vcuZdt8Ofby5HTG
KMmHFkvLpZMqOuMj8ykYtKABelTa4Y8Fc/B8w+64uM9BYOc4IqraE5QRMyU5
fTVhoeI9UuM1TgE+Sci3pwoubm9Ct4si4NJfC/xq4xSYPLA7fvxrAy5SeGL1
qM7YzikJtX+qQxePPYX6MwzWGT0Kyg8fQn7m1yHv6UPp6HeGtOeyR3TP6aeY
I51cGKeJp5igGY/p+6v16ZdFV6VJO8PwhQXN6MfRC6jmc3e84tN+yB8uYB8L
wMPGjgNrR02ouzkW/eW6ws01D9CGtSr43m0bPLI2QG1ta9DdrIEQsGsn6Lna
4rqTpljCvQbnwl74s4MSO361hdvb8sDhpTPMttIAOswQF8eKOMxLC/vWFcPe
nT1RrQPCeeux9Oq7zrKJd17K+uZNk+X3KpCpxhyWztNYgoXiEKg49xOV+P+C
pb36AD83E8YM64P/3JqBnVEFtKXfBseQYkjIfwBKFCbZwPuDh141eEQfgsI2
M6h754yUPoHwguzBjYWDcd5tPXygU38sdn8P015YYKO1AdA8pgkeTD2NnMtK
odi/M07++AqmxQ/B+Tr6sKilK1jojgObykRo7Z6Ozv2swxpWEXiU8ym4svcN
kpYOgZixBaDf6wgYMhNxvL4MMjQT4ePMHvjekTlwy+8jvE22w1faMqA66xos
i3iK5qaOh/A13fGfYSfBvaIfuH90htjf50Dv+HO4fOIaFD+V40VHl+C5tTzW
2vcVvRXzkbJlgZPOj0F4Rp0nzggZh2VP/8HgXhhnj7GAo+5LYM18OVRX2aE9
/7JArPKBKy15oLtrK7iv34M+HnUFProc1o76AW8aroGXYQNUr3qDXFa64q9W
08HepSecre+MI3ay+FG0HpxLvAalH9ZD6pdRkDvWC/JC76OFTYeh8sgJtGIg
4EfPr8CtSz3wr0IRq8OaoeLQeSRqTENL1nyUZMbdBrPT0/GaB2bYK3UXHt51
Ap5aZwVxvqNgRFkGbDI9AW+vd8aafbWxOuccvv0zGEeN3g/efSSoRscPnoSu
g7LK1WjN2LcwvpM2Pmq6G1qf3oO241fRzq35MOzVK9C9txvVu4bBqwuxENbt
K5q1YR28vPkQ2WR5gM+xPqByNsSqBTMlmW9/oOm/fsDL2BZ4cfIban0ShQZz
3cD0kAMu6WYHS0fr4W6J4fhdXiboabxCtW0FsGiJHV5alA2ezuEwM+cqRIas
wsUm2vjf6t7gHHoD3elpgk1XHcZ1q6XSA/8MZGzdCukMZ398O8IeOx5dhBUj
ppHdLgPq7GrQjOBwr3ArLMw8AhEWQdAv9yKkxzwE5w+HobzHJfC9F42CTuyC
XvvLwHL5bAjZ8xxcc52RrhGN/hqPgUGfyiChbDhuPzIRi/u18MjBYahywQmQ
zXfEpzKKYUGEG4qZPgj2ntfA8Qfdwdg1BEm+ueMxpzdJF1kkyLZMkNJ9WQ3G
Jn8Q7Zl7Sxo/Txv7NvVFLeo6SdLo/niTQSPYZWviL+EfQXeRLlz0w1AsPIVH
+AAYZdVCwjEDvDziGER4fUL1P4/A1br90KC+BZmP1kjY+GEoJt4YxnxwgaVp
uvjNzTUo/pI1zM/aDiF+rnjTr1wI3FeCevW5ArEXHkNvwR7ffbEVJz7bIX27
7IjMShJB9zEPZwRfXXZx01GWzf/F6LkcpK9u1JFtbxuEfR7OhnDKDvsPqoYZ
RWuh9+AoqB/fHR745oDHng8QEP4IPpx5Bv5j7kGDxRRwGNCA/C9uQnPYNLjb
vx/W0O8Jg9w9IG5/FdKengeDW6Nwac5ZoPULwHj+XHy+uye2+VoI1r3UEBHW
iIyDXXG8+3Wc/tBE5tzJn5ZP3srEHnBhz5505B5pJ3P+Qb35hqRwrjlPwWq7
HKAffbor7ZeiB59CpmIN6XLwmieBYW9M4VPaH1RnqYSWbhqY+VcBFVtjYWm+
MbiOfYmMxcPoYtYJ9ObBK7T9tx52jeqNaOdWlBu3D2JHxYDUwwV3OnkC6muO
oK6OrmQ3U4CKIToZcw7WvN2HTucX4kcVnrKgNbX0r6u9WZd5VtwwdR2XLz3C
n2pr5sPbBgurjK7xR3rt53ruM2PnevN0Q+BAKfQ9BTdxMarZcA/9nNYVm0/a
h0KM6tHr06Xw46Ub5OvmIuVOM0lKpQR+Lk6C+PM74N7Sn6h2yzagLEc5Obbs
QP763dH2xeEwrPQt9J8wCSaGRuB7u12AFRwJ0/NAVZcgKucbLGhfLvNba8BY
pAez8xv2cIVftvImq2iBLWwRkrUNxdlpxuJUjedCL7GWH2TvwTlcjWRkjEqW
1uUGkkacAe+2lahTyUBsc7EZLQ2MAvecWHCf3ISUn86hJQ96w+GiY/Crahds
IplgcugJ+nbsH4hjd6D9Kbdgxu4WmKwOg+LH4dBoMRjfmroYt3xdDwsHlSOK
ekPuj2IsmbBetn6bLfPj/D42s+kdlxr2gZ9Ymy5MNZkkesiOiQlP74teCdVi
88SdoodllVDr5cWb3I1n1+tG0a1XhuHtfD+ceWYCgvRuuOJcCLgbvUUL9/xD
bxSpkuCAraC0i4U8rTrITAVJ8q+hoO7fGdVNHo/Ono9AqeujoaG4M3bQWo9/
LaXhB/E37kwxFGoMRb/it5BbIVBKKctl9p2cmK6Hi1mrHt34gBFSwbVKR0xz
3Sh67Hgmbs82l7+x/i7etNaXm4/3lIc9NBKr1z/jj+D+3O54S+ZA2QQc/1QA
Rf5qcJlYBpVZsbDqfAHYWypg8rU1UDXlAOTZjYN+p76AcWggKj6hAF/qHHyf
lIuoAkMn/yIWHv3qitkMBt+zo3FEpzR0h9oE0iArPKnykpSSSGmP8lDmlXc5
u3C9LT9n9WxBPDRe9L92VvSr15HHz/8pqh/uFzO/bRL9yxvEOOqS6PK9TGAa
HPg23oNdWmhGv5/yEVrmlEJmwUs0//k18P/WKvmOCsh8+jsesnmHCowWQFr9
R2SPw2Hkyyx0KXsnfK1/Ci1JV5x0VyZCy8NL0HCWx+N4X5xwZSEUej+T+D1D
2CyoRRrJrKWpR1eY5+Ua3InzA/kzj32E98ELxKiejeKMLSZyycFLokf4AtHb
QU9UvnYVc1Wa8ltPYsXQzyOELteSuEneyUzcsePS5b8m4qLWCGjToZD3jY8w
dqQu3PocDpUWRiCZp4GyBjjAhnVn0IjTAigTfeD9LSneknwBZkybBLvc7sHe
49eh36uBuKVnNEg+FUnqu3lBwKw2aZbtFjrB+DnjEdCHO7Z4BP9S4itojfAR
2ZLXovvRv2Jl1B7R5rSD6P01VPA2qxLSvA6Jk67ryBf+sRJnnU7na39fZakb
R+jrDgxe/PYMrIuJh5IFJtB2+SUUJmSD07FgiE2ugYPGn6E+uFWy6vY2+Min
ocaFSZJ18e0Sr8OGaMfxnbDsLcJjfKyw3pYXcOrCW6TbKQsa332WMvVb6P6+
z5lpY224q/1G8X+7LRUq7vuIsZObRVX4e9H7WLCoxu8EaopSUH/aLCitNovO
l8zkg/TixeztC4Wrlec4ZbdqhlItlyVsk+FLM4LwtgAL6V17lVSP3Sst8gHp
qTMTsfHK7nh83/OQ/jsPwtb+gJxmLZTezwsFRfWE9Y9K4dvv0bh4PuCUOefA
1OwFpKdOxKYOLdKrVWH0kpDnzGdXG+7J4FG8R/+lwvZmH9F7bbNYve2dmLnO
X/T2zBKoGB2B8h8hqJ9ME+u3tYsZl8rJq07w8J/D+8emsFRbDE1R9tKbL7tK
P/QaIBvs3JU23xNCj2wMoasDNGmbtjrp1MQU7PjUDv/CMyEoMhKi8vLh4KtE
sBwTC6vJH/3Rg/DNqXHw28Qd+psdxP6m96WGruvobd+bGE3n/+orHrBU4D/6
iAFxzWLum2axUeYnNjZlCNSOGl6ZayCo7jmI9npN4gDVMzExwV4sTL/DqxsG
cNQL4f8+//CQfh1dJJNOek1LrE4xF3c7sGusBrNDw3YxPtU+dIVuvbSoLAWr
eq+U5H4qRw6dL4GO/Aw4fN+C3vdwAH/WHsKevYIrXWvRYIet0j2uiNaIvMJc
WNSH62Q7il9P+jeK1DcpsVmcldwsqq0Xiaq9/oJq6iFedfUNT43SFddpXxJ9
Q36L3tOniP2G9RFEpySOmnOR1HeO1FcnpVQ96TDLACY3cB17OLEvF3JtH8dG
pHOP+j9jN0SkMw1LdWjFUKW0cEYsLNDeAnv9TKDeYj7Mb3GHBYPeoEBZiKRp
aqPE+8YDfMf+ksz5figTfl6DW71kBJ9tsVSII/P1J/3zJvWpvvuQPfQTKJuN
vGrfE15driO65ZWJ1j87y821V4s9JROENZENXGM/e5ailPR/v5srkaYkNxjN
fIp7dLOKi5dM5KsPlvCw7DAv1c/jZk3n2Jejo2j361HSOa0/kXT8LqBGJoHh
fIR/RfaGry6dsOFlA1zD7saunErWNtqJsVxazk69MJDPRr7CfaIPL7J/OR3z
Jf1TdtSXEcxTvnW8MkFHVO0sE/2m6Mq/LVovvui/ROAUhrydEMj2g32kvtek
hxYM9YZlqYVzuFj72fx7RRfh+4hQATluF3qWzBGiol34nIGl7BO7H/QNp6/S
66dnQrx3GTK4cxjel3xE55Yy8HqWPr6IovC25QGyuMm2jOfpYvYv8WfDeh/B
gvjLXqLfRqIPivYT1fv8/+sfqc97q44Yv6NMVE3VlUdGrhe5baT2TT159aQk
ljr0iKYaB5FXMENVH2Sp0JOcWlrBa0OyYPyzq9h8dJUodl8n5l2yER9MMRFW
QyzXbV4xc/PyIVnMgE7IcIkCZdjeRDlfekBS3E404/JlrFvvKeudZcBMuryP
9erVjTcKnC0oNiwQeeJ/vsRfOvRLPc8QVNMO/W++NqR/uaS+SFJfHqkvNtlP
8La14lWyDFal/ZuOnzWS1k7PZijP36zqkhmvXmUi+BfpiYYz94oxn3TkKR7m
8tIpLWIdbyA+u3mI1/vTibvobsJ8WpojHedYBaXT8iU9w9vhu2MsWq8jwdXP
u8vCzt+n1+8JZh1evuNek/ydQPJtD8kPJfFnD+J/yg5/IfqliD78yf757/yv
f49IfVYpfoL7ACv+x1hS3yuKUa32pB3ijzG28005Vawzb9NjiuD1zk08Zm8k
93dcJW+3zpSz+XvlyhEj5Z97RotJpI/Xe7tykrssU3RPjS/fiAC/JA3sqrUF
NOITUPYulfSSgz/dVtKbtSF85bHlA68ifBBN8teL5FtHfnh3+HOH/x02EFpG
6ooSog9fsn+BpL5C0j8HUp/+5Ax26gqKqR4+iR7Ts5BpOmPKpf8bwatHzxOM
1b7idv2R8jtiqbyzTydF6c0uioCoi/JlDn3l+81eCsaxLryXny9LeTrQutqW
uHifHl55vgcoQ6861eaL2PFFjmzNza1M8RIrzrV1K9+H8FUh4ZeVhA868pci
+ab2VApK4s/xxP/8ib/0Jvr9SPShIvsn7WvFS8dlsEOzKcZ7wSR6VVIh0+ud
GTd8qhv/9skCIcR2qdhn+Rj5p7Bq+Y8me0Vl6ESF/3RfRci3e/Kzb36J7dLN
wjOjPE4SnMRQ/sVSnX+60G7I4m2fX4Bf71wY/G6+9PuBcDr9jgu7uqKO+0j4
1Ibw3wjCVyrCLxLCB0qSvx35Vk3ygyX+PIf4nzHxl0yi3w59FAgZ7ElvipHM
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
6/cU9RXm2emztm9QzK3uMFJnBlOXy8qlyUT/51xbvU4/TRljcGKr5i6VSMh2
1Ge5hpT77z6khB/we+1DavVM1uVP6C/kz2gq/Yf9MgP72zvsR5b+4YN8X4j8
7IF8auE/59iBLAv5ZdckD+lkDOav0ZJv53VEhf68+4JozGorV+D82uF86PD8
/cT9Lcf1M6O+wiW7mPFLF+Y/VqVY1f6hfH/cXj9QjlVGpvqxVSOvSRtU1iLx
r4p/X/C/a1yWZ+4ZRlG7ewdp4LnD2ulbjvJbTEvFKZE28u+zIluH/c0Z+9EE
7B8Wvk9Efs5DPjUU2sk38+6JnXIjhbCjlutbK3TE0OBvfqxFf3ZA/xuO/rIQ
51ea8O/8ueP+FuL6WfSpMOeN9/KV5HRZ752QoLyZP49NGlxd3ujXUzx41g//
Pjvc4/1/f6YUMTahJGEtXG47n47fs0tjylmm+5StFzptzhFfYf89iv0yGftb
DvajUOwf3+LGyveRn3tMWShWFpoK/9VM1p2ZAjpizOWJFebvt2uSD+bHMvRn
i//tQX+x9f43H8l4/sy1Z7BQXD+LvvN8P/2V4GzFVr+PyTd0cusz0WLDznH8
z7L5lvt1sbN3pMTsTslZP0oqGDz9UYcuu1eJrpY/aPYO2KELiGsvdGq0TOzS
JlySsF9eulpHHgRRUkhclthw1jXhTVA8/zS9nS5t8mXtLDqXJ4Z6YmibxVIf
zN81lnzD/JiP/mxC/7u05H/zi/NhOX+W/U3E9buF+kZ3fcCWdJkvz1p2Wawy
uJx3W7hfm2XbEvWdANJTRUluO5q1/BunWfocbo0+Q49v+ML9tI6hlZMuaiK9
hur2ddvJh71PFVxq9BLhjrf49s9+Qe53mZ/f5LQuq+F87WquidZ602NdQEKs
ULjNQbLzCpC/Ih8A5m8e5psd5odg8Wf0P4u/WOb3Ks6H5fx1xf1tgetXjPoM
Ld+K9u+dBZ9sla7WLzO0L+xKnUf60lWbc6mpVwDk3R9DDddaqOuowqFD9Dia
PKkx+L5bAa06ttWsjFmqrfd6jS6nB+MX3mN8uwyTbuXjgdoZhhK6cA+nmZDO
63Z+txaOLdsqNkX+i0G+eoX8chH5wJK/hZhvZZgfRvTnXPS/GegvX3B+vXE+
zuH5a4D7q8L1I3YuwsAonW7ZDHfNkNkNqco+AqKn1KQXm0TC0HaWz9ra0nk/
P0BaejwkmCaD7/YBMDBAggmFDvCl2hMYxrvSVu1CqG5LFTrm4nBaFvxIXTI3
hoZu2qN17rGe14V6ic2Rn8OQT8ci/6mQr04jvzxEPjBj/lryzZIfFn8OQ/9z
Q3/R4/wOH1RdTj8RLZKAcpwPF52b/TdaNuwAtNi/mRorfkJaAxM1iCngP0vA
M2njaSh/1t60qBOUTairfuOaBnH2v6HyhapwX7+C+uck06T0ePpr4AAaV9lA
Z7mkwpWaWzTWFWZduHGdcEJ2l7TI9weRn18in1r4zxf5ysIvFj4owfwNwHwL
w/xIRX/Wov8tR3/x7ttTJN/Xo75Ui0eTvgfW0jzPQUA+fuGIeQ8nlPWClFuB
VFWpM/e4jQrcWm+HFGsrWsNqODVM+a99ZjtP7tSIp5zbiGg49WYljWqxBk41
j6C+FxtSO2UY7VVpqvYB8+NXNLEWl2M/CsNceIb51RRztgnyQCZySwjyVTp+
bYT/74y/X4J/vh+/zxX9ObEx+l/NYTwxR6C+QiDETF9eWA/gcAqMQ6YDMc+B
krAw8J//hHsuL4aQxPr0eMMuIC35AmsPPYB1MVFgd+MFt+b6Zc5qpzuXcXAi
RD8/wm1pWABdD9aHiYGDNfkFgTpppqtQkJQsJmN/e/8pX96J/cNyPctyXYss
jNJXR/4zIV+tRH5ZinxgXjVfTmvTXDo7a7sQM6AaT1T2qM8f/t3PaqTuNzMg
NMmPM/7ggeSiBptUeL46GZy//sflxqyGMu/3XMbs0VC6fzn3pGZDeH7tNlR+
2RLOdWkLCQ6tIDfnnjp4oC10nl+DJp3pr/kqjdbRec6Ct1WcSDYckNywvzXB
fpSM/WMU8r0e+bkA+XQs8l8o8tXpXVmSGvngFuZvnfC5um8tlmN+tEdtJ9Bj
luJXE5QsrwmOLXtwBLpzxHYKqOLfwtN+J2DPvQAoO/BC/f7EK27a0j2wNPco
vLr/HCQvPYzIyuS8NG3BmL2Ci1TCoUFYQ1qwuBc1dC9UD1Mx7fSNtfhpW8OF
A9XjxSnYL4uwv32KSZU3ZKTLs5DvGyE/J/05If2amCHuH3ZSeOSzgB/i8FCb
1u0TdeeXccTRFbVVA6IajmvpCG+ajwCrZbGcucYZIC1UUHB/DTfxehHErt4N
cb5qGNtzN5Q3XA2va2yDkC1xYLtZ5C61k+F8bxU8bNoY+tukQcMeO8DdqgEt
dJ6pHtdxP116fJm2/N5X3de6dYWXgTeEjMhssTL2N/L5i1j+dbQ0CPn+5r1s
IXL0Sr7P/O9a9cyzdGCTxdzZY7H0zc3q1NB1NFW9r4c5PMczWHcHZg27CzPi
f3L1lY5wyc0T9AVWMGKWC5gXLeAcXuziAPe3xH4pXPNPg+Hv1oHjrTYQMG4z
V3bwE1dXYwKreodhd9Y90F1pCl5zPDjHLdVgZsQ2usHeWTtshKjbfaYqnxr7
lj+8ykWo+98nfklGP+FdCy9+QG+z1u3FR2rTvio91KAt7b3/IvSdEksHN+gL
+gNOkFc+DLKmTgb9h1/wLP8dzLN9C84Zh+Fl4moII+7qjyfvgnn3YHWtz8mc
jc8SLmH2GajUvQPNGBgLpw+fhe6OqTAw4wzMSmgFkN4AyMWUdlkrMsHKNgp+
tm1Bp419wZne1VanlnyDj0+3Q5e28XT+5TB6JIRQ842p3KbriVCbW81tDt/F
OXx7yFV7qdVs7ilr/fpFa7OrrtQWHZa0jWNrauDSDgiLusRlDvPlAr5cg6Xn
HWj96QItWH5XPfjzWHBf043L2rOXG9c/GpZm7oKWq1tR985PwF35AMnScbjV
fwd4XnChbbyeQDrflNqk3IRS0wSYW3gcunmWQHqVh+qFNz0hws+WcyraCnmt
ToLtr0FcssmDO7v9AbCcqvDT7Q7tNUGnreM8Umc82Zf3TF7LX615ir/VdzS/
I0yju7Jji4bUpJzX4hioNcKaXm3kSmP2WdPV9VRg7KqDCWn2XOHSy1B9ehCd
E2WG7D+PIfLtXM7x8nMuDb0+uFEd6mqaRfOuFUMNP0/6rLAu2M0shJxbNyHh
4wx11t59aoMpCjy+1af+Zl96P+wR2OU1p1d++3LXvFzpx5v5mlvndbpfRb34
6PtaIVjfVLxxfbBY51i8OOe1WoyYX1v4Pilc9zY9VeMzYTyw581oL9/NUN5g
CXSp3gy8/vjiuUvgPKa704U5lK7drNBd7jXowooiyBmxHmZGtaIPn3rSSweH
0kl342BgUTSkiZ25OznrIfzaB0iMcYJpH+PBv3d1uvEy8lOfuZT0vMddIAp1
PtOELt7bVZs987bu7N6mwqlhTcTx5gIxTrNX4r6WSm8q2shz61yWbjXZKg5Z
00B4Hy3pQk601RjPv+Hmv8zmTPf3cvu7bwf309u4Hn2Og3JHR5UH9elT/4eQ
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
jW4KxqPR4tSorhIZ10kafM9L7Ke9yz9IaKprd2E1lHR7BFbBTlyjqRfhTeuO
YJr3R338BaVuLRRauPkzNYxYqZ1o9OTr22cL7dNaSj2nBslROwOZ0LmUqe+/
YaGHF7EyUoMZf2hkkuQhkV5MMnccJ+c6B7Gw5W/YsrhHbPXThmxbvcMS+a++
SAwcT4z2OqLy5Ee87SVUmrlILLk2W8oeVF1eOv2UnHHwuFznZ7a0RvEWvRNj
+Wt3G9Gy/X/gqosWPrScBTYvKkPO9D7QXDgMjh1v0d5eEdqV9T35Zp9PCO32
tpSGhQbJNrsD2bUhpSzhGc7HzlBm7rBNNvb8IJH02hJJEyWz0zhZlRPIykpL
2aWjL9mZ8L6sZYijbO61SiQmM+7xBh1Jx6/Bb4Xzi5+Jj/vbyNHYxxxT/VjB
969sz+537OKhr/KH6eGSx6GjQv38VjT21Vowc5c4VfhOdabQElrcPQ9d5hXT
7ovDte4j2vAVI7IEONtc+on7G47r9xj1eRWht0wJZcbcRNlY5bhEJjwXSQed
ZKg+TiYnAlnCulKWHljKvBeOZebV3eVk9X3RsK419plyHYl0EYjDXNGwYInU
cn9vue+LCaw39kamn6ZUKkhSOm2OUXYuPcZ+v+8o7+gbLn4JGkwPxQI9ulZH
K+e+gEdOlyBxsysNeOSlnTjCge85cZ8wGOf33ZKR8hU8f+64v5G4frmor/A/
1PcxC9fvlkgaayTj5yDZ53gg8zCVsorlpay2FMhUT0fIxk21JGKeKRCPlrzl
89nkmVk0nKgqm13K5Ajfjcxjx3LF8v6e5XPi6eVN/j63PWN7M+WU9W5534ci
0a5lPIT1nAnGH+24xBv1IKvBMsi6VqoZUXpVV31llBDVqZYUh/6SifPrgPMh
4Pkz4f4mW9avDPXNR307qWR+GyTnHgtkkTGlzB1fHw4Esq1XAmVjGyfJmLFB
ICld+aPVxwokrVj09+TlkoP9Wb9YR6Xjg2TlSqqd3tLD1bkueuPqln+fL//i
/mKl9mSZbQpfLk34eB8K7DpytjF7YWf9jdBldgfNi4FeOuehjYWt0nFxJfpz
HPpfGvqLB86vZT6MeP5IDdzfTNSXRiXy/p8+E2rzxNeUQ4EsTw6S+05vLhn9
9gvk6GjeqAkWnhZ8Eo0n+sibcyNYfs5opc+nG8rN2W76ijduesv7BZbPnRaS
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
j5kH/5ACgSb6phypzglQGK6rdo99nIbVR2pxU+kynrzbiChWLFCaSJ709Idl
jGKuE1duZ8/jJ2v5G+DPjcD/5oO/3G2Xwk208WEvvS6lN7+yp1LeryXXde44
b3C5e3L4bhzVzwT79c7EUF96xDiuwIQ8wrbrPMhnZiPWn5qAc79sxtlUD4Vp
xkrsEdOKBNZeVfwY0B63+rsDVybcwsy4jThWE4WPPd2Na28cwT189uKmykTs
uJTD+qcL3P8sy8SBjnbuusfhbvZbMZnt04WMH7+QlH3iSEFkb1K87BGefG4U
fhjeh2z1e6nM28TRf9r4MmOOe7LhvfpwJXducO3PqHifAwzfIXc1F+zrwUZb
7aU7kXJlr0NupOtHVzyvpQb3K9mH/UdXYpsxE7HdnsZ403VHUvjElrj/uIQ7
3pyMN3iswSMOOuB2ne/hsPsHFTqvlwrdtxZkRJ4xyevlRibPHk2i2vqT7e8R
MblDKTw1x/CVWNAl9i8xGrgJK/86kj3HvSn3jnfobzo79tmZDpzppo/cIh89
3xSFCUbPLgqJm88IL/2dBecJhrzViFnsOIP19JIbc5Vxi77jmXsT8eP0D1gz
1V9RPOmmovOeXmSTTQLpcWQdyWNXKoQLs7H6+GW3HcJqHOb9QUHbrsWm141w
yanWJPLgMexyuAjX9nZT+Pf1VIT9zMcXPIaQyNwwnFbqKN89Q1BpFXF3jaC2
7LBh7PVr2TizYi4+P5cfGDNCiGjbVbTySRajV5wSKxYdER+d6SU6PpsoFEZU
cDVGbdkOGwxolyVPcFm8N/m9NoqM7rABn+PMCDsqgLDKrSS4dC/psVaBUeEa
d0VAEV5RTvCg70/w2Sl2OKwbxleUL/Dq4Klki00anvjgA97Z/g4efqAKzzl6
A/eIPoLnOE6T9/gA152nTGPcmGW5eSxl25bf1VcpTLjaVMzwWCwGJD0VI3aY
S7ftvoqldiZS08F+0oZ7rUSnyKf8JYUT92O3JTOm4zjS4tNS8uGMhhhFDCG5
ITuJae/9pPLdUTLY+zBxPj1PYWORpwjbeU6x2jYJf5+Sq0jO5bAudwPuddSS
dE2kicHBtmTbhObk8/rNeI+XDvvO7URyvTQkRGNJIV0sjaL3M/j8NfarhyN/
PX6cECoOFaNWnhN7j20t+fk8E9lZ0aK+Dyum9dGKic/cpdsbVGJumZFw8Z0H
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
g3/LAn/0FfxHCej7LNDP40GfWoP+2z9kHFdaepkJmWRBl9Z+IEy7bDIwaANg
/AScV8ag5+tZd3omp75TyupaFTHo+wq6JsCe6jB6AzE9uVdxZbYG6/q2w55X
SvHb3Dv42woBx/msw3+aLMGGxJSggt+4ImE0pttsp+Y12sbM2TiN+5qIhDnt
h4pLLAOk++DPGfC/18FfUuDffoM/GgD+Yxzo+0ZRAfyH9YgbXBbGfNy6nzqB
juKE5v+Q4C3HlAYjJtEoezmDFu9h0PZXzMZGI1nN6rWMj2UA7XzEgMpWPSP7
940miwssSMERPUZcO2LqWeEe+moVSY0cRVziXUhMzCLiZjCN9F7Shfg+NSUt
vSTl/kqG7qxtzo6N3cI1zmgqmMbaiZljL4h/Z6WL18H/poK/bA7+7a7mA7/A
/wL34lU4O8Oqkr7GWFLTP4UpEkf6EuMapLg8JU95+PcQWl0TwJjqH9H0rQP0
oppyOtnUgNZHnlBmea4hSgcf0nN/JV7+rAK7mxlitOWA4qD2Db6ZPRBHhL9T
vFtpjq9NCiV91nchrTshMrLVIfyt20I8OnaF8vOpUfRFxU/mye0x3IO8OD65
CyN4ad/yoeDP2ySm8JbT3nJzvzXm9lgfZmz62NCJ+9yVYY67sW1LmiQXpJBf
oV3InSiWvJmgoIydJDpESqW0B7tQ7R1tqMBvgpId50dMtqXicylDsH+vk+6F
ZT8Ukd6dsabyimLZnn/wpvQTWOUwGuu159xV/X9j9dI+ZPRzO5LYfygJGpKI
LxpU4wmKKLKu+AO+ciwar7aLxOjQebeRhRPwxgn3MXK2IYFvosjgxI7kj9KM
Om2TQYcl3GUW5N5lL5/TcVPubOLXnn/Et7mnFFbqHYX5+xz4065Z7NpUPR26
5KFy/YlDOP+yBvOv03BGqBduefktri1Zjk0rshXl2Sdxl+8Ceb+8LcEHuhGx
ciDpjdqT3jH+JOmYMali7uCKuA7Y43ssrh5wC8dXNcebTzfG9zxrFL+MrXBN
2hWF92djjHRJGG0jpPn0iZTnnn+YtMS57C3VZu7W31j+9hVW6NT+j5AVJ4iB
u2eLiwNHii0brxeugMd4ZDmdTXGeSRtMOUwemq9UsPk7Ffb0bsVXXiSOeC8u
/PKvInnZdzyp5BF+rRLJ/dM8qX07gwhFZzDtgEnB8ZvuuOa+4qH5AuzjF40z
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
pw0VTGu1IRbb9wvxn6cIv16qhXZ/Defrcmbc5qXRqtKJlxSlWSUYleVilPwT
bGzMzHN6icduOomtWQZHvMzGUZk38NOjL/EnmoWHMgoF6+ugult2h029MJpf
0ydFOOO2ltTm6tKjFknEJq1EmPXUTBAbOvGaLS2547Ii1cqeo5SDnscx+07u
xkF+ZYoYIU7lm3iFHdcmgxN2J/IPP0Tx9Xa2FBZGhvLPSsu5u5EruHP7lrJT
rtiqFsfOVdxZ0phZUrAdF/vmy9HjZxh57cK5g7bg281aMBOvWTFvUicyI7LH
Mn4veEa2qDVWD+6Bj1iuxMcKXuPStpEYhRd10Wxqhyt/nJRvi2nPDFV1Y4aY
qBjkqGSS3w5XXrhXqWJ6+3A3l8bx8Y9ihF+11OTVdyvaqdcc6vBhNe13ZjHd
er0ltfpnALGbfodfM8qC27unlspuaWNmYgxhevU0Zeabv8U5+xIw2m7ORE/d
jxueacps6mrGaM/r8LxVS+VjSj7jknp1GfMslTzU97R84aY1+M936fiPBpG4
3vRJ2PuEOUPLtmPhkQkO370YP5+Xj/18FzEoI1oZtsSFfbdlF+e/pI5QOc+W
5JW/JPtvhNOZLYuo+SobEdN64kMrG7H3oWFi+NvGtKnVU8Et34XP/NSCVXXq
zow6UIGPxZ3HWZmx2It2YSp73JU7quvghz2uYOuTFsx9k3V40qgcHPVkKDP8
+V3cKH2d/GZMAX7+fAvWXWsk09I4bDUsE8fHN2Jqhy/Gf8xywru4dvjkRjPF
eqsKJToWwGotL3Pml9oItrPHkkPRg+iVN6eoC2oiWl5+Sr2coqiGitTLMZnK
NJ3FToG96PJ4c5LZzYOf2UpgzT/Nx/Ev5dh0QKbctPyFvNI9V3782GK88kUl
lqHmzPgAa5x3fAvO+uTExDy2Zsz5usym8g04vXwitrRdKKclJfLJwRZMXvwv
HLfclNG+/FumH95GtnHQE0WfnjGqheIz9srk1rxFYC+ByINImbs/7ZLzkvbd
95OmxW6hmmxXqv07kqCmV0msz27qlVdPDPxhR9tkbxLaWlzikFu6qmhvLOMz
dL7c78tVjOpYdU1fsQc7dlfJrS3HY9Plb+WaJ2tlcU9f4Y5/ODDPnZoydtpL
OEZrjd9OactERHaSPwxtJU9pswlf+tyM8YjvxUwR5zB9Unspn2S/V/kOHMe1
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
j+z0RsgGfr8C+LMe+Kk58D898CvCXxKBH3yA+JsD8S0D4odlt6Xo7FsPYWBc
MTc0pgd7omClMq3FEIaSzABjhie1YB/tKZymy6c9ko+JtabvHZxJT9udTO87
uE5BjVioer26HXdyxnK+4m20cKB0uTAo4BWvvN6aTxvtwLXZ/1D169topcWZ
gUx9+R6a+liiTPl2ij1Stoz3P9UYUTsG4HDg9+bAn8OBnxL+lwL8KgX4izXw
g/0Qf68tGIF2fLMQUseu4Z4XvVdd4tsrj027R4+1aUHvGX6ALnAfxPiluzP1
c+/TlVbR8vCPU5jdMVqmIi2KkT7omHV9lzHxw3oyETur6EMfT9NBC1sy5Uv2
0/lLmjF281jlkiOVqnVsFNe16R1+UogDWvGoNW4E+td3altRGr8dy7q8Q5rT
PZGmrwzn33mOw5vcxNFzGuK28i3C4SeVnCa0PpzfVdVzE0l9Rno4mj7sk8oY
bu5mKNu5TOTeu7TfwjTaunclnX2zFTP+GsvYH+3FCK16MzeaxDBcyyhm7M04
JnLkYsZptIyxWaBh9g4azNz3UzIz2wUrtbccWJu12VxVZjNhH9UPfUgagmdd
vYtPgT73/iUV658Db5Y5I41vFLLutAj7RDQWvT7k4SDxPFrhNkL4u+E6jpKt
UFFUGWPs8XFRXkpur6qLr6hCbKJY6dUK9vqNfuz9ib+o/lmRpVBXXaPN5w6m
d16zYXK33aYXDLdm9twNo8+lfaJfJm2nJza+Ip/5ri2z52E8M65ljPLWns7s
g2cF3IiiDsJGOgAdfTMJB514Vt1/ROpHhgnpiJpzR9B06YP0zkPxiPyn+O6b
J9jm8kC84pkDevVvIn8k4QSs4cHq93soqrWK0s9gK9dHckIPJz6y3zZeH7iP
P1EUz0/uEcSlzbytGu5mrrT3TpK7KtcwYce3Mb0cNjHJGyczcwYnMPEVW5i9
jdsyZ9bEMrbJUcozuV3ZZ/7HuWh9JyHNMwiduh6A+8wtx4Vkfl3bQEzFhSJq
83xBCi4VtGvNcOKvx/C4kebilsB52Nc5GB3jmwi5/87ivhSmq6p9n6EFSxVw
HOXjxys6jhei1Y1Qfu8oVNxlNQo57IfGxPUUtjUv5Ep7f1S9FK8rvpatZ1Yc
iWGC7LyY8q8OjKP3YMY2pwdTNXglM4vaqiw6MZC1OHiRG3O/s2ATPRXVlYVi
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
0fD3Ngy0zoeTo8IE93bpvPaudf4aqx+plPNnS41hayo1pAC+ZnEYuDfW07sk
W3ubZpkGSkG+Z+jBPxbyH1v25Q/fG6293b2H1ul9Y8H33jVxAuiPMJZHa3zp
rfy3/vs/5uuVxxc2/2p8nPX9FNs7gG95mGB8Cv77ylYMKPm6f4adjwf/nEpN
K9MICgc+WRKLTSHbST57UyWiuyS3LqGZumdkXaNYTdssnWbrpCRN8++28pW3
xok/H2pv0UfrgI8wXpKn+O9X/KDkv/Vp5r/sXhSbf6wDP3NdFyaoAtL5Vy9s
xa6w/0qV+gzDx3pACrekUmM04Lu5EKMzkRgNBf9+lEqfxrpJyy40lcasHEGH
/mFDki4t5UKKunn+tva51r3Be6EA9O+j070t+m0T8Lp84HfBwPMY37PcL6lw
P0dv/6VHrq4SXz76jiDdL5SJb5aFCfqr2/gJZ21FH9h/eyrUt9gnHfCpZgC+
pAUYFUdg1UsjSfKD/zaynbSxbhvpXPJqGnt/BOmSdlac03+juuov32kTpE7C
huP18A7Q54uAD3PAiw3Aj/OAJ1v0x4ox/7mfU15/a6TkX6ZfFvxSJl6dFibI
b7bx6E9bceh9a32hE+B7C9jusxl2gA+FAj5TFEaJIVjfzkgSylLo6XrtpOEf
20qtq6TQuusSiOzdBF8cGi6Mr/rU8/bfo/mdDwaL9cPrEA/QEy6gKy6x/h7Q
GUbQGzLTR9mwXxjOJCs/LbefS3n9Q3k/ymS5f7Dd0t9jejER24N//Aj4XrK1
ZfUZZj/AJy+BtZ3SFxt/WkEM1VNoBmDLAowb36bQzJ2biSm+F0Yb9wro8F3t
hXtNtGVdZwrT5o7Eo0GPMV32O+gzptNUoNcsuu3dd4TpI2ZPputOKxqgmXI/
x9I/eJnVPwCf1tp/aQL/belm7Y9i8YXV38yATw/rK58A+03qi01e0cT4YA09
3bqNpB7eTnIdkkodphqJ3m4YaKhLAjI2ghys1gj7Lmj7xjcTj760IzeGJ9Pb
oG+ZzmV61wC6F01YY9GXTL8xXcz0hwb8aDb4O4ubpkFK/oiF+GzcBrrQVpSf
TMQ2gK8n4HulxBdW3zJHK/tvFawv2C8d8PmOaSVtvww55lQqPZiTSvTzx2K0
4KGAzBzoBczes0C3Xv/E/1Z5i5jcWiZTXlSVnu2srGPnBezcwFSPUhlwMnuy
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
521B/+pBX6pAv70xgT4C/dGvvQ8dtDaM6HtArnx1VUTZ6wT0NMIyf02+Uyae
hN+/jJ0jK+f35fvP+D/wGSrsP1Z/Y3NJ9eXvz5it9iuvf7Dz+3ebUml69XZS
Rl03yZCSRfP/6UrNW5YS9Ks/KX3fkS4D/TYP9JHwvDP5p1ljjOR+InLvISDV
AF5uY70f4av0H9nbf/3+1r/r+818R0OF+/fx5f0zbP9NsL4vZMF334rPS6nP
jGzeTnJ/nUpVJRlErupC9G9cScKvlIKj00nXT2CnG6n43uUL4hgJ9EcV+I6e
jXg0P1hwuGTlV+uV/Db02/V9+uV83Lj66/l6zH5Lyu+3s/vjw8ME2eaL/SrW
F9ybwicllRovsvlcyzGafxAbqxQT/as71A0FSM1XUDHsokqcul4rnCn+pEUu
uVp9k2FC0Jgy8Qel/9JZuV9SXl/9lx+c/3o+Yfl8OBb/1rH5k0r/ljw2TAhv
ms4fuWStH+ndrO+7mJX+Gdb/YU5W+lNOxWF57m5SvDiLpuT4SrZ+pbTvvVj+
+2fBvFt4pHZM0kCtartKMC4pEufMGk6aLbL677Bv88fj0V/1X37bX8bed1nP
+ivYfL0qEwTfE+l8wAtb0eHJRCy7fbHfU1Zj2AL4YgDfbzEYDQGMKJ3krdlO
74/mpbubq0tLR3ekg+UVmsL0SM3Oqvs18Z/38JfNq8Ro0EehoD+eAL9/CPw5
+P9RPy/vvyzffywfDgB8M8F+rR+WielRYYLxn218rae2Yi74b55S/yjvn2H1
BVNYGpHHR2OknYYNl1OBI6TSkVfbSTNmt5DcHs6kI4e2JFUb1ubKVh703BNc
i/cdUlfcAvryMOi3naCPZoD+iAd+b66YfyvUP8r7Q4cp8YXxMvZ+10eI80OP
hQn6Gum82y1bMfTxRJwM+IKV9WX9KYid3/8A+DYCX/Tuiw1nV5D80Sm0rFY7
6fzrtpJD463U9Ukk2dYS4SYrH3PtXqq0xXKQ8GqBF17L7tGDvmwH+o31lzP9
wfpRLPy5wvuD5fPXyvujWP3XCPHF49cy0XEc4LsN/nHTVpz5YCJOb2f138eA
ja1xIfys7wfrO2MuRmfV2DA3iqjurqEp7dtIPf3aSdE+YN/dm4lpm4T7/LFB
QMOHaKpUWcdvP7tBrOQ0hGwEff4r6N85oC+ZfmP6CDkp/T0V+ssMFeIfyx96
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
sv9Tr2sRYDsnv2f/DK/PDmKbsmNaP2U8/a55+dRcyrS/4cD2D6muvj/zk2bt
i3Xc7UsuQiyaLw7PWoPPXp5Bki6/IxkTXhG025+gXhBrLszDdL63j09dKQz4
Ww/gR44308Sef6iEdK8grrdXhKbQMFs9efH32oq9DgnVBbmkiWiOeilOLJiE
I3tNw6dWF4ro+TuBq5/MN6n5TvthUjWN+VYDdnDnRPbHPYPYrJIw9r6/N3u6
gGNvufdhtXsd1KfUGu0m4yNu2MhRwssD+0SHwvtYyk8hzVBDKbvVCZJ41ovo
PfphuXwAlqf0Jz6ZRWSNVRHZ364vafWsE3Y6kSPIGi0vx8/UojpbNcfm1+OW
uE/k0Q9bBTTlspg45AZmPJMInS+5/XgtySZ2GUnZl4kfnhorNmiUxbfde0ur
f5Sgxik6tnRcDvPqiTUb8zbLq0zVmZkyPlxdLfgnbVxeCz6gOFWoM/+ZGJtj
RRLOHSED5zWUTPGpxMA+wfqFVhhl1MO5PayJ7/ZjxH+QtdQobiapnhSKe7Zo
Lm5olMJPefFRi3r9oC3vs4fL3NpI+OFjd1H1w2hceDyIzLPtIeWRLKlWYDXd
0Yt1dBPjT0pjPFpKw+wf4pELuok+/SGGDWmnTeAWMnZ1zzNtdnVn/+67jEm4
EKhu9jZG+8ZJ4PccOyuI553x9x/akb4LTpKBXayl0tS5BMUaMbLLEFH/DNG4
1YhNh+eShERr6eSsYxXzN9Z1Oy1uXdRHqLNkK5e74Kh2VbyKl8pWCB+654uJ
q17hNvdyybQJKVJMa3td5pGuFfNO6V6cCJcuuo0zHki803My99BILF6KF9Ce
H7hQz3IGJScwPsereeGJ49RP64Zpw0YIvHf6VeGYG4uL1vUl5SozKff/TEon
TCdo1XSMjoeIqFWwiCLDseekUBIf95SMdH5IDKX9KuaDjLhxXbjzwZtPNDfl
TF38+VNRBUJbtQbvGBhI6pzvJUXG50kZb1hd0k9NdXxGmmTu3kEypmgkOkfW
0bmJblV0Eymv4xL47H0CIou4WWm32CM3urAb3Oqpr55ntT0ut+Ctj5wVOoB8
+Xf6kbNODwGfPSVoVCiRI8PgbL1FJHQVZS4YZzYYT2yflBDfkSVEf2YckRsD
l3BqLO6MXMMbD/Tn0NsJPBpRJmgjhuJagatJ8JGV0smhDjo6Xzfb5YaU6wN+
qWMifC4h4Y89pCA3O132jhq6hXJtSdUjCss+mwVkF8XlFjZWL7wew77Z+FHT
+dIjbtVfqcJrON8PoL+rIF/vh09IYo/xxNQlGKOBXUQUphNR1wnYeD6QFKwo
ITvjSohhTyCR+fEYrW8tIt8DvDxyGoeuw106D7y63zDcDvivVY1kKdapuc6j
lZOO7nGh84rpXhzktw4by5cSk5hWMddYNcYkbQQsrdLXwUhsJSD9ZS06uII9
o07S3BTWcUeGjxIaRz8Ti/5uR07D+dqB/kwgnxwyAaOrkohOwo8n/J4VSAyJ
JcR2aQmZdkDpP9ppqR8hUxQnLw/m0RVL/pnOL7ECvP438F8635nucaH7ZuRx
Cyr299A9Q3QfUu/5jXX3f2yse9BtlFR+24Yg9xEiyo7gEXLSItSDubW3P9cx
10UI+G2faAX2Gw/24RjwmYTD+SJv0F8eyMZLosl9AjYcDSSnl1rmI005GEia
UPm2K/UZWl+QlflSIN/gKvUPyn8oD6L7ZhBnAOwOeO3PeEznaetn5Uq3rPW6
/B+2SAWDFhLDA3uMxo0UkHkKxKJ2EIu82XZnbvDbwT/PB/83A/zLcLBfFDTd
cv/84HyPg4wgn+qoZT4h7UE6D/KRaePxBiqfXKX+kW3pXxgI8lW3/bKf+D/7
nY2jMJ1HXvbnuor3i53afpaCf2gmzep8ECOuqYjyeR7JTbSWt1x2bItdrmJn
iB9h4J8N4P/M1L+sBPtdD/YRohPlThNw6ZFAkqzst1pF98+A/n4D+aqvsJxv
hf6U/fG+VfpTvqofVen/MK5OJolKfw8Z951uWtoCqVrCAFJcliOitQ3hHtJ4
TucVXAEZC9U7IP5GQHxrReMH+Gcj9X8nwb+wYL9dLfcvF2T7WdHfWdDfdrh/
1ulZfI6PUn/LtZwvfWdo93/1L1z9kv+j+cmK94mkuW7i4dWSf8FyEjqDwynj
Nwoo/DLI9xTO+IMG+ZwBXeq4UsAHATT+QnwzM08wqg/+2TVYNGmCsUqpf9D9
PW1+CyTPZ4zHQ/a4ieLjLP63WdFczgNFvgGW/VZOVc434P+Tv6p8vxtbN1mi
e8WmyQG46c2HgudSDvhRkhZl3NGqPtfhjR/yeBTNCgMAv2QCPvCF+CvT+OaX
UeGfkd14chH8S9mSEhIL+ssF/bXd5Sb+nJbF7+kSzVn9GszLly33z1ClvvCf
+VxV9h9V5q9o/qCpkn8ZDN/PNqtMSFg4lu/e1p5DmVu4xLQ9fGfHy8KnN8mi
aUqxaAf4qnSXPzG1B3ywtR6m8U0P8cMO/PMl8H9PwL/0gvsXAPLNzcniPZyj
uXoXg/miP8uEB/0t96+u7f94n12lP6DqfLOhSn5oizL/ap25THBbHsI38p/E
dX0QxPNW4UIX+z5iH8MovHRBI6Ly70aMgP9MPwC+Avxi19OalEL8NYJvHADx
4wD4579AfzVBPscrWby6TzSneRvML7hWJnBK/rluFfswVLXf/P/2b/lVlU/J
3w/aGsqniOu4ljlX+JOr7MTbf1TH8d9l4Ps7V5CbP5STkvrNJYpP5fOA/wBf
6QG/JAI+iIf4K0N8ayKMxyVb3US73CzeVDuaW74b5MspE37xs+yfqVpf9a16
vhe/rs9UzT8nV82/mEL5Nwe2cm9XVReG7x0sTouPwtd260nYlV+J8ZyblO34
g+S43l1CgJ9z21j2z4QBvsoG/FIM+MAM8Td8E8S3w+BfrkZzcuMQfvX1MqF9
lf6yqvuPvspPflMfpP9Nc1ulv2eg0j+j1Gdyn9cW5qKJ4kyVESc9W0ls11tL
p5O9K+aPZ8QeJKUuE0gh4Hs6/3kn4FMPwH+HGlgRo70ay00ai0h9gEfh4P/m
BPMBcP/y4P7plfcRfl2+mW9W8qX+oa+Svx+o2Ed41f4Z+Uv/x+EHYWIjlI7f
vN1CArq4SYl7gZ8r880MC49gY5vF+AHwj2GA768Bfr4F+NSkPy2igusCGrcG
4scMDmUE8ybl/kVUiW8BVf1L5f6eJ1/3L1S+H8+s7J+5qchXOT+sKEzMa5uO
TUr/jKlRO0mftp+U1utK5AdLsN45DGemdCRRwI/+AP5x4HknbP6+uYgS+gjI
pzt8DuCrxpb3Lwl+lvcb9Wy/7n/7yn4V+9Dbfpk/ROXbX1n/gHuMFij6K/0y
P6yyPkPfF/sq9RmaP0BvnbEJ+G8A8Mtr+SfELcCPNl7KESL6pPAVnMjVEeLv
BL4V3L+A/pb6KrXf/v+rvlWlvyKgiv5o/Siu0j7o/VsdypsbKPorDBNl9y/7
SeyU+ozpUjqWC5aI8s79omwoxNm+d8imaeOk7tFESMhRCY4ztHyHC5+0KPmI
1tzcnx/jXyYM9R2G+1XpL/uf9vHNfrXK/fFUfxEDlP6Zn0N5Y0gG988Ny/nK
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
7mvf557h322JEJsDPwoG/kHxvQz42QT4VA5NEuVTC0V0BPDr2jTiBPE3FuLb
X0N3kavgn2dQ/zf9Ip3vCHg8S9t0U03N9OrLWDkVZPSNYa2cfNlZiQNYm7/G
M6Zp1xikX+AVE1nE9oqrpq0zai13p8U9/vHctYLNHxsENq6lcK9VBH+zcTgX
Ma2pdrTHQXX9Tx81hvt1+YUZ14RnwC/zgL+5AT8yAf/QA76X877HFJ/S+XUU
X1H8chDwQQjE390Q364nQfwwg392p/4vCuzDqE6dU8SYfu/FIo+aLJIFdvW2
5UzYuWbsO+0I1mq0PSusvMmob37Hlq5px4SfO632dR2g3XduMtd/1Wwu0zFX
G3jIWXtiUBuNPO5vlhk/Sr2CuaL1zb3L/z18k+gP/Lcl8EvK36yBH8k3krGp
/wxsAvxcumA/iQD85we+ZRXgl/mADzZD/E12hvhmhPghNwf5DBU5J0e3WSxK
BV+tHw53bzl7emwcO77BWHbMznA244g927S6iVGF1GbLC+uyp00Tva6+68qE
5Z1iL0U8ZEei3eytHReZiCQrtqVqM1OKH6onXA3m1iaMEbyfNMUJwM/XA/+V
gV/KlL8BPyoD/kHxPcXPtL97NOA/85ktePfoUNHn15rCTzMg/qL9FfM7Le+q
TYw57hiDDOnwO/wTubL7ltVgua2/MuH+DZmzNduzP1ebwy4/2Y5VB9bwGllW
hxn8xp4hh4qZ258/MJsbmpn7+mTmIuZZJ3uO8fnnszp550VuQvQ5YY//PPxu
0j7iDvycB/5L+SXlbwbgR5nAP677l5LBgJ/trSLxZcB/Ew8+4actG8VpV+5Q
5nfKyvxJ0FH6WgapCuB3Z/jzNHb5MwObOiaDMbV96rX0czSr+X0pW35cy1it
3MDUc93CfB7WjLk9syOzqlUv5mYDUZM7z5bDcSv4XpcvC7tO3RZ7tb+PrV4t
I+Z1taTs9PPEeuRJQnrbS9Y3TpD4GbWJ1adj4sMsUTA/j+espi7VpMcvZe48
u8IennJK07mTyL25FsSjRh5C6W0b0efWbtGKyRJPr90sXn5xT7h+dQ2f+HcN
ruZOlcZkBf7RgDzRlqXMmKL27LCBa5hLn1OYVhOcmaKw79iWyVnM6GGyJmJN
P67f9nd81LCBYggKx6tiMdmfkU/0xErS39xLIuQEcuifAnLBvq40ZGUieUUu
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
qc8ga33mebqPPHJ9Po0qek4M8atBv+z94pngq/arZvaLFxsAPz8H/Lcr8Msz
wN8KgB8x/qHXAr7feNCMTw2A/8Ls/9kPVtf6/obZP78A+XJAPpc0S39PYSjO
A/l6lLEPNt9My+TLBfmiLf0pbN4e608xOHrIm7c2lb3fBFEjq8+4jgX5WX3m
lPmdrp+XDNKYyvNJe+Dn8cB/fYBfZgJ/M/Mjxj8Yvgf8zPZfsv2S3a31VdY/
E1D6/oEDxN9i0N9PS/9RKpzviDL1y/DS882x1mduWOozxfD3SvDfv392kw/V
S6R7b8wEzlMkIWdXiOfef/PX+p2bYkV0EbGfr5P7Az83Av9FbmzH0GliBH7E
+AfD9ww/TwZ8OruqpT/vL8YPHlv7V1n9owTOF/TnBvob/J/9R6bS+XWs/nHb
Up/RW2skQ+HJiEmm2+4kkepyJ4zQNojnp0G+c9b6jJ5X7HiBP2etpukhWTLL
H5gYPwf+awB+qQX+xvhRHvCPHMD32YCf3QGfxoB8OYDT5k+xvr/x3FL/YO8f
ePznfE2l9csllvoM64fTWWtMzI7mbEmmf/2VTCZKE/BtVATyucMZN7bmAKea
83/Klt1I98hntFNcsfwpraLG0KSZrAV+bgT+aw/8Mhz4WyDwowjgHwzfHwX8
HAP+b8uCCWIF5zTLfivQXxbob2CZ+XDZpffvttU+7sFX+HOq9Q58gOf8VjYj
dQdRNQ/BhtblpU85A607LFj+z45DLnPMMsZufoOfTdpElVfuyyz/wvIbV0KR
xh74eRfgv182psq7gL/d1UyiXXd1InsHv5MCm48XP3feJFRrUNGMrx64Wer7
Rdb5ojqIH1pf6/y6MZb6kQHsw3mbRT5WQywA+dh7FRfPhmL6wUbqunuCsMQn
TYX0FZVI/zuPjJN5hH3NMmY8WIOdj/nSiRsj5eeev2lY/qXkbGvNXvevsivw
803Af92AX54A/vas6yXp17p+YtjSiQLfMk+sWm04Tgf893NTMj1mxQfhLP5O
sO4v88k0+z/d41QSBvbrB/YRBP9uFJxvAugPnQvF2cNtpapVpgnHux5QmTxs
lMhIeWQYyqG6uzkUP7wtu5G9ui2Utr1rT3YsPkqFhNXy57tbZS/NZJkObymX
zx9PqwM/HzB7EW5afpb0Z+Mm4q8O1YTftVPEHj0a4fsbookO8KmR4b+m7rKB
4Zd1YA9jIP4edMWoaSXC/HMm+L948C+3wX6Pg304/UwmqGUIRsU2UuHXaYLj
xJMqUwOiRJnjeXQlikOSJ19wN4HrndGUY+9f14m2ERtduyQdTwkg9xsPo+7a
2XS0tiHdO+M6OZn/C/tfPictaXpefO+RJOi9FqsnrTsihAVHSWeTXciHr9Oo
C+DnT4BPdYD/TIet+AXwgQHibzrEtxKIHzngn7eD/8sA/1IA9qsH+0BcebbT
Syg+dEBlF/SSR9qqPNKX51GKUqG6XokPvDmCezXnLKuJcDErBXVY7Rri0Opx
UsHGffjx/RwcO3sxntXBDc+N9ZGudrcXKx1/rO5Ac1Tp+LE67fM58c6WcPwt
/RF5AvyjL+B7hp8Rw6fFgP8AX+kAv+QAPmDxl/UfuUH8+PU6iK7NmUn0zL/Y
gf3qBoF9pKpe12+r1L6ro0SGN3D3XvCh+Zl8HDHwz5Ii+YHdevB69wbcgE4N
lYlxtdTX1iYIj3tlivUC34jndieKb3e0E91GDRQSBtRSH6l4Tpl79quqXv3K
Yliz21IX4JdTgb+NBX7kDPwDrXGn+kMfzPhUC/gvDPBVAeAXDvBBMcRfHcS3
TxA/6mYy/wz+z4X5lyjzXBmtbQce9fU072dGKIxfFqnmz5eM4Q951eVL+vym
0LWry32Z2JPrERbMZwwzKT9pbdSdXeeo716cp07xtldHrK+j0i1fz0/u8wdP
651Vt7ybJwYMM+BKwH/rA79k/M0b+JEL8A8E+F4L+BmN2EODAf+tAnx1AfBL
LOADrw2rsWe9sdLU2hA/9EY2J0plqSvoeeQHZ4wEeETWn8D336jj32nD+FGd
eN6zS0Pu9ahPipwuznzjgbW4OSiKW+7TiP/Qs4ryZ8eaykV1Z/HPx+33nj3M
hzuX+VyZU1UnzC8YLH3MdyIHgZ8z/hsO/JLxN3SkgBiAf5gA38cDfh4M+JQC
/usA+CrbIQz/0taS8Nsdgv90L3N/lLV/hreEkY4KpO8C3zvxbGdYXkg1/nMn
yvm1bsjpN1bjpl7dzwXtLOYCO2dwNsdyOF3OdW/H+je4UI+afPrjCIUuNN67
4eokBWr6QNnq1TGhHndMqmk7lWTmJ1IR+HkA8F/T5Bk0EvjbA+BHx4B/zAF8
X/BiBuXfRBM7bjh2y7CRhA8zBWebw6oqjQ5a5DK/m87qXDoOaTfAV9YnVRN8
YhXeuPowF7i9UGHXyolr9jKHm/C+GRc+OFQxL9zE0cue/Kn8Eu757aWKsJPh
ij3PPTjvPUmK/PTH3IaSrnxl12jBJjleOrQigEwTV1Ou0gLZG/i5Evgv45fz
gb/1A360EvhHZ8D3n3Y1xr0+3RV9mw0T0n0PqYYFpPOPM1dzf8tmvn+sRjgJ
nmbw5x7wFLQJqHFfsaRjhmK66MHNWh7E9X+9n/NcOIQP5qP55c9W8Xt7HuZd
hpo4XUg7/vDlZarnPfoJ0b8Xi+/SBPza5EoU0kGScr0+rVrkRuck+tLgOnnk
mLua2Jxrj13ul4jpeJBQo0+UqlB9hj/w+AFverJMtVtVVThUZZw44qJBKj95
E/bcU5lcq55ACu/8IM1bCeRMExdsc/qIGLmjljAvw12V9TiRRz0m8Si9FfwO
hJv89oRiz/pynPHXHi6iKJHznz+H45zilF6viNrQ/aQwJsJdylqSgFM2niLb
dAPooQOplB7oJweV20m/9RpJ469lkykZN3H41WsSarRO1I+vLmxoGqSaOueS
Ug/Cbw/YL3zV1pXW1R6AzwD+e/u+F/3ks5MWXW4qb/FtKO8Ycp7GGW6Qe9MW
YrvneeLHD1/VxgaFSqRbAPJNMedy949tzRde8OHlR8G82/2LivNPkOpdo6vq
13V6i39lxEm+BSdxyasK9OzsgzSrrUr+KTWWPbSt5R13sui+WkpqqwslLm2H
Y/SpJfjjUwIytlJHOG5WhR2rLpT0ChF7eO6WWsr5eE12FdoV8Kn9lzVyx3aP
5dfR1TS+q5dpcpVH5O2otVw14wtZmBGIM5MXiuhiP7CrAq50d2HHZj+4qkuL
OH7vGn60d31V5MAKwgb7veLU6Y2w51cPwOwOdPTaHHq4sb3sd/IRNegryD0u
VZKbVYmmqrN5JGDDDYw8YyTAooBJN8Jnt1QH+CQKAYMcpZBfnfDahyPJhO1T
qOPuEXIi4OdPR/toXJY11CCvl7LxsI3GQeqvmV7rpmxMe0uLTeNIn5qxEho/
k+XsrbbvwqcOEPjlugXc9RkLlReqXFVff71HDLzYCy97s4nUkfyp64kX1PXt
DxrZ0UAdCs7TgpZ15dinJ+h9nRvt26YJWTP6MWD6ZSBfDfjcpSBjFTFn43IJ
Zd7FAbEfyNFaN+jyRpvl4Fd1zPWjgKN7gSNxsq5XNdkhYa8cVVmrqVrvsVz0
7Qsl5aaRGwaDhLxXwGdFK62+iUOGNdz0a878BZmqL3fsLeZObYSDQb5HLgvo
c85bjkx6RN2arqGZ4XtonZNV5O9jHtIv6/rSD6cDyLzxnnjgtOciMi6AzwTc
rBVEtPO8FJDZmuSdHUWrXOoqK5PZLFulprhybU028A/johSqBecXNtJFdqj2
Xf76qK2mD4mRQ1IH0cChV/EGr6rAsyqyGGTtYc/hkH4uF3xyuSpz4QlBOhEn
hZZ4kB+iP7XhveWArWep4dk8auB20iz7yvLu6k/oEfcQWrAyjlw7FYnLHekg
Fac8EgAHwGf2EVH2CyksvgfptGAtTZ+0Xs4eZNl/xOYzsPfrzPzoYwpxObSQ
hvmsl00zOE3DXd9kpxFtZOeV78mI4qFYH7sOcP1ytUW+AM7iR6fzn+b2Fdos
d5cOvDqJ78H9qwLnGw36iwb5HFal0vFP7eQrg57Q109C6NwLm8lAx0O4bvuV
0rVB7uJcVt/SjhRR3kfJOC+QhNUDnn04Tp5aq4HGs1lDTXTp/Dr2/h/jb3F2
NOwOL2unldP0zXPVLAtcKdfpGUbn97EnXrdCpV8OsfD7sveQlrBdkPC8Bd+Z
yb0/VSz2WZyAGxRWoEFgH1q4f35wvjmgv2CQTzPsCQ0tCqGdn2wmHbVHcJsv
26UzpI8YXq6dkNA8WETpJZLeazBpOj2e2tvFyxzbW8rmY3PxspbNR49YQtDU
0+b6kX5AEi3ulCbvNmg1HU5elz+dvkrP7JhG7CKfSX+edBE1v0TQIeBItAp0
uFaBpjqb72SnPQJuvekUsZlzkJ4D+2X2kQ33bzec72XQ33KQr/nTzWSW7xEc
OT5Rcpo0XOy9sbvg1XacOLcA5GP5beCJi4EvtgFey/a/5pX2H7H57dsXYlRz
pJn/ps+Kl+esbqj5a6CT5nDgCDlsYiP6qeImfCz0jbj5uZ3waa0HcIUWKv2b
jaq8JhPUW34FgMwa1XaIH6vBP+8G/xcG/sUF7NcN7GMr3L+LcL69QH+LOh3B
c0cnSsrQ4eL3SQHCLzROdHpYIrXoY9nf7VAm/+xXmr8qsu4//2zpP4oHfp7k
20CT79JA0yEmFvDuYor8G5IDBculPXmnBNtTFdTZ50PVLr+mCR6htUWld4LY
oWC1iKLXCxUgvt2H+FEA/pn5P+ZfHMY+pJ/BPt6e30xOtz+C84ITpeQlw8UW
Hr2EdOdx4gLg1fdAvj3W+X9l5yNpy+bHrfl71n/E9Mvm7Cy1jZcT6sO/selJ
UOot6Wc3D7FNUpq6b5pGKJk8QizMGiW9HWmLRznpceGwEKz/slAyQvz1g/hm
B/FjEPjndPB/9WP60rBVcaRtzUP40PftUuuWw8WvDXsJoapxYg+Qby3IN7tM
fav0/XtD2f6j1//ej83qiKwfyJnVP9rC/bD7JCHTIDHap6XQ621l8WeEixRd
rRG+WtWJlLucRLSuVWjrIz9JydymxAXwQTDE31iIb20gflwC/2xzNoBUBP+i
7wi8s00f0diwh7C31zjx5LMSqQ3cv2TrfKnS+Wbepfnnov87H6n0DrD3i9eX
nW9mGA9+Ri/Mz40TG6ZfllDb81gXEUsaXJtMow5dp+9a2slPW/5Jteun0P6A
X0yADw5C/HWF+OYN8aMk2BMbLneQCnq4iyijnWBUjhM/gf4+wedH/We+2b/m
J/4P+QZZ+6P0/+2fQQYBObwW5zgSHHRpMHELaUXTXx2gHhHNZGOtfnKEobWs
rdtTzq7pKLcEfHUI8Mvvw0NJ1YQbWD8U4lsUxI9FjwWXcq4CmhwsusDnRvWx
9M+wfO2g//YfvfonP152f1TpfnY219DI7P+hdT4cy79k2kpoxATcPG4rebB5
PXUZVUXe7dVLjqnQXHZ4dwT0vYA6ECRf2KmVbwL+m3roJu7tNRy7K2MkfUOI
v4/1AqpeXijJHSHq95dIMb0s+98aWPtn/tW/9eb/5p9L+ysaW/ujjNb9AfpT
ZeavsflcjjuIR8dk6uLYSjZsEWRdrWfU5B1ODUsziWFDLZojVJQj33Dysuz2
eNmFa5Lf55ZSlDPgl0sOArp7Rm3w6yPefPJROtVmMKljrR+V3r//U/8t+vf5
lu6fOV4qH3t/vHyIqLsF8tnZmftn9B47SPrWZBpcz10uYPNdDqdRo28+QR81
BO0Cfx+6lf4o6Ch/qfOKrr1VIu5D60Svo6eE2AEGNUqPVKNNAnzeC2nl/ECC
IX7orfWPwP9Pf89/+99YPZbl/9pb58Ox+WFhL1IFp1cW/TH5wqz5v7Am8LD+
nhapBNVLxajfB+y93p3maavKIX8q5APcYlq7+kBh+Dx7ob/YQl25bTO16/nK
YhPDeckhrgcZCfG3LsQ3V2tt8v/IV/Tv+kzpfvvFIF8syFebne9LON+MVKEF
nG/t1xb5dNb8H8tfObD3d7fvIGhhJEaXV2AUsoeUnMygznm95DbSI/p0002y
4etq1Tapiyo3eKuqbmyi8HXbcunlkdbEG/DLJsAHPLXEN13Z+tbtf+pHpfl7
JqM9fM/q2ld7DyaNCksklx0TxOhfqcKfX2ylp0WheJSHJTdabJ0f5sDyV4tA
vkeLsT57Adb230HcXibT55Ee8qqrTeSMtYNpwY3yxM5mueJeaoJySs8awqMR
jtLyI3fxX4D/MgFfzQL8EtHJEn//f+dbev+aWPP3xaC/e+AHlDXBfnulCReq
2kmDQX8zQL75ZeablbD+mYEg82Y9Rn39se7SGuIwLIk613CXMz66yfUaJNIl
hQtIXBOEN1RM44c9aalu2jNELPdXJzwL8LMz4FOG/7wBXzH8YtoS/6/+Ld1/
/Et9+3/2l127VyKlHpsgGuF80Q9baSbYR6iHZX7TjzLzr4wE9Ld3OkbxhRL6
6kVQVDiNj2guR912lz8fTqY+7ZMJqtwbV51wTKyyZ5nq86d0oQa3W7oK/ONP
wPdtGH6O/s/+mbx/9Fd2vhnz5xGl8wn/KJH8Jk0Q9fEg32ewjzeh2AnkmwEy
PStTPzLPXzNNxihmlaTfEYNRySviN6yQ+oo+cm95Dy38PZUY2f6ZoF+itrm/
8G5pFcFXVVeKIvl4CPAjxj8Yvg8D/Kxj+JTNN0sCfFXy7/p+P6t8GaX7cVh9
IX6CqB2eJqDydpL+XSgOA/mmg0y2TSy5W13Z/pmFlvlm+i+pxHvRHur91kfe
NyOf5jx4ToxsvplbLVa/EVDAblX33GDxds0BuDHwy/LA34Kt/TPp/6N/JtKq
v9L5a/Gl/YP51v4PB5Cvkp1Zf0y+WSBT+SaW+XV/9x/dsPZ/XJ+Mje12EOPF
ZEqdPOSpG5vKDQqCqG6wDUFOYyXkwOozZ839M/MuGaQvwM+7AP/dDvySWusz
xhHAP04QgsrUZ4zWGM32D7K9XWHW+rT5/YN0a/0D7CMY5BtvlS/PKt//rz7j
1sxdfvzZTd5XL5HOY/WZo0USKmb9Mwq15b1dhMZN2oQfvO9Ff31eIxcD/w0E
fmkC/oY+pRAUb0cZvmf42QD49KvW4l/YeylBcP9as/4eHchnSv27vsD6P0bD
z35ttV9mH6wf5e/6wk1L/SPaWp+JhSciNpnaFCaRbyM7YSRug3h5Rm3hr+Z3
n1HXXZXJMZ+dlG/3WPYEfq4D/ou+dKJa4G8G4EfIN82M7xl+Xgj49MMyi/87
BPahz2D7ZyzxV//Goj/Rqj+TVX9/z9dj53trMmb1mnCrfO/hYf1KPVruIBO/
TcRBqmLAG23YO+TWvamiOUe5s3oCMV1uKhdEV9PYeb0083M98F/GL/2Bv6UC
P/oK/KMj4Pt4wM+LAJ82Avw38vcJYnGKZT4cq2/5WPvfCqzz/+LL1reYfHcn
Y1av0Vt1/BYeVs/Ogv9vz8tQXNjJVvqrNZshvdGaP7Uzz6Zgejx45wfZ6NtQ
ZvmX7MM2GruEvWZ+/hz4byDwy87A37KAH10F/pEE+P63ap/A/40Xlw82CI0P
WuqDIfBzRsLP+2atb5mYfyHW/Vb6f+pbkdbfgelwEnw/Ff4/B/j9BiyzlR4/
mCnkFB0B+SpZ9roaK/OowiBzfWZ6S4GsGHKe3lEekZ2k/pqYylrNp0dtNQ7A
zxcD/70K/PJVSCOa060heb3lljR94CDRdH++UP9VkXhoyAQc4Gjp73lq/dnO
EN90bH7nIfDPhlUSEqZiF2v9iNWHmYw9Qb6+LC7mh+I7c22l3nSWsPrdCZVu
3imQaSdw6hkK5FZeoVtmnufE2zRyweUNN0gcai2H1ropV6r3WO5BYmTbEW1k
X+DnnsnTyL1ym3Ah8LffJA+x1gZXYcutOLGiA8EE8Gk3wH+DAF/p2c8H+UwQ
f/UJEN+2F5r9swn8Xx74F3+w3yUgH6uHsbmQTP9ola00+uAsoUG9EyrjlWpK
5BzFo6HLODRxs8KhkYYbEvkYZDRxQXuPiIOnLsRixheyM+0tvf/tCw1IHURP
RL0nK3rbk7w5z6Qq4htx08FTwqejKWrny5XFLnsvSyMB358C/OwJ+LQY8F8A
6+8B/KJ/uBijLv6YxTftl1dEZPMnwf/lgH+ZCvYbAvbB6u9oIXtPaqZwcZ5R
ZVrcUokKJvNIP4ZHruW4B/rdXILPSIX2tMKbzfqodN1RuPd7nvjpQCCebBpH
DqBp5G7QVfzpzVD86FaoVG6Fixi31VYYoa2oXnlPIywJc5H2ep/Hk4B/NAZ8
nwX42RnwqYnhPzYfDvCLHvCBDuIv26/mCvFjFfjn7eD/wsG/6H9MxKgDyIfY
TI8sVXGJsxKd8uaRUcmzOuvhZeX58q51+BwB8T3KGThkqsdFrGykalL7qzrP
uFCUHGKloI0GyaFBVSl++jrxgXK9MPuYWj3tV3XVzVHj1AW6EeKrSo1w/qJY
Egv8iM0XiAZ8r+8M+LlOKtZfWYGNgK8Q4JcEwAcdIP7GQ3zzh/hhyJlJspn/
o8y/BIN8Byz2GzaEQ/rjcAfDFawfzni7Oe+w2YG/757Dqcd155t/bs4/O/6e
q37vgXK+9yB1hG6mkPJ5uXDKq6LQ8P4ydcKMRao2E67wg+K/K+tMni68PjRK
8qziRDDwS3fgb9HAj4zAP8z4HvCzC+BTLeA/hq/mAn4ZBvjA8eFz8gHiW35m
kdReYvVz5v/WsP4ey9x/4264c13N8/8RCuD9qrXgBzx/zg07uY4zPt2kQEeu
tNHvjGlLF6VzVL2Sf7C6jbLGnelKuyuzlOsLayvfVtzJoc+Z3JrvcSoxrLZo
O9wWZ19KIsuA/zJ+6QL8zcj4EfAPLeB77akM+gPwaSrgv52Ar9SAXw6sXY0f
1BgrzfnQXHTiS+tH7N1vNscTZNS+BNkqWX1hdT5n/ApuX9BarsOoE5wusTd/
b10F/seLTO7zei8ux/emIvB0hiJpbFu+Yb0WHErUwX1NaJsVUJP36TNaTTQJ
IldHj7FrFWrTyk4OB/4bDPxSD/wtAPgR4x92gO/nAH62BXzqD/ivU9Yk/LNF
LWmMS4qQWb6tumAIm4/J/LNlz5BFxjbwNQSeITzyXsm/i13Hf0+uz/sHdOAd
JnbjftDKHN5/mSu38yrXZMRKLjbZkU8duJy/rZ3HPz5vy9+u+pB77FvIHTnU
U40frxb7jwjB3iy/0fJP6gf83AX4bzbwy2Lgb2uBHzUH/jEN8P09wM/ZVXrj
P0b9EvWtpgmGZidVa8es51OLs7m/ZTP3YjLdsb4fsA2jH4/S+3Pnpv3JJTes
yf+4soXTb7+rIAk1uHmJPvwDXwd+ydtZ3N66NvyqncP4IYsn8a8Dm/J+5Z5y
FXoG8IXD2qrqrV4veH9cKB2f25QMWT+FXqzpKGcDP18O/Pcn8MsM4G+fgR/d
zilPujZE+OS4Y+KvFd2EbblJqoD12fwpVIEf0XQWZ+nbigE7oTzSFcBXlge9
rECmSAUKP6HwSbDlu/5m5K6fKOQ6jcf8gRTE3+vYks97WY1Xv/7ONWnanXfz
Wqr4M38wv+ShrDpYUE4Y1Wm6uGt/lPTbvqY4flMqXvlnd9Lg22PstsWBaOM6
48QjKyT011Qx+EMFoWFXomp36ScXU4KUkZVmqS5Oe6au4NJYTG/gKd3r1hTf
2V2ZfOu8hXwSKtLyC9aQjweW4LDJLaSQZTFC/TZnVPqMrXxO7gJvrddeBToA
MUbvxm29soj74d+Rb388hL9WPIl3XxbN+5/txXftuFeVU324sOD6C3HDNjVu
P9CNJFVYT8bef0EOvK1B6yemE6XkThaHaXB6s0YSiv4kIKflatS7SNn/2nol
59xc7bggRdi80UYqfNUE9x7gRKZEF5GrgK82+rvKNNldbvaipvxoUWP6enwu
Hkr9pZtLooSwd3NVSNwAel0OtnBdgfQbuJjv4xXBAYe4a70r8VVmXFPszFUo
G950UB8ffUR4UegtBXqtwt9D9pMLp9pTx+IwqjVMpt5jO9G4uFNkqf4aTv9w
FfD8JhEhAv5kpwoZO6sc/nyjju4/RtT6p0hR22/hr4KJNNsEPmi+TqaA/7o9
dNB4TF2kab/ukTymbpA8VFbRiO9ZuOriypKnRxUBRacwTAH3wRueK1xF/Xnu
x8hyfAt1Qx69HKo8E++pHt/1u1Bn3WJpY42LeGf5Z+R1rzX0Z/e+ciw6S9Mf
rqD9/mpAQ1aOIoHjhuLoM2w23BmQTw0+JU+FtDMFF+/vYvTyDnhWl+EENx9P
Z9TuJn/fclseXEPSuAI+DZ5wX44e/Jecl9hF8778Q1n+UlfO2H+MuK52xB9X
NAa8fF1l8Uv+8Izgv0/qz9u3v8M10F3gr5hqqh9X/S780ckgBS2zJ6uG16Vn
fm2j/o2pHPPUWw5zzKGB036jddtfIa16X8WPGq2Tkl+0Ah1uVZtl1EP0OjdE
0pUcw5sOviOaJznm/aE2HWtr/Forze9fBQB+dmiD5NRxsXLwdaxp8eu53ErT
QL465SQJSa2N1feawec9Vllrs6y3jzPWe8WFTw7hbkzfo9qafERovmaxFBxp
T76ekejGo6eo0+8KOXhMC9n14BcaPWgtTf6jBj1sciL779yTeiZEiovusZ7z
SJCxlohGb5O2jHYgvc93oZMdushzIm/JyvFKTYS2tsblbYLs4naHMnzvMtpO
jryXKyekE41vfLx8ac5surlfJeLUo6tUcccg6ztSxSDjOQ4ZFoM/2sR5KDuo
2l0YLrR74y09q3YR+4D+IkC+B57ucuMzzeR5Db7TkiUJtOKZOnTPUy9y2dYF
f018JO5Jni+kvWdziwUR+VySdNMEYjoZQSMHLpO5XY4abbZl/yrSdrPMPxh1
mjD+4eK5RnYY10Jz26acZtcCb/nN+m/k4eUZ+OOODPHqQsZjDsJ97M0j7TDA
aWw/22Qu3qu8sOfeC3FP21W4RoVnJBfO1w705wDy7Vz5nVa6nUBfHXGmOzXe
hGS5492HHKVUP6PweHyx2r5RDxEZXki6Yz2I+sFaemBdrLxlWD0N2w+ard1q
3g9rnu/tPYCgmOZmfuRd/oc8qiOnmXwhRnb7NoP2kwGITpkvHR27WzjeJhl0
OArkGsOhyHgOZfZRMEweMme6KG5X4/iJ+0md3mtoINw/dr4zQX8OIN8SozOV
D3mTmT088MOttaU7JY+FPkuqCLVNfcVdld5JKDCQjKkXT0cejZO3t2igyZ7b
QOPWPV52abiJokZLzfuP9OOM5v4jB+BvJXYqTVDjL3I1rzpyzuN08m5tXTz9
TTfxU40u6psZCtDhKAXSfVKgUTc5beTqtox7HU+Pkk6C/ws0tqclYL9RYB/s
/jVZmkCLQH/3MrzJtp4eeOv22tKWJyYhx7OW4G0zSHwz/J30bnsg+TQCeBjw
xa60gYbt5wkEHm5KiadIrSNIucg8H53Nt2DvJzJ+6bOhrib4bKQcT3tTVPcG
/ut7fWl2VBth1uIAld+0NFX27nXqlMUf1NvfLBZkhyABGYn6z/SmuBf4ZxH8
3zzwL8x+p4J9vDpdhzaH873T1QOnxteW6v9hEnqk1BW0d0aIh35+lP64EEji
RsXTU5Xj5SrtG2jY+5tsP5MpDuR7P5QgUzhGv4aa57cHKyz9R0+B/9YYFyfT
tWupvqcA/yZZenL8mbDDr776jLRdbWx0T3jV8ZA4taWD9PLaGqlp1UkS2thd
dE5IxZ4QP4LAP98E/6cG/3IJ7NfpmRc5edIdd4ytLdX9ZhLWrq0rqJPGikf3
l0jPvQaTLjPi6dgq8bJH+3/m6/23f4b9mc2XZ/NBQkDPq0Df9qB3/eBAgm6/
kCBmi/P6nFPv3jtXCFOkiDmhR6Snv63CYsPHuPfBrmR5ueYkMKk+fgnxNwHi
WxDED3vwz/O0V8gl8C8FNi54xz5HaeCxx8LM9FpCvt1IMXJviTQ1YDC5siye
zqoaL7crk7//u350+9/1BfbfKTxzWL/cMuv8l3TWnzIK8G5bIdzgIhoNfSTv
C2OwcW9/ouxUixYV62hC31X0+MqelNPHECPgg4sQf7MgvsWsHkVo36vY4e49
6cfJR+Lkr0bBUK6q8LDdIJECr7YD/v8Ufg7Lp/T6r/7K1I9K+7dK87us3yam
tL+nwFo/Ynu9ireJPb8VSleiyhOXFfeJrtMGWlxgJ/8a2kGO+DBdvl9ro/xT
HkbzAb80A3zw56Jr+EnYUKxvtk5CMZGifolecKnxQW0q6iuODnonVckOJAFw
vgur/jO753/tnynt3wqy5ifrW+fn6Hpb6wuG0vrRe+A1wG+4mUSsOJgaXj2i
Zzqr5Dn+ark44D3NfplP7e4PlEf3OUOnx3fG3yZp8My/rkr2TyD+mlqJpqLq
gqHfKbX2TXcxuuI76T3Y7xawDx3cP037/7Efp8x8rrL7hVg9J6m0f4v1f7y2
1mfSgRf+nIj1uUnEJ3s7DT7XRM670kt2uFNFdv6xiXo/qEVNYZHUbm17ucW0
m1Q6vUKKAXzF19wk9pwF+MBli1p7PlL9QBDEDkkvpL0DA4kdm7MP9sv/r/6P
/8wnLK1/MP0lltYHWX3h9wli9MV/9vdogWdr1yfTgtdusm65h2wALmSKA070
fjnRjTxOonccp04rB8nRkzPoOtU00Z/7JDzYT4TaLzVq1E2ljj/lKP7SXpLq
HO9BfME/zwZ7rPrf/qOC/12fKX3/nuV3X1j7j/THJog5KFVocw/kK7a8/8z6
PwKt+3uCi5Kpfs0eoq/8BaMTfsRUfSZVLm4uJzV3kQ/92YdGnqwgPI+OVM85
m65SHHqqyqh5Q1CFbJOmQ/zFEN/GQ/zwoxb/93/09/rf8rE6E6uHsbmLCpBv
5n2L/hzkVOHmM1tp9wuLfFpr/ciF5VDZ+7EngJNXjMJIm4Z1s14Sk8czau/c
S076cz/1+RVJJuQJqobSRWUrJz/VvlazhG4nh0jNxziQd4APMiD+svjG9lMY
7P8z38w6H1MsUx9k9a01bK8YyBf7sEQKA/mQV5qw4Yut9Fd+KM4t09/D8mts
fwDaCPKdXIrRtKXYpV4qKT6ZRku2CnK5EVXkSLEVrR93Cp/Z1ZyPnT1O2Sr5
jTpH+i7eAvynAnwVBfjFAPjgCsRfHcQ3Q5y1vlrGfrVlzree/T/7o37llkix
hSCfbZqw+K2tFFkUin+Wme/D5Itn+3umg3wbIjAqCMcuxQYSH5hMbYLc5d2O
reTnW9bT7OeDyeXES9Jm40l+5WAXdczKMeLBZR3wMsCnkwD/eQK+SgX84g34
wMjib7G1/6jM/Lqy/oXVV11Afw4PSqRjLyaIWtCfHvSXCfLV8bDM57pZZn+P
tjvIN30uRpc4bJq7kKCnsTS9dSvZP9BdDuuRTKvs3UqMyTJO/32T2LjWTNVn
fYpQLSBF+g74vg7g55mATxn+ywF8hRh+EXWW+Fv4f/sHna39W0Y2/+pOiXRy
0gTRaJ8q6OH+GZ+G4jGgvw4g0zXr/gqWB0cSm58zFaP+pyXEVSSGPR2oQz97
WXIV5EFL06jr+BSC2oZg5F0s6n/nhbqfn6t37rSR8hJvYX/gH/aA7xl+Tgd8
qmP4j+Erhl/KDftX/ZLJ16hs/8wt8M95oL8qaZb5V4Wh2ATy9QGZ7pfJ35vr
H3mTMZoeKaEhs7ChXzpJH5pJH5De8m8ej+lt1yfEpe8qjMY4SsgYIiB9vKpl
USPx95dNcAnwtynAjxj/0JfdP2P/0LxfkuGXbKv+2Pk6WuuX5v09Odb9LumW
+VcsPxtunV93t8x8M21p/xHr/7gPX637Zxpe8JCdDzeR/asMptqJFeB3GA0+
Khl4Q6aZ24Q28pRu9HciBPjlJ+Bvftb5ZkbrfDN9sJG49NlsxlcMv2it+mP1
ox5MviJrfw/rX/1pa65vpVvnhxVY9x+Fl53PZa0fsXx+JNiN0dVdfvzSTd55
fjvVsPlmVYsADzWHz3NTW3cH8Dv9m+JzwM8Z/x1q7Z8xtrpj5h+sf8aF4Wdr
/0wY+MkIiNdxbO4snO/EP6z9Pax/5pPlfFl/Yy9r/4ep7P4Z1n8UYemfYfIZ
rPWFUfDsiEmmJ+8kkVUU4rcNq8+ctL7/bH6/UOmzuzK55bOTysDPvYH/aq31
GR3wo2jgHw5l6jOLId68BdyTD/L53y6RHq0D/YVZ6x8vQ3G2u6V/5pG1fq4v
rR8x/UWBfHcs/T2R1h06X+Fh9bAhEBcjvk3ENd2KReTC8pMtVRb59pjrM4c7
byFL/F3lLg8dNHrg54z/aoFfMv7G+BGqrDLje0fAzw0An44F+71oKpFejpwg
+h+29ve8tMz/01jt43VZ/d2w1i/vWPpnosvMqGT3wRP80gD4//OxrXTVleV3
V1nncqcBb81iOTb+hVCRcsnuMstvGAb/JWcCP48G/sv45Ujgb4wfhQD/6AP4
ngwKJMMzSqQrm8eL3BCDMH+PZX8es4+W1v049iy+MflEkO+u1T6s9UFW98qB
f1MJ/s1U+J7VnR6+CsVNpthKReqZwvSKe1WW2XAaHhka86jnaHOeMke/htR5
UVMm6x7JDxK7aMKuY81W4Oe3gP9OAX5ZHfhbMvCjLwEC0Vx9Ib1IGSl6nlgo
lPteLLb8PhEHwjkJ1vjB5EtndRjmn7OnWvzLU4v+DFYb+ggPqydGsPoMyHdh
mq10yHGWsP96lkob0pc3c1ftXB7NOsHlvPlpnpl068ASfGRRYxpaN0guKP9Q
dv31XO4SHy/vAX7eBfjvUuCXjercwD2eJUtj21Hxt9ltBce8bWJr3AmXA/zX
BfBViFU+/XZrfJsK8aMr+OegWdg0wDK/jr0D8Nla33IB+Rg+Q1NtpWRuplAp
9qAK3S/gUE4XHoVt5fVDGvDPl5bnp52tbp6hoQlpIcWNz8XDZBX1/lJXbq5p
IN+YM5s6xX4jKdSBxEXXxcY39aXFfz0T1sWfVreOcRHnfi+U9IqZZnzK8F8C
4KtswC+mDfCz4yH+XuQwix968M/x4P8ywL+MAPkYnnBg+oP7h6Zb6jMtjh9W
BbxeyiN9f5DnE+fax43Ppre5vuufc0PPLwY99uWW4RhhoNpfsv2RhdfvP0Za
TDlJFCz/cnkGHjJpvvQ+t5s4aIyX0Gq8i3qb11xhSnwfKQL4hwz4Xgf4meHT
MMB/piyQ7+xSMz4wQvyNhvgWD/GD+ecC8H8J4F8YrmX3l+kPmWaa6x+/Ru3k
UcNLHNIXcWym0O9Va/BH0qtyPi+WcV3G7YG/D+J23slSfQ+MEg5GVZYWRzvi
6Um1cbJ/Vyn0fIYYvG23sOFAN3Wr8ZLKrUmSelS1FPHJ2TE4GPjRQeAfBYDv
zfiZ4VObKDO+0gN+8QZ84ATx1wTxrSXEjxzwz53A/2nBvyCtraVHFGVZcnhf
AkG2DGu+EXHtrq/kxkQ05E6+KOFsKtzjtHlV+e5H+/ARgQtUXV5WEXbsaizW
GNZMvN9mkPBm1Bk1Z7tHVdCik3LJ1TSVZuk9wWX8EWnivv5kPvC3DOBHrsA/
tPHuVF8V8LMmDaP6qSQd8FUq4BcR8MF8iL8ixDcE9+K23AkfAYyAEKv/7rH6
F/CBSXXgayFnnqWIjArn0+W4hRLH6XQrFej1Ce+fcZe4TSvSuON5tfjv7qeV
HY03VTmKXJX7OkdVm9goZdiBz4qAJncV3xuvVT9yOyQeCFuFP/sAHwJ+qQf+
5gL8SA/8A530I0bAz3an0qgz4D8/wFcKwC8uLZ6QxqEViItzkXQLbRNPXvCy
9h8hvnSHGXI5D193wBPM6guKh5M9OTGipyI1NYZDfo055YjJireX1/LtBlXm
u7X/zkXMP8ltxx58rwspXKBjFa5C+n1u0Ixu3KuCj+qJLRykPfUf42/Az6sO
6yCbgF8GAH/TAz8qBv5RAvjeySDISwGf+gL+ezYuhdzuswpLOaMlz5nNxbUX
TqhbFDW35j9d+H+eSFbjUpjnW6GV/HF5Kh+UUY/vFhrDmTLWcRE3T3MjC6ry
bdIWc50Vtbnx91ZxxleR/HyjL+999Cb3rcILLvulHf/t1WLhzM010omDXUl2
31U0GPh5JvDfbOCXjL/5AT9yAP5hC/j+GODnpXu2kvWA//SAr3DTHYLHLS/1
59WrlbMm/90rgSx1/khrL80WsI0v8OznXO934YKu5nDt6idwW5Yv4jZe7srd
/naF75GwkHcePIEfHangmx9axfsMas+POf07F1zyTtFfilboHgUJ9lUnSR7l
mpNnK3vS3FobZcbPGf91Bn6ZCvzNCPwoFvhHJcD3BSkynicWi0PSJwqJ3dJV
Qbu78HGFv/PLY4OtNS5WZ11tOV89B19lDoXV4NFz8NtfG/BzptnxxjYSF3M2
hQvtX5Xrs/gF59prOnfrmhf3PKod13ttVf7uH058wdY3isWfVnJn99bl9ryS
1V/ju4tzkurjJvoYck8eRnV9ztA3U2/SCOC/J4BfisDf3seewge3X5I6Xdwk
bp7OCx/2bladGe3Oj71WwtVxaseLzTqAPH48Mi3ikd8sHh17Djo87I1QgTcK
DOeMcUO5xOGNuGEeDxQzi3nOkObGfytcxdXRteDUmg7cnQ2HOGPmFG6hrTdP
r7XnC7OVynIv7qo8arUT3vI+YoEmSYz83FwaPz1X8tqikhbt7SOd8poqot0r
BePedurolTFK727luW0VKvHpfYJUIeMfqZf3ri/+/qeLlPG4Cm674wWuWCOB
cGJFus9rHTnstx1fuDJYyq94V4jf11gdONlR+XTfRe7Ymaa86Vd5PmxnPGca
9JW7UjKd+/JuPZexshmX2THRe81Kb051+SbXfUWUMucPpVr92ylh5SsnaeAI
Gzz2cAvcUTEZ62o9xY5FzfHuOguk2QdCRVTSVECmjSoUnMjrVZzy5LeK6uru
G4Sk1eWl7hsa4bTN1cjAIznE7sRq+vxyU9kf8MvwI7XkY5slOnRTJaJqsUJq
u/yu8HTPZ9WUrgv4gO5deRRTCfR7Q4GWb+Li7Z8ofnmncvNwB2761mq8zZth
fJRwR7nx/RL1mPhqYss506Twl9tw4NMRpOspmTjNdCcjo+0JTlRgx7HOElr2
AfhGNODR+0qWa9fXW6PWKtqIXa5skg5PuYG5CY/IxIhUuva4v3wwJEsuiq5m
rh9F1nomo9yp8vBGvejWk29wpwc+Uox7qHC2dTsVCkhSIL0v2M9QDmnncZnP
63KX11/jRl87xK2aF8frX91U9t2eon65SyOmuWyTXtNcPMH5Ktl8rwYN+XyC
tHrfiagPb8Q5p49LL0bEiu8NxBovwlQozEkwHNoh5hhr4fvO/Uj2qWBafWJX
uanbDfP+I9Z/zvqPzPWjyI6arIxncixuIAc8uU3sxnbALXNniwebj1QjXUU2
5wrkPMR8Utvqfxk5n4+POVNgLe+htllK1ehk9cN+A8UdCZekgJ3lSNLIB+Tk
Pplmx2qo/fWLZIdGQXZEdcL1YhtLX/afEMQaoqW+ZVwsoLCaUtJTPZ5jd4hs
2ZlNw8cmyCJfW4MSlBqXWrky64/X9qompwM+LQ730FxQ/5APXmgmZ3r/QU5G
+eJlE+aJgXNHw+etsdr9HyBjgiJsl42iETnOqZ6uVUYPWqJOn64RN4B858bX
JteWI3pP5UPfzu9KU+5XowNjR5IBvnE4YdQ8abBTI7FHwka14xhOjYw5ArIb
K6EvVzGaVYuuPVBPzkm8Iu/8xGvs/Wtroh03y9pT98zz6wJGush6wM9GoZfm
enCWXF2zh6qvq8mAk1FSXMZ6QeoarjL3rxsXgk86zaH4+bx3/kJ+US5Rjmum
Ug9NryaebrFNGg36ywb5Mlt1ob3fdaPzRtegY/JmEqediXj67I1Sz2NjxW6j
bIS2H0LUS8LsReS9TXK57EjmrOhDva8Pl5V1f8r6eK0mu8ldufg+8F9DmHk+
tS5yHQ33WW/G92/n1dQM4IbKcx7UpR9N0bif7Q2xwR931NKWJDjnwwpk+sih
0LW8S7n7HCrpxadOz1Xta2oUHi+eJtXV5OLf4XxzQX91Qb6Hi2rQXkNmkfyJ
KXj7yi1STNvZYoW23sLpJzFqp/JNxK53jZLeUyAzcyLo0ORlctRIJ01QtJum
4Fmy7HL+DtU3+0HY/lVtWKB5fp3ftHKasYx/9EiUbcZGUZ1rU/Iyf4X0xeu4
kN7siCqhxyk441ccureBd4l+wMXVZD0+nfiNaRph3GsnaVLBNpwM9hEN9+8w
nG8I6E8B8r2dn4Kb/bZVcvg4RxxUXRD8d+5Ub23oIfbUXJK8G3Qiy4HnVFwb
K3Oj6ml0/Rtqsi9skl2Wb4E4voyg6GLM9sNG5zub5zOw9+sYP+pQwVvWVigi
qEMf7Ftlldjp/Ur1irVKpV4w8kZDttJ0L0tpf30zv/f3wxzbdTZe8BFbjLLB
h5+MIIfBfo+CfayC+9f93kziH5aCR0zcKqVXnyv+1l8QjBey1G8qUDE79ZZk
s6sT6YXW0SkhcXIx8FqWXzN2jJd1TzdQVHckQfcjMeoxjhgOGWjesO3ylUA3
DRrkpJkC/C217USK/qpAkHNvaUa9GUJvh4Wq+CiTSqewE4annRPau94Vrj1M
E/JXPFIjwxqVzjNJHH2oBY4F/2cP/mU72O9QsI94uH/nordIbj/miE5OonBi
2AX1sfI9xFtnXkibyvck6V3W0YqT4+QNbSzvZ7M5dcbkeIrWDiMIzcLIMIyY
jseb9+uy+ehsfp02JlYWWf3olg9B6UYJ6e3FEk1n9U7fQ2q7jP/H15vH1bhF
/+OPREkSQiqcDKmu4Zz9nPPMz7kHlcxJiJLQJSIhSbo8JSmSTIkMRyoNhhAy
H3MImZLxHkOEkDnp8lu7c/pcn+/39/v94dV1brGsvfda7/d+77WWOaNrZMM+
O3GGjUsuY9et2ccOzX3N6P7ZRA9r0o1dq5zD+UN83gzx7w3El0XuG7iQBZvY
hz0WMmFTKfrx8RNU7NOhzLCyd6w01pdfYZcmXDu+QZxMGvQ32xZpIpEG9r03
1i+8DeCx3iXDn7sZ5h/h73+M64+wfvT8HYv7WRLEbap8SSyd8q6QSTn7mJW6
3udcNy7mTxcl84smh/M9M/ZwsatmsKroMnYL5LcRqyz5AIjPB1a4c5Ghi9hV
q6YyKwfKaZPEXMoZ1vdoSQX7GOwrm5gm/G2WJs4S7NXl/ezVpb/rR7/VBzTo
M3L4FWSRJkbOTxN24fqjItyfJhjsU9GEzJHJWz2GtT4bzml0Ubw0Z7jgartH
uF9wSbj3fo/gdrS7cM3pEzdznYod+r4rh3YqOPX5Y6z5uk5sU/eOTNfLTei/
+myghju6Msl7b7E1sL6bwA9xZob5Gvh+XLL8rf9aaeT/NZ+kob4nx/g+W1f/
fteoHxEZDLHuDbuusylPLHnGl3rkCUJGZ5H4Nla02S6KCa5BYrTbJ+EV00hQ
nx/Jlshi2GGhtmzt4lRG9/oEHTBkM/X1cSi1vkln5m3/y+ygPHc+D/ZfKazX
bPBfMfzdYQ3+q/pvPk7gb/3rxhjrezIb+g+VgX07sT6jBf99YIgAd066voAP
e+EvaGa8EI6auIkM310sXXtUKP22UpAGthb35nUTu813EgZPCWcynoUyndSf
6MXuAk30F6jNDxCV9NySOXlfx56xc+dlcH5xv/1JsK8ewvom/P/oCw33p3h+
z6EG+56AfWUhTGDvXJrIMepHrzN5XYcdQsomR9HhHdg387WgN10oEEWXeOs/
Bwi3O9iJJykH0bJ1V2Hgi5X0zdaOdL+yVdTLygIVce2uqvZ8KR3DbGdr/qD5
ZDiHMyG+bOpt0BdK/1/W9/f+iaOM79tx37s4b+P8hU1gn5hDO5WBfU+BXwPP
DkvNEvC7TRsbV1EXs1vQL3oNe3UAr32Yzns1zxQ8q9zE6AN1wtFzFkIvj35U
45ZbVZveEKplL6apgvvE0znNp7JNS1rzsyF/4PiM4x+OL/j8av8/6j8a+pvh
+ijcFxLPxzItr2GlWFjf7Bya0Zuxi57/p89E4rvHLi5idUmWIG3J5aV7BRCv
2vGaT/2FTOsW4tfBpBjTboMwK9qHrx64QVks6Mlij0yl2xkb+vDMVmxqzVUu
DfKvP+Q3GvIHfn9Q/85+w/89X+j39bU33j938PHjp96vYRNOhzD6yztp1wdm
7PnnhvkuhPH+CvdfC8P60d5sXhqUyBHnVnK6Vvv44KFFguedEaLU86lgu+8R
7z13Jhe+liNHzGyn9Lm7mhq/L5u5VCFxnoBffAAf1OdfyG9FOH/g+Pzuv/q3
hvPr9Zu+hftLvQT/nQP78gaHMJr8HHo52Jf9MpQrdzboH3qjvhCG5wulgH12
yzjiejyn2Qz//SNLqEpwFZ+vcxRnVM4TwpbJ+Gs9l7Pyk0/IHIcm1K+OvRmX
0204ptlBPhXwFcYvgYAPcP7V4vy2esL/9If73b4xRn1wnVG/bPaghu22Euzb
mENLr8zYuopQbpuxP9c7Y/8hCetH08GnZ2I5Yv00Tues5SNrMoXbbVzEwH+d
xXDTTMFjUwpPDOrIla0PY4ZNGa7yP5JG770E+L79KH4D4NNiwH/RgK8wftEA
PiBsJxvy22/99Rr612F9C9dFyrwN8aVqAuw/0xyauGPG6p6FcqPAvj+0hvkQ
WN/C96cyT9y/Dv48ZVtOOjCFTzFfLxT37S7ev+Mi3jybJUw6lsVLbSZyBHOX
0Yjt6PC5/1AZK0zYHnNucMcB30cBfs4BfKoD/Eecx3f3gF8eAj7YOoHH+/H3
+NfGGP+wvoXre3D9DPEX+K8C7AP/bXUx6KvvjPfj+J5Zg+93u4VzhHMOSxy7
xukkJ6GwvKl4JNxNHP9PgRD/Zz4vvZvNEUFNIN5PoImCRJVNezsmLLUjZwf8
qDXwDxXge4yf9RifYvwH+IoYPo0njqcJ1i0M9o016m/7Gup7GubjhIF9Nwzx
JRzsU/1W/yH9ri/IElgiN4Ijxufz8tcFQs/5bmLQtaZi9K3ugubVZY6IE1ii
YDXkosP1d0OjqmSslN6CjwX+1g34UU26Uq0FfC9tA/wM+BTjPz3gq0jALzg+
9jGuL+6Lu6zBf8HG+fZ6w3w1nbH/X5VR//BssO8y2BduqK/QuYGPL2UJD8tc
xPFCdzF6/zrhFp4vPq2EJTQtGcP8aUNvmrKHFpw78N9Y4Jd9gb/h+bCScf4M
xs864/yZc4CvAiHP+FkYzocP7L82d43rW7CTJm6asRL4rwbOr2DUNhr0N73y
N/0IvmK9qwg+T5C5iEtauoj3P2QKzT238Y9OcRyxKxXsKzDOn9HU6wrNsiu4
xsDPDwL/dfutvxnuny0DfG8L+Bn3V74J+O865OsJgF/Ggf/qID5Xphr1mUqD
/7D+0dl4N19n1LekhvqUeIO+hes/woz/BqxjZ2zNEsifWfxb3N/M4g3kc2dY
Ywdjf7Nr9X78bKyfwf1BbIH/egG/TAH+Fvlb/cyPsTZqNeDTdYB7TvT24+lH
NeyicSFMPgL7HoL/Xhnm4wjG84HrP7QN9W8lRvtuGvSthv5wH401aO6Qd3rB
z6vczdipj7A+k2ac4W0F3Cai/h61OdNE6JflIjr/ps9IRn0m2KjPzAR83xvy
tsc4X75Xbg2bEjydmftiG+2dYlhf3KeMM/Y3w/FFh/UtxlgfFWWoP5KM9pUa
7YvD+RDsC38TynWOMWPbZUbRV/fgGRGmWIOTEzpXUrJIqrcxstdafsLhNiK+
33iY0F/9Gfh5MfDfKuCXY4G/uQI/igH+oQR871/6jp3rEsyIq2PpzOfVzM2a
mVxpd0P+ff1b/07dAGN86ZRQr69Kqv9qcGuN9oUZ9YVwsM+pbgE9pctxVaDQ
1FAfUNqdJPp6kbaKej8S9MAMTreFFZqWhYuHCp+Jl6k6EfPz0cB/LYBfEsDf
mLrG/Ix9OtbJYRhz3YukW77dzpQD/it9lcnPBvyyyNh/zQvym3a6MT67QvzL
i6g/v0VGjdPE2AMS1x/h+jkiyYzdsCKK/tD0jMrasYOSkMEaB+KeZnlIX21N
ev+8o8Dv2xPO+7G1m5ryvh1HCBJnL+6+0EU0Ve8W5gE/Z7s68m3UIzn22wjW
foMls/Svm9SnChkzJeUNawH4NAXw3x3AV8GAXySMD1Kw/gH5jWrLEaeucYEQ
/zxxf0c4vxdwj0Kwz7xBP5IM+oc7cVwl3/eRJGTvcT2PQhf5GOmGzkLa8gMK
1+z78Fk0Yl6X0T26rGAbnXzLdXhymz8vf8AXXaN4Vp/CPXm+gm3aPpmZ92se
HZbWn/oYFku/3jiG/Q74fiLg5/WAT21x/Q7gKw3GL/aAD9ZNq89vesgfzhCf
6yD+zYD4MmmrQb/E88WI6AZ95oTKcVoFSWzuTBISrv+Qk+1KhiCiiRKVfdiE
7KxcERH4COmuO1B/O9yl1z1wYw9O6cftSvTgKoqS2EHtbjCR147S0XErqV5J
c1TuCw9SjW4VMjOPhXO3Yp/x/QDfywA/FwA+1QH+IwYDviqN5wgXLZ8D+bcA
8psc8kcAxGcc/y7/m8VvxfpRVEN9z0nDjPvyGjkhzUTGvkJkzq9sxa4m3xRn
V6mQbupEpEk/hrY5vCYLfD6ocjJm0sVbFjIXpy5iUhasp6M236G25O1W/Wx8
ivw+8qEqc6U5s/zYY1ZzKoq/AfxoP/APX8D3msWv6/GpdAHw35ZsPgXwSwng
g12Qf/1wfoP8gecfjVOFcI9JsE/C/jtirE+REKGZD7apjD3Y5OR84TWyECgU
+6IlqVlxF23NsSCtN45BK91ukI36eqv6LJ5CBQ6aRt0bF6tafmC3MurccdS1
dTKpv29G3/zShl3veJ9TAr/kgL9pgB/JmiwUdEcG8DrAz1rAp3rAf6WAry4A
fpkI+EAD+Tfj9Tj+0GmOi4P4HPQ22GhfqbF3GLbR2jjvBb+3VpNBgQtJ7aOF
5K8T20gpYAoZ8TCfvLmqAl17uRIVdVSi8oknydyZf5JNlWoymLyHonP3ku7T
9io7pp+lxxw6w7qkLebtgP/WfB0r6oG/BQI/0j5K5yXA9xLgZ/NEV3ES4L8d
gK+SAL8EAD4YHVbCftGlMpKdC50cnWKsb2zQaLBtng36DPzahgKKfUjvf0eS
RR4ryOph08nCtdnksBiW3F+oRz/SV6DBzyzJXcOfkNq0teR6WQD5mNhJ9rqe
o1QkldG3l5exfxcl8zeAn8uA/xYDv5QDf/MFfrQZ+Ic/4PtiwM9ywKetAP+V
vZnNVSQK7Finlsy40/spn369VI1/JZH/M2Oo/j2H3qjBYa1mMSIqA8icQlty
g+kQ0rcynDz68hsqbsST6x06kypFOxQ+rlxh4X5J4dzUE2nm1/b5xi5DlXF+
ilVZ98m8hFw6aNU+dsHkcP71+z1CNPDzSOC/OuCXbsDfzIaQ4gLgHx9fzhNK
01L4Ma0mcraTm7DundbQOjs7KrQ0Rek1oTE52uGTwqDBaQy9PInb9fGPqE4m
ic+bSOnfdHLNjGjyrX0mee1aMdmi2V5y3M8i8udNb9LhLUEOO5KP2u+egLZe
2op8z6coCtxEReavu0i95TVyUTyi+mS/Zry27+F8jnYXprt9ErKBn58D/jsP
+GUG8Lc3BY/4ungZf9K9I9d84F0mrHcgXbjuoGpO+S6SMHmlCHJORIUxnY11
rALEmlBEFGxDhHYcSfQcRRIXp5DF5FIyLDiBnFg5gnybNIE8d2ojGti/Bxmf
L5BpvapR+AFPZNLSFtmMCUIBDhTyWnsQRQ5vRgZnnUYvhVWqA/M30eGLZ7CL
un3iTjKNhCsRToIT8PMS4L+ngV/GAH/z6LKcvagJY0LotnQkWq7yNwsliRl5
pNV0K9Js8A/UeNlrQw3ScRdSd7EnSZQm9ybCPiPCLVchOd9CVQvtSV3XVMQl
tSDRVVeyizQSue1pTB5uVII8Gm9AE9z+JAfXTiGbtx1Nnhg4nay+1otMntxO
OagmS/U1YCdl8+0f6vD7UbTDJCsm3Gs4bR8wgNZXIYo4tFVJvNWinOum5LgP
Tch/VjVVPR+0h5qR2YrZcNeebedRyy6+v4cL6zGY33WnjreMWc3nD8jgSutm
snvv1NKyex7UgsEhSifbkehE0l3UmelKPuuahDiftei86XgUeP4aSrjqjZZn
BaHqEe0VvxgzknpXgGYc+Qut6Jyo3LiwD5Xum0in2c1i1leGMB2TMhirwu5s
D/UApuM9ib68X0URujVKQspBxH1z0uvgbpVdSABdHFXGNH7Vjvv82IJvduMM
3yRpmjAm4ZmQ7OEgdqpoJcYDPjDXt+Q3RG9hixaaMB23dKe8ir+TywMo8rnN
NyTT9EGZYV2Q7EqdIvDiXfm1sxHkmFAz0iPSmly9rxUpjzmneH/kpnJvsxiq
fHIl3WiKPVs76znrbbaBvauKYBPQIDZviS/DMHb038FrG2qllVJ0e6qm/DLt
WevDdrq5l7Mbd5f3v5ct6NLcxepdO8ThG6rr66c91j4Wa++Ei5+ejBOSkgn+
V9tJbNOLG+hkp3WqlFk9FIHrwkkioCcpXf+JLL1HkIF996Hj2++jblnjyW3y
pShmWRJ5Ytw75d2oDOrOvDZM2w5e7CRvX+5xxBNOdrcnl35kHXvx2kVmjOw6
3aRRPGVV9xXXCyqJwDWULp1h1iw6yF6d3Ypf/cZTSLb0ECtjS8UhLj3Vtk9U
6qrcJmrcvw7XH+0HfIV2OIgXF97l1e5e3ANVKrPSaxvlmTIQ/ryjvQlZc0Q0
voYkboHi8dzbSCe7jxjek7S+dFTxaedz5Q+vQ1TrpD7M98IwNqLRVK6FhwXP
3THnZwsMd85kGevcbiFzfaUr7TEyR2UuG6QiJBua8N7JmJPtufH9gnhrbrmg
u58kxnZto7asUqoji8pEzYlgMaVzFxHXn+P3Q+cA/0UPdxFbJjznX40ey62t
3MR4yLRUo7tOSsIrlyS0bUkiSodqdN5k+K+xyCo2jdTnmqLBPy8pB4vZVGFC
H6aqVTx70DmWu6mz5K+WWPEXyeXc1/gidmT/q0yfklS6H92NqulzWvWGgdzr
1YotcInhqtWH+KBZJUIXTaYYNddJnTazvbp8yRZRd/S+IH2OEeSf+fr6+O0F
vPom4NMAjwfCIo9oPi/5Ejs24TMdxeapTsZRJKGZSBI2TZC+cS76NTZVERzV
Hl0fG0OuPhmuHB4fQ/05uw3jDv4Lconlxi+w4l2Ht+R77l3BDeh9nb1Z+5yp
0J6gJ/lNonYefqNau2MHHefhw+qmXuX8t7QRRg+0E4dYlYo3zTXqwHM/RZ1n
kKhzXygQxfd4WWBG/fyjyvlIXW7aSD0J8LP+pEIIG1PIdTtvyuYUtKZ1+44p
LU4BTpNlyLWl2WRa29eKRzm3kPZAKhoT6ans9AhR9NVKmunlxf5hOpWrAv/5
g31l51Zw+oPX2c/bqpj2Fhfo3ktiqfI97ag9P3X0qhZRbNwxU75yn7dw7/JE
sYfLT7HbHxq1JrhUDDtiJxIHOwjSv7E8kT5XSEOJ9fOPcH+BqAvrxM6A7/Ut
5DzxcBv7xO0+PdGzQpX6dR9J/OhOSsN7kumRt8kpE1aTq92dSKKGJd0qc1Q/
yxLpuxPt2eTRvlwI7L/jV634GeA/WeF1dkhmFdPnxkXa3CeOUjwRqLn2z+ms
6uXsrwAr/sedmcLzSwli7SgbNb6/KijOAv/dFKT00zxBtOZ1+U0EuY1CrJa+
ibh/tsfJ62L7Xu3EapM3PBExlwMMxDSdfIUKmZGr1DlxSilntWp1wl9UwshR
VGwbTuWwKBvy0SWFqeVOytV2FlM65zmbA+d3D5yPPxTLuY+q62zbtVXM6ICL
9JA3sZTXaz+qy01LpuurLPbDYAf+tnqW0DU7UUzY2V6tTXZQE6XpYmDMVoGY
sIwnrPdyxPUEXtNyh5B2MUvUdlWqR18i1Ht8J4nFuP4I60dEKEtotPQTeaHK
5/NblRffmSbMWjGzJS1j/3494+X+kp4QnU8RlEz17to/lJPTDMbeagO7tbwn
d0tkOGJ1EdvSpYKZEnSetjwVS2W7jKXC29sxzDEdu3IEzcd3WCrgfuIJZ9rX
zzcggtNE4t1Gob6vShHwhXaTef1b+D18judTS/B9MfD9a3D/Ovh5olDHEjI7
hiCCqAiLY1Sx3IqR/ujOSpZNuPV34ziTAQu48Kv32KleeRDfHeme20fTC3Zn
MAPJCPbghXXsM4tlbOGMq8zFGSfp1z9jqTP9eCpjYgvG6ZyOPX/bjR8FPNtz
Xar4cHYHdVGlvToB61jH0gR8r0bULeCwzoX1LtxfD/cv1Pa2V7ecs0F8PXCt
4IT715VXsEQg1o+eUlgD6RZ6iLE+/JzVNKniJNtMfkhsKyHwm7mwENbhy7dQ
btm/VYyfrxWz/nx3drVmEGv54CLjNWIhE2i7ge5oHkylpbSmfg5+Th9/mcVe
gH+/BuzD70lxXRZ+n4vfEeP3zvhdNlEVyREfA3isd+G541gfsYJfpc3SxHNB
acLDi768V5PPxvojFQ0clSEKxrDF6+ZxMqdFvPTXWCGz+S2hqEk7cfRGS/H9
4d3CgydlvLrrNK7ZqGF0yskBjP0+X6a85jpt3f0P+tEOV+pzYo2qWZCOjv64
nJ041IFPg3XC/Qafg305HvZq7CfcL4eoNeozRv0j2Hh/Otx4vys19M/B/fmr
pzOELpaG+MIQm9+wRFdT3jr/GZ9yJU8oc+siWrf2FKV9VqJuo0xkdsSK3Qal
Cx6nZ/JXt3vSLT7F0Me22tOWdssp6eoR1UCb86q7UzLpARZR7EI4v63+nFW/
/+7B+u6KNtzfazYZ6wP0/7u/WeBv9TOJDfN78P1ftxBGtkILfOYDQ0xy56TS
Bbzmjb8gX/FCiIpzEzcDr9ed3yNU2/UWim8dFoJRoKgR9gjNgmJ5/0V9qEe2
AnWydoPq5TRCRRyepro6IYre4+PDZh415duVzRTs4fziuc1YP8XrK8P++/if
fqQ16oMN98+djPf39j5G+x6FMBpNDp2XD7zQBPjr60xeY7dDyNnmKJbucxOD
D70Q9AkTBH15Jq+/3UgIC3oltHLyFGnVMkH+vDN/90qGstuio0r/LvdJj0UP
lF6kDd1nQCv27vSrXBXE52cQ/ySIL+b4fA4x7r+a//TVBv3t9/lWuC9fyEg/
foq+hpV2hDDEhhz67mUzdj3wa033//Sj4tauovmk3YLM5wXEqS48sSyOz6nZ
KLhdJ0WquaVIMbQw4tYjboj1MjLJ+RTKCykjDxNrqc0TdzLKXjHcashvFZA/
Go22qa9frZ6aJmrx+TWZYOiP+fp/z08ZadQ/Uo33uwce1rDFF8C+izn04I9m
7KKXodxuF8P9ldTJRfTp4iLKSrIE7ZRcnpixkyOSX3GSZw+hSmYmdlrQT9xj
miEEqJfybr8suN1jOZJXfSOjnW2pxtcZZhTdnqsDfPAX5F855LcgyB/WEJ/r
49+WCf/rfDTc3/sY9SN8Pnbj+qOKGvZrdQij255Dz/lixirfhnL4nfAQ490Z
fhseuSNL0OVm89L1BI6YuoLTfMnna6oLhNKFbmLdrqZi2w1dBc9Lp7izCZD/
howjB885qHp08TLt/PdBdpFbEC8BfhkH+ADnX5zfNDh/2Bj1j+r/rb+NMe6/
zcb5Myef17C3m81gNJNyaampOfsd7BtsnD/z2nh/it8/6xPBvudLOeJgDEfw
2bzzxSwhusxFdOjbXSz/tU4oeRzEE5Mfswse2TNlp5uqDigm0EmffdjdYa14
DvBfR8BXpYBfGMAHOP8SgZDfji+rj884/gX+tv86Gf1HGPtPntsL69sJ7Ptg
6D80FdZ3hvF9O75/1uH5ECFgXzLYFjGEkxau5gMtMgXdv85iURsXceWXTIHJ
38ZLiQM4ImkvI0XqqbSX+ZTPrDIm9cZebijg50uATzH+CwZ8pQX8Im0CfGCz
tz6/SVmG+IznIw0z9q/TNsx3wf07i8A+3xxaqjZjpQpD/zXReD9e//4f7JPw
+/YQWI9PjTjdjV68Zm+EIE93FHsnuIq137IE187ZvK4whCOUtYYZk/qxqnZz
WzGfn7Xj5o29y8cCvsf4eTPgU4z/pMIOAvGrFY/xge7tf/Ndhhjjn9RQ34j7
YxYb62fAPg2c3zDj/bPeaF/9/bMA9l0J5wgmh5VMczli0Ute/vOp0OfsCFGu
KRJEsYAnpkdwxLBmLEFEQCzNrn9bnHTGns14ZMEPAH70CviHOeB7HeBnwgPw
6c9YXgJ8hfFLzVRD/m1lrJ/B+keQj3E+TrVRn8H94V4Zzsdfxv56Df3r6vtf
PTTWH+0HOz7m8MVncwXbybR43d1SvLCln9DLyhRsjAL7joF9Vcb+ChLJ9a9l
q0vP8CeAvw0GfoT5hx7j+4v3eA3gUw3gPy3gKxwfMwAf3IL8mwf2fYT1Pf/C
WD8jyzX0X4P9Jwf/sb/pWykN9T3lxvqUp3M4yS2b1x7MEjIDXcRr3XuIHx+k
CgPexPCPh1pxRGQArLFknI+D9Q9COQH4eVvgv5hfYv4mA36kA/6hAXyvBfys
B3yK8R/OM80Bv5QAPlgK9k14VsMuuGvsX1djmH9UZKwve2w8v7oG+24Z5wvd
NegzWNcshPizooOLWDUwS/gxS8s/fziaS6GvMkRgy4b5M+BDp3pdIdFpMB8E
/Bzz3+r/Y/4Mxvd4fijGp0sgX78AfOVyyZf/jutD1SFMZpGhvoeA87EO7Btq
tK/O2D/sf+bPLP9v/oxk3KMvjPNnMtpm85O6zuDeyE3YgzNw74d4Y30K7v1y
qH6tve7U8Sm/9TezNvY3qzT2NxsE+H434OdDgHvGAf4ba/mZPbp3OvNoqpYe
n2fw33OjfR+M+jnuE1Z/PvTG9YV1DjTWpzScodn4vMO+7VEVyu3H/c3comjH
e4eN/ruNCN0IkohMrr9/XiKt5ttUtBLZtY9FvbF+Jh3zS+Bv0cCPmgL/2AT4
/pYXzXNXKtipnycznT2W0P72H5jCuplcTXdD/UzD/DJ9Q3zB9YNRcD4qYf+B
fTrjHv1k7A8X6GroH7ZwqRk7vXEUHV97RCVrjmuj/BEhe4uInHlos3pQ/Vt8
zwEZXOoWVqi5Ey4WFD4TTwI/vwD8dyDwS1vgbzaN3/A+dY156wM61rHnMGb2
GyW9wjyDiZrsznUE/BII+CDG6D88H0eG5+PMwPp5Dkvsi+Bk7tm8/rf5Qrh+
S9Ogz8SbsYd7RNH7Eo6pZLvvA7cuRYR+ECK+OiDn2fvQh5en6v146ddMdre+
Jd/h6Tih7w4HMXk4/F3Az/8B/tvTSs73mjeXO9M2lC0l7ZgZtv9QZ8Y5Mn0B
nz4E/KcGfPUR8AvGB/j9hhbyG7EK8sfXRpzUKJcLhPiih/N7rrOhxise7EvD
9uH+a6m4fiaKvi/qVAnLuyqJ23gP9iWJzGRF2sSJSBpa1XtXq6v1M3KmXKil
5Yu3sGvx/dDCu/y8hOd8Y49o3g/4uR/wX82TIiY9T0t3mTSdGvQxllZkj2Ej
u5jW49PNgP8wvrLG+kwe2Ifz73zIbzchf0B8rob4dw7iyyI4v7hfbypeX+y/
OKx/LKzXPx4OclQShYPBviVgjy0Zf6EGeRRWoK9FBahmhIOc0Lgh/00e1JVE
E6ZX+0lsL08vbvWYsZzH0kusyRVTdln2Pfr7wEtUUdxB1ZxLx6gp4w4xiavn
cS/ynvHWgJ/PAT6tnri7Hl9h/CIdiuF0kH/DIL8FQv7oBvG5COLfc4gv4+D8
Rr4x2he4wFiDWUASM/HM+A/1+hHWBjOqLEi58oYiZfsxhWRuhwj/awrXPaOV
f83vRvXYtYFupE5lEj5vYtp1/Ewn8m3oL0vLVbbadcp1vT6r5sdZMdqs5+y2
7ov48cA/wgHf+wJ+1o18wUshgP+mrOC0HOBDwAc2kH8ZyG9lkD++QnwuhPgn
7zaDs44B+2RYPzpmPL8akvD1g6/nFIa7+xRUvZZGyxJOIxerQkRo7vcWVnii
bUMtSHq3qfLvOxtVOdHbqYzz26lRf+erimadUaZc+YPsmdZJmVbcie7i0p2d
YVLFBQN/uw38KAf4hyxxgkAAfpYAn2o+5/MywFc5gF8UgA+GQf4ltvYTEiB/
PHwymvPjIP5dxfbpVIb52zqDtqBraZz34lzf4+zetucoPOkn0l0erCBuH0K7
t0xGeU/2IM/B+cgnbxnZPShKubXMT2nrtxPJPsfJbR0vosy8laohP6yZrsDP
Pdtn8snALx2Av9UAP5Ldy+R18XG8FvBzJeDTcMB/WYCvOtQAVgR88KKFKW/p
ZcV1EK4y6/LH0fsisD6tN/YOCzTWz+C6Cp3CoDNIilimFbk1uTvSTHuPiNg3
iotX+5GK1LWkRYAbmdd9GzK5PAxlBo8mN6ptyPLyZ6jI15zUlgVSp6K1jFtZ
HHc/ppWQB/w3Evil3L63UAr8SAf8w9TRTCwH/GwL+HQ54L8kwFdfQiK450ui
2DO3A5ib71rSC6VVqtj7REMONs53SGnolakgdCmIsM5DSWV2aOuVtkg61AG1
+9WZLI5ujczf7yAdM9JI3q0LeaZrECLWDSVrXf8i831Jcuv2ieTxzUOpnPfr
mStuCzibb+aCN/DzYuC/5ZhfAn9jgB/ZAv/4CPj+IuBnR8CnQ4+FcG5ezdhV
rY/RU7pJ1Mqk5qqLq+zIobptxh5scfVvOQhNulGD+6ggNDYk0XQ1IlstQw/9
OyHNMmv58BfVaPPyAsVmSyey9YadKODzE8UkpRyZX7Egx1bJyfdPPqLakTHo
5wRX1Y2uL2nby/fYboAjzYp2C5ifRwL/bQ78sj/wty3Aj8KAf9Q8CuITlg/g
uvK1TNeQ+fS3rm9UVQNnK6v7DiN9U+wUcWMdsHYJNh1BRGAxSSBc7wNno2gD
Iig10hU3Rl50TZ/8m93RhRWr0cPH/ZDy7jdFmWtL0s6vBFU7r0Q3d+5ANR23
KO7bLEEhHdYgV/9/FS/MlpOjAvIpXyaPKfkcyt14UsZrBqULg4CfewD/JYFf
bgX+NunKKe7WzMds34S9zPkAD7qsU54qd/FGUsYO7tMzYxhqaa0mudDvhrlC
MhYRwTsRERUH/ruoIJbuRJJPPxSpXq+wcI9SzA5phDzFMahMkYcCZ8rkXitM
yF2N+6DMcXcQa1uL/OZ2QtqVT+RRS28r5EuvyN2RE3k+oZ2qxSsZvepyFVPV
ZRr3WjeT3xgUyycBP19/5xHXulFzbtdKe3Z0sj0z++pTysY9WHWo0QoyTM8r
Tm2YS3ZtXYOsfolk60GzSOI1IgPLzcllIzRkr/laJM3eixLWDCCnj+6F/uxo
RvpbyMjGmzYhy+G/0LZQlmy3Mh7928qUVP4Vh266xCOPs7Zo+rM6FJp5H225
ugnd/siRfc/bKj9dr1B+Pt9YNSR8tGrTn02ovX82U8XPSSS3z1OSkmd78tzJ
JqRXny/o3eBpyie6TtTBRfvooVam7O2pb9mM5DVcFXmc+7LlLXfbieZ/HYjn
xlz2Yyc3+0FPi/CjcpxTlUUuPDnjCoF0kzwVdZqPihz7jej+dxlKoG+h2xYX
FVXNMlBNnr1CvcIbafsfVrRvNhOxJUcUh/aMILuhROUZ8oCq8+5UKpmYQ7Xq
t5HqFNKBXvzMmvL4c42y9QBcM+tIEpVLyUmrHFXn0WtKS85n3MafZ0fHfuD2
TjjGR0QPFcoGLxEuz0oXwsefF54s6SR829SUl6K3sO9ONWf6jmYpvWOQUh/Y
hNw11xXp/NsqAv3+UDhMv6eo6JaOznjGKfzP9Ee7YpsqtKRCHn/luCKwbSHa
fSCAlKUfVzbe3YHKqBhIJ/dqy1w6pqVbOYXQdQ4cfXyeIxXhuFk5oiVgPMlS
SVzarxqWMJtO0hJswCJ/LnzaGt5Nvk745K0RyTmpYuma82LvkvviDeVhMby9
vzik4whhO+CDPekh7JaY7XTKi2yVZe5A8kbfRmTdTnPyBG9FZrd3In2j7qC6
4k5I7bgZHd9KovdWj5Fpl1foVH4/MmdQsTLrFk+937aM7nc0hal27s46NvZi
jmrW0/Pm5lIW1qGqnCH2yn2moyDedaCI05dpu9EB7GnyHDdjv4Wwy7mleFk4
Ln596qzW2nHq4vEd1Hh+I+6/W2XySFzO2Ys1gF86TR3BBSzfwBw/toOSv41X
WubMRdELnqHSl57oc8UOVN1bicqdlqCTM8Yj3x+/kJe8A7l6VlPS/4/nykbq
MVRK0430yDGbGLcAT/bJazfWtTiAuV+7jJ4wbShVnPpGqba8pDyyYzVFFDOM
dfxBtvHTNnzfh95CjWaCuPV9nVh0tJ9aX/1ADDSfK1p38hQrLXT184+cfj0X
SyCP/g346ubd8dxl7TamXXUeJa8dpAyKUCD9iity1UovsouwF4WV7EOzqvJR
pxmtycphB9HAGY2VzwtfKGds8KOEHdl0/I8cJq/1YHZ/+RD2rsVeZq75JXpS
+UlqqxSq+udxW1WXznqqLnUdU5rVjtP3D+LLRi0XuvdbKd4e3FZt88hJzeRk
iXqdXpD2xwtEpVv9/Muax33Ug9LSRCf1buE64D+i51s2f0Rnpq5URrHBkaRl
eAS5fporSYzerjiqP4yI8Nu93U4sJ2tWlSs6DV2L1PQ5ZZW5SE36lEaXNcpl
6NND2EZTh7J/vipgnjarpA/Sj6imTjtUe98rVK8Ec9rT5jwzdrQ/d8ruIH8m
uEQoGZgpHtvrpD4utVWnrV0pynqnCJLyM69ZkykUdMsW8XxOm/xacX+MXEx+
2F4oGl0IOK0dG32aph1rbVU9Xb0RMbQXmbl7LHmy5yVyDbUNSffT0f2px5D/
1xbk188xyvdaeyry/jJ68ohNzNIWg1k/sG9x831MLqqka55WUCUj9quO74hX
zT3Ri5478S1zJWoJd75zNT9kna3o8+m6eN9cow7L+SlWR00SNe39Bck7ndc1
jRRsuy0XS1bZqj1+2aqTfFeKY2rnC1I3R564tw1w+Fu6w8TG1OEpV0lCq5IT
BR9R24nhpE/aStRx7yRSvyxUsfVXMtrU4z65MO2gqrDzIHr8nRQma7wne+7x
ELYrsY/5M7yS3pv9koqZflhVVlmkMn85n2Z+2rHjTdK5sT4mQuBLuZgb/k30
TdOo5VGlYsF+O1HT2VYgnnvzRKWjoJ1Nirq6WjHigFJdsylHrDx9VQj7p6C+
/oiQHQGu/42yS2qmKt66XCl5n1QR565SV8/G0pP8/Ok/ctRUrf8upcvgO2jj
jhJl8tQNVIRLWya4Z3c24okbe6v9XubOo5f0LvNKaqL/PtW6dw9Vvrbb6ZNt
vdm37W5wipkdhTO9SHFRda1Yc0Gp1rC5oibylkCknuaJb014CX+F3+PPq+D/
R8D36eD7V8LP4f51hLk3S0jbAUvqVR/fNabCnjvRmqAeDOFdx1jWrmTH9Q1l
o4+OZmLiyqj0xGaq9UHflSd7zaYW3dPSezt4MfHfA5g70y7RDl8fUdL1Ayqi
Z5EqVK+lvzqEsr3/bcwvBB67Bfi23yVCje8v8D1LYMsdgnQtwaBvTVjG199X
lqaLWP/COljH7ERxs3qW0HSIA0+UZ7GE1hJ8OIUCPkMJ/7ZktOmurG5aW47w
vMj193Hnz6zpwk8/0o3z37SLSdv+iRp3rb/q36Np1PpN0+m9J9fR3T4uo1ed
PEH59MhULSFiVAUe82mvNt7sSLBvd5+ZwrSzCWLdWBs1rs/C73Txe2LCa5qh
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
w1pc8dNKTPmUISxancovDpvHjfL9xpSbzaUrQtNwfM9wbN1xHcYjIlBN9Q40
2anHcNoi3J69gvn+OubnpTiPuzD/fcN8dQnzixvmgynYfwc4+vAh2D/2np/D
OvTUZDbYnaPMV9+jiffR7HJcfxPw+vbC8f0ochR9M4oF4mURr1DbxREXIzjl
78O869lMwUTXWpzhZi2euZgpmJpn8TWPl3H1yV3ZkLa1NBlTJtvXRxuvsWqv
RwRJeIQDMVjx5z1og4hYKqVfAhN+aT6HMN+reHo75tMYzH/nMF9ZYn7xwXzg
TvfiLLC/aW++RcuG7KWOe2XQdzX82LArnfk23B8/cf2F4fzJcf7kL4p44mE0
R+wI54jTWXxRRqZQg3O3rc5adN6RIxSOyOVjlq7lCEMjdueuPXRIxwtZwQ9e
ajVa9XxmIVKE9kZKV7zOkuuqc5zIIUvWUz285zOReD46hbbwZZjvvTE/38R8
WoD5bzLmq+vBJ1jpgsMMuSGUXnjWibpzZgJt1nsgWzjmErcI60s77t+HuD+U
qvozwuuL86cIC+dSC7N4vcRMIfKLlUj1tBGnivnCnkEtfMLLaxyxYQNLuHbQ
3TKdqQKXcGlo8kxEnFyD5OmxKGZQHyRZcJdMrE/BMZZI+saZU4f1ujABk/ay
n/F8dBLrYzvm+x2Z6rzLdw9unJsn6/iVYUzTjeiK7+9kPpGtlHPtJeYc9o9y
rM/TsP4VYX3xw/0rx/1BLIn7s76q/BE4PnUcX6y+jfh1Vr6g1viE/7yiC0/4
V2GN8cQ9fI4aGaguK+p3ASk2BOAa9Ea1yzqhd5OjQSlfAwMXniAJt+9wxamv
zLiKoIuaI5npYcfYDX6W3FlrS+64Zzkbuvwn4/32Ku2/NpZaM22LrLA1lDKQ
+TMG2H/35sXz+7B/rMD6nKDSP6wvRE4BpzBI+1N/Sry+MTi+SBzf6Nn5QvLL
J/xADzWe6PuSJSrisR7o/Lkj7FvLAkToirgGX5KqO9nL5g6E63i+690QD5uf
LySJHsOhLXug1FxPnzJ3SKa9qRImcMRrpqsinXFWjGDCFrrRat0MKd1916V3
lR0ydWsN5pdVHbsI84EX9t/52N8GYv+IwfqsKMb655HDKXH/ynF/NOD6G4HX
9xvO3xkcX6KnGu9RiuMzT8NebI3jC//zjFqxrgOIYtW8IPuzn7Cb2niUvVVA
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
Ph7/WSEpLk2Bt2+tQXgqgMC9hg2SrqjicBacWPAIPHtZoP4Gt+F2pjpIb3WC
cqMAMD8rkmpTI0k/STp5+V68bMbdZbTLFg3WvNCN+5blyutN/cz/yDghjBv+
Qvi1fbdQaDxHUGSF81/rTnNbx6SzZrfcmDa7GqrttaHMteYWjLGeg3kxFjOk
A/5E+KcVYneOQopg1Z2ks4FwTSWd7MpB2XW7ZNeUvaSpbB20B+yF8mhTKJOq
oZQMTdS3Kg4e5maDz/N5MJGKAP/jetBZrRM69ipFVrZ2H72uxpGt+lrKeR7/
wu/eflooTh8gvrgfLHrYbhajz3cV5+1bIsQMVvB1v1y5MMqC7W+vpNuI/pTi
4hxp9YrBSJq5Ev09P9oXf05EhNIOEevSEeGF5wTlByDUEcSY14FXzE6Jv35X
uNwWAd1mK6Hy5GEIStJCae9r4dn7ZNLOxgJKnhSSvq17oYL/BSHuGbLi1lR6
YTdvVuPca26FKBP2EkNF38QwsY9Btmj6pkQ0/xAuTj/aSZw5RlM4/l6dX1dw
g1XuC2TMbj6nrukOlFV6tqI1PmZI8ezWv+dczxBhPlJmPldOETsjZUTkDCkh
NUaEYTU5uyEJ3KIiyW6x3cjEsU3wzXgg8t+XCj7jR5NdzRpIrRODoUNrPBD9
epGJj32Q55YMmaVTGt2+Yym7N4rgTfpOFrx7eYg10lOiddV9sSL2kmjnHy+2
TpGLIIkThi+O5RM2eHD+hwg2+8squm1OsUzrsYX0zfCjyP3DI+nl0YspQhpK
K3xzaK+Ip3TijxlMzIHddFH7DIp42iZV3lLtz54LX89XgvJuBChXfIa6/o5I
2HGfxO4Al8KNwbe5UKLxWQq6AY4IbiTIUov20Zf0vNkoHF9lyyzh/Z0AUdjT
JDrtCrd33tcuPslLF88ljBbl97KEKPe7vPatQi71xzR2nM51eommGXVNESqt
+sZLz9o3y948nUuXi8lMZfVuVm/XUXbQrXts4amB3Lg+XuyriUOYlNDT1KGF
FjL5qptkzJYuiLjvDoRTIXQ6RKNZdyWw30wPut2wIJngSnJb0yHS4KKjTHff
cvpVvSPritd3EM7fZxyfwqBVHBqw1f5ZjLZ9/rJScdNZF3Httmxh+tIm/rT/
LW7yzSS22ceOUX+7m/Kd+Eaq5TJK9uzqLer09OFMUMtsts1IwdUfd+aD5wfw
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
K3Gq8RWfMkTJTMdwpuiiP3fGdKAsi+ifPtGXb4S/6YQf3mT+FKS/SlI/BcH3
pv9w+ewWW/lUx6OC9d2jsnHFq3mlny5HmScQfK3/OztM2aQJtUcmIWUXSzA6
o/LocOw1Ihkqg29AYmQ4Xf97L9xZ0Qcpt8Ui28aL4vmrZkofKtcwj123Mtd6
V0k/tZtI7ysHSRb1MhIPuTlafMO6Siq/8ZK1mJfJaxH/0CL67EH0T9StL4S/
ZTMCZfFk/rr76xf2L77gxKPCEpMs2eS+/nyZsR5HeWcRPzL9705NCjetOwXU
kZX/nXvljff3t8KTxT/BQ3kbKoaEQn36CMgbF4oT6lLgV9coNHS9II7z/FsS
se+JZJhaf8k+zlJ8tVELd57WxL2iV5IAG3s2NkSfTyH+W078rZn4Rx7R5279
Myf60s3fMsKPJjJ/R0l/5aR+bgTfLrE/r7DT43bu6cZHE3yJ/3f3DFC6njSl
7D6L8k73/ecwQ6WYHv7rAtTdOwp7Heug+YYbjG2cg+qzXsLOrpsQs+QC3Xoh
Gi9bvcZveu5w1PAYfTrHAnx8noh/5S1gqp/M5YDklzSSD6yI/6YQf0sn/kER
fT5O9K+K6EsE4a8H4QdD5s+G9LeA1O84q8d1dWQxz2d34zvy3x7M//7pjP3v
DvnuO9p74KqB9yC+SBNqEvugwmEoPJhrR185OB5P/BmHjtt6472aX3CgxBHb
n5lh4+FnEOXUSlv/lQ/6z5ZItw9PY3frK3kNkq8+d+cXkg+UxH+7/c2b+Ed9
tz4T/dtC9OUd4e8bxVFZw/nV/BdzPa5/VxYjNgLpuimp/51tpvy/vSndf+0p
qnuvI9FspTv4G8+mvcUX6eICF2CxHz5PEIF/shuGzVmIgx2K4KzfRLzyOgzH
1hbgy2VSNFc+gOaR2vT2V6HM4tu7uUlnJsuiSf6LIfmqO7+0kXyQQvzXkfib
NvGPXkSfzxL9iyP6csDOj3dfrss1k/nT3gnS0xb54ocm4v/2H5X9+37h/93b
031W1w2ypr0GpQUM9Or9izbpigQt6Tj4ti+WPqK2ExsSRqO7VI4WKs4oPh+H
17hM9Fj4AwJMWulo3IXVA08w7mH5XO7CAFkOyadpJP+lkXzVnV/cSD74SfzX
k/jbFeIfBUSfc7UW8n/P6sWZJ+9mZAoTqcWTk+K4qL3o1ib6791R99qw+0zz
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
      "], {{0, 41, 41}, {41, 0, 0}}, {0., 1.},
      ColorFunction->"GrayLevelDefaultColorFunction",
      Method->{"FastRendering" -> True}],
     BoxForm`ImageTag[
     "Real32", ColorFunction -> Automatic, ColorSpace -> Automatic, 
      Interleaving -> None],
     Selectable->False],
    AxesStyle->{},
    Background->None,
    BoxRatios->Automatic,
    Boxed->False,
    DefaultBaseStyle->"Image3DGraphics3D",
    ImageSize->Automatic,
    ImageSizeRaw->41,
    PlotRange->{{0, 41}, {0, 41}, {0, 41}}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.650271624205826*^9, 3.650271775478062*^9, 3.6502723878282566`*^9, 
   3.650272490579384*^9, {3.650272728233388*^9, 3.6502727350509033`*^9}, 
   3.6502728070235868`*^9, 3.6502728647398443`*^9, 3.6502737012622905`*^9, 
   3.6502738036151204`*^9, 3.6502746140892563`*^9, {3.6502752595991755`*^9, 
   3.6502752814998074`*^9}, 3.6510609037372956`*^9, 3.6510612156122885`*^9, 
   3.6510613452331533`*^9, 3.651061432937329*^9, {3.651061984792347*^9, 
   3.6510620034713407`*^9}, 3.6510623544839315`*^9, 3.6510626588707705`*^9, 
   3.651062695719552*^9, 3.651274482375662*^9, 3.651274770364482*^9, 
   3.6574601633208303`*^9, 3.657460533298946*^9, 3.657460772232559*^9, 
   3.6574608617485743`*^9, 3.657461001419467*^9, 3.657488756238134*^9, 
   3.657488879850048*^9, 3.6823646555219793`*^9, 3.682364825558982*^9, 
   3.6823651732757497`*^9, 3.6824489567597275`*^9, 3.6824493635973663`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"facename", "=", 
   RowBox[{"First", "@", "face"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vis", "=", 
   RowBox[{"renderslices", "[", "facename", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"visibility", "=", 
  RowBox[{"ParallelTable", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ImageMeasurements", "[", 
      RowBox[{
       RowBox[{"ImageMultiply", "[", 
        RowBox[{"vis", ",", 
         RowBox[{"features", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
       "\"\<TotalIntensity\>\""}], "]"}], "/", 
     RowBox[{"ImageMeasurements", "[", 
      RowBox[{"vis", ",", "\"\<TotalIntensity\>\""}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "features", "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"chart1", "=", 
  RowBox[{"BarChart", "[", 
   RowBox[{"visibility", ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Feature visibility\>\""}], ",", 
    RowBox[{"ChartLegends", "\[Rule]", "legends"}], ",", 
    RowBox[{"ChartStyle", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"chartcolors", "//", "Darker"}], ")"}]}], ",", 
    RowBox[{"ChartLabels", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"ToString", "/@", "visibility"}], ",", "Above"}], "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dog", "=", "g1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"saliency", "=", 
  RowBox[{"ParallelTable", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ImageMeasurements", "[", 
      RowBox[{
       RowBox[{"ImageMultiply", "[", 
        RowBox[{"dog", ",", 
         RowBox[{"features", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
       "\"\<TotalIntensity\>\""}], "]"}], "/", 
     RowBox[{"ImageMeasurements", "[", 
      RowBox[{"dog", ",", "\"\<TotalIntensity\>\""}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "features", "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"chart0", "=", 
  RowBox[{"BarChart", "[", 
   RowBox[{"saliency", ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Feature saliency\>\""}], ",", 
    RowBox[{"ChartLegends", "\[Rule]", "legends"}], ",", 
    RowBox[{"ChartStyle", "\[Rule]", 
     RowBox[{"Darker", "@", 
      RowBox[{"Darker", "@", "chartcolors"}]}]}], ",", 
    RowBox[{"ChartLabels", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"ToString", "/@", "saliency"}], ",", "Above"}], "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"viss", "=", 
   RowBox[{"ImageMultiply", "[", 
    RowBox[{"dog", ",", "vis"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"vs", "=", 
  RowBox[{"ParallelTable", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ImageMeasurements", "[", 
      RowBox[{
       RowBox[{"ImageMultiply", "[", 
        RowBox[{"viss", ",", 
         RowBox[{"features", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
       "\"\<TotalIntensity\>\""}], "]"}], "/", 
     RowBox[{"ImageMeasurements", "[", 
      RowBox[{"viss", ",", "\"\<TotalIntensity\>\""}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "features", "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"chart2", "=", 
  RowBox[{"BarChart", "[", 
   RowBox[{"vs", ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<VWS of brightness\>\""}], ",", 
    RowBox[{"ChartLegends", "\[Rule]", "legends"}], ",", 
    RowBox[{"ChartStyle", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"chartcolors", "//", "Lighter"}], ")"}]}], ",", 
    RowBox[{"ChartLabels", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"ToString", "/@", "vs"}], ",", "Above"}], "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"viss2", "=", 
   RowBox[{"ImageMultiply", "[", 
    RowBox[{"g2", ",", "vis"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"vs2", "=", 
  RowBox[{"ParallelTable", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ImageMeasurements", "[", 
      RowBox[{
       RowBox[{"ImageMultiply", "[", 
        RowBox[{"viss2", ",", 
         RowBox[{"features", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
       "\"\<TotalIntensity\>\""}], "]"}], "/", 
     RowBox[{"ImageMeasurements", "[", 
      RowBox[{"viss2", ",", "\"\<TotalIntensity\>\""}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "features", "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"chart2b", "=", 
  RowBox[{"BarChart", "[", 
   RowBox[{"vs2", ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<VWS of saturation\>\""}], ",", 
    RowBox[{"ChartLegends", "\[Rule]", "legends"}], ",", 
    RowBox[{"ChartStyle", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"chartcolors", "//", "Lighter"}], ")"}]}], ",", 
    RowBox[{"ChartLabels", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"ToString", "/@", "vs2"}], ",", "Above"}], "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"mean", "=", 
  RowBox[{"Mean", "[", 
   RowBox[{"{", 
    RowBox[{"vs", ",", "vs2"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"weighted", "=", 
  RowBox[{"BarChart", "[", 
   RowBox[{"mean", ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Visibility-weighted saliency\>\""}], 
    ",", 
    RowBox[{"ChartLegends", "\[Rule]", "legends"}], ",", 
    RowBox[{"ChartStyle", "\[Rule]", "chartcolors"}], ",", 
    RowBox[{"ChartLabels", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"ToString", "/@", "mean"}], ",", "Above"}], "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"charts", "=", 
   RowBox[{"{", 
    RowBox[{
    "chart0", ",", "chart1", ",", "chart2", ",", "chart2b", ",", "weighted"}],
     "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scores", "=", 
   RowBox[{"{", 
    RowBox[{
    "saliency", ",", "visibility", ",", "vs", ",", "vs2", ",", "mean"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imagefilenames2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"StringReplace", "[", 
      RowBox[{"#", ",", 
       RowBox[{"\"\<.\>\"", "\[Rule]", 
        RowBox[{"\"\<_\>\"", "<>", "facename", "<>", "\"\<.\>\""}]}]}], "]"}],
      "&"}], "/@", "imagefilenames"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"txtfilenames2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"StringReplace", "[", 
      RowBox[{"#", ",", 
       RowBox[{"\"\<.\>\"", "\[Rule]", 
        RowBox[{"\"\<_\>\"", "<>", "facename", "<>", "\"\<.\>\""}]}]}], "]"}],
      "&"}], "/@", "txtfilenames"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"imagefilenames2", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"charts", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "charts", "]"}]}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"txtfilenames2", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"scores", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "scores", "]"}]}], "}"}]}], "]"}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scoremap", "=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "resultxml", "]"}], ",", 
     RowBox[{"Association", "@", 
      RowBox[{"Import", "[", "resultxml", "]"}]}], ",", 
     RowBox[{"<|", "|>"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AssociateTo", "[", 
   RowBox[{"scoremap", ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"dataname", "<>", "\"\<_\>\"", "<>", "facename"}], ")"}], 
     "\[Rule]", "scores"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"resultxml", ",", 
    RowBox[{"Normal", "[", "scoremap", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{
    RowBox[{"ImageAdd", "[", 
     RowBox[{"viss", ",", "viss2"}], "]"}], "//", "ImageAdjust"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"results", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ImageMultiply", "[", 
      RowBox[{"w", ",", "#"}], "]"}], "&"}], "/@", "features"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MapIndexed", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"StringReplace", "[", 
        RowBox[{"featurefilename", ",", 
         RowBox[{"\"\<.\>\"", "\[Rule]", 
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"First", "[", "#2", "]"}], "]"}], "<>", "\"\<_\>\"", "<>",
            "facename", "<>", "\"\<.\>\""}]}]}], "]"}], ",", "#"}], "]"}], 
     "&"}], ",", "results"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.643977692514688*^9, 3.6439777403372*^9}, {
   3.643998980954749*^9, 3.6439990362849293`*^9}, {3.643999189311352*^9, 
   3.643999193452961*^9}, {3.6439992470692577`*^9, 3.6439992472567587`*^9}, {
   3.6500488895180426`*^9, 3.6500489553716717`*^9}, {3.650048992131775*^9, 
   3.650049094957852*^9}, {3.650096365068311*^9, 3.65009637059096*^9}, {
   3.650098864384934*^9, 3.650098865203187*^9}, {3.6500989497760572`*^9, 
   3.6500989787872157`*^9}, {3.6500991337623434`*^9, 
   3.6500991478569255`*^9}, {3.650099221810384*^9, 3.6500992221385355`*^9}, {
   3.650099274627404*^9, 3.650099393874731*^9}, 3.650099434587515*^9, 
   3.65010666292391*^9, {3.6501299584774075`*^9, 3.6501299655165653`*^9}, {
   3.650266475181678*^9, 3.6502665306955986`*^9}, {3.6502666631824636`*^9, 
   3.650266690185115*^9}, {3.6502669167449465`*^9, 3.650266922384617*^9}, 
   3.650272849325635*^9, {3.650273301013248*^9, 3.6502733015247803`*^9}, {
   3.6502736929713116`*^9, 3.650273693875102*^9}, {3.650273773001992*^9, 
   3.6502737774131827`*^9}, {3.6510614130627623`*^9, 3.651061416407946*^9}, 
   3.651062581660205*^9, 3.651274738327832*^9, {3.657459679829438*^9, 
   3.65745968737868*^9}, {3.6574597178377843`*^9, 3.6574597274936776`*^9}, {
   3.6574606341084805`*^9, 3.65746066143348*^9}, {3.6823645477972083`*^9, 
   3.68236455991742*^9}, {3.682364637313159*^9, 3.6823646433537626`*^9}, {
   3.6823651465290756`*^9, 3.682365151984621*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.450036469730124`", ",", "0.3814733770970095`", ",", 
   "0.16849015317286653`"}], "}"}]], "Output",
 CellChangeTimes->{{3.6510619851213427`*^9, 3.6510620037959623`*^9}, 
   3.6510623548306684`*^9, 3.6510626591978006`*^9, 3.6510626960446744`*^9, 
   3.6512744827756543`*^9, 3.651274770679739*^9, 3.6574601675560274`*^9, 
   3.6574605336868453`*^9, 3.6574607725857525`*^9, 3.6574608620804143`*^9, 
   3.6574610017641535`*^9, 3.6574887606039953`*^9, 3.6574888837515345`*^9, 
   3.682364655746002*^9, 3.682364825763002*^9, 3.68236517347977*^9, 
   3.682448959034727*^9, 3.6824493638633933`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{0.48597994530537825`, 0.}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.6789999999999999]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[
          0.5150326797385621, 0.5673202614379085, 0.4888888888888889]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{0.544211485870556, 0.}, {1.455788514129444, 
               0.450036469730124}, "RoundingRadius" -> 0]}], 
            StatusArea[#, 0.450036469730124]& , TagBoxNote -> 
            "0.450036469730124"], 
           StyleBox["0.450036469730124`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.450036469730124, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[
          0.5411764705882354, 0.1516339869281046, 0.5699346405228758]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{1.544211485870556, 0.}, {2.455788514129444, 
               0.3814733770970095}, "RoundingRadius" -> 0]}], 
            StatusArea[#, 0.3814733770970095]& , TagBoxNote -> 
            "0.3814733770970095"], 
           StyleBox["0.3814733770970095`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.3814733770970095, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[
          0.25098039215686274`, 0.42091503267973857`, 0.3895424836601308]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{2.544211485870556, 0.}, {3.455788514129444, 
               0.16849015317286653`}, "RoundingRadius" -> 0]}], 
            StatusArea[#, 0.16849015317286653`]& , TagBoxNote -> 
            "0.16849015317286653"], 
           StyleBox["0.16849015317286653`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.16849015317286653`, {}], "Tooltip"]& ]}}}, {}, {}}, {}, {
      InsetBox[
       FormBox[
        StyleBox["\"0.450036\"", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {1., 0.450036469730124}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"0.381473\"", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {2., 0.3814733770970095}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"0.16849\"", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {3., 0.16849015317286653`}], 
       ImageScaled[{0.5, 0}]]}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny]], {
          LineBox[{{0.48597994530537825`, 0.}, {3.5151846855059254`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny]], 
           LineBox[{{0.544211485870556, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.544211485870556, 
              0.}]}], 
           LineBox[{{3.455788514129444, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {3.455788514129444, 
              0.}]}], {{}, {}, {}, {}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.48597994530537825`, 0.}, BaseStyle -> {FontSize -> 20}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {{{1., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}}, {{1., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}}}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotLabel -> 
     FormBox["\"Feature visibility\"", TraditionalForm], 
     PlotRange -> {{All, All}, {0, 1}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Feature 1\"", "\"Feature 2\"", "\"Feature 3\"", "\"Feature 4\"", 
       "\"Feature 5\""}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[
                    0.5150326797385621, 0.5673202614379085, 
                    0.4888888888888889]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[
                    0.5411764705882354, 0.1516339869281046, 
                    0.5699346405228758]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[
                    0.25098039215686274`, 0.42091503267973857`, 
                    0.3895424836601308]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[], 
          Directive[], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5150326797385621, 0.5673202614379085, 
                    0.4888888888888889], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3433551198257081, 0.37821350762527234`, 
                    0.32592592592592595`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5150326797385621, 0.5673202614379085, \
0.4888888888888889]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5150326797385621, 0.5673202614379085, 
                    0.4888888888888889]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5150326797385621, 0.5673202614379085, 
                    0.4888888888888889], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882354, 0.1516339869281046, 
                    0.5699346405228758], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.36078431372549025`, 0.1010893246187364, 
                    0.37995642701525056`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5411764705882354, 0.1516339869281046, \
0.5699346405228758]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5411764705882354, 0.1516339869281046, 
                    0.5699346405228758]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882354, 0.1516339869281046, 
                    0.5699346405228758], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.25098039215686274`, 0.42091503267973857`, 
                    0.3895424836601308], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.1673202614379085, 0.2806100217864924, 
                    0.25969498910675387`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.25098039215686274, 0.42091503267973857, \
0.3895424836601308]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.25098039215686274`, 0.42091503267973857`, 
                    0.3895424836601308]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.25098039215686274`, 0.42091503267973857`, 
                    0.3895424836601308], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"Automatic", ",", "Automatic", ",", "Automatic"}], 
                 "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", "]"}], ",", 
                 RowBox[{"Directive", "[", "]"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6510619851213427`*^9, 3.6510620037959623`*^9}, 
   3.6510623548306684`*^9, 3.6510626591978006`*^9, 3.6510626960446744`*^9, 
   3.6512744827756543`*^9, 3.651274770679739*^9, 3.6574601675560274`*^9, 
   3.6574605336868453`*^9, 3.6574607725857525`*^9, 3.6574608620804143`*^9, 
   3.6574610017641535`*^9, 3.6574887606039953`*^9, 3.6574888837515345`*^9, 
   3.682364655746002*^9, 3.682364825763002*^9, 3.68236517347977*^9, 
   3.682448959034727*^9, 3.682449363941401*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.18601500237762802`", ",", "0.17934461968794202`", ",", 
   "0.135553137894406`"}], "}"}]], "Output",
 CellChangeTimes->{{3.6510619851213427`*^9, 3.6510620037959623`*^9}, 
   3.6510623548306684`*^9, 3.6510626591978006`*^9, 3.6510626960446744`*^9, 
   3.6512744827756543`*^9, 3.651274770679739*^9, 3.6574601675560274`*^9, 
   3.6574605336868453`*^9, 3.6574607725857525`*^9, 3.6574608620804143`*^9, 
   3.6574610017641535`*^9, 3.6574887606039953`*^9, 3.6574888837515345`*^9, 
   3.682364655746002*^9, 3.682364825763002*^9, 3.68236517347977*^9, 
   3.682448959034727*^9, 3.6824493639564023`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{0.48597994530537825`, 0.}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.6789999999999999]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[
          0.3433551198257081, 0.37821350762527234`, 0.32592592592592595`]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{0.544211485870556, 0.}, {1.455788514129444, 
               0.18601500237762802`}, "RoundingRadius" -> 0]}], 
            StatusArea[#, 0.18601500237762802`]& , TagBoxNote -> 
            "0.18601500237762802"], 
           StyleBox["0.18601500237762802`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.18601500237762802`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[
          0.36078431372549025`, 0.1010893246187364, 0.37995642701525056`]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{1.544211485870556, 0.}, {2.455788514129444, 
               0.17934461968794202`}, "RoundingRadius" -> 0]}], 
            StatusArea[#, 0.17934461968794202`]& , TagBoxNote -> 
            "0.17934461968794202"], 
           StyleBox["0.17934461968794202`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.17934461968794202`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[
          0.1673202614379085, 0.2806100217864924, 0.25969498910675387`]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{2.544211485870556, 0.}, {3.455788514129444, 
               0.135553137894406}, "RoundingRadius" -> 0]}], 
            StatusArea[#, 0.135553137894406]& , TagBoxNote -> 
            "0.135553137894406"], 
           StyleBox["0.135553137894406`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.135553137894406, {}], "Tooltip"]& ]}}}, {}, {}}, {}, {
      InsetBox[
       FormBox[
        StyleBox["\"0.186015\"", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {1., 0.18601500237762802`}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"0.179345\"", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {2., 0.17934461968794202`}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"0.135553\"", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {3., 0.135553137894406}], 
       ImageScaled[{0.5, 0}]]}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny]], {
          LineBox[{{0.48597994530537825`, 0.}, {3.5151846855059254`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny]], 
           LineBox[{{0.544211485870556, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.544211485870556, 
              0.}]}], 
           LineBox[{{3.455788514129444, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {3.455788514129444, 
              0.}]}], {{}, {}, {}, {}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.48597994530537825`, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {{{1., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}}, {{1., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}}}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotLabel -> 
     FormBox["\"Feature saliency\"", TraditionalForm], 
     PlotRange -> {{All, All}, {0, 1}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Feature 1\"", "\"Feature 2\"", "\"Feature 3\"", "\"Feature 4\"", 
       "\"Feature 5\""}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[
                    0.3433551198257081, 0.37821350762527234`, 
                    0.32592592592592595`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[
                    0.36078431372549025`, 0.1010893246187364, 
                    0.37995642701525056`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[
                    0.1673202614379085, 0.2806100217864924, 
                    0.25969498910675387`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[], 
          Directive[], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.3433551198257081, 0.37821350762527234`, 
                    0.32592592592592595`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.22890341321713875`, 0.25214233841684824`, 
                    0.21728395061728398`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.3433551198257081, 0.37821350762527234, \
0.32592592592592595]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.3433551198257081, 0.37821350762527234`, 
                    0.32592592592592595`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.3433551198257081, 0.37821350762527234`, 
                    0.32592592592592595`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.36078431372549025`, 0.1010893246187364, 
                    0.37995642701525056`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2405228758169935, 0.06739288307915761, 
                    0.25330428467683375`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.36078431372549025, 0.1010893246187364, \
0.37995642701525056]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.36078431372549025`, 0.1010893246187364, 
                    0.37995642701525056`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.36078431372549025`, 0.1010893246187364, 
                    0.37995642701525056`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1673202614379085, 0.2806100217864924, 
                    0.25969498910675387`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.11154684095860568`, 0.1870733478576616, 
                    0.1731299927378359], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.1673202614379085, 0.2806100217864924, \
0.25969498910675387]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1673202614379085, 0.2806100217864924, 
                    0.25969498910675387`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1673202614379085, 0.2806100217864924, 
                    0.25969498910675387`], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"Automatic", ",", "Automatic", ",", "Automatic"}], 
                 "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", "]"}], ",", 
                 RowBox[{"Directive", "[", "]"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6510619851213427`*^9, 3.6510620037959623`*^9}, 
   3.6510623548306684`*^9, 3.6510626591978006`*^9, 3.6510626960446744`*^9, 
   3.6512744827756543`*^9, 3.651274770679739*^9, 3.6574601675560274`*^9, 
   3.6574605336868453`*^9, 3.6574607725857525`*^9, 3.6574608620804143`*^9, 
   3.6574610017641535`*^9, 3.6574887606039953`*^9, 3.6574888837515345`*^9, 
   3.682364655746002*^9, 3.682364825763002*^9, 3.68236517347977*^9, 
   3.682448959034727*^9, 3.6824493640364103`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.5345052783774121`", ",", "0.3089161720098883`", ",", 
   "0.15657854961269949`"}], "}"}]], "Output",
 CellChangeTimes->{{3.6510619851213427`*^9, 3.6510620037959623`*^9}, 
   3.6510623548306684`*^9, 3.6510626591978006`*^9, 3.6510626960446744`*^9, 
   3.6512744827756543`*^9, 3.651274770679739*^9, 3.6574601675560274`*^9, 
   3.6574605336868453`*^9, 3.6574607725857525`*^9, 3.6574608620804143`*^9, 
   3.6574610017641535`*^9, 3.6574887606039953`*^9, 3.6574888837515345`*^9, 
   3.682364655746002*^9, 3.682364825763002*^9, 3.68236517347977*^9, 
   3.682448959034727*^9, 3.682449364050412*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{0.48597994530537825`, 0.}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.6789999999999999]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[
          0.8483660130718954, 0.9006535947712418, 0.8222222222222222]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{0.544211485870556, 0.}, {1.455788514129444, 
               0.5345052783774121}, "RoundingRadius" -> 0]}], 
            StatusArea[#, 0.5345052783774121]& , TagBoxNote -> 
            "0.5345052783774121"], 
           StyleBox["0.5345052783774121`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.5345052783774121, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[
          0.8745098039215686, 0.48496732026143785`, 0.9032679738562092]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{1.544211485870556, 0.}, {2.455788514129444, 
               0.3089161720098883}, "RoundingRadius" -> 0]}], 
            StatusArea[#, 0.3089161720098883]& , TagBoxNote -> 
            "0.3089161720098883"], 
           StyleBox["0.3089161720098883`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.3089161720098883, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[0.584313725490196, 0.7542483660130719, 0.722875816993464]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{2.544211485870556, 0.}, {3.455788514129444, 
               0.15657854961269949`}, "RoundingRadius" -> 0]}], 
            StatusArea[#, 0.15657854961269949`]& , TagBoxNote -> 
            "0.15657854961269949"], 
           StyleBox["0.15657854961269949`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.15657854961269949`, {}], "Tooltip"]& ]}}}, {}, {}}, {}, {
      InsetBox[
       FormBox[
        StyleBox["\"0.534505\"", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {1., 0.5345052783774121}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"0.308916\"", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {2., 0.3089161720098883}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"0.156579\"", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {3., 0.15657854961269949`}], 
       ImageScaled[{0.5, 0}]]}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny]], {
          LineBox[{{0.48597994530537825`, 0.}, {3.5151846855059254`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny]], 
           LineBox[{{0.544211485870556, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.544211485870556, 
              0.}]}], 
           LineBox[{{3.455788514129444, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {3.455788514129444, 
              0.}]}], {{}, {}, {}, {}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.48597994530537825`, 0.}, BaseStyle -> {FontSize -> 20}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {{{1., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}}, {{1., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}}}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotLabel -> 
     FormBox["\"VWS of brightness\"", TraditionalForm], 
     PlotRange -> {{All, All}, {0, 1}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Feature 1\"", "\"Feature 2\"", "\"Feature 3\"", "\"Feature 4\"", 
       "\"Feature 5\""}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[
                    0.8483660130718954, 0.9006535947712418, 
                    0.8222222222222222]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[
                    0.8745098039215686, 0.48496732026143785`, 
                    0.9032679738562092]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[
                    0.584313725490196, 0.7542483660130719, 
                    0.722875816993464]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[], 
          Directive[], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8483660130718954, 0.9006535947712418, 
                    0.8222222222222222], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5655773420479303, 0.6004357298474946, 
                    0.5481481481481482], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.8483660130718954, 0.9006535947712418, \
0.8222222222222222]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8483660130718954, 0.9006535947712418, 
                    0.8222222222222222]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8483660130718954, 0.9006535947712418, 
                    0.8222222222222222], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8745098039215686, 0.48496732026143785`, 
                    0.9032679738562092], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5830065359477125, 0.3233115468409586, 
                    0.6021786492374728], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.8745098039215686, 0.48496732026143785, \
0.9032679738562092]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8745098039215686, 0.48496732026143785`, 
                    0.9032679738562092]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8745098039215686, 0.48496732026143785`, 
                    0.9032679738562092], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.584313725490196, 0.7542483660130719, 0.722875816993464], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.38954248366013067`, 0.5028322440087146, 
                    0.481917211328976], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.584313725490196, 0.7542483660130719, \
0.722875816993464]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.584313725490196, 0.7542483660130719, 0.722875816993464]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.584313725490196, 0.7542483660130719, 0.722875816993464],
                     Editable -> False, Selectable -> False]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"Automatic", ",", "Automatic", ",", "Automatic"}], 
                 "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", "]"}], ",", 
                 RowBox[{"Directive", "[", "]"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6510619851213427`*^9, 3.6510620037959623`*^9}, 
   3.6510623548306684`*^9, 3.6510626591978006`*^9, 3.6510626960446744`*^9, 
   3.6512744827756543`*^9, 3.651274770679739*^9, 3.6574601675560274`*^9, 
   3.6574605336868453`*^9, 3.6574607725857525`*^9, 3.6574608620804143`*^9, 
   3.6574610017641535`*^9, 3.6574887606039953`*^9, 3.6574888837515345`*^9, 
   3.682364655746002*^9, 3.682364825763002*^9, 3.68236517347977*^9, 
   3.682448959034727*^9, 3.6824493641304197`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.15500983864444337`", ",", "0.75513341411046`", ",", 
   "0.08985674724509658`"}], "}"}]], "Output",
 CellChangeTimes->{{3.6510619851213427`*^9, 3.6510620037959623`*^9}, 
   3.6510623548306684`*^9, 3.6510626591978006`*^9, 3.6510626960446744`*^9, 
   3.6512744827756543`*^9, 3.651274770679739*^9, 3.6574601675560274`*^9, 
   3.6574605336868453`*^9, 3.6574607725857525`*^9, 3.6574608620804143`*^9, 
   3.6574610017641535`*^9, 3.6574887606039953`*^9, 3.6574888837515345`*^9, 
   3.682364655746002*^9, 3.682364825763002*^9, 3.68236517347977*^9, 
   3.682448959034727*^9, 3.682449364144421*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{0.48597994530537825`, 0.}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.6789999999999999]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[
          0.8483660130718954, 0.9006535947712418, 0.8222222222222222]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{0.544211485870556, 0.}, {1.455788514129444, 
               0.15500983864444337`}, "RoundingRadius" -> 0]}], 
            StatusArea[#, 0.15500983864444337`]& , TagBoxNote -> 
            "0.15500983864444337"], 
           StyleBox["0.15500983864444337`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.15500983864444337`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[
          0.8745098039215686, 0.48496732026143785`, 0.9032679738562092]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{1.544211485870556, 0.}, {2.455788514129444, 
               0.75513341411046}, "RoundingRadius" -> 0]}], 
            StatusArea[#, 0.75513341411046]& , TagBoxNote -> 
            "0.75513341411046"], 
           StyleBox["0.75513341411046`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.75513341411046, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[0.584313725490196, 0.7542483660130719, 0.722875816993464]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{2.544211485870556, 0.}, {3.455788514129444, 
               0.08985674724509658}, "RoundingRadius" -> 0]}], 
            StatusArea[#, 0.08985674724509658]& , TagBoxNote -> 
            "0.08985674724509658"], 
           StyleBox["0.08985674724509658`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.08985674724509658, {}], "Tooltip"]& ]}}}, {}, {}}, {}, {
      InsetBox[
       FormBox[
        StyleBox["\"0.15501\"", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {1., 0.15500983864444337`}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"0.755133\"", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {2., 0.75513341411046}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"0.0898567\"", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {3., 0.08985674724509658}], 
       ImageScaled[{0.5, 0}]]}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny]], {
          LineBox[{{0.48597994530537825`, 0.}, {3.5151846855059254`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny]], 
           LineBox[{{0.544211485870556, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.544211485870556, 
              0.}]}], 
           LineBox[{{3.455788514129444, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {3.455788514129444, 
              0.}]}], {{}, {}, {}, {}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.48597994530537825`, 0.}, BaseStyle -> {FontSize -> 20}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {{{1., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}}, {{1., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}}}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotLabel -> 
     FormBox["\"VWS of saturation\"", TraditionalForm], 
     PlotRange -> {{All, All}, {0, 1}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Feature 1\"", "\"Feature 2\"", "\"Feature 3\"", "\"Feature 4\"", 
       "\"Feature 5\""}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[
                    0.8483660130718954, 0.9006535947712418, 
                    0.8222222222222222]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[
                    0.8745098039215686, 0.48496732026143785`, 
                    0.9032679738562092]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[
                    0.584313725490196, 0.7542483660130719, 
                    0.722875816993464]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[], 
          Directive[], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8483660130718954, 0.9006535947712418, 
                    0.8222222222222222], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5655773420479303, 0.6004357298474946, 
                    0.5481481481481482], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.8483660130718954, 0.9006535947712418, \
0.8222222222222222]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8483660130718954, 0.9006535947712418, 
                    0.8222222222222222]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8483660130718954, 0.9006535947712418, 
                    0.8222222222222222], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8745098039215686, 0.48496732026143785`, 
                    0.9032679738562092], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5830065359477125, 0.3233115468409586, 
                    0.6021786492374728], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.8745098039215686, 0.48496732026143785, \
0.9032679738562092]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8745098039215686, 0.48496732026143785`, 
                    0.9032679738562092]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8745098039215686, 0.48496732026143785`, 
                    0.9032679738562092], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.584313725490196, 0.7542483660130719, 0.722875816993464], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.38954248366013067`, 0.5028322440087146, 
                    0.481917211328976], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.584313725490196, 0.7542483660130719, \
0.722875816993464]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.584313725490196, 0.7542483660130719, 0.722875816993464]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.584313725490196, 0.7542483660130719, 0.722875816993464],
                     Editable -> False, Selectable -> False]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"Automatic", ",", "Automatic", ",", "Automatic"}], 
                 "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", "]"}], ",", 
                 RowBox[{"Directive", "[", "]"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6510619851213427`*^9, 3.6510620037959623`*^9}, 
   3.6510623548306684`*^9, 3.6510626591978006`*^9, 3.6510626960446744`*^9, 
   3.6512744827756543`*^9, 3.651274770679739*^9, 3.6574601675560274`*^9, 
   3.6574605336868453`*^9, 3.6574607725857525`*^9, 3.6574608620804143`*^9, 
   3.6574610017641535`*^9, 3.6574887606039953`*^9, 3.6574888837515345`*^9, 
   3.682364655746002*^9, 3.682364825763002*^9, 3.68236517347977*^9, 
   3.682448959034727*^9, 3.6824493642224293`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.34475755851092776`", ",", "0.5320247930601741`", ",", 
   "0.12321764842889804`"}], "}"}]], "Output",
 CellChangeTimes->{{3.6510619851213427`*^9, 3.6510620037959623`*^9}, 
   3.6510623548306684`*^9, 3.6510626591978006`*^9, 3.6510626960446744`*^9, 
   3.6512744827756543`*^9, 3.651274770679739*^9, 3.6574601675560274`*^9, 
   3.6574605336868453`*^9, 3.6574607725857525`*^9, 3.6574608620804143`*^9, 
   3.6574610017641535`*^9, 3.6574887606039953`*^9, 3.6574888837515345`*^9, 
   3.682364655746002*^9, 3.682364825763002*^9, 3.68236517347977*^9, 
   3.682448959034727*^9, 3.68244936423643*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{0.48597994530537825`, 0.}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.6789999999999999]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[
          0.7725490196078432, 0.8509803921568627, 0.7333333333333333]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{0.544211485870556, 0.}, {1.455788514129444, 
               0.34475755851092776`}, "RoundingRadius" -> 0]}], 
            StatusArea[#, 0.34475755851092776`]& , TagBoxNote -> 
            "0.34475755851092776"], 
           StyleBox["0.34475755851092776`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.34475755851092776`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[
          0.8117647058823529, 0.22745098039215686`, 0.8549019607843137]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{1.544211485870556, 0.}, {2.455788514129444, 
               0.5320247930601741}, "RoundingRadius" -> 0]}], 
            StatusArea[#, 0.5320247930601741]& , TagBoxNote -> 
            "0.5320247930601741"], 
           StyleBox["0.5320247930601741`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.5320247930601741, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[
          0.3764705882352941, 0.6313725490196078, 0.5843137254901961]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{2.544211485870556, 0.}, {3.455788514129444, 
               0.12321764842889804`}, "RoundingRadius" -> 0]}], 
            StatusArea[#, 0.12321764842889804`]& , TagBoxNote -> 
            "0.12321764842889804"], 
           StyleBox["0.12321764842889804`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.12321764842889804`, {}], "Tooltip"]& ]}}}, {}, {}}, {}, {
      InsetBox[
       FormBox[
        StyleBox["\"0.344758\"", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {1., 0.34475755851092776`}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"0.532025\"", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {2., 0.5320247930601741}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"0.123218\"", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {3., 0.12321764842889804`}], 
       ImageScaled[{0.5, 0}]]}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny]], {
          LineBox[{{0.48597994530537825`, 0.}, {3.5151846855059254`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny]], 
           LineBox[{{0.544211485870556, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.544211485870556, 
              0.}]}], 
           LineBox[{{3.455788514129444, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {3.455788514129444, 
              0.}]}], {{}, {}, {}, {}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.48597994530537825`, 0.}, BaseStyle -> {FontSize -> 20}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {{{1., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}}, {{1., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}}}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotLabel -> 
     FormBox["\"Visibility-weighted saliency\"", TraditionalForm], 
     PlotRange -> {{All, All}, {0, 1}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Feature 1\"", "\"Feature 2\"", "\"Feature 3\"", "\"Feature 4\"", 
       "\"Feature 5\""}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[
                    0.7725490196078432, 0.8509803921568627, 
                    0.7333333333333333]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[
                    0.8117647058823529, 0.22745098039215686`, 
                    0.8549019607843137]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[
                    0.3764705882352941, 0.6313725490196078, 
                    0.5843137254901961]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[], 
          Directive[], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7725490196078432, 0.8509803921568627, 
                    0.7333333333333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5150326797385621, 0.5673202614379085, 
                    0.4888888888888889], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.7725490196078432, 0.8509803921568627, \
0.7333333333333333]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7725490196078432, 0.8509803921568627, 
                    0.7333333333333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7725490196078432, 0.8509803921568627, 
                    0.7333333333333333], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8117647058823529, 0.22745098039215686`, 
                    0.8549019607843137], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5411764705882354, 0.1516339869281046, 
                    0.5699346405228758], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.8117647058823529, 0.22745098039215686, \
0.8549019607843137]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8117647058823529, 0.22745098039215686`, 
                    0.8549019607843137]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8117647058823529, 0.22745098039215686`, 
                    0.8549019607843137], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.3764705882352941, 0.6313725490196078, 
                    0.5843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.25098039215686274`, 0.42091503267973857`, 
                    0.3895424836601308], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.3764705882352941, 0.6313725490196078, \
0.5843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.3764705882352941, 0.6313725490196078, 
                    0.5843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.3764705882352941, 0.6313725490196078, 
                    0.5843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"Automatic", ",", "Automatic", ",", "Automatic"}], 
                 "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", "]"}], ",", 
                 RowBox[{"Directive", "[", "]"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6510619851213427`*^9, 3.6510620037959623`*^9}, 
   3.6510623548306684`*^9, 3.6510626591978006`*^9, 3.6510626960446744`*^9, 
   3.6512744827756543`*^9, 3.651274770679739*^9, 3.6574601675560274`*^9, 
   3.6574605336868453`*^9, 3.6574607725857525`*^9, 3.6574608620804143`*^9, 
   3.6574610017641535`*^9, 3.6574887606039953`*^9, 3.6574888837515345`*^9, 
   3.682364655746002*^9, 3.682364825763002*^9, 3.68236517347977*^9, 
   3.682448959034727*^9, 3.6824493643154383`*^9}],

Cell[BoxData[
 TemplateBox[{
  "XML`Parser`XMLGet","prserr",
   "\"The main XML document cannot be empty at Line: 1 Character: 1 in \
D:\\\\document\\\\work\\\\time-varying-visualization\\\\~images\\\\saliency.\
xml.\"",2,914,215,32608824972693628946,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6824489569487276`*^9, 3.6824493659766045`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Import","fmterr",
   "\"Cannot import data as \\!\\(\\*RowBox[{\\\"\\\\\\\"XML\\\\\\\"\\\"}]\\) \
format.\"",2,914,216,32608824972693628946,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6824489569487276`*^9, 3.6824493660026073`*^9}],

Cell[BoxData[
 TemplateBox[{
  "AssociateTo","invak",
   "\"The argument \\!\\(\\*RowBox[{\\\"scoremap\\\"}]\\) is not a valid \
Association.\"",2,915,217,32608824972693628946,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6824489569487276`*^9, 3.682449366018609*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"facename", "=", 
   RowBox[{"Last", "@", "face"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vis", "=", 
   RowBox[{"renderslices", "[", "facename", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"visibility", "=", 
  RowBox[{"ParallelTable", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ImageMeasurements", "[", 
      RowBox[{
       RowBox[{"ImageMultiply", "[", 
        RowBox[{"vis", ",", 
         RowBox[{"features", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
       "\"\<TotalIntensity\>\""}], "]"}], "/", 
     RowBox[{"ImageMeasurements", "[", 
      RowBox[{"vis", ",", "\"\<TotalIntensity\>\""}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "features", "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"chart1", "=", 
  RowBox[{"BarChart", "[", 
   RowBox[{"visibility", ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Feature visibility\>\""}], ",", 
    RowBox[{"ChartLegends", "\[Rule]", "legends"}], ",", 
    RowBox[{"ChartStyle", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"chartcolors", "//", "Darker"}], ")"}]}], ",", 
    RowBox[{"ChartLabels", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"ToString", "/@", "visibility"}], ",", "Above"}], "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dog", "=", "g1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"saliency", "=", 
  RowBox[{"ParallelTable", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ImageMeasurements", "[", 
      RowBox[{
       RowBox[{"ImageMultiply", "[", 
        RowBox[{"dog", ",", 
         RowBox[{"features", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
       "\"\<TotalIntensity\>\""}], "]"}], "/", 
     RowBox[{"ImageMeasurements", "[", 
      RowBox[{"dog", ",", "\"\<TotalIntensity\>\""}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "features", "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"chart0", "=", 
  RowBox[{"BarChart", "[", 
   RowBox[{"saliency", ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Feature saliency\>\""}], ",", 
    RowBox[{"ChartLegends", "\[Rule]", "legends"}], ",", 
    RowBox[{"ChartStyle", "\[Rule]", 
     RowBox[{"Darker", "@", 
      RowBox[{"Darker", "@", "chartcolors"}]}]}], ",", 
    RowBox[{"ChartLabels", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"ToString", "/@", "saliency"}], ",", "Above"}], "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"viss", "=", 
   RowBox[{"ImageMultiply", "[", 
    RowBox[{"dog", ",", "vis"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"vs", "=", 
  RowBox[{"ParallelTable", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ImageMeasurements", "[", 
      RowBox[{
       RowBox[{"ImageMultiply", "[", 
        RowBox[{"viss", ",", 
         RowBox[{"features", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
       "\"\<TotalIntensity\>\""}], "]"}], "/", 
     RowBox[{"ImageMeasurements", "[", 
      RowBox[{"viss", ",", "\"\<TotalIntensity\>\""}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "features", "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"chart2", "=", 
  RowBox[{"BarChart", "[", 
   RowBox[{"vs", ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<VWS of brightness\>\""}], ",", 
    RowBox[{"ChartLegends", "\[Rule]", "legends"}], ",", 
    RowBox[{"ChartStyle", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"chartcolors", "//", "Lighter"}], ")"}]}], ",", 
    RowBox[{"ChartLabels", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"ToString", "/@", "vs"}], ",", "Above"}], "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"viss2", "=", 
   RowBox[{"ImageMultiply", "[", 
    RowBox[{"g2", ",", "vis"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"vs2", "=", 
  RowBox[{"ParallelTable", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ImageMeasurements", "[", 
      RowBox[{
       RowBox[{"ImageMultiply", "[", 
        RowBox[{"viss2", ",", 
         RowBox[{"features", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
       "\"\<TotalIntensity\>\""}], "]"}], "/", 
     RowBox[{"ImageMeasurements", "[", 
      RowBox[{"viss2", ",", "\"\<TotalIntensity\>\""}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "features", "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"chart2b", "=", 
  RowBox[{"BarChart", "[", 
   RowBox[{"vs2", ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<VWS of saturation\>\""}], ",", 
    RowBox[{"ChartLegends", "\[Rule]", "legends"}], ",", 
    RowBox[{"ChartStyle", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"chartcolors", "//", "Lighter"}], ")"}]}], ",", 
    RowBox[{"ChartLabels", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"ToString", "/@", "vs2"}], ",", "Above"}], "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"mean", "=", 
  RowBox[{"Mean", "[", 
   RowBox[{"{", 
    RowBox[{"vs", ",", "vs2"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"weighted", "=", 
  RowBox[{"BarChart", "[", 
   RowBox[{"mean", ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Visibility-weighted saliency\>\""}], 
    ",", 
    RowBox[{"ChartLegends", "\[Rule]", "legends"}], ",", 
    RowBox[{"ChartStyle", "\[Rule]", "chartcolors"}], ",", 
    RowBox[{"ChartLabels", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"ToString", "/@", "mean"}], ",", "Above"}], "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"charts", "=", 
   RowBox[{"{", 
    RowBox[{
    "chart0", ",", "chart1", ",", "chart2", ",", "chart2b", ",", "weighted"}],
     "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scores", "=", 
   RowBox[{"{", 
    RowBox[{
    "saliency", ",", "visibility", ",", "vs", ",", "vs2", ",", "mean"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imagefilenames2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"StringReplace", "[", 
      RowBox[{"#", ",", 
       RowBox[{"\"\<.\>\"", "\[Rule]", 
        RowBox[{"\"\<_\>\"", "<>", "facename", "<>", "\"\<.\>\""}]}]}], "]"}],
      "&"}], "/@", "imagefilenames"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"txtfilenames2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"StringReplace", "[", 
      RowBox[{"#", ",", 
       RowBox[{"\"\<.\>\"", "\[Rule]", 
        RowBox[{"\"\<_\>\"", "<>", "facename", "<>", "\"\<.\>\""}]}]}], "]"}],
      "&"}], "/@", "txtfilenames"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"imagefilenames2", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"charts", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "charts", "]"}]}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"txtfilenames2", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"scores", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "scores", "]"}]}], "}"}]}], "]"}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scoremap", "=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "resultxml", "]"}], ",", 
     RowBox[{"Association", "@", 
      RowBox[{"Import", "[", "resultxml", "]"}]}], ",", 
     RowBox[{"<|", "|>"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AssociateTo", "[", 
   RowBox[{"scoremap", ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"dataname", "<>", "\"\<_\>\"", "<>", "facename"}], ")"}], 
     "\[Rule]", "scores"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"resultxml", ",", 
    RowBox[{"Normal", "[", "scoremap", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{
    RowBox[{"ImageAdd", "[", 
     RowBox[{"viss", ",", "viss2"}], "]"}], "//", "ImageAdjust"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"results", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ImageMultiply", "[", 
      RowBox[{"w", ",", "#"}], "]"}], "&"}], "/@", "features"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MapIndexed", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"StringReplace", "[", 
        RowBox[{"featurefilename", ",", 
         RowBox[{"\"\<.\>\"", "\[Rule]", 
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"First", "[", "#2", "]"}], "]"}], "<>", "\"\<_\>\"", "<>",
            "facename", "<>", "\"\<.\>\""}]}]}], "]"}], ",", "#"}], "]"}], 
     "&"}], ",", "results"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6439777519653916`*^9, 3.643977760517705*^9}, 
   3.6439993068743424`*^9, {3.6500491796252365`*^9, 3.650049246401916*^9}, {
   3.6500963758826895`*^9, 3.650096380618729*^9}, {3.650098871753888*^9, 
   3.650098872394516*^9}, {3.6500989557413673`*^9, 3.6500989853847623`*^9}, {
   3.650099414939434*^9, 3.650099426377531*^9}, 3.650106654834133*^9, {
   3.6501299800446215`*^9, 3.6501299825330286`*^9}, {3.650266425467658*^9, 
   3.6502664418206787`*^9}, {3.6502665405929203`*^9, 3.650266556633811*^9}, {
   3.6502667021271*^9, 3.6502667199030347`*^9}, {3.6502669335202775`*^9, 
   3.6502669385369406`*^9}, 3.6502728004548397`*^9, {3.650273310846304*^9, 
   3.6502733117214327`*^9}, {3.6502734963087573`*^9, 3.650273586095132*^9}, {
   3.6502736841213226`*^9, 3.6502736850307503`*^9}, {3.650273786187687*^9, 
   3.6502737954225836`*^9}, 3.650274804723832*^9, {3.6510614247303133`*^9, 
   3.651061427680773*^9}, {3.651062552516469*^9, 3.6510625731588745`*^9}, 
   3.651274760048805*^9, {3.6574887133163185`*^9, 3.657488743394944*^9}, {
   3.6823645685192804`*^9, 3.682364568767305*^9}, {3.6823646103594637`*^9, 
   3.6823646264340715`*^9}, {3.6823651591313353`*^9, 3.682365164184841*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.16849015317286653`", ",", "0.3814733770970095`", ",", 
   "0.450036469730124`"}], "}"}]], "Output",
 CellChangeTimes->{{3.651061987642708*^9, 3.6510620070226336`*^9}, 
   3.651062356962372*^9, 3.651062661718501*^9, 3.651062698182934*^9, 
   3.6512744853900356`*^9, 3.65127477319672*^9, 3.657460536702558*^9, 
   3.6574607756703186`*^9, 3.6574608648579516`*^9, 3.657461004485561*^9, 
   3.6574888903732715`*^9, 3.6823646590293303`*^9, 3.6823648292893543`*^9, 
   3.682365176990121*^9, 3.6824490850485144`*^9, 3.6824493671557226`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{0.48597994530537825`, 0.}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.6789999999999999]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[
          0.5150326797385621, 0.5673202614379085, 0.4888888888888889]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{0.544211485870556, 0.}, {1.455788514129444, 
               0.16849015317286653`}, "RoundingRadius" -> 0]}], 
            StatusArea[#, 0.16849015317286653`]& , TagBoxNote -> 
            "0.16849015317286653"], 
           StyleBox["0.16849015317286653`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.16849015317286653`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[
          0.5411764705882354, 0.1516339869281046, 0.5699346405228758]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{1.544211485870556, 0.}, {2.455788514129444, 
               0.3814733770970095}, "RoundingRadius" -> 0]}], 
            StatusArea[#, 0.3814733770970095]& , TagBoxNote -> 
            "0.3814733770970095"], 
           StyleBox["0.3814733770970095`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.3814733770970095, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[
          0.25098039215686274`, 0.42091503267973857`, 0.3895424836601308]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{2.544211485870556, 0.}, {3.455788514129444, 
               0.450036469730124}, "RoundingRadius" -> 0]}], 
            StatusArea[#, 0.450036469730124]& , TagBoxNote -> 
            "0.450036469730124"], 
           StyleBox["0.450036469730124`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.450036469730124, {}], "Tooltip"]& ]}}}, {}, {}}, {}, {
      InsetBox[
       FormBox[
        StyleBox["\"0.16849\"", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {1., 0.16849015317286653`}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"0.381473\"", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {2., 0.3814733770970095}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"0.450036\"", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {3., 0.450036469730124}], 
       ImageScaled[{0.5, 0}]]}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny]], {
          LineBox[{{0.48597994530537825`, 0.}, {3.5151846855059254`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny]], 
           LineBox[{{0.544211485870556, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.544211485870556, 
              0.}]}], 
           LineBox[{{3.455788514129444, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {3.455788514129444, 
              0.}]}], {{}, {}, {}, {}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.48597994530537825`, 0.}, BaseStyle -> {FontSize -> 20}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {{{1., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}}, {{1., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}}}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotLabel -> 
     FormBox["\"Feature visibility\"", TraditionalForm], 
     PlotRange -> {{All, All}, {0, 1}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Feature 1\"", "\"Feature 2\"", "\"Feature 3\"", "\"Feature 4\"", 
       "\"Feature 5\""}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[
                    0.5150326797385621, 0.5673202614379085, 
                    0.4888888888888889]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[
                    0.5411764705882354, 0.1516339869281046, 
                    0.5699346405228758]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[
                    0.25098039215686274`, 0.42091503267973857`, 
                    0.3895424836601308]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[], 
          Directive[], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5150326797385621, 0.5673202614379085, 
                    0.4888888888888889], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3433551198257081, 0.37821350762527234`, 
                    0.32592592592592595`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5150326797385621, 0.5673202614379085, \
0.4888888888888889]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5150326797385621, 0.5673202614379085, 
                    0.4888888888888889]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5150326797385621, 0.5673202614379085, 
                    0.4888888888888889], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882354, 0.1516339869281046, 
                    0.5699346405228758], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.36078431372549025`, 0.1010893246187364, 
                    0.37995642701525056`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5411764705882354, 0.1516339869281046, \
0.5699346405228758]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5411764705882354, 0.1516339869281046, 
                    0.5699346405228758]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882354, 0.1516339869281046, 
                    0.5699346405228758], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.25098039215686274`, 0.42091503267973857`, 
                    0.3895424836601308], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.1673202614379085, 0.2806100217864924, 
                    0.25969498910675387`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.25098039215686274, 0.42091503267973857, \
0.3895424836601308]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.25098039215686274`, 0.42091503267973857`, 
                    0.3895424836601308]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.25098039215686274`, 0.42091503267973857`, 
                    0.3895424836601308], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"Automatic", ",", "Automatic", ",", "Automatic"}], 
                 "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", "]"}], ",", 
                 RowBox[{"Directive", "[", "]"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.651061987642708*^9, 3.6510620070226336`*^9}, 
   3.651062356962372*^9, 3.651062661718501*^9, 3.651062698182934*^9, 
   3.6512744853900356`*^9, 3.65127477319672*^9, 3.657460536702558*^9, 
   3.6574607756703186`*^9, 3.6574608648579516`*^9, 3.657461004485561*^9, 
   3.6574888903732715`*^9, 3.6823646590293303`*^9, 3.6823648292893543`*^9, 
   3.682365176990121*^9, 3.6824490850485144`*^9, 3.682449367238731*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.18601500237762802`", ",", "0.17934461968794202`", ",", 
   "0.135553137894406`"}], "}"}]], "Output",
 CellChangeTimes->{{3.651061987642708*^9, 3.6510620070226336`*^9}, 
   3.651062356962372*^9, 3.651062661718501*^9, 3.651062698182934*^9, 
   3.6512744853900356`*^9, 3.65127477319672*^9, 3.657460536702558*^9, 
   3.6574607756703186`*^9, 3.6574608648579516`*^9, 3.657461004485561*^9, 
   3.6574888903732715`*^9, 3.6823646590293303`*^9, 3.6823648292893543`*^9, 
   3.682365176990121*^9, 3.6824490850485144`*^9, 3.682449367253732*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{0.48597994530537825`, 0.}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.6789999999999999]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[
          0.3433551198257081, 0.37821350762527234`, 0.32592592592592595`]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{0.544211485870556, 0.}, {1.455788514129444, 
               0.18601500237762802`}, "RoundingRadius" -> 0]}], 
            StatusArea[#, 0.18601500237762802`]& , TagBoxNote -> 
            "0.18601500237762802"], 
           StyleBox["0.18601500237762802`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.18601500237762802`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[
          0.36078431372549025`, 0.1010893246187364, 0.37995642701525056`]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{1.544211485870556, 0.}, {2.455788514129444, 
               0.17934461968794202`}, "RoundingRadius" -> 0]}], 
            StatusArea[#, 0.17934461968794202`]& , TagBoxNote -> 
            "0.17934461968794202"], 
           StyleBox["0.17934461968794202`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.17934461968794202`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[
          0.1673202614379085, 0.2806100217864924, 0.25969498910675387`]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{2.544211485870556, 0.}, {3.455788514129444, 
               0.135553137894406}, "RoundingRadius" -> 0]}], 
            StatusArea[#, 0.135553137894406]& , TagBoxNote -> 
            "0.135553137894406"], 
           StyleBox["0.135553137894406`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.135553137894406, {}], "Tooltip"]& ]}}}, {}, {}}, {}, {
      InsetBox[
       FormBox[
        StyleBox["\"0.186015\"", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {1., 0.18601500237762802`}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"0.179345\"", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {2., 0.17934461968794202`}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"0.135553\"", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {3., 0.135553137894406}], 
       ImageScaled[{0.5, 0}]]}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny]], {
          LineBox[{{0.48597994530537825`, 0.}, {3.5151846855059254`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny]], 
           LineBox[{{0.544211485870556, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.544211485870556, 
              0.}]}], 
           LineBox[{{3.455788514129444, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {3.455788514129444, 
              0.}]}], {{}, {}, {}, {}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.48597994530537825`, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {{{1., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}}, {{1., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}}}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotLabel -> 
     FormBox["\"Feature saliency\"", TraditionalForm], 
     PlotRange -> {{All, All}, {0, 1}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Feature 1\"", "\"Feature 2\"", "\"Feature 3\"", "\"Feature 4\"", 
       "\"Feature 5\""}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[
                    0.3433551198257081, 0.37821350762527234`, 
                    0.32592592592592595`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[
                    0.36078431372549025`, 0.1010893246187364, 
                    0.37995642701525056`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[
                    0.1673202614379085, 0.2806100217864924, 
                    0.25969498910675387`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[], 
          Directive[], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.3433551198257081, 0.37821350762527234`, 
                    0.32592592592592595`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.22890341321713875`, 0.25214233841684824`, 
                    0.21728395061728398`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.3433551198257081, 0.37821350762527234, \
0.32592592592592595]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.3433551198257081, 0.37821350762527234`, 
                    0.32592592592592595`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.3433551198257081, 0.37821350762527234`, 
                    0.32592592592592595`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.36078431372549025`, 0.1010893246187364, 
                    0.37995642701525056`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2405228758169935, 0.06739288307915761, 
                    0.25330428467683375`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.36078431372549025, 0.1010893246187364, \
0.37995642701525056]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.36078431372549025`, 0.1010893246187364, 
                    0.37995642701525056`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.36078431372549025`, 0.1010893246187364, 
                    0.37995642701525056`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1673202614379085, 0.2806100217864924, 
                    0.25969498910675387`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.11154684095860568`, 0.1870733478576616, 
                    0.1731299927378359], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.1673202614379085, 0.2806100217864924, \
0.25969498910675387]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1673202614379085, 0.2806100217864924, 
                    0.25969498910675387`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1673202614379085, 0.2806100217864924, 
                    0.25969498910675387`], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"Automatic", ",", "Automatic", ",", "Automatic"}], 
                 "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", "]"}], ",", 
                 RowBox[{"Directive", "[", "]"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.651061987642708*^9, 3.6510620070226336`*^9}, 
   3.651062356962372*^9, 3.651062661718501*^9, 3.651062698182934*^9, 
   3.6512744853900356`*^9, 3.65127477319672*^9, 3.657460536702558*^9, 
   3.6574607756703186`*^9, 3.6574608648579516`*^9, 3.657461004485561*^9, 
   3.6574888903732715`*^9, 3.6823646590293303`*^9, 3.6823648292893543`*^9, 
   3.682365176990121*^9, 3.6824490850485144`*^9, 3.682449367340741*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.235267743404761`", ",", "0.3382457033823105`", ",", 
   "0.4264865532129285`"}], "}"}]], "Output",
 CellChangeTimes->{{3.651061987642708*^9, 3.6510620070226336`*^9}, 
   3.651062356962372*^9, 3.651062661718501*^9, 3.651062698182934*^9, 
   3.6512744853900356`*^9, 3.65127477319672*^9, 3.657460536702558*^9, 
   3.6574607756703186`*^9, 3.6574608648579516`*^9, 3.657461004485561*^9, 
   3.6574888903732715`*^9, 3.6823646590293303`*^9, 3.6823648292893543`*^9, 
   3.682365176990121*^9, 3.6824490850485144`*^9, 3.682449367354742*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{0.48597994530537825`, 0.}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.6789999999999999]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[
          0.8483660130718954, 0.9006535947712418, 0.8222222222222222]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{0.544211485870556, 0.}, {1.455788514129444, 
               0.235267743404761}, "RoundingRadius" -> 0]}], 
            StatusArea[#, 0.235267743404761]& , TagBoxNote -> 
            "0.235267743404761"], 
           StyleBox["0.235267743404761`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.235267743404761, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[
          0.8745098039215686, 0.48496732026143785`, 0.9032679738562092]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{1.544211485870556, 0.}, {2.455788514129444, 
               0.3382457033823105}, "RoundingRadius" -> 0]}], 
            StatusArea[#, 0.3382457033823105]& , TagBoxNote -> 
            "0.3382457033823105"], 
           StyleBox["0.3382457033823105`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.3382457033823105, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[0.584313725490196, 0.7542483660130719, 0.722875816993464]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{2.544211485870556, 0.}, {3.455788514129444, 
               0.4264865532129285}, "RoundingRadius" -> 0]}], 
            StatusArea[#, 0.4264865532129285]& , TagBoxNote -> 
            "0.4264865532129285"], 
           StyleBox["0.4264865532129285`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.4264865532129285, {}], "Tooltip"]& ]}}}, {}, {}}, {}, {
      InsetBox[
       FormBox[
        StyleBox["\"0.235268\"", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {1., 0.235267743404761}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"0.338246\"", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {2., 0.3382457033823105}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"0.426487\"", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {3., 0.4264865532129285}], 
       ImageScaled[{0.5, 0}]]}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny]], {
          LineBox[{{0.48597994530537825`, 0.}, {3.5151846855059254`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny]], 
           LineBox[{{0.544211485870556, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.544211485870556, 
              0.}]}], 
           LineBox[{{3.455788514129444, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {3.455788514129444, 
              0.}]}], {{}, {}, {}, {}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.48597994530537825`, 0.}, BaseStyle -> {FontSize -> 20}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {{{1., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}}, {{1., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}}}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotLabel -> 
     FormBox["\"VWS of brightness\"", TraditionalForm], 
     PlotRange -> {{All, All}, {0, 1}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Feature 1\"", "\"Feature 2\"", "\"Feature 3\"", "\"Feature 4\"", 
       "\"Feature 5\""}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[
                    0.8483660130718954, 0.9006535947712418, 
                    0.8222222222222222]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[
                    0.8745098039215686, 0.48496732026143785`, 
                    0.9032679738562092]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[
                    0.584313725490196, 0.7542483660130719, 
                    0.722875816993464]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[], 
          Directive[], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8483660130718954, 0.9006535947712418, 
                    0.8222222222222222], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5655773420479303, 0.6004357298474946, 
                    0.5481481481481482], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.8483660130718954, 0.9006535947712418, \
0.8222222222222222]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8483660130718954, 0.9006535947712418, 
                    0.8222222222222222]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8483660130718954, 0.9006535947712418, 
                    0.8222222222222222], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8745098039215686, 0.48496732026143785`, 
                    0.9032679738562092], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5830065359477125, 0.3233115468409586, 
                    0.6021786492374728], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.8745098039215686, 0.48496732026143785, \
0.9032679738562092]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8745098039215686, 0.48496732026143785`, 
                    0.9032679738562092]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8745098039215686, 0.48496732026143785`, 
                    0.9032679738562092], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.584313725490196, 0.7542483660130719, 0.722875816993464], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.38954248366013067`, 0.5028322440087146, 
                    0.481917211328976], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.584313725490196, 0.7542483660130719, \
0.722875816993464]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.584313725490196, 0.7542483660130719, 0.722875816993464]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.584313725490196, 0.7542483660130719, 0.722875816993464],
                     Editable -> False, Selectable -> False]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"Automatic", ",", "Automatic", ",", "Automatic"}], 
                 "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", "]"}], ",", 
                 RowBox[{"Directive", "[", "]"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.651061987642708*^9, 3.6510620070226336`*^9}, 
   3.651062356962372*^9, 3.651062661718501*^9, 3.651062698182934*^9, 
   3.6512744853900356`*^9, 3.65127477319672*^9, 3.657460536702558*^9, 
   3.6574607756703186`*^9, 3.6574608648579516`*^9, 3.657461004485561*^9, 
   3.6574888903732715`*^9, 3.6823646590293303`*^9, 3.6823648292893543`*^9, 
   3.682365176990121*^9, 3.6824490850485144`*^9, 3.682449367440751*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.059860219063031336`", ",", "0.7254101930153019`", ",", 
   "0.21472958792166683`"}], "}"}]], "Output",
 CellChangeTimes->{{3.651061987642708*^9, 3.6510620070226336`*^9}, 
   3.651062356962372*^9, 3.651062661718501*^9, 3.651062698182934*^9, 
   3.6512744853900356`*^9, 3.65127477319672*^9, 3.657460536702558*^9, 
   3.6574607756703186`*^9, 3.6574608648579516`*^9, 3.657461004485561*^9, 
   3.6574888903732715`*^9, 3.6823646590293303`*^9, 3.6823648292893543`*^9, 
   3.682365176990121*^9, 3.6824490850485144`*^9, 3.6824493674557524`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{0.48597994530537825`, 0.}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.6789999999999999]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[
          0.8483660130718954, 0.9006535947712418, 0.8222222222222222]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{0.544211485870556, 0.}, {1.455788514129444, 
               0.059860219063031336`}, "RoundingRadius" -> 0]}], 
            StatusArea[#, 0.059860219063031336`]& , TagBoxNote -> 
            "0.059860219063031336"], 
           StyleBox["0.059860219063031336`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.059860219063031336`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[
          0.8745098039215686, 0.48496732026143785`, 0.9032679738562092]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{1.544211485870556, 0.}, {2.455788514129444, 
               0.7254101930153019}, "RoundingRadius" -> 0]}], 
            StatusArea[#, 0.7254101930153019]& , TagBoxNote -> 
            "0.7254101930153019"], 
           StyleBox["0.7254101930153019`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.7254101930153019, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[0.584313725490196, 0.7542483660130719, 0.722875816993464]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{2.544211485870556, 0.}, {3.455788514129444, 
               0.21472958792166683`}, "RoundingRadius" -> 0]}], 
            StatusArea[#, 0.21472958792166683`]& , TagBoxNote -> 
            "0.21472958792166683"], 
           StyleBox["0.21472958792166683`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.21472958792166683`, {}], "Tooltip"]& ]}}}, {}, {}}, {}, {
      InsetBox[
       FormBox[
        StyleBox["\"0.0598602\"", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {1., 0.059860219063031336`}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"0.72541\"", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {2., 0.7254101930153019}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"0.21473\"", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {3., 0.21472958792166683`}], 
       ImageScaled[{0.5, 0}]]}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny]], {
          LineBox[{{0.48597994530537825`, 0.}, {3.5151846855059254`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny]], 
           LineBox[{{0.544211485870556, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.544211485870556, 
              0.}]}], 
           LineBox[{{3.455788514129444, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {3.455788514129444, 
              0.}]}], {{}, {}, {}, {}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.48597994530537825`, 0.}, BaseStyle -> {FontSize -> 20}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {{{1., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}}, {{1., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}}}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotLabel -> 
     FormBox["\"VWS of saturation\"", TraditionalForm], 
     PlotRange -> {{All, All}, {0, 1}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Feature 1\"", "\"Feature 2\"", "\"Feature 3\"", "\"Feature 4\"", 
       "\"Feature 5\""}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[
                    0.8483660130718954, 0.9006535947712418, 
                    0.8222222222222222]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[
                    0.8745098039215686, 0.48496732026143785`, 
                    0.9032679738562092]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[
                    0.584313725490196, 0.7542483660130719, 
                    0.722875816993464]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[], 
          Directive[], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8483660130718954, 0.9006535947712418, 
                    0.8222222222222222], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5655773420479303, 0.6004357298474946, 
                    0.5481481481481482], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.8483660130718954, 0.9006535947712418, \
0.8222222222222222]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8483660130718954, 0.9006535947712418, 
                    0.8222222222222222]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8483660130718954, 0.9006535947712418, 
                    0.8222222222222222], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8745098039215686, 0.48496732026143785`, 
                    0.9032679738562092], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5830065359477125, 0.3233115468409586, 
                    0.6021786492374728], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.8745098039215686, 0.48496732026143785, \
0.9032679738562092]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8745098039215686, 0.48496732026143785`, 
                    0.9032679738562092]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8745098039215686, 0.48496732026143785`, 
                    0.9032679738562092], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.584313725490196, 0.7542483660130719, 0.722875816993464], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.38954248366013067`, 0.5028322440087146, 
                    0.481917211328976], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.584313725490196, 0.7542483660130719, \
0.722875816993464]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.584313725490196, 0.7542483660130719, 0.722875816993464]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.584313725490196, 0.7542483660130719, 0.722875816993464],
                     Editable -> False, Selectable -> False]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"Automatic", ",", "Automatic", ",", "Automatic"}], 
                 "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", "]"}], ",", 
                 RowBox[{"Directive", "[", "]"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.651061987642708*^9, 3.6510620070226336`*^9}, 
   3.651062356962372*^9, 3.651062661718501*^9, 3.651062698182934*^9, 
   3.6512744853900356`*^9, 3.65127477319672*^9, 3.657460536702558*^9, 
   3.6574607756703186`*^9, 3.6574608648579516`*^9, 3.657461004485561*^9, 
   3.6574888903732715`*^9, 3.6823646590293303`*^9, 3.6823648292893543`*^9, 
   3.682365176990121*^9, 3.6824490850485144`*^9, 3.6824493675367603`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.14756398123389616`", ",", "0.5318279481988062`", ",", 
   "0.3206080705672977`"}], "}"}]], "Output",
 CellChangeTimes->{{3.651061987642708*^9, 3.6510620070226336`*^9}, 
   3.651062356962372*^9, 3.651062661718501*^9, 3.651062698182934*^9, 
   3.6512744853900356`*^9, 3.65127477319672*^9, 3.657460536702558*^9, 
   3.6574607756703186`*^9, 3.6574608648579516`*^9, 3.657461004485561*^9, 
   3.6574888903732715`*^9, 3.6823646590293303`*^9, 3.6823648292893543`*^9, 
   3.682365176990121*^9, 3.6824490850485144`*^9, 3.682449367550762*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{0.48597994530537825`, 0.}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.6789999999999999]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[
          0.7725490196078432, 0.8509803921568627, 0.7333333333333333]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{0.544211485870556, 0.}, {1.455788514129444, 
               0.14756398123389616`}, "RoundingRadius" -> 0]}], 
            StatusArea[#, 0.14756398123389616`]& , TagBoxNote -> 
            "0.14756398123389616"], 
           StyleBox["0.14756398123389616`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.14756398123389616`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[
          0.8117647058823529, 0.22745098039215686`, 0.8549019607843137]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{1.544211485870556, 0.}, {2.455788514129444, 
               0.5318279481988062}, "RoundingRadius" -> 0]}], 
            StatusArea[#, 0.5318279481988062]& , TagBoxNote -> 
            "0.5318279481988062"], 
           StyleBox["0.5318279481988062`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.5318279481988062, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[
          0.3764705882352941, 0.6313725490196078, 0.5843137254901961]], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{2.544211485870556, 0.}, {3.455788514129444, 
               0.3206080705672977}, "RoundingRadius" -> 0]}], 
            StatusArea[#, 0.3206080705672977]& , TagBoxNote -> 
            "0.3206080705672977"], 
           StyleBox["0.3206080705672977`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.3206080705672977, {}], "Tooltip"]& ]}}}, {}, {}}, {}, {
      InsetBox[
       FormBox[
        StyleBox["\"0.147564\"", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {1., 0.14756398123389616`}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"0.531828\"", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {2., 0.5318279481988062}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"0.320608\"", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {3., 0.3206080705672977}], 
       ImageScaled[{0.5, 0}]]}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny]], {
          LineBox[{{0.48597994530537825`, 0.}, {3.5151846855059254`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny]], 
           LineBox[{{0.544211485870556, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.544211485870556, 
              0.}]}], 
           LineBox[{{3.455788514129444, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {3.455788514129444, 
              0.}]}], {{}, {}, {}, {}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.48597994530537825`, 0.}, BaseStyle -> {FontSize -> 20}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {{{1., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}}, {{1., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}}}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotLabel -> 
     FormBox["\"Visibility-weighted saliency\"", TraditionalForm], 
     PlotRange -> {{All, All}, {0, 1}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Feature 1\"", "\"Feature 2\"", "\"Feature 3\"", "\"Feature 4\"", 
       "\"Feature 5\""}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[
                    0.7725490196078432, 0.8509803921568627, 
                    0.7333333333333333]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[
                    0.8117647058823529, 0.22745098039215686`, 
                    0.8549019607843137]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[
                    0.3764705882352941, 0.6313725490196078, 
                    0.5843137254901961]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[], 
          Directive[], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7725490196078432, 0.8509803921568627, 
                    0.7333333333333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5150326797385621, 0.5673202614379085, 
                    0.4888888888888889], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.7725490196078432, 0.8509803921568627, \
0.7333333333333333]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7725490196078432, 0.8509803921568627, 
                    0.7333333333333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7725490196078432, 0.8509803921568627, 
                    0.7333333333333333], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8117647058823529, 0.22745098039215686`, 
                    0.8549019607843137], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5411764705882354, 0.1516339869281046, 
                    0.5699346405228758], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.8117647058823529, 0.22745098039215686, \
0.8549019607843137]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8117647058823529, 0.22745098039215686`, 
                    0.8549019607843137]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8117647058823529, 0.22745098039215686`, 
                    0.8549019607843137], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.3764705882352941, 0.6313725490196078, 
                    0.5843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.25098039215686274`, 0.42091503267973857`, 
                    0.3895424836601308], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.3764705882352941, 0.6313725490196078, \
0.5843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.3764705882352941, 0.6313725490196078, 
                    0.5843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.3764705882352941, 0.6313725490196078, 
                    0.5843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"Automatic", ",", "Automatic", ",", "Automatic"}], 
                 "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", "]"}], ",", 
                 RowBox[{"Directive", "[", "]"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.651061987642708*^9, 3.6510620070226336`*^9}, 
   3.651062356962372*^9, 3.651062661718501*^9, 3.651062698182934*^9, 
   3.6512744853900356`*^9, 3.65127477319672*^9, 3.657460536702558*^9, 
   3.6574607756703186`*^9, 3.6574608648579516`*^9, 3.657461004485561*^9, 
   3.6574888903732715`*^9, 3.6823646590293303`*^9, 3.6823648292893543`*^9, 
   3.682365176990121*^9, 3.6824490850485144`*^9, 3.6824493676427712`*^9}],

Cell[BoxData[
 TemplateBox[{
  "$RecursionLimit","reclim2",
   "\"Recursion depth of \\!\\(\\*RowBox[{\\\"1024\\\"}]\\) exceeded during \
evaluation of \\!\\(\\*RowBox[{\\\"RegularExpression\\\", \\\"[\\\", \\\"\\\\\
\\\"https?://.*\\\\\\\"\\\", \\\"]\\\"}]\\).\"",2,940,218,
   32608824972693628946,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6824490834463544`*^9, 3.6824493709541025`*^9}],

Cell[BoxData[
 TemplateBox[{
  "$RecursionLimit","reclim2",
   "\"Recursion depth of \\!\\(\\*RowBox[{\\\"1024\\\"}]\\) exceeded during \
evaluation of \\!\\(\\*RowBox[{\\\"RegularExpression\\\", \\\"[\\\", \\\"\\\\\
\\\"https?://.*\\\\\\\"\\\", \\\"]\\\"}]\\).\"",2,940,219,
   32608824972693628946,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6824490834463544`*^9, 3.682449371501157*^9}],

Cell[BoxData[
 TemplateBox[{
  "$RecursionLimit","reclim2",
   "\"Recursion depth of \\!\\(\\*RowBox[{\\\"1024\\\"}]\\) exceeded during \
evaluation of \\!\\(\\*RowBox[{\\\"RegularExpression\\\", \\\"[\\\", \\\"\\\\\
\\\"https?://.*\\\\\\\"\\\", \\\"]\\\"}]\\).\"",2,940,220,
   32608824972693628946,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6824490834463544`*^9, 3.682449372050212*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"$RecursionLimit\\\", \\\
\"::\\\", \\\"reclim2\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,940,221,32608824972693628946,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6824490834463544`*^9, 3.6824493725982666`*^9}],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{
   StyleBox[
    RowBox[{"Import", "::", "nffil"}], "MessageName"], " ", ":", 
   "  ", "\<\"File not found during \
\\!\\(\\*RowBox[{\\\"Import\\\"}]\\).\"\>"}], "]"}]], "Message", "MSG",
 CellChangeTimes->{3.6824490834463544`*^9, 3.6824493732443314`*^9}],

Cell[BoxData[
 TemplateBox[{
  "AssociateTo","invak",
   "\"The argument \\!\\(\\*RowBox[{\\\"scoremap\\\"}]\\) is not a valid \
Association.\"",2,941,222,32608824972693628946,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6824490834463544`*^9, 3.682449373279335*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParallelTable", "[", 
  RowBox[{
   RowBox[{"ImageApply", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "*", "#2", "*", "#3"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"dog", ",", 
       RowBox[{"features", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", "vis"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Length", "[", "features", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.642967542410798*^9, 3.6501081471058197`*^9, 
  3.6502717669792566`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   Graphics3DBox[
    TagBox[Raster3DBox[CompressedData["
1:eJzt3UGIlnUeB3At1hjiLfASLolJTLDimxKtbeGw79Ie1lOsJh28xK57EFZC
iBQa2B+70KVImZpSoVVad6kNT3nJpWlHnXGmJpFs87aZhgerxXJxAqH2uqx7
er//oXH6fGDuw5fnef/P+/L7Pr+Vv3pi429uXrRo0Y/+6w8AAAAA5rne4I6Z
n37X/8SN7PefjskvV7/cdlKO/avJgePy61+9PXpMfoHREfkl9sgvslt+iXpR
fgnnR8bzS2ij5+e++P4LAAAAAAAAAMAN7ODwtdPmXwKbzkzKr4GDZ6fl2L/q
7BmXX+Dz59+SX6527TWHGqg1q5wngereLb/EMvlF5Jdx/2bWOj8inl/64/tH
pA74/tsPv18BAAAAAAAA8L1234z3nrbwzaC5jQbqswfek2Pg9UveP54Yuf+o
/HJ1ZYv5yUB1OyfkF3hhq8/BxOrN8kt88qj8EqfkFzknv4jPv8yI8zfh+S/k
+0dfyu8HAAAAAAAAAHyP9bofe/9k4tk3vTe2hVcvmhtK3LpP/6OFoWHzV4kl
S93Hif1XnSeJ5d+OyS9w76D8EkMr5Zf46i75Ja7IL+L+zXSdHwAAAAAAAAAA
3EB6F98379LAmuX2+SSeefId+eXqniVTcuxfTd2h/xGoQ7P6H4mnXjJ/mjg/
8Jb8GhhfoUcYqL1HJuTXv/rysPwCdV5+kQvyAwAAAAAAAABg/un9fLGeQkO9
3/1Mni2c2/CuHAOPjPxNfg0MdSbl2L/68bpj8gu8tl//I/HQLfofDdTLS/U/
Ep0hPcLE4hnnSOLrMfklzsgPAAAAAAAAAAAWmt7D+jNNPX1B76OFX/9zWo6B
H3b0Z1p4bMp7sxOfX7Y/JXHoI/2PBmrC/o9E3a7/kaj1E+bvEw+9Ib/EzkPy
AwAAAAAAAAAAYO6U/TNN6M9keu8elV+uXhnXn0ns/pf+TOLD7fozLRw44j6O
2P8ReVD/I/IL/Y9E3SQ/AAAAAAAAAAAA5k71Lr5vTq2Bcxvs8Ukss3+miQP6
M4narj8TeeK3+jMN1NeH3ceBujpm/j5h/0fmZvkBAAAAAAAAAADAfPV49+PT
5vxyvTXL7fFJPDKiP9PCY1Pm7gNl/0xGf6aJuqQ/k6gz+jOJ2qT/kairf5If
AAAAAAAAAAAAzDO9+2b0PRqo5940b9/CM0++I8dcre9MyjHwxWX3c+If2/Vn
GrB/JvSB/kxEfyajPwMAAAAAAAAAAAAsVN8MTpuTzNWrF0/IMVf3LJmSY2Dd
OnPPib98pD/TQP3xiP5MYlZ/JqI/E7F/BgAAAAAAAAAAAFio/j587bQ5yVx9
9sB7cgzcuu+o/HI1dYceV+L1/WPyy9XEipNy7F8tmtFfSOzUn4nM6s8AAAAA
AAAAAAAAcL3aeGbSnGmuXrtkXreFoWG9hUD9eXZcfoH1t9jf00DdPqQHF6gH
33CeBOom/SMAAAAAAAAAAAAA/o/BHTPmTHN18Oy0HAMj99vf08IPluotJHa+
ZH9PA/XyUj24QK2f0P9IbNCfAQAAAAAAAAAAAIDm/vCpefsGqrPH3pQG6soW
vYXEvquuw8T5Aft7WrjN/p7IT+zvidjfAwAAAAAAAAAAAABzpjZu0/tIfPG8
3kIL93b0FhJ3fqtP2ML4Cp+HgVo8o/+ReEp/BgAAAAAAAAAAAACYn2py4Lh5
5wZ27dVbSLyw1dx9ojuof9TCviMTcgzMjrmPAQAAAAAAAAAAAAAWoBobNS/e
QK1dNSnHQHez6zAxtFL/qIUvD+sfBeoD/SMAAAAAAAAAAAAAgIWoRkfMizdQ
3bv1jwJ17lHXYeLyXfpHLVzQPwIAAAAAAAAAAAAAgP9Vu/WPmlimf5SoU/pH
ka/0j5rQPwIAAAAAAAAAAAAAgOvoH7VR+keR+kT/KDK0Uv8IAAAAAAAAAAAA
AACYG6P6R0109Y8iqze7DhOrB/WPAAAAAAAAAAAAAACAufH2qN5HC2tX6R8l
Rra6DgEAAAAAAAAAAAAAAOajyYHjeh8N7Np7Uo79q27nhPwAAAAAAAAAAAAA
AADmoU3b9GYSt+0Zl18D/97iOgQAAAAAAAAAAAAAAJhHanDHjL5Hrg6enZZj
4K+XjskPAAAAAAAAAAAAAACAhebx4Wun9WYAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgOv8B85G92A=
      "], {{0, 41, 41}, {41, 0, 0}}, {0., 1.},
      ColorFunction->"GrayLevelDefaultColorFunction",
      Method->{"FastRendering" -> True}],
     BoxForm`ImageTag[
     "Real", ColorFunction -> Automatic, ColorSpace -> Automatic, 
      Interleaving -> None],
     Selectable->False],
    AxesStyle->{},
    Background->None,
    BoxRatios->Automatic,
    Boxed->False,
    DefaultBaseStyle->"Image3DGraphics3D",
    ImageSize->Automatic,
    ImageSizeRaw->41,
    PlotRange->{{0, 41}, {0, 41}, {0, 41}}], ",", 
   Graphics3DBox[
    TagBox[Raster3DBox[CompressedData["
1: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
AAAAAAAAAAAAAAAAAAAAAAAAcD74V9rDZzw=
      "], {{0, 41, 41}, {41, 0, 0}}, {0., 1.},
      ColorFunction->"GrayLevelDefaultColorFunction",
      Method->{"FastRendering" -> True}],
     BoxForm`ImageTag[
     "Real", ColorFunction -> Automatic, ColorSpace -> Automatic, 
      Interleaving -> None],
     Selectable->False],
    AxesStyle->{},
    Background->None,
    BoxRatios->Automatic,
    Boxed->False,
    DefaultBaseStyle->"Image3DGraphics3D",
    ImageSize->Automatic,
    ImageSizeRaw->41,
    PlotRange->{{0, 41}, {0, 41}, {0, 41}}], ",", 
   Graphics3DBox[
    TagBox[Raster3DBox[CompressedData["
1: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
Mt7vN9Jv/IiYvzRj/QEAAADA/zf/CQ3O83A=
      "], {{0, 41, 41}, {41, 0, 0}}, {0., 1.},
      ColorFunction->"GrayLevelDefaultColorFunction",
      Method->{"FastRendering" -> True}],
     BoxForm`ImageTag[
     "Real", ColorFunction -> Automatic, ColorSpace -> Automatic, 
      Interleaving -> None],
     Selectable->False],
    AxesStyle->{},
    Background->None,
    BoxRatios->Automatic,
    Boxed->False,
    DefaultBaseStyle->"Image3DGraphics3D",
    ImageSize->Automatic,
    ImageSizeRaw->41,
    PlotRange->{{0, 41}, {0, 41}, {0, 41}}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6429675429585886`*^9, 3.6429675896325865`*^9, 3.6430174822435627`*^9, 
   3.6436546317232637`*^9, {3.6438332541320267`*^9, 3.643833272143962*^9}, 
   3.64383333999463*^9, 3.643888929342511*^9, 3.643889415594042*^9, {
   3.643890164133977*^9, 3.6438901917409215`*^9}, 3.6439085712310495`*^9, 
   3.6439185447884445`*^9, {3.643920678307994*^9, 3.643920698251377*^9}, 
   3.643964030790357*^9, 3.643977790692665*^9, 3.6439778211671925`*^9, 
   3.643979215526313*^9, {3.643993747498523*^9, 3.6439937620599003`*^9}, 
   3.6439992567653947`*^9, {3.643999314110045*^9, 3.643999339242473*^9}, 
   3.6500485915519094`*^9, {3.6500490614663677`*^9, 3.6500491286018763`*^9}, 
   3.6500492554184093`*^9, 3.65004993731301*^9, 3.6500964012043505`*^9, 
   3.6500994629711556`*^9, 3.6500996624504747`*^9, 3.6501023453273306`*^9, {
   3.6501025037192116`*^9, 3.6501025201473236`*^9}, 3.6501029834544907`*^9, 
   3.650103041617349*^9, 3.650104434728057*^9, 3.650105251974732*^9, 
   3.650105589160304*^9, 3.6501057116028547`*^9, 3.650105816834762*^9, 
   3.650105990260335*^9, 3.650106088051217*^9, 3.650106308281969*^9, 
   3.6501068298225718`*^9, 3.6501069304872065`*^9, 3.6501083536752048`*^9, 
   3.650108556346803*^9, 3.650129862554819*^9, 3.6501299391733427`*^9, 
   3.6501299915467477`*^9, 3.650130426822017*^9, 3.650130611380562*^9, 
   3.6501307095892553`*^9, 3.650132582579547*^9, 3.6501326312203693`*^9, 
   3.650132807982023*^9, 3.6501328394594173`*^9, 3.6502668950788593`*^9, 
   3.6502669471439943`*^9, 3.6502672114979486`*^9, 3.650271628806899*^9, 
   3.650271779716157*^9, 3.650272392218789*^9, 3.650272495108937*^9, {
   3.6502727327513933`*^9, 3.65027273965526*^9}, 3.650272811730959*^9, 
   3.6502728692221727`*^9, 3.650273706954157*^9, 3.650273809186839*^9, 
   3.650274618439288*^9, {3.650275263800493*^9, 3.650275285892767*^9}, 
   3.651060910851365*^9, 3.651061220747856*^9, 3.6510613506296787`*^9, 
   3.651061438224633*^9, {3.651061990003091*^9, 3.6510620107593365`*^9}, 
   3.65106235896924*^9, 3.6510626640092487`*^9, 3.6510627002556686`*^9, 
   3.651274487726565*^9, 3.6512747754690557`*^9, 3.6574605394798803`*^9, 
   3.657460778305417*^9, 3.6574608673278522`*^9, 3.6574610068355007`*^9, 
   3.6574888992979355`*^9, 3.682364662177645*^9, 3.6823648327607017`*^9, 
   3.682365180269449*^9, 3.6824493741854253`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Norm", "[", 
    RowBox[{"List", "@@", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"ColorConvert", "[", 
   RowBox[{"chartcolors", ",", "\"\<LCH\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6439099058378005`*^9, 3.643909957796386*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9361248953237036`", ",", "1.3669026327422882`", ",", 
   "0.8316078539023877`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6439099581545362`*^9, {3.643910136810073*^9, 3.6439101404695797`*^9}, 
   3.6439184150335236`*^9, 3.6439185450574613`*^9, 3.6439640310343556`*^9, 
   3.643977790911379*^9, 3.643977821385924*^9, 3.643979215745063*^9, {
   3.6439937477172766`*^9, 3.643993762272396*^9}, 3.6439992569842196`*^9, {
   3.6439993143132114`*^9, 3.6439993394612036`*^9}, 3.650048591848034*^9, {
   3.650049061700718*^9, 3.6500491288206215`*^9}, 3.6500492556422167`*^9, 
   3.6500499375998106`*^9, 3.65009640142305*^9, 3.6500994632473927`*^9, 
   3.6500996626667833`*^9, 3.6501023455564413`*^9, {3.650102503937916*^9, 
   3.650102520366023*^9}, 3.6501029836888638`*^9, 3.6501030418357983`*^9, 
   3.650104445335683*^9, 3.6501052627882814`*^9, 3.6501056264278817`*^9, 
   3.6501057217776403`*^9, 3.650105851971092*^9, 3.650106098841631*^9, 
   3.6501063190952187`*^9, 3.65010684044401*^9, 3.650106940689398*^9, 
   3.650108353730646*^9, 3.650108556394278*^9, 3.650129862662433*^9, 
   3.6501299392843823`*^9, 3.65012999158988*^9, 3.6501304268370333`*^9, 
   3.650130611394514*^9, 3.6501307096752367`*^9, 3.650132582653571*^9, 
   3.650132631235997*^9, 3.6501328080010395`*^9, 3.6501328394749985`*^9, 
   3.6502668950999155`*^9, 3.650266947164997*^9, 3.6502672115136003`*^9, 
   3.6502716288130026`*^9, 3.650271779729655*^9, 3.650272392238812*^9, 
   3.650272495127442*^9, {3.650272732770894*^9, 3.650272739673315*^9}, 
   3.650272811746605*^9, 3.650272869239728*^9, 3.6502737069697723`*^9, 
   3.6502738092063446`*^9, 3.650274618455253*^9, {3.6502752638195157`*^9, 
   3.65027528589931*^9}, 3.65106091087407*^9, 3.6510612207638407`*^9, 
   3.6510613506436377`*^9, 3.651061438240662*^9, {3.651061990023093*^9, 
   3.651062010790393*^9}, 3.6510623589871955`*^9, 3.6510626640302672`*^9, 
   3.651062700271119*^9, 3.6512744877505836`*^9, 3.651274775485071*^9, 
   3.6574605395089135`*^9, 3.6574607783299103`*^9, 3.65746086735191*^9, 
   3.6574610068599567`*^9, 3.657488899322461*^9, 3.6823646621886463`*^9, 
   3.682364832773703*^9, 3.6823651802824507`*^9, 3.682449374223429*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Norm", "[", 
    RowBox[{"List", "@@", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"ColorConvert", "[", 
   RowBox[{"chartcolors", ",", "\"\<LAB\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6439099686583495`*^9, 3.643909969033454*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.8619449977241587`", ",", "1.0284082187545962`", ",", 
   "0.6613229740675408`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6439099696442146`*^9, {3.643910138075062*^9, 3.6439101421662445`*^9}, 
   3.6439185450664062`*^9, 3.643964031061315*^9, 3.6439777909269905`*^9, 
   3.6439778214015675`*^9, 3.643979215745063*^9, {3.6439937477172766`*^9, 
   3.643993762272396*^9}, 3.6439992569998064`*^9, {3.6439993143288317`*^9, 
   3.643999339476829*^9}, 3.650048591848034*^9, {3.650049061700718*^9, 
   3.6500491288362756`*^9}, 3.6500492556422167`*^9, 3.650049937616014*^9, 
   3.6500964014386744`*^9, 3.6500994632919817`*^9, 3.6500996626823606`*^9, 
   3.6501023455720625`*^9, {3.6501025039536333`*^9, 3.650102520381667*^9}, 
   3.6501029836888638`*^9, 3.6501030418514433`*^9, 3.6501044453681984`*^9, 
   3.6501052627999477`*^9, 3.6501056264468827`*^9, 3.6501057217932644`*^9, 
   3.6501058520006604`*^9, 3.6501060988572545`*^9, 3.6501063191022234`*^9, 
   3.6501068404640007`*^9, 3.6501069407079268`*^9, 3.650108353749648*^9, 
   3.650108556413766*^9, 3.650129862700864*^9, 3.6501299393298364`*^9, 
   3.6501299916358747`*^9, 3.650130426851039*^9, 3.6501306114065695`*^9, 
   3.650130709695275*^9, 3.650132582669076*^9, 3.650132631257262*^9, 
   3.6501328080145435`*^9, 3.650132839501499*^9, 3.6502668951228933`*^9, 
   3.6502669471846275`*^9, 3.6502672115448785`*^9, 3.6502716288286467`*^9, 
   3.650271779741659*^9, 3.6502723922558203`*^9, 3.650272495149444*^9, {
   3.6502727327924013`*^9, 3.6502727396888213`*^9}, 3.6502728117622232`*^9, 
   3.6502728692561803`*^9, 3.6502737069854407`*^9, 3.650273809224846*^9, 
   3.6502746184610176`*^9, {3.6502752638329973`*^9, 3.650275285914937*^9}, 
   3.6510609108968697`*^9, 3.6510612207893405`*^9, 3.6510613506621857`*^9, 
   3.6510614382640915`*^9, {3.6510619900480523`*^9, 3.6510620108243446`*^9}, 
   3.6510623590031967`*^9, 3.6510626640532866`*^9, 3.6510627002836623`*^9, 
   3.651274487765546*^9, 3.6512747755035152`*^9, 3.657460539534895*^9, 
   3.657460778352945*^9, 3.6574608673769207`*^9, 3.6574610069004574`*^9, 
   3.6574888993494806`*^9, 3.682364662197647*^9, 3.6823648327877045`*^9, 
   3.6823651802954516`*^9, 3.6824493742604327`*^9}]
}, Open  ]]
},
WindowSize->{1920, 1028},
WindowMargins->{{1911, Automatic}, {Automatic, -9}},
Magnification:>1.5 Inherited,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 2130, 51, 133, "Input"],
Cell[2713, 75, 3831, 72, 412, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6581, 152, 5236, 110, 313, "Input"],
Cell[11820, 264, 1753, 29, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13610, 298, 5316, 125, 423, "Input"],
Cell[18929, 425, 2587, 37, 45, "Output"],
Cell[21519, 464, 5058, 88, 218, "Output"],
Cell[26580, 554, 2597, 37, 45, "Output"],
Cell[29180, 593, 298, 6, 35, "Message"],
Cell[29481, 601, 7747, 171, 45, "Output"],
Cell[37231, 774, 21496, 372, 154, "Output"]
}, Open  ]],
Cell[58742, 1149, 2753, 72, 220, "Input"],
Cell[61498, 1223, 3052, 82, 249, "Input"],
Cell[64553, 1307, 3120, 84, 249, "Input"],
Cell[67676, 1393, 2722, 72, 220, "Input"],
Cell[70401, 1467, 2996, 80, 249, "Input"],
Cell[73400, 1549, 3233, 88, 249, "Input"],
Cell[76636, 1639, 872, 16, 45, "Input"],
Cell[CellGroupData[{
Cell[77533, 1659, 688, 18, 75, "Input"],
Cell[78224, 1679, 18780, 324, 154, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97041, 2008, 6253, 175, 307, "Input"],
Cell[103297, 2185, 624715, 10256, 154, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[728049, 12446, 11858, 315, 1003, "Input"],
Cell[739910, 12763, 635, 11, 45, "Output"],
Cell[740548, 12776, 21200, 469, 390, "Output"],
Cell[761751, 13247, 636, 11, 45, "Output"],
Cell[762390, 13260, 21214, 469, 373, "Output"],
Cell[783607, 13731, 634, 11, 45, "Output"],
Cell[784244, 13744, 21116, 466, 390, "Output"],
Cell[805363, 14212, 633, 11, 45, "Output"],
Cell[805999, 14225, 21110, 466, 390, "Output"],
Cell[827112, 14693, 634, 11, 45, "Output"],
Cell[827749, 14706, 21212, 469, 390, "Output"],
Cell[848964, 15177, 369, 7, 35, "Message"],
Cell[849336, 15186, 290, 6, 35, "Message"],
Cell[849629, 15194, 292, 6, 35, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[849958, 15205, 11618, 311, 1003, "Input"],
Cell[861579, 15518, 577, 10, 45, "Output"],
Cell[862159, 15530, 21142, 468, 390, "Output"],
Cell[883304, 16000, 576, 10, 45, "Output"],
Cell[883883, 16012, 21154, 468, 373, "Output"],
Cell[905040, 16482, 574, 10, 45, "Output"],
Cell[905617, 16494, 21040, 465, 390, "Output"],
Cell[926660, 16961, 580, 10, 45, "Output"],
Cell[927243, 16973, 21073, 465, 390, "Output"],
Cell[948319, 17440, 576, 10, 45, "Output"],
Cell[948898, 17452, 21144, 468, 390, "Output"],
Cell[970045, 17922, 418, 8, 35, "Message"],
Cell[970466, 17932, 416, 8, 35, "Message"],
Cell[970885, 17942, 416, 8, 35, "Message"],
Cell[971304, 17952, 379, 7, 35, "Message"],
Cell[971686, 17961, 304, 7, 35, "Message"],
Cell[971993, 17970, 292, 6, 35, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[972322, 17981, 533, 15, 45, "Input"],
Cell[972858, 17998, 15408, 272, 154, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[988303, 18275, 280, 7, 45, "Input"],
Cell[988586, 18284, 2217, 33, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[990840, 18322, 280, 7, 45, "Input"],
Cell[991123, 18331, 2233, 33, 45, "Output"]
}, Open  ]]
}
]
*)

