(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1618016,      31202]
NotebookOptionsPosition[   1616547,      31159]
NotebookOutlinePosition[   1616922,      31175]
CellTagsIndexPosition[   1616879,      31172]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"net", "=", 
   RowBox[{"NetModel", "[", "\"\<LeNet Trained on MNIST Data\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"StandardForm", "@", "net"}], ",", 
   RowBox[{"TraditionalForm", "@", "net"}], ",", 
   RowBox[{"Length", "@", 
    RowBox[{"Normal", "@", "net"}]}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.7004637230999937`*^9, 3.7004637230999937`*^9}, {
  3.7004637901225157`*^9, 3.700463796153699*^9}, {3.7004640531548834`*^9, 
  3.700464080216505*^9}, {3.700464282244379*^9, 
  3.7004642891662197`*^9}},ExpressionUUID->"d64fd6ef-f9b0-424b-a6dc-\
17acf220e10c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    FormBox[
     StyleBox[
      TagBox[
       TagBox[
        RowBox[{"NetChain", 
         RowBox[{"[", 
          PanelBox[
           
           DynamicModuleBox[{NeuralNetworks`Private`NetChain`assoc3 = 
            Association[
            "Type" -> "Chain", "Nodes" -> 
             Association[
              "1" -> Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{20, 1, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 1, "$GroupNumber" -> 1, 
                   "$InputSize" -> {28, 28}, "$OutputSize" -> {24, 24}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{1, 28, 28}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {20, 24, 24}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                   "PaddingSize" -> {0, 0}, "Function" -> Max, 
                   "Dimensionality" -> 2, "Channels" -> 20, 
                   "$InputSize" -> {24, 24}, "$OutputSize" -> {12, 12}, 
                   "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]]], "4" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{50, 20, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 50, "KernelSize" -> {5, 5}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 20, "$GroupNumber" -> 1, 
                   "$InputSize" -> {12, 12}, "$OutputSize" -> {8, 8}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]]],
                "5" -> Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {50, 8, 8}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]], 
                 "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]]],
                "6" -> Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                   "PaddingSize" -> {0, 0}, "Function" -> Max, 
                   "Dimensionality" -> 2, "Channels" -> 50, 
                   "$InputSize" -> {8, 8}, "$OutputSize" -> {4, 4}, 
                   "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]], 
                 "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{50, 4, 4}, NeuralNetworks`RealT]]],
                "7" -> Association[
                "Type" -> "Flatten", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "Level" -> DirectedInfinity[1], "OutputSize" -> {800}, 
                   "$InputSize" -> {50, 4, 4}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{50, 4, 4}, NeuralNetworks`RealT]], 
                 "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]]], "8" -> 
               Association[
                "Type" -> "Linear", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{500, 800}, NeuralNetworks`RealT], 
                   "Biases" -> 
                   NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputDimensions" -> {500}, "$OutputSize" -> 500, 
                   "$InputSize" -> 800, "$InputDimensions" -> {800}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]], 
                 "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], "9" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {500}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                 "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
               "10" -> Association[
                "Type" -> "Linear", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{10, 500}, NeuralNetworks`RealT], 
                   "Biases" -> 
                   NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                   "$InputSize" -> 500, "$InputDimensions" -> {500}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                 "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "11" -> 
               Association[
                "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
                 Association[], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                 "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
             "Edges" -> {
              NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "10", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Outputs", "Output"] -> 
               NeuralNetworks`NetPath["Nodes", "11", "Outputs", "Output"]}, 
             "Inputs" -> Association["Input" -> NetEncoder["Image", 
                 Association[
                 "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                  "ColorChannels" -> 1, "MeanImage" -> None], 
                 NeuralNetworks`TensorT[{1, 28, 28}, NeuralNetworks`RealT]]], 
             "Outputs" -> Association["Output" -> NetDecoder["Class", 
                 Association[
                 "Labels" -> {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, "Dimensions" -> 
                  10], 
                 NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
            NeuralNetworks`Private`NetChain`opart, 
            NeuralNetworks`Private`NetChain`part, 
            NeuralNetworks`Private`NetChain`selected = Null}, 
            DynamicBox[GridBox[{{
                NeuralNetworks`Private`NetChain`MouseClickBoxes[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"20\"", "\"24\"", "\"24\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"20\"", "\"24\"", "\"24\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"20\"", "\"12\"", "\"12\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"50\"", "\"8\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"50\"", "\"8\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"50\"", "\"4\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"800\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                 If[
                  ListQ[
                  NeuralNetworks`Private`NetChain`part = MouseAnnotation[]], 
                  If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
               NeuralNetworks`Private`NetChain`fmtSelected[
               NeuralNetworks`Private`NetChain`selected, 
                NeuralNetworks`Private`NetChain`part]}, 
              GridBoxSpacings -> {"Columns" -> {{1}}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}],
             ImageSizeCache->{345., {133., 141.}},
             TrackedSymbols:>{NeuralNetworks`Private`NetChain`selected}],
            Initialization:>{NetChain}],
           BaselinePosition->Automatic], "]"}]}],
        False],
       Deploy],
      LineBreakWithin->False],
     StandardForm],
    StandardForm,
    Editable->True], ",", 
   TagBox[
    FormBox[
     TagBox[GridBox[{
        {"\<\"\"\>", "\<\"input\"\>", 
         TagBox[GridBox[{
            {"\<\"image\"\>"},
            {
             TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
                
                TemplateBox[{
                 "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                  "\" \"", 
                  
                  TemplateBox[{
                   "\[Times]", "\"\[Times]\"", "\"1\"", "\"28\"", "\"28\""}, 
                   "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                 "RowDefault"], 
                GrayLevel[0.5], StripOnInput -> False]},
              "RowDefault"]}
           },
           BaselinePosition->2,
           DefaultBaseStyle->"Column",
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"]},
        {
         StyleBox["\<\"1\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"convolution\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"20\"", "\"24\"", "\"24\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"2\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], 
         TagBox[
          FormBox["\<\"ReLU\"\>",
           TraditionalForm],
          TraditionalForm,
          Editable->True], 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"20\"", "\"24\"", "\"24\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"3\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"pooling\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"20\"", "\"12\"", "\"12\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"4\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"convolution\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"50\"", "\"8\"", "\"8\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"5\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], 
         TagBox[
          FormBox["\<\"ReLU\"\>",
           TraditionalForm],
          TraditionalForm,
          Editable->True], 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"50\"", "\"8\"", "\"8\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"6\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"pooling\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"50\"", "\"4\"", "\"4\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"7\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"flatten\"\>", 
         TemplateBox[{"\"vector\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{"\[Times]", "\"\[Times]\"", "\"800\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"8\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"linear\"\>", 
         TemplateBox[{"\"vector\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"9\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], 
         TagBox[
          FormBox["\<\"ReLU\"\>",
           TraditionalForm],
          TraditionalForm,
          Editable->True], 
         TemplateBox[{"\"vector\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"10\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"linear\"\>", 
         TemplateBox[{"\"vector\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"11\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"softmax\"\>", 
         TemplateBox[{"\"vector\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>", "\<\"output\"\>", "\<\"class\"\>"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {{1.1}}}],
      "Grid"],
     TraditionalForm],
    TraditionalForm,
    Editable->True], ",", "11"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7004641813383636`*^9, {3.70046428965059*^9, 3.70046431190038*^9}, 
   3.7004644439751635`*^9, 3.700469971943963*^9, {3.7004736788058405`*^9, 
   3.700473684186555*^9}},ExpressionUUID->"c928b848-7921-4d33-af03-\
06c29973dfd6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"net", "=", 
   RowBox[{
   "NetModel", "[", 
    "\"\<SqueezeNet V1.1 Trained on ImageNet Competition Data\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"StandardForm", "@", "net"}], ",", 
   RowBox[{"TraditionalForm", "@", "net"}], ",", 
   RowBox[{"Length", "@", 
    RowBox[{"Normal", "@", "net"}]}]}], "}"}]}], "Input",
 CellChangeTimes->{
  3.700463821608155*^9, {3.7004640603110723`*^9, 3.70046408566956*^9}, 
   3.700464136536284*^9, 
   3.700464300837968*^9},ExpressionUUID->"2b5ca102-e039-4d2f-95c0-\
60b94cb65d65"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    FormBox[
     StyleBox[
      TagBox[
       TagBox[
        RowBox[{"NetChain", 
         RowBox[{"[", 
          PanelBox[
           
           DynamicModuleBox[{NeuralNetworks`Private`NetChain`assoc3 = 
            Association[
            "Type" -> "Chain", "Nodes" -> 
             Association[
              "conv1" -> Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{64, 3, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                   "Stride" -> {2, 2}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 3, "$GroupNumber" -> 1, 
                   "$InputSize" -> {227, 227}, "$OutputSize" -> {113, 113}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{3, 227, 227}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 113, 113}, 
                    NeuralNetworks`RealT]]], "relu_conv1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {64, 113, 113}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 113, 113}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 113, 113}, 
                    NeuralNetworks`RealT]]], "pool1" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                   "PaddingSize" -> {0, 0}, "Function" -> Max, 
                   "Dimensionality" -> 2, "Channels" -> 64, 
                   "$InputSize" -> {113, 113}, "$OutputSize" -> {56, 56}, 
                   "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 113, 113}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 56, 56}, NeuralNetworks`RealT]]
                  ], "fire2" -> 
               Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "squeeze1x1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{16, 64, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 16, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu_squeeze1x1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {16, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]]], "expand1x1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 16, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 16, "$GroupNumber" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, NeuralNetworks`RealT]
                    ], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu_expand1x1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "expand3x3" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 16, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 16, "$GroupNumber" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu_expand3x3" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "concat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 2, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath[
                    "Nodes", "relu_squeeze1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "squeeze1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "expand1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu_squeeze1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu_expand1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "expand1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "expand3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu_squeeze1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu_expand3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "expand3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "concat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu_expand1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu_expand3x3", "Outputs", "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "squeeze1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "concat", "Outputs", "Output"]}], "fire3" -> 
               Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "squeeze1x1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{16, 128, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 16, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu_squeeze1x1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {16, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]]], "expand1x1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 16, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 16, "$GroupNumber" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu_expand1x1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "expand3x3" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 16, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 16, "$GroupNumber" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu_expand3x3" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "concat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 2, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath[
                    "Nodes", "relu_squeeze1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "squeeze1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "expand1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu_squeeze1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu_expand1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "expand1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "expand3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu_squeeze1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu_expand3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "expand3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "concat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu_expand1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu_expand3x3", "Outputs", "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "squeeze1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "concat", "Outputs", "Output"]}], "pool3_pad" -> 
               Association[
                "Type" -> "Padding", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "Specification" -> {{0, 0}, {0, 1}, {0, 1}}, "Padding" -> 
                   "Fixed", "Rank" -> 3, "$InputSize" -> {128, 56, 56}, 
                   "$OutputSize" -> {128, 57, 57}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 57, 57}, 
                    NeuralNetworks`RealT]]], "pool3" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                   "PaddingSize" -> {0, 0}, "Function" -> Max, 
                   "Dimensionality" -> 2, "Channels" -> 128, 
                   "$InputSize" -> {57, 57}, "$OutputSize" -> {28, 28}, 
                   "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 57, 57}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "fire4" -> 
               Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "squeeze1x1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{32, 128, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 32, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu_squeeze1x1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]]], "expand1x1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 32, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 32, "$GroupNumber" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu_expand1x1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "expand3x3" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 32, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 32, "$GroupNumber" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu_expand3x3" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "concat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 2, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath[
                    "Nodes", "relu_squeeze1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "squeeze1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "expand1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu_squeeze1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu_expand1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "expand1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "expand3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu_squeeze1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu_expand3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "expand3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "concat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu_expand1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu_expand3x3", "Outputs", "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "squeeze1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "concat", "Outputs", "Output"]}], "fire5" -> 
               Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "squeeze1x1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{32, 256, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 32, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu_squeeze1x1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]]], "expand1x1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 32, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 32, "$GroupNumber" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu_expand1x1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "expand3x3" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 32, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 32, "$GroupNumber" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu_expand3x3" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "concat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 2, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath[
                    "Nodes", "relu_squeeze1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "squeeze1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "expand1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu_squeeze1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu_expand1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "expand1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "expand3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu_squeeze1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu_expand3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "expand3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "concat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu_expand1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu_expand3x3", "Outputs", "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "squeeze1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "concat", "Outputs", "Output"]}], "pool5_pad" -> 
               Association[
                "Type" -> "Padding", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "Specification" -> {{0, 0}, {0, 1}, {0, 1}}, "Padding" -> 
                   "Fixed", "Rank" -> 3, "$InputSize" -> {256, 28, 28}, 
                   "$OutputSize" -> {256, 29, 29}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{256, 29, 29}, 
                    NeuralNetworks`RealT]]], "pool5" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                   "PaddingSize" -> {0, 0}, "Function" -> Max, 
                   "Dimensionality" -> 2, "Channels" -> 256, 
                   "$InputSize" -> {29, 29}, "$OutputSize" -> {14, 14}, 
                   "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{256, 29, 29}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "fire6" -> 
               Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{384, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "squeeze1x1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{48, 256, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 48, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_squeeze1x1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {48, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48, 14, 14}, 
                    NeuralNetworks`RealT]]], "expand1x1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 48, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 48, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_expand1x1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "expand3x3" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 48, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 48, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_expand3x3" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "concat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 2, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{384, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath[
                    "Nodes", "relu_squeeze1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "squeeze1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "expand1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu_squeeze1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu_expand1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "expand1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "expand3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu_squeeze1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu_expand3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "expand3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "concat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu_expand1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu_expand3x3", "Outputs", "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "squeeze1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "concat", "Outputs", "Output"]}], "fire7" -> 
               Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{384, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{384, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "squeeze1x1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{48, 384, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 48, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 384, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_squeeze1x1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {48, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48, 14, 14}, 
                    NeuralNetworks`RealT]]], "expand1x1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 48, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 48, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_expand1x1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "expand3x3" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 48, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 48, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_expand3x3" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "concat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 2, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{384, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath[
                    "Nodes", "relu_squeeze1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "squeeze1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "expand1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu_squeeze1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu_expand1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "expand1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "expand3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu_squeeze1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu_expand3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "expand3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "concat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu_expand1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu_expand3x3", "Outputs", "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "squeeze1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "concat", "Outputs", "Output"]}], "fire8" -> 
               Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{384, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "squeeze1x1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 384, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 384, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_squeeze1x1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "expand1x1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{256, 64, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_expand1x1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "expand3x3" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{256, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_expand3x3" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "concat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 2, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath[
                    "Nodes", "relu_squeeze1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "squeeze1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "expand1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu_squeeze1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu_expand1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "expand1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "expand3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu_squeeze1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu_expand3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "expand3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "concat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu_expand1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu_expand3x3", "Outputs", "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "squeeze1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "concat", "Outputs", "Output"]}], "fire9" -> 
               Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "squeeze1x1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 512, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_squeeze1x1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "expand1x1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{256, 64, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_expand1x1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "expand3x3" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{256, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_expand3x3" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "concat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 2, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath[
                    "Nodes", "relu_squeeze1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "squeeze1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "expand1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu_squeeze1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu_expand1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "expand1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "expand3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu_squeeze1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu_expand3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "expand3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "concat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu_expand1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu_expand3x3", "Outputs", "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "squeeze1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "concat", "Outputs", "Output"]}], "drop9" -> 
               Association[
                "Type" -> "Dropout", "Arrays" -> Association[], "Parameters" -> 
                 Association["DropoutProbability" -> 0.5], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv10" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{1000, 512, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 1000, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 512, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{1000, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu_conv10" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {1000, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{1000, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{1000, 14, 14}, 
                    NeuralNetworks`RealT]]], "pool10" -> 
               Association[
                "Type" -> "Aggregation", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> Mean, "$Channels" -> 1000, 
                   "$InputDimensions" -> {14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{1000, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]]], 
               "flatten" -> 
               Association[
                "Type" -> "Flatten", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "Level" -> DirectedInfinity[1], "OutputSize" -> {1000}, 
                   "$InputSize" -> {1000}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]], 
                 "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]]], 
               "probabilities" -> 
               Association[
                "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
                 Association[], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]], 
                 "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]]]], 
             "Edges" -> {
              NeuralNetworks`NetPath["Nodes", "conv1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu_conv1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "conv1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "pool1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu_conv1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "fire2", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "pool1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "fire3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "fire2", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "pool3_pad", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "fire3", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "pool3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "pool3_pad", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "fire4", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "pool3", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "fire5", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "fire4", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "pool5_pad", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "fire5", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "pool5", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "pool5_pad", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "fire6", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "pool5", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "fire7", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "fire6", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "fire8", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "fire7", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "fire9", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "fire8", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "drop9", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "fire9", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "conv10", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "drop9", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu_conv10", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "conv10", "Outputs", "Output"],
                NeuralNetworks`NetPath["Nodes", "pool10", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu_conv10", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "flatten", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "pool10", "Outputs", "Output"],
                NeuralNetworks`NetPath[
                "Nodes", "probabilities", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "flatten", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Outputs", "Output"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "probabilities", "Outputs", "Output"]}, "Inputs" -> 
             Association["Input" -> NetEncoder["Image", 
                 Association[
                 "ImageSize" -> {227, 227}, "ColorSpace" -> "RGB", 
                  "ColorChannels" -> 3, 
                  "MeanImage" -> {0.4823529411764706, 0.4588235294117647, 
                   0.40784313725490196`}], 
                 
                 NeuralNetworks`TensorT[{3, 227, 227}, 
                  NeuralNetworks`RealT]]], "Outputs" -> 
             Association["Output" -> NetDecoder["Class", 
                 Association["Labels" -> {
                    Entity["Concept", "Tench::q9r2d"], 
                    Entity["Concept", "CarassiusAuratus::f73xs"], 
                    Entity["Concept", "CarcharodonCarcharias::st7pj"], 
                    Entity["Concept", "GaleocerdoCuvieri::h7238"], 
                    Entity["Concept", "HammerheadShark::cky4t"], 
                    Entity["Concept", "Crampfish::6369q"], 
                    Entity["Concept", "Stingray::4cts3"], 
                    Entity["Concept", "Cock::2s2xh"], 
                    Entity["Concept", "Hen::49q38"], 
                    Entity["Concept", "StruthioCamelus::7fgc2"], 
                    Entity["Concept", "Brambling::47bpt"], 
                    Entity["Concept", "CarduelisCarduelis::bv5y9"], 
                    Entity["Concept", "CarpodacusMexicanus::zq6w8"], 
                    Entity["Concept", "Junco::sjqs9"], 
                    Entity["Concept", "IndigoBird::6365d"], 
                    Entity["Concept", "AmericanRobin::wf28w"], 
                    Entity["Concept", "Bulbul::4x6vd"], 
                    Entity["Concept", "Jay::9g7qw"], 
                    Entity["Concept", "Magpie::62kfm"], 
                    Entity["Concept", "Chickadee::qmsc9"], 
                    Entity["Concept", "WaterOuzel::n32d7"], 
                    Entity["Concept", "Kite::y2jjm"], 
                    Entity["Concept", "AmericanEagle::z2fqr"], 
                    Entity["Concept", "Vulture::r2nfy"], 
                    Entity["Concept", "GreatGrayOwl::97vk2"], 
                    Entity["Concept", "EuropeanFireSalamander::t6v33"], 
                    Entity["Concept", "CommonNewt::9nx3s"], 
                    Entity["Concept", "Eft::t3bv7"], 
                    Entity["Concept", "AmbystomaMaculatum::qnd2g"], 
                    Entity["Concept", "AmbystomaMexicanum::k9j45"], 
                    Entity["Concept", "Bullfrog::r9cvc"], 
                    Entity["Concept", "Tree-frog::m988r"], 
                    Entity["Concept", "AscaphusTrui::qr2np"], 
                    Entity["Concept", "CarettaCaretta::768y9"], 
                    Entity["Concept", "DermochelysCoriacea::ypc4b"], 
                    Entity["Concept", "MudTurtle::47p9w"], 
                    Entity["Concept", "Terrapin::5j9b2"], 
                    Entity["Concept", "BoxTortoise::hksb9"], 
                    Entity["Concept", "BandedGecko::38zhr"], 
                    Entity["Concept", "CommonIguana::66q43"], 
                    Entity["Concept", "AmericanChameleon::67k54"], 
                    Entity["Concept", "Whiptail::sb62k"], 
                    Entity["Concept", "Agama::22vdx"], 
                    Entity["Concept", "ChlamydosaurusKingi::stq3k"], 
                    Entity["Concept", "AlligatorLizard::k6335"], 
                    Entity["Concept", "GilaMonster::k8q26"], 
                    Entity["Concept", "GreenLizard::2fkzv"], 
                    Entity["Concept", "AfricanChameleon::x82fs"], 
                    Entity["Concept", "DragonLizard::s68v6"], 
                    Entity["Concept", "AfricanCrocodile::zw55f"], 
                    Entity["Concept", "AlligatorMississipiensis::s7582"], 
                    Entity["Concept", "Triceratops::p997c"], 
                    Entity["Concept", "CarphophisAmoenus::35dfs"], 
                    Entity["Concept", "Ring-neckedSnake::2f823"], 
                    Entity["Concept", "HognoseSnake::k5k58"], 
                    Entity["Concept", "GrassSnake::pv2xf"], 
                    Entity["Concept", "KingSnake::t9m8y"], 
                    Entity["Concept", "GarterSnake::892t9"], 
                    Entity["Concept", "WaterSnake::y627x"], 
                    Entity["Concept", "VineSnake::9kywz"], 
                    Entity["Concept", "HypsiglenaTorquata::6869v"], 
                    Entity["Concept", "BoaConstrictor::qq73z"], 
                    Entity["Concept", "PythonSebae::dmhh6"], 
                    Entity["Concept", "IndianCobra::2sv7h"], 
                    Entity["Concept", "GreenMamba::c9qn3"], 
                    Entity["Concept", "SeaSnake::s529y"], 
                    Entity["Concept", "Cerastes::6575z"], 
                    Entity["Concept", "CrotalusAdamanteus::8ynrx"], 
                    Entity["Concept", "CrotalusCerastes::m382t"], 
                    Entity["Concept", "Trilobite::3qyq3"], 
                    Entity["Concept", "Harvestman::545h3"], 
                    Entity["Concept", "Scorpion::9rx48"], 
                    Entity["Concept", "ArgiopeAurantia::633xv"], 
                    Entity["Concept", "AraneusCavaticus::thm3g"], 
                    Entity["Concept", "AraneaDiademata::4jvj8"], 
                    Entity["Concept", "BlackWidow::4682d"], 
                    Entity["Concept", "Tarantula::mc462"], 
                    Entity["Concept", "HuntingSpider::q7898"], 
                    Entity["Concept", "Tick::xw6hc"], 
                    Entity["Concept", "Centipede::s8w7r"], 
                    Entity["Concept", "BlackGrouse::9w35m"], 
                    Entity["Concept", "Ptarmigan::tv6c8"], 
                    Entity["Concept", "BonasaUmbellus::bpbr3"], 
                    Entity["Concept", "PrairieChicken::2ws9g"], 
                    Entity["Concept", "Peacock::kd2y4"], 
                    Entity["Concept", "Quail::7462f"], 
                    Entity["Concept", "Partridge::t22mp"], 
                    Entity["Concept", "AfricanGray::84css"], 
                    Entity["Concept", "Macaw::ntx97"], 
                    Entity["Concept", "CacatuaGalerita::tfz9w"], 
                    Entity["Concept", "Lorikeet::4f725"], 
                    Entity["Concept", "Coucal::z95g6"], 
                    Entity["Concept", "BeeEater::376h3"], 
                    Entity["Concept", "Hornbill::6389h"], 
                    Entity["Concept", "Hummingbird::vz6gt"], 
                    Entity["Concept", "Jacamar::v7428"], 
                    Entity["Concept", "Toucan::2h2d5"], 
                    Entity["Concept", "Drake::5cdfw"], 
                    Entity["Concept", "MergusSerrator::5t86m"], 
                    Entity["Concept", "Goose::82x27"], 
                    Entity["Concept", "BlackSwan::6ft7p"], 
                    Entity["Concept", "Tusker::dqq7d"], 
                    Entity["Concept", "Anteater::8t864"], 
                    Entity["Concept", "Duck-billedPlatypus::b8867"], 
                    Entity["Concept", "BrushKangaroo::493r2"], 
                    Entity["Concept", "KangarooBear::hvf3s"], 
                    Entity["Concept", "Wombat::m5rqr"], 
                    Entity["Concept", "Jellyfish::fs9rf"], 
                    Entity["Concept", "SeaAnemone::5n98x"], 
                    Entity["Concept", "BrainCoral::v7844"], 
                    Entity["Concept", "Flatworm::h957w"], 
                    Entity["Concept", "Nematode::hz536"], 
                    Entity["Concept", "Conch::44pfv"], 
                    Entity["Concept", "Snail::3r58h"], 
                    Entity["Concept", "Slug::d4638"], 
                    Entity["Concept", "Nudibranch::dq2vh"], 
                    Entity["Concept", "Coat-of-mailShell::h3tp5"], 
                    Entity["Concept", "ChamberedNautilus::tspc6"], 
                    Entity["Concept", "CancerMagister::5r562"], 
                    Entity["Concept", "CancerIrroratus::d69mr"], 
                    Entity["Concept", "FiddlerCrab::4mt9n"], 
                    Entity["Concept", "ParalithodesCamtschatica::pfzy2"], 
                    Entity["Concept", "HomarusAmericanus::n2j65"], 
                    Entity["Concept", "SeaCrawfish::x53g2"], 
                    Entity["Concept", "Crawdaddy::946y4"], 
                    Entity["Concept", "HermitCrab::4k242"], 
                    Entity["Concept", "Isopod::4z747"], 
                    Entity["Concept", "CiconiaCiconia::wkt3m"], 
                    Entity["Concept", "BlackStork::5v349"], 
                    Entity["Concept", "Spoonbill::4939q"], 
                    Entity["Concept", "Flamingo::28r7m"], 
                    Entity["Concept", "EgrettaCaerulea::9965c"], 
                    Entity["Concept", "AmericanEgret::43jz8"], 
                    Entity["Concept", "Bittern::722qw"], 
                    Entity["Concept", "Crane::9wrg8"], 
                    Entity["Concept", "AramusPictus::964mw"], 
                    Entity["Concept", "EuropeanGallinule::c7jfx"], 
                    Entity["Concept", "AmericanCoot::c7452"], 
                    Entity["Concept", "Bustard::p3zj5"], 
                    Entity["Concept", "ArenariaInterpres::3rbq4"], 
                    Entity["Concept", "Dunlin::4mj52"], 
                    Entity["Concept", "Redshank::yvbj8"], 
                    Entity["Concept", "Dowitcher::47w6h"], 
                    Entity["Concept", "OysterCatcher::9drpt"], 
                    Entity["Concept", "Pelican::jpfg7"], 
                    Entity["Concept", "AptenodytesPatagonica::f85wf"], 
                    Entity["Concept", "Mollymawk::r8386"], 
                    Entity["Concept", "EschrichtiusGibbosus::2c8q9"], 
                    Entity["Concept", "KillerWhale::26sj4"], 
                    Entity["Concept", "Dugong::ss39b"], 
                    Entity["Concept", "SeaLion::bs87w"], 
                    Entity["Concept", "Chihuahua::8hmhf"], 
                    Entity["Concept", "JapaneseSpaniel::h55d9"], 
                    Entity["Concept", "MalteseDog::trsv6"], 
                    Entity["Concept", "Peke::b9n5f"], 
                    Entity["Concept", "Shih-Tzu::kc9k8"], 
                    Entity["Concept", "BlenheimSpaniel::cd3nm"], 
                    Entity["Concept", "Papillon::zhn7j"], 
                    Entity["Concept", "ToyTerrier::k3s97"], 
                    Entity["Concept", "RhodesianRidgeback::jph75"], 
                    Entity["Concept", "AfghanHound::6845m"], 
                    Entity["Concept", "Basset::n769x"], 
                    Entity["Concept", "Beagle::2bdvt"], 
                    Entity["Concept", "Bloodhound::pc454"], 
                    Entity["Concept", "Bluetick::fs5sw"], 
                    Entity["Concept", "Black-and-tanCoonhound::84k6y"], 
                    Entity["Concept", "WalkerFoxhound::z3y7p"], 
                    Entity["Concept", "EnglishFoxhound::5v343"], 
                    Entity["Concept", "Redbone::j6h4x"], 
                    Entity["Concept", "Borzoi::v43t8"], 
                    Entity["Concept", "IrishWolfhound::8m3gw"], 
                    Entity["Concept", "ItalianGreyhound::s4gq3"], 
                    Entity["Concept", "Whippet::57r47"], 
                    Entity["Concept", "IbizanHound::987kj"], 
                    Entity["Concept", "Elkhound::62q39"], 
                    Entity["Concept", "OtterHound::3442w"], 
                    Entity["Concept", "GazelleHound::7k449"], 
                    Entity["Concept", "Deerhound::btsv4"], 
                    Entity["Concept", "Weimaraner::476j6"], 
                    Entity["Concept", "StaffordshireBullTerrier::883y3"], 
                    Entity["Concept", "AmericanPitBullTerrier::kw55q"], 
                    Entity["Concept", "BedlingtonTerrier::98h82"], 
                    Entity["Concept", "BorderTerrier::gh5h6"], 
                    Entity["Concept", "KerryBlueTerrier::t9c62"], 
                    Entity["Concept", "IrishTerrier::qmsm4"], 
                    Entity["Concept", "NorfolkTerrier::b7z76"], 
                    Entity["Concept", "NorwichTerrier::9v483"], 
                    Entity["Concept", "YorkshireTerrier::bn4jn"], 
                    Entity["Concept", "Wire-hairedFoxTerrier::pn5qb"], 
                    Entity["Concept", "LakelandTerrier::b729b"], 
                    Entity["Concept", "SealyhamTerrier::5jz56"], 
                    Entity["Concept", "Airedale::w6gf4"], 
                    Entity["Concept", "CairnTerrier::67c37"], 
                    Entity["Concept", "AustralianTerrier::q2h6g"], 
                    Entity["Concept", "DandieDinmont::ff47s"], 
                    Entity["Concept", "BostonBull::6662j"], 
                    Entity["Concept", "MiniatureSchnauzer::848y9"], 
                    Entity["Concept", "GiantSchnauzer::8fwv6"], 
                    Entity["Concept", "StandardSchnauzer::q9j3y"], 
                    Entity["Concept", "ScotchTerrier::2f2jw"], 
                    Entity["Concept", "ChrysanthemumDog::y9tps"], 
                    Entity["Concept", "SilkyTerrier::xyfw3"], 
                    Entity["Concept", "Soft-coatedWheatenTerrier::474j2"], 
                    Entity["Concept", "WestHighlandWhiteTerrier::4h85y"], 
                    Entity["Concept", "LhasaApso::cr28m"], 
                    Entity["Concept", "Flat-coatedRetriever::866mk"], 
                    Entity["Concept", "Curly-coatedRetriever::pb8yt"], 
                    Entity["Concept", "GoldenRetriever::t59tg"], 
                    Entity["Concept", "LabradorRetriever::7g587"], 
                    Entity["Concept", "ChesapeakeBayRetriever::s8567"], 
                    Entity["Concept", "GermanShort-hairedPointer::k3297"], 
                    Entity["Concept", "HungarianPointer::7555p"], 
                    Entity["Concept", "EnglishSetter::ps793"], 
                    Entity["Concept", "IrishSetter::h5pp3"], 
                    Entity["Concept", "GordonSetter::yvx65"], 
                    Entity["Concept", "BrittanySpaniel::435gz"], 
                    Entity["Concept", "Clumber::2ddvk"], 
                    Entity["Concept", "EnglishSpringer::f4dq6"], 
                    Entity["Concept", "WelshSpringerSpaniel::qyng2"], 
                    Entity["Concept", "Cocker::7284r"], 
                    Entity["Concept", "SussexSpaniel::sbv42"], 
                    Entity["Concept", "IrishWaterSpaniel::m9zkp"], 
                    Entity["Concept", "Kuvasz::z4sxp"], 
                    Entity["Concept", "Schipperke::7778z"], 
                    Entity["Concept", "Groenendael::5854s"], 
                    Entity["Concept", "Malinois::k8y57"], 
                    Entity["Concept", "Briard::dtm5k"], 
                    Entity["Concept", "Kelpie::k6795"], 
                    Entity["Concept", "Komondor::p8q9b"], 
                    Entity["Concept", "OldEnglishSheepdog::4zdy3"], 
                    Entity["Concept", "ShetlandSheepDog::sffh8"], 
                    Entity["Concept", "Collie::999kf"], 
                    Entity["Concept", "BorderCollie::463w2"], 
                    Entity["Concept", "BouvierDesFlandres::h7txf"], 
                    Entity["Concept", "Rottweiler::zywt3"], 
                    Entity["Concept", "Alsatian::fh5zw"], 
                    Entity["Concept", "Doberman::zgqf4"], 
                    Entity["Concept", "MiniaturePinscher::jvy9c"], 
                    Entity["Concept", "GreaterSwissMountainDog::t7642"], 
                    Entity["Concept", "BerneseMountainDog::y32v5"], 
                    Entity["Concept", "Appenzeller::j96dj"], 
                    Entity["Concept", "EntleBucher::y43x6"], 
                    Entity["Concept", "Boxer::3966f"], 
                    Entity["Concept", "BullMastiff::6p365"], 
                    Entity["Concept", "TibetanMastiff::4f68b"], 
                    Entity["Concept", "FrenchBulldog::3jg82"], 
                    Entity["Concept", "GreatDane::xg8dn"], 
                    Entity["Concept", "SaintBernard::r5277"], 
                    Entity["Concept", "EskimoDog::2vm97"], 
                    Entity["Concept", "AlaskanMalamute::y6wqq"], 
                    Entity["Concept", "SiberianHusky::k7pkk"], 
                    Entity["Concept", "CarriageDog::jh3w6"], 
                    Entity["Concept", "Affenpinscher::58wr6"], 
                    Entity["Concept", "Basenji::k9yy2"], 
                    Entity["Concept", "Pug::6799h"], 
                    Entity["Concept", "Leonberg::49td5"], 
                    Entity["Concept", "NewfoundlandDog::q787h"], 
                    Entity["Concept", "GreatPyrenees::t8qh7"], 
                    Entity["Concept", "Samoyede::rq827"], 
                    Entity["Concept", "Pomeranian::dx7mr"], 
                    Entity["Concept", "ChowChow::7x292"], 
                    Entity["Concept", "Keeshond::rz734"], 
                    Entity["Concept", "BrabanconGriffon::jh5pt"], 
                    Entity["Concept", "Pembroke::95g54"], 
                    Entity["Concept", "Cardigan::b724j"], 
                    Entity["Concept", "ToyPoodle::732f6"], 
                    Entity["Concept", "MiniaturePoodle::4955p"], 
                    Entity["Concept", "StandardPoodle::w25c4"], 
                    Entity["Concept", "MexicanHairless::m2by7"], 
                    Entity["Concept", "CanisLupus::5gwtc"], 
                    Entity["Concept", "ArcticWolf::4xr47"], 
                    Entity["Concept", "CanisNiger::99p6d"], 
                    Entity["Concept", "BrushWolf::44t57"], 
                    Entity["Concept", "CanisDingo::529k9"], 
                    Entity["Concept", "CuonAlpinus::f5yfn"], 
                    Entity["Concept", "AfricanHuntingDog::d9b86"], 
                    Entity["Concept", "Hyaena::7444d"], 
                    Entity["Concept", "VulpesVulpes::g8mvp"], 
                    Entity["Concept", "VulpesMacrotis::jm64h"], 
                    Entity["Concept", "AlopexLagopus::44cg9"], 
                    Entity["Concept", "GrayFox::vftd5"], 
                    Entity["Concept", "TabbyCat::rvg7f"], 
                    Entity["Concept", "TigerCat::8k84h"], 
                    Entity["Concept", "PersianCat::p69kd"], 
                    Entity["Concept", "SiameseCat::hgg68"], 
                    Entity["Concept", "EgyptianCat::sd6pw"], 
                    Entity["Concept", "Cougar::7bc9f"], 
                    Entity["Concept", "Catamount::q4f63"], 
                    Entity["Concept", "PantheraPardus::r35k5"], 
                    Entity["Concept", "PantheraUncia::z6697"], 
                    Entity["Concept", "FelisOnca::jh7tq"], 
                    Entity["Concept", "KingOfBeasts::vrwm9"], 
                    Entity["Concept", "PantheraTigris::2mpmq"], 
                    Entity["Concept", "GiantAnteater::y96st"], 
                    Entity["Concept", "BrownBear::8374p"], 
                    Entity["Concept", "AmericanBlackBear::763x8"], 
                    Entity["Concept", "IceBear::fnc5j"], 
                    Entity["Concept", "MelursusUrsinus::48x75"], 
                    Entity["Concept", "Mongoose::5hp73"], 
                    Entity["Concept", "Meerkat::q77nd"], 
                    Entity["Concept", "TigerBeetle::8362y"], 
                    Entity["Concept", "LadyBeetle::tx6bz"], 
                    Entity["Concept", "CarabidBeetle::w3hjn"], 
                    Entity["Concept", "Long-hornedBeetle::9zzc8"], 
                    Entity["Concept", "Chrysomelid::y8pqz"], 
                    Entity["Concept", "DungBeetle::bt6hz"], 
                    Entity["Concept", "RhinocerosBeetle::23y53"], 
                    Entity["Concept", "Weevil::r87rt"], 
                    Entity["Concept", "Fly::68s97"], 
                    Entity["Concept", "Bee::d8yym"], 
                    Entity["Concept", "Ant::7tznr"], 
                    Entity["Concept", "Grasshopper::52v2f"], 
                    Entity["Concept", "Cricket::82n55"], 
                    Entity["Concept", "StickInsect::4x983"], 
                    Entity["Concept", "Cockroach::7426w"], 
                    Entity["Concept", "Mantid::93t86"], 
                    Entity["Concept", "Cicada::w2299"], 
                    Entity["Concept", "Leafhopper::8k2k2"], 
                    Entity["Concept", "Lacewing::8v2m6"], 
                    Entity["Concept", "Dragonfly::7s252"], 
                    Entity["Concept", "Damselfly::dh8zj"], 
                    Entity["Concept", "Admiral::j6fvp"], 
                    Entity["Concept", "RingletButterfly::28v7s"], 
                    Entity["Concept", "DanausPlexippus::bfk9c"], 
                    Entity["Concept", "CabbageButterfly::c8v77"], 
                    Entity["Concept", "SulfurButterfly::b9263"], 
                    Entity["Concept", "Lycaenid::4whyw"], 
                    Entity["Concept", "SeaStar::46w97"], 
                    Entity["Concept", "SeaUrchin::7b835"], 
                    Entity["Concept", "Holothurian::7jk5q"], 
                    Entity["Concept", "Cottontail::bsxk4"], 
                    Entity["Concept", "Hare::55m72"], 
                    Entity["Concept", "AngoraRabbit::v6627"], 
                    Entity["Concept", "Hamster::9yy49"], 
                    Entity["Concept", "Porcupine::5r285"], 
                    Entity["Concept", "EasternFoxSquirrel::8g9v6"], 
                    Entity["Concept", "Marmot::7vb94"], 
                    Entity["Concept", "Beaver::qp598"], 
                    Entity["Concept", "CaviaCobaya::b8w85"], 
                    Entity["Concept", "Sorrel::b824z"], 
                    Entity["Concept", "Zebra::nx5qr"], 
                    Entity["Concept", "Grunter::437d2"], 
                    Entity["Concept", "WildBoar::5wjz4"], 
                    Entity["Concept", "Warthog::3q477"], 
                    Entity["Concept", "Hippo::647b2"], 
                    Entity["Concept", "Ox::yhn7j"], 
                    Entity["Concept", "AsiaticBuffalo::532z9"], 
                    Entity["Concept", "Bison::25c86"], 
                    Entity["Concept", "Tup::8y669"], 
                    Entity["Concept", "Bighorn::773z4"], 
                    Entity["Concept", "CapraIbex::p5pmr"], 
                    Entity["Concept", "Hartebeest::r8276"], 
                    Entity["Concept", "AepycerosMelampus::q45p2"], 
                    Entity["Concept", "Gazelle::px427"], 
                    Entity["Concept", "ArabianCamel::98q62"], 
                    Entity["Concept", "Llama::pp4mc"], 
                    Entity["Concept", "Weasel::gcxk7"], 
                    Entity["Concept", "Mink::r5727"], 
                    Entity["Concept", "Fitch::x2w8q"], 
                    Entity["Concept", "Black-footedFerret::r6gqg"], 
                    Entity["Concept", "Otter::63tg7"], 
                    Entity["Concept", "WoodPussy::6886s"], 
                    Entity["Concept", "Badger::vcsk3"], 
                    Entity["Concept", "Armadillo::s9866"], 
                    Entity["Concept", "Ai::z6968"], 
                    Entity["Concept", "Orang::5385s"], 
                    Entity["Concept", "Gorilla::7vrdz"], 
                    Entity["Concept", "Chimp::2t668"], 
                    Entity["Concept", "Gibbon::7yqsr"], 
                    Entity["Concept", "HylobatesSyndactylus::3g4xn"], 
                    Entity["Concept", "Guenon::7y986"], 
                    Entity["Concept", "ErythrocebusPatas::949v6"], 
                    Entity["Concept", "Baboon::28m6v"], 
                    Entity["Concept", "Macaque::m87ss"], 
                    Entity["Concept", "Langur::3w42b"], 
                    Entity["Concept", "Colobus::yqv5q"], 
                    Entity["Concept", "NasalisLarvatus::92p77"], 
                    Entity["Concept", "Marmoset::3j236"], 
                    Entity["Concept", "CebusCapucinus::4r452"], 
                    Entity["Concept", "HowlerMonkey::87c48"], 
                    Entity["Concept", "TitiMonkey::6rqgy"], 
                    Entity["Concept", "AtelesGeoffroyi::8f944"], 
                    Entity["Concept", "SaimiriSciureus::f9528"], 
                    Entity["Concept", "LemurCatta::4z4fy"], 
                    Entity["Concept", "Indri::w2dsm"], 
                    Entity["Concept", "ElephasMaximus::4668g"], 
                    Entity["Concept", "AfricanElephant::634z7"], 
                    Entity["Concept", "AilurusFulgens::m96y6"], 
                    Entity["Concept", "AiluropodaMelanoleuca::xg799"], 
                    Entity["Concept", "Barracouta::dzc32"], 
                    Entity["Concept", "Eel::6yymn"], 
                    Entity["Concept", "BlueJack::8728b"], 
                    Entity["Concept", "HolocanthusTricolor::6t872"], 
                    Entity["Concept", "AnemoneFish::5mdgt"], 
                    Entity["Concept", "Sturgeon::46xyk"], 
                    Entity["Concept", "Garfish::p9w7b"], 
                    Entity["Concept", "Lionfish::45vp5"], 
                    Entity["Concept", "Globefish::z6448"], 
                    Entity["Concept", "Abacus::s322h"], 
                    Entity["Concept", "Abaya::327b3"], 
                    Entity["Concept", "AcademicGown::6vvft"], 
                    Entity["Concept", "Accordion::vx545"], 
                    Entity["Concept", "AcousticGuitar::wp46j"], 
                    Entity["Concept", "AircraftCarrier::74d49"], 
                    Entity["Concept", "Airliner::t7542"], 
                    Entity["Concept", "Airship::dg429"], 
                    Entity["Concept", "Altar::z644x"], 
                    Entity["Concept", "Ambulance::rgts3"], 
                    Entity["Concept", "AmphibiousVehicle::rr85n"], 
                    Entity["Concept", "AnalogClock::3832f"], 
                    Entity["Concept", "Apiary::d939v"], 
                    Entity["Concept", "Apron::qr79c"], 
                    Entity["Concept", "Ash-bin::6sd8p"], 
                    Entity["Concept", "AssaultRifle::d2gst"], 
                    Entity["Concept", "BackPack::2cjsp"], 
                    Entity["Concept", "Bakehouse::6nmsm"], 
                    Entity["Concept", "BalanceBeam::6nyqs"], 
                    Entity["Concept", "Balloon::64p99"], 
                    Entity["Concept", "Ballpen::k35fx"], 
                    Entity["Concept", "BandAid::z727z"], 
                    Entity["Concept", "Banjo::fs3f9"], 
                    Entity["Concept", "Balusters::nt6x4"], 
                    Entity["Concept", "Barbell::295kg"], 
                    Entity["Concept", "BarberChair::mybp2"], 
                    Entity["Concept", "Barbershop::qg6kn"], 
                    Entity["Concept", "Barn::6xw3q"], 
                    Entity["Concept", "Barometer::65g49"], 
                    Entity["Concept", "Barrel::3pzvn"], 
                    Entity["Concept", "GardenCart::7br53"], 
                    Entity["Concept", "Baseball::9f8qz"], 
                    Entity["Concept", "Basketball::jq262"], 
                    Entity["Concept", "Bassinet::yn2td"], 
                    Entity["Concept", "Bassoon::92ky9"], 
                    Entity["Concept", "BathingCap::tsd8r"], 
                    Entity["Concept", "BathTowel::72qcw"], 
                    Entity["Concept", "BathingTub::729f8"], 
                    Entity["Concept", "BeachWaggon::c945g"], 
                    Entity["Concept", "BeaconLight::k282w"], 
                    Entity["Concept", "Beaker::btv5s"], 
                    Entity["Concept", "Busby::448c3"], 
                    Entity["Concept", "BeerBottle::8gz7t"], 
                    Entity["Concept", "BeerGlass::r6xp2"], 
                    Entity["Concept", "BellCot::567d3"], 
                    Entity["Concept", "Bib::5wq8k"], 
                    Entity["Concept", "Bicycle-built-for-two::7h478"], 
                    Entity["Concept", "Bikini::m86f8"], 
                    Entity["Concept", "Ring-binder::848m9"], 
                    Entity["Concept", "Binoculars::yp4ss"], 
                    Entity["Concept", "Birdhouse::n3qgq"], 
                    Entity["Concept", "Boathouse::59rht"], 
                    Entity["Concept", "Bob::n2762"], 
                    Entity["Concept", "BolaTie::g65x6"], 
                    Entity["Concept", "PokeBonnet::f4y42"], 
                    Entity["Concept", "Bookcase::6t56v"], 
                    Entity["Concept", "Bookshop::4rgfr"], 
                    Entity["Concept", "Bottlecap::mgg5c"], 
                    Entity["Concept", "Bow::89mx8"], 
                    Entity["Concept", "Bow-tie::79h37"], 
                    Entity["Concept", "MemorialTablet::66g76"], 
                    Entity["Concept", "Bandeau::4j247"], 
                    Entity["Concept", "Breakwater::nrtz2"], 
                    Entity["Concept", "Breastplate::4fmw7"], 
                    Entity["Concept", "Broom::hgy49"], 
                    Entity["Concept", "Bucket::f9743"], 
                    Entity["Concept", "Buckle::3398s"], 
                    Entity["Concept", "BulletproofVest::djqn3"], 
                    Entity["Concept", "BulletTrain::4dfr5"], 
                    Entity["Concept", "ButcherShop::hfp48"], 
                    Entity["Concept", "Taxi::379w3"], 
                    Entity["Concept", "Caldron::k6c8c"], 
                    Entity["Concept", "WaxLight::d9rqz"], 
                    Entity["Concept", "Cannon::54f56"], 
                    Entity["Concept", "Canoe::nnt95"], 
                    Entity["Concept", "CanOpener::6b885"], 
                    Entity["Concept", "Cardigan::237mv"], 
                    Entity["Concept", "CarMirror::5xccg"], 
                    Entity["Concept", "Carousel::n2992"], 
                    Entity["Concept", "CarpentersKit::37rxx"], 
                    Entity["Concept", "Carton::769gr"], 
                    Entity["Concept", "CarWheel::t6f2y"], 
                    Entity["Concept", "AutomatedTeller::w8746"], 
                    Entity["Concept", "Cassette::2pvzn"], 
                    Entity["Concept", "CassettePlayer::v2ng9"], 
                    Entity["Concept", "Castle::m2pbs"], 
                    Entity["Concept", "Catamaran::7b489"], 
                    Entity["Concept", "CDPlayer::7gq93"], 
                    Entity["Concept", "Cello::hhbp5"], 
                    Entity["Concept", "Cellphone::5k4s4"], 
                    Entity["Concept", "Chain::w9j9s"], 
                    Entity["Concept", "ChainlinkFence::pfv8d"], 
                    Entity["Concept", "ChainArmor::h32y6"], 
                    Entity["Concept", "ChainSaw::f5bt6"], 
                    Entity["Concept", "Chest::fd956"], 
                    Entity["Concept", "Chiffonier::m3jmr"], 
                    Entity["Concept", "Chime::m6623"], 
                    Entity["Concept", "ChinaCabinet::9bmqg"], 
                    Entity["Concept", "ChristmasStocking::867r8"], 
                    Entity["Concept", "ChurchBuilding::2394b"], 
                    Entity["Concept", "MovieHouse::hbj23"], 
                    Entity["Concept", "Cleaver::bk925"], 
                    Entity["Concept", "CliffDwelling::5c9sb"], 
                    Entity["Concept", "Cloak::dj822"], 
                    Entity["Concept", "Geta::3r9c9"], 
                    Entity["Concept", "CocktailShaker::r9655"], 
                    Entity["Concept", "CoffeeMug::gwhm5"], 
                    Entity["Concept", "Coffeepot::32tb2"], 
                    Entity["Concept", "Coil::c7h65"], 
                    Entity["Concept", "CombinationLock::b8rp7"], 
                    Entity["Concept", "ComputerKeyboard::26d5s"], 
                    Entity["Concept", "CandyStore::268x7"], 
                    Entity["Concept", "ContainerShip::tsz7x"], 
                    Entity["Concept", "Convertible::4pxj2"], 
                    Entity["Concept", "BottleScrew::djq6x"], 
                    Entity["Concept", "Cornet::35d97"], 
                    Entity["Concept", "CowboyBoot::5f655"], 
                    Entity["Concept", "CowboyHat::59wk9"], 
                    Entity["Concept", "Cradle::3882z"], 
                    Entity["Concept", "Crane::k29p4"], 
                    Entity["Concept", "CrashHelmet::76cs8"], 
                    Entity["Concept", "Crate::wmc92"], 
                    Entity["Concept", "Cot::3kgws"], 
                    Entity["Concept", "CrockPot::w5t85"], 
                    Entity["Concept", "CroquetBall::g84t5"], 
                    Entity["Concept", "Crutch::3q57h"], 
                    Entity["Concept", "Cuirass::256jq"], 
                    Entity["Concept", "Dam::w9687"], 
                    Entity["Concept", "Desk::q73z7"], 
                    Entity["Concept", "DesktopComputer::f8gmj"], 
                    Entity["Concept", "DialPhone::3j2f6"], 
                    Entity["Concept", "Nappy::6979r"], 
                    Entity["Concept", "DigitalClock::hm3x5"], 
                    Entity["Concept", "DigitalWatch::v274r"], 
                    Entity["Concept", "DiningTable::6ypqf"], 
                    Entity["Concept", "Dishcloth::4t678"], 
                    Entity["Concept", "DishWasher::px58r"], 
                    Entity["Concept", "DiscBrake::bxcw7"], 
                    Entity["Concept", "DockingFacility::f42zy"], 
                    Entity["Concept", "DogSled::34t8q"], 
                    Entity["Concept", "Dome::5j3x2"], 
                    Entity["Concept", "WelcomeMat::jqb5y"], 
                    Entity["Concept", "DrillingPlatform::r792r"], 
                    Entity["Concept", "Membranophone::2x379"], 
                    Entity["Concept", "Drumstick::4j5yw"], 
                    Entity["Concept", "Dumbbell::qjh33"], 
                    Entity["Concept", "DutchOven::qy3dv"], 
                    Entity["Concept", "ElectricFan::n79z5"], 
                    Entity["Concept", "ElectricGuitar::9pkmr"], 
                    Entity["Concept", "ElectricLocomotive::5wv23"], 
                    Entity["Concept", "EntertainmentCenter::mg549"], 
                    Entity["Concept", "Envelope::c722j"], 
                    Entity["Concept", "EspressoMaker::z42xs"], 
                    Entity["Concept", "FacePowder::yzy7x"], 
                    Entity["Concept", "FeatherBoa::c94h7"], 
                    Entity["Concept", "FileCabinet::vsb9c"], 
                    Entity["Concept", "Fireboat::xf64t"], 
                    Entity["Concept", "FireEngine::zsvx8"], 
                    Entity["Concept", "FireScreen::665b5"], 
                    Entity["Concept", "Flagstaff::qz2t6"], 
                    Entity["Concept", "TransverseFlute::8pj76"], 
                    Entity["Concept", "FoldingChair::4vqcr"], 
                    Entity["Concept", "FootballHelmet::c6twc"], 
                    Entity["Concept", "Forklift::b2dfv"], 
                    Entity["Concept", "Fountain::yn972"], 
                    Entity["Concept", "FountainPen::r2vw4"], 
                    Entity["Concept", "Four-poster::8kbhw"], 
                    Entity["Concept", "FreightCar::5pg8s"], 
                    Entity["Concept", "FrenchHorn::rm367"], 
                    Entity["Concept", "FryingPan::23fyh"], 
                    Entity["Concept", "FurCoat::6q374"], 
                    Entity["Concept", "Dustcart::2bbpr"], 
                    Entity["Concept", "GasHelmet::23k79"], 
                    Entity["Concept", "GasolinePump::wk2nk"], 
                    Entity["Concept", "Goblet::h85x9"], 
                    Entity["Concept", "Go-kart::gjsj5"], 
                    Entity["Concept", "GolfBall::63tb2"], 
                    Entity["Concept", "GolfCart::sxmp6"], 
                    Entity["Concept", "Gondola::4ds6k"], 
                    Entity["Concept", "Tam-tam::m962t"], 
                    Entity["Concept", "Gown::76k26"], 
                    Entity["Concept", "GrandPiano::8kk56"], 
                    Entity["Concept", "Glasshouse::qxjm6"], 
                    Entity["Concept", "RadiatorGrille::75d36"], 
                    Entity["Concept", "FoodMarket::4bmts"], 
                    Entity["Concept", "Guillotine::w4656"], 
                    Entity["Concept", "HairSlide::3xwcp"], 
                    Entity["Concept", "HairSpray::9w6z4"], 
                    Entity["Concept", "HalfTrack::59zq4"], 
                    Entity["Concept", "Hammer::cx2fn"], 
                    Entity["Concept", "Hamper::3b93m"], 
                    Entity["Concept", "BlowDrier::t4dpz"], 
                    Entity["Concept", "Hand-heldComputer::zs5zw"], 
                    Entity["Concept", "Handkerchief::84d24"], 
                    Entity["Concept", "FixedDisk::5xfff"], 
                    Entity["Concept", "Harmonica::8t835"], 
                    Entity["Concept", "Harp::zz89k"], 
                    Entity["Concept", "Harvester::472sq"], 
                    Entity["Concept", "Hatchet::7cspp"], 
                    Entity["Concept", "Holster::g2prc"], 
                    Entity["Concept", "HomeTheater::4y845"], 
                    Entity["Concept", "Honeycomb::qq347"], 
                    Entity["Concept", "Claw::7kmg8"], 
                    Entity["Concept", "Hoopskirt::3784g"], 
                    Entity["Concept", "HighBar::n5222"], 
                    Entity["Concept", "Horse-cart::546b9"], 
                    Entity["Concept", "Hourglass::83jnz"], 
                    Entity["Concept", "IPod::366dw"], 
                    Entity["Concept", "SmoothingIron::274h7"], 
                    Entity["Concept", "Jack-o-lantern::yss6v"], 
                    Entity["Concept", "BlueJean::68hww"], 
                    Entity["Concept", "Jeep::5twmt"], 
                    Entity["Concept", "TeeShirt::nk5bs"], 
                    Entity["Concept", "JigsawPuzzle::jgp79"], 
                    Entity["Concept", "Jinrikisha::g7j7m"], 
                    Entity["Concept", "Joystick::nj32z"], 
                    Entity["Concept", "Kimono::284nv"], 
                    Entity["Concept", "KneePad::nh7y5"], 
                    Entity["Concept", "Knot::f4x5y"], 
                    Entity["Concept", "LabCoat::6fg55"], 
                    Entity["Concept", "Ladle::3m7q7"], 
                    Entity["Concept", "LampShade::4b824"], 
                    Entity["Concept", "Laptop::zdd33"], 
                    Entity["Concept", "LawnMower::z97p3"], 
                    Entity["Concept", "LensCap::6j259"], 
                    Entity["Concept", "LetterOpener::sx79v"], 
                    Entity["Concept", "Library::8855f"], 
                    Entity["Concept", "Lifeboat::3r554"], 
                    Entity["Concept", "Igniter::638td"], 
                    Entity["Concept", "Limo::jfrr3"], 
                    Entity["Concept", "OceanLiner::s5fxp"], 
                    Entity["Concept", "LipRouge::4vd22"], 
                    Entity["Concept", "Loafer::br9fk"], 
                    Entity["Concept", "Lotion::79h3v"], 
                    Entity["Concept", "Loudspeaker::44d64"], 
                    Entity["Concept", "JewelersLoupe::kg4bc"], 
                    Entity["Concept", "Lumbermill::94r3y"], 
                    Entity["Concept", "MagneticCompass::5r692"], 
                    Entity["Concept", "Postbag::ck37r"], 
                    Entity["Concept", "LetterBox::pccp7"], 
                    Entity["Concept", "Maillot::d8grj"], 
                    Entity["Concept", "TankSuit::5k74s"], 
                    Entity["Concept", "ManholeCover::4x7fq"], 
                    Entity["Concept", "Maraca::395nq"], 
                    Entity["Concept", "Marimba::kbbq5"], 
                    Entity["Concept", "Mask::798jz"], 
                    Entity["Concept", "Matchstick::266wm"], 
                    Entity["Concept", "Maypole::qc3qr"], 
                    Entity["Concept", "Labyrinth::gc6rg"], 
                    Entity["Concept", "MeasuringCup::7b637"], 
                    Entity["Concept", "MedicineCabinet::m9g7m"], 
                    Entity["Concept", "Megalith::753z9"], 
                    Entity["Concept", "Microphone::7bqww"], 
                    Entity["Concept", "MicrowaveOven::fs7tb"], 
                    Entity["Concept", "MilitaryUniform::r9626"], 
                    Entity["Concept", "MilkCan::d9g72"], 
                    Entity["Concept", "Minibus::y94d9"], 
                    Entity["Concept", "Mini::pn78q"], 
                    Entity["Concept", "Minivan::yfsj9"], 
                    Entity["Concept", "Missile::854m6"], 
                    Entity["Concept", "Mitten::7d534"], 
                    Entity["Concept", "MixingBowl::djy62"], 
                    Entity["Concept", "ManufacturedHome::d7czj"], 
                    Entity["Concept", "ModelT::c44dv"], 
                    Entity["Concept", "Modem::wq8j3"], 
                    Entity["Concept", "Monastery::mkgg8"], 
                    Entity["Concept", "Monitor::nh8d4"], 
                    Entity["Concept", "Moped::p85wp"], 
                    Entity["Concept", "Mortar::jz37q"], 
                    Entity["Concept", "Mortarboard::8r99w"], 
                    Entity["Concept", "Mosque::35k94"], 
                    Entity["Concept", "MosquitoNet::5z562"], 
                    Entity["Concept", "MotorScooter::bbwp9"], 
                    Entity["Concept", "All-terrainBike::7n976"], 
                    Entity["Concept", "MountainTent::k5s7y"], 
                    Entity["Concept", "ComputerMouse::kbzr4"], 
                    Entity["Concept", "Mousetrap::j8542"], 
                    Entity["Concept", "MovingVan::2s387"], 
                    Entity["Concept", "Muzzle::c7f4q"], 
                    Entity["Concept", "Nail::x2828"], 
                    Entity["Concept", "NeckBrace::hxh4p"], 
                    Entity["Concept", "Necklace::58n8w"], 
                    Entity["Concept", "Nipple::jfzc3"], 
                    Entity["Concept", "NotebookComputer::b3h64"], 
                    Entity["Concept", "Obelisk::s7vg6"], 
                    Entity["Concept", "Hautbois::937r3"], 
                    Entity["Concept", "Ocarina::zc9mv"], 
                    Entity["Concept", "Hodometer::jw6kb"], 
                    Entity["Concept", "OilFilter::d8chh"], 
                    Entity["Concept", "PipeOrgan::gq9sr"], 
                    Entity["Concept", "Cathode-rayOscilloscope::z4q77"], 
                    Entity["Concept", "Overskirt::n87sx"], 
                    Entity["Concept", "Oxcart::vwjn2"], 
                    Entity["Concept", "OxygenMask::4k479"], 
                    Entity["Concept", "Packet::r63y2"], 
                    Entity["Concept", "BoatPaddle::843sz"], 
                    Entity["Concept", "PaddleWheel::c59g3"], 
                    Entity["Concept", "Padlock::73c99"], 
                    Entity["Concept", "Paintbrush::2456k"], 
                    Entity["Concept", "Jammies::5vhcb"], 
                    Entity["Concept", "Palace::3556d"], 
                    Entity["Concept", "PandeanPipe::gjck2"], 
                    Entity["Concept", "PaperTowel::j7j8m"], 
                    Entity["Concept", "Parachute::k594d"], 
                    Entity["Concept", "Bars::3m828"], 
                    Entity["Concept", "ParkBench::hq98s"], 
                    Entity["Concept", "ParkingMeter::h445p"], 
                    Entity["Concept", "PassengerCar::b7xgp"], 
                    Entity["Concept", "Patio::65kf2"], 
                    Entity["Concept", "Pay-phone::4h2kc"], 
                    Entity["Concept", "Footstall::b89vf"], 
                    Entity["Concept", "PencilBox::977v9"], 
                    Entity["Concept", "PencilSharpener::23nv4"], 
                    Entity["Concept", "Essence::9m7fx"], 
                    Entity["Concept", "PetriDish::xt977"], 
                    Entity["Concept", "Photocopier::33g75"], 
                    Entity["Concept", "Plectron::5g596"], 
                    Entity["Concept", "Pickelhaube::pgr6y"], 
                    Entity["Concept", "Paling::2brd3"], 
                    Entity["Concept", "PickupTruck::9k58n"], 
                    Entity["Concept", "Pier::36y3h"], 
                    Entity["Concept", "PennyBank::78b56"], 
                    Entity["Concept", "PillBottle::r9pdj"], 
                    Entity["Concept", "Pillow::3y32w"], 
                    Entity["Concept", "Ping-pongBall::3vdwp"], 
                    Entity["Concept", "Pinwheel::85td5"], 
                    Entity["Concept", "PirateShip::386k8"], 
                    Entity["Concept", "Ewer::w6672"], 
                    Entity["Concept", "CarpentersPlane::287kt"], 
                    Entity["Concept", "Planetarium::kq5yg"], 
                    Entity["Concept", "PlasticBag::9x453"], 
                    Entity["Concept", "PlateRack::sxt2r"], 
                    Entity["Concept", "Plough::y6c4t"], 
                    Entity["Concept", "PlumbersHelper::hq4m2"], 
                    Entity["Concept", "PolaroidCamera::38q9k"], 
                    Entity["Concept", "Pole::c4566"], 
                    Entity["Concept", "BlackMaria::5jn8v"], 
                    Entity["Concept", "Poncho::tr389"], 
                    Entity["Concept", "BilliardTable::9c56d"], 
                    Entity["Concept", "PopBottle::6243b"], 
                    Entity["Concept", "Flowerpot::jjb26"], 
                    Entity["Concept", "PottersWheel::zwt32"], 
                    Entity["Concept", "PowerDrill::j44yg"], 
                    Entity["Concept", "PrayerMat::x6rjb"], 
                    Entity["Concept", "Printer::c4244"], 
                    Entity["Concept", "Prison::rsq7c"], 
                    Entity["Concept", "Missile::n28m6"], 
                    Entity["Concept", "Projector::d56q9"], 
                    Entity["Concept", "HockeyPuck::3hj3q"], 
                    Entity["Concept", "PunchBag::wm5qg"], 
                    Entity["Concept", "Purse::n57jd"], 
                    Entity["Concept", "QuillPen::jm57s"], 
                    Entity["Concept", "Quilt::f56w9"], 
                    Entity["Concept", "RaceCar::9m8p9"], 
                    Entity["Concept", "Racquet::53f72"], 
                    Entity["Concept", "Radiator::3959j"], 
                    Entity["Concept", "Radio::8p736"], 
                    Entity["Concept", "RadioReflector::55ckr"], 
                    Entity["Concept", "RainBarrel::65nkh"], 
                    Entity["Concept", "RecreationalVehicle::p93tb"], 
                    Entity["Concept", "Reel::v4rgf"], 
                    Entity["Concept", "ReflexCamera::j67h4"], 
                    Entity["Concept", "Icebox::tnkd4"], 
                    Entity["Concept", "Remote::h4drx"], 
                    Entity["Concept", "Eatery::f73dy"], 
                    Entity["Concept", "Six-gun::ctqb6"], 
                    Entity["Concept", "Rifle::x7pp3"], 
                    Entity["Concept", "RockingChair::ncpd5"], 
                    Entity["Concept", "Rotisserie::c8hjy"], 
                    Entity["Concept", "PencilEraser::7y7dd"], 
                    Entity["Concept", "RugbyBall::34tbp"], 
                    Entity["Concept", "Rule::shrw6"], 
                    Entity["Concept", "RunningShoe::z7fvm"], 
                    Entity["Concept", "Safe::36p67"], 
                    Entity["Concept", "SafetyPin::8h4m3"], 
                    Entity["Concept", "SaltShaker::7k48t"], 
                    Entity["Concept", "Sandal::7f3xr"], 
                    Entity["Concept", "Sarong::96j5v"], 
                    Entity["Concept", "Sax::v45s9"], 
                    Entity["Concept", "Scabbard::77z36"], 
                    Entity["Concept", "WeighingMachine::2xvy7"], 
                    Entity["Concept", "SchoolBus::2983r"], 
                    Entity["Concept", "Schooner::f2t26"], 
                    Entity["Concept", "Scoreboard::z76vk"], 
                    Entity["Concept", "CRTScreen::q6vr6"], 
                    Entity["Concept", "Screw::wwzc4"], 
                    Entity["Concept", "Screwdriver::8ty86"], 
                    Entity["Concept", "SeatBelt::4qg32"], 
                    Entity["Concept", "SewingMachine::23c46"], 
                    Entity["Concept", "Buckler::4m7zq"], 
                    Entity["Concept", "Shoe-shop::7ds48"], 
                    Entity["Concept", "Shoji::x95jt"], 
                    Entity["Concept", "ShoppingBasket::db865"], 
                    Entity["Concept", "ShoppingCart::95g62"], 
                    Entity["Concept", "Shovel::tjpz7"], 
                    Entity["Concept", "ShowerCap::2787m"], 
                    Entity["Concept", "ShowerCurtain::6cs25"], 
                    Entity["Concept", "Ski::5nbj2"], 
                    Entity["Concept", "SkiMask::6hd4m"], 
                    Entity["Concept", "SleepingBag::549k4"], 
                    Entity["Concept", "SlideRule::59p96"], 
                    Entity["Concept", "SlidingDoor::m65qk"], 
                    Entity["Concept", "One-armedBandit::573v8"], 
                    Entity["Concept", "Snorkel::53ncf"], 
                    Entity["Concept", "Snowmobile::y538p"], 
                    Entity["Concept", "Snowplough::h36y5"], 
                    Entity["Concept", "SoapDispenser::c2fjc"], 
                    Entity["Concept", "SoccerBall::25w42"], 
                    Entity["Concept", "Sock::8w379"], 
                    Entity["Concept", "SolarCollector::pw2xw"], 
                    Entity["Concept", "Sombrero::k9893"], 
                    Entity["Concept", "SoupBowl::w86pk"], 
                    Entity["Concept", "SpaceBar::735sr"], 
                    Entity["Concept", "SpaceHeater::spt23"], 
                    Entity["Concept", "SpaceShuttle::72jnc"], 
                    Entity["Concept", "Spatula::r7876"], 
                    Entity["Concept", "Speedboat::r6p4f"], 
                    Entity["Concept", "SpidersWeb::28fz6"], 
                    Entity["Concept", "Spindle::7zh9v"], 
                    Entity["Concept", "SportCar::k9874"], 
                    Entity["Concept", "Spot::q3792"], 
                    Entity["Concept", "Stage::86r83"], 
                    Entity["Concept", "SteamLocomotive::9kv4y"], 
                    Entity["Concept", "SteelArchBridge::46zx5"], 
                    Entity["Concept", "SteelDrum::fqv7s"], 
                    Entity["Concept", "Stethoscope::f829c"], 
                    Entity["Concept", "Stole::g8fqc"], 
                    Entity["Concept", "StoneWall::8489j"], 
                    Entity["Concept", "StopWatch::4vk6s"], 
                    Entity["Concept", "Stove::27vm8"], 
                    Entity["Concept", "Strainer::2c2kx"], 
                    Entity["Concept", "Streetcar::vhm65"], 
                    Entity["Concept", "Stretcher::74r96"], 
                    Entity["Concept", "DayBed::nrph3"], 
                    Entity["Concept", "Stupa::g64q6"], 
                    Entity["Concept", "Pigboat::p7yyy"], 
                    Entity["Concept", "SuitOfClothes::5c67x"], 
                    Entity["Concept", "Sundial::7mj6d"], 
                    Entity["Concept", "Sunglass::xc3yz"], 
                    Entity["Concept", "DarkGlasses::855bw"], 
                    Entity["Concept", "Sunblock::65k7n"], 
                    Entity["Concept", "SuspensionBridge::66qcg"], 
                    Entity["Concept", "Mop::v6xdr"], 
                    Entity["Concept", "Sweatshirt::s5937"], 
                    Entity["Concept", "BathingTrunks::c892w"], 
                    Entity["Concept", "Swing::s5b96"], 
                    Entity["Concept", "ElectricalSwitch::5gnjt"], 
                    Entity["Concept", "Syringe::8j57r"], 
                    Entity["Concept", "TableLamp::6239m"], 
                    Entity["Concept", "ArmoredCombatVehicle::353r5"], 
                    Entity["Concept", "TapePlayer::bf5f8"], 
                    Entity["Concept", "Teapot::c54x7"], 
                    Entity["Concept", "TeddyBear::f56q9"], 
                    Entity["Concept", "TelevisionSystem::5593b"], 
                    Entity["Concept", "TennisBall::xk58h"], 
                    Entity["Concept", "ThatchedRoof::w2cjw"], 
                    Entity["Concept", "TheaterCurtain::5kbhk"], 
                    Entity["Concept", "Thimble::9828b"], 
                    Entity["Concept", "ThreshingMachine::372m3"], 
                    Entity["Concept", "Throne::2t9q6"], 
                    Entity["Concept", "TileRoof::5p749"], 
                    Entity["Concept", "Toaster::rp6v2"], 
                    Entity["Concept", "TobacconistShop::88ncg"], 
                    Entity["Concept", "ToiletSeat::z8wvq"], 
                    Entity["Concept", "Torch::j9rg7"], 
                    Entity["Concept", "TotemPole::gbxn5"], 
                    Entity["Concept", "TowCar::ph6vn"], 
                    Entity["Concept", "Toyshop::74q74"], 
                    Entity["Concept", "Tractor::39j62"], 
                    Entity["Concept", "ArticulatedLorry::ph66j"], 
                    Entity["Concept", "Tray::jyx2n"], 
                    Entity["Concept", "TrenchCoat::rq833"], 
                    Entity["Concept", "Tricycle::3537s"], 
                    Entity["Concept", "Trimaran::2639q"], 
                    Entity["Concept", "Tripod::pqth2"], 
                    Entity["Concept", "TriumphalArch::q79sh"], 
                    Entity["Concept", "TracklessTrolley::78g52"], 
                    Entity["Concept", "Trombone::22z3w"], 
                    Entity["Concept", "Vat::vcpt8"], 
                    Entity["Concept", "Turnstile::82gr4"], 
                    Entity["Concept", "TypewriterKeyboard::z8334"], 
                    Entity["Concept", "Umbrella::3mntq"], 
                    Entity["Concept", "Monocycle::mrm29"], 
                    Entity["Concept", "UprightPiano::286t3"], 
                    Entity["Concept", "VacuumCleaner::7rg56"], 
                    Entity["Concept", "Vase::4x594"], 
                    Entity["Concept", "Vault::7k875"], 
                    Entity["Concept", "Velvet::575z6"], 
                    Entity["Concept", "VendingMachine::96kgg"], 
                    Entity["Concept", "Vestment::334y8"], 
                    Entity["Concept", "Viaduct::p32mt"], 
                    Entity["Concept", "Fiddle::q9djd"], 
                    Entity["Concept", "Volleyball::q7bkw"], 
                    Entity["Concept", "WaffleIron::gpqx8"], 
                    Entity["Concept", "WallClock::w5687"], 
                    Entity["Concept", "Billfold::z7845"], 
                    Entity["Concept", "Closet::588p6"], 
                    Entity["Concept", "MilitaryPlane::whx2r"], 
                    Entity["Concept", "Handbasin::6w875"], 
                    Entity["Concept", "AutomaticWasher::6d32z"], 
                    Entity["Concept", "WaterBottle::5wh67"], 
                    Entity["Concept", "WaterJug::759dt"], 
                    Entity["Concept", "WaterTower::4rr5d"], 
                    Entity["Concept", "WhiskeyJug::5gcrh"], 
                    Entity["Concept", "Whistle::pv275"], 
                    Entity["Concept", "Wig::9msqy"], 
                    Entity["Concept", "WindowScreen::wfk7m"], 
                    Entity["Concept", "WindowShade::3rh75"], 
                    Entity["Concept", "WindsorTie::5tt62"], 
                    Entity["Concept", "WineBottle::g4m78"], 
                    Entity["Concept", "Wing::tbhz7"], 
                    Entity["Concept", "Wok::fv9fj"], 
                    Entity["Concept", "WoodenSpoon::nc2wp"], 
                    Entity["Concept", "Woolen::ns82d"], 
                    Entity["Concept", "SnakeFence::837z2"], 
                    Entity["Concept", "Wreck::qr554"], 
                    Entity["Concept", "Yawl::hggp6"], 
                    Entity["Concept", "Yurt::4bbtv"], 
                    Entity["Concept", "InternetSite::639pp"], 
                    Entity["Concept", "ComicBook::ty3qz"], 
                    Entity["Concept", "Crossword::yqtk6"], 
                    Entity["Concept", "StreetSign::ysx2f"], 
                    Entity["Concept", "TrafficLight::b4966"], 
                    Entity["Concept", "BookJacket::sy4d3"], 
                    Entity["Concept", "Menu::g698m"], 
                    Entity["Concept", "Plate::2244k"], 
                    Entity["Concept", "Guacamole::xc482"], 
                    Entity["Concept", "Consomme::37g8f"], 
                    Entity["Concept", "HotPot::kgb8q"], 
                    Entity["Concept", "Trifle::b4264"], 
                    Entity["Concept", "IceCream::825yn"], 
                    Entity["Concept", "IceLolly::473v3"], 
                    Entity["Concept", "FrenchLoaf::x859t"], 
                    Entity["Concept", "Bagel::x38n5"], 
                    Entity["Concept", "Pretzel::967k7"], 
                    Entity["Concept", "Cheeseburger::3z2z7"], 
                    Entity["Concept", "RedHot::3j848"], 
                    Entity["Concept", "MashedPotato::8ys8w"], 
                    Entity["Concept", "HeadCabbage::9c693"], 
                    Entity["Concept", "Broccoli::spbm9"], 
                    Entity["Concept", "Cauliflower::fmp3m"], 
                    Entity["Concept", "Courgette::44yb5"], 
                    Entity["Concept", "SpaghettiSquash::8j979"], 
                    Entity["Concept", "AcornSquash::8p8y2"], 
                    Entity["Concept", "ButternutSquash::6k466"], 
                    Entity["Concept", "Cuke::nzfb2"], 
                    Entity["Concept", "Artichoke::ntvv7"], 
                    Entity["Concept", "BellPepper::9w646"], 
                    Entity["Concept", "Cardoon::s78dn"], 
                    Entity["Concept", "Mushroom::3xw4j"], 
                    Entity["Concept", "GrannySmith::k3786"], 
                    Entity["Concept", "Strawberry::3csyb"], 
                    Entity["Concept", "Orange::w579d"], 
                    Entity["Concept", "Lemon::743j2"], 
                    Entity["Concept", "Fig::d3p6f"], 
                    Entity["Concept", "Ananas::m6nzv"], 
                    Entity["Concept", "Banana::f6z73"], 
                    Entity["Concept", "Jak::p6r56"], 
                    Entity["Concept", "CustardApple::nx482"], 
                    Entity["Concept", "Pomegranate::dh736"], 
                    Entity["Concept", "Hay::vcd3m"], 
                    Entity["Concept", "Carbonara::9my37"], 
                    Entity["Concept", "ChocolateSauce::y5838"], 
                    Entity["Concept", "Dough::8x86g"], 
                    Entity["Concept", "MeatLoaf::t7nnp"], 
                    Entity["Concept", "Pizza::56w88"], 
                    Entity["Concept", "Potpie::38zh5"], 
                    Entity["Concept", "Burrito::4xwy5"], 
                    Entity["Concept", "RedWine::666g6"], 
                    Entity["Concept", "Espresso::rv2y4"], 
                    Entity["Concept", "Cup::q9zjy"], 
                    Entity["Concept", "Eggnog::9v7t8"], 
                    Entity["Concept", "Alp::m4bkv"], 
                    Entity["Concept", "Bubble::qp224"], 
                    Entity["Concept", "Cliff::q56fy"], 
                    Entity["Concept", "CoralReef::669j5"], 
                    Entity["Concept", "Geyser::5w69b"], 
                    Entity["Concept", "Lakeshore::4483j"], 
                    Entity["Concept", "Headland::8n9c9"], 
                    Entity["Concept", "SandBar::4w689"], 
                    Entity["Concept", "Sea-coast::m3d85"], 
                    Entity["Concept", "Vale::88wm8"], 
                    Entity["Concept", "Volcano::9fcbc"], 
                    Entity["Concept", "Ballplayer::7v976"], 
                    Entity["Concept", "Bridegroom::85m28"], 
                    Entity["Concept", "ScubaDiver::kqb95"], 
                    Entity["Concept", "Rapeseed::5x738"], 
                    Entity["Concept", "Daisy::hypz2"], 
                    Entity["Concept", "CypripediumCalceolus::7tzrs"], 
                    Entity["Concept", "Corn::m7hpj"], 
                    Entity["Concept", "Acorn::f62cf"], 
                    Entity["Concept", "RoseHip::333d2"], 
                    Entity["Concept", "Conker::v8p64"], 
                    Entity["Concept", "CoralFungus::f7fp4"], 
                    Entity["Concept", "Agaric::844w2"], 
                    Entity["Concept", "Gyromitra::3v4zb"], 
                    Entity["Concept", "CarrionFungus::wj2ng"], 
                    Entity["Concept", "Earthstar::678m7"], 
                    Entity["Concept", "GrifolaFrondosa::m7rxd"], 
                    Entity["Concept", "Bolete::9g3s2"], 
                    Entity["Concept", "Capitulum::834z6"], 
                    Entity["Concept", "BathroomTissue::ts4sr"]}, "Dimensions" -> 
                  1000], 
                 NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]]]], 
            NeuralNetworks`Private`NetChain`opart, 
            NeuralNetworks`Private`NetChain`part, 
            NeuralNetworks`Private`NetChain`selected = Null}, 
            DynamicBox[GridBox[{{
                NeuralNetworks`Private`NetChain`MouseClickBoxes[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"3\"", "\"227\"", 
                    "\"227\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"113\"", 
                    "\"113\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu_conv1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu_conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu_conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"113\"", 
                    "\"113\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu_conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"56\"", "\"56\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"fire2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fire2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fire2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"128\"", "\"56\"", 
                    "\"56\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "fire2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"fire3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fire3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fire3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"128\"", "\"56\"", 
                    "\"56\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "fire3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool3_pad\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool3_pad"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PaddingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool3_pad"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"128\"", "\"57\"", 
                    "\"57\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool3_pad"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"128\"", "\"28\"", 
                    "\"28\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"fire4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fire4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fire4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"256\"", "\"28\"", 
                    "\"28\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "fire4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"fire5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fire5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fire5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"256\"", "\"28\"", 
                    "\"28\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "fire5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool5_pad\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool5_pad"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PaddingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool5_pad"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"256\"", "\"29\"", 
                    "\"29\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool5_pad"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"256\"", "\"14\"", 
                    "\"14\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"fire6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fire6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fire6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"384\"", "\"14\"", 
                    "\"14\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "fire6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"fire7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fire7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fire7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"384\"", "\"14\"", 
                    "\"14\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "fire7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"fire8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fire8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fire8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"512\"", "\"14\"", 
                    "\"14\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "fire8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"fire9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fire9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fire9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"512\"", "\"14\"", 
                    "\"14\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "fire9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"drop9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"512\"", "\"14\"", 
                    "\"14\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "drop9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1000\"", "\"14\"", 
                    "\"14\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu_conv10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu_conv10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu_conv10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1000\"", "\"14\"", 
                    "\"14\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu_conv10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["AggregationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1000\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"flatten\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1000\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"probabilities\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "probabilities"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "probabilities"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1000\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "probabilities"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                 If[
                  ListQ[
                  NeuralNetworks`Private`NetChain`part = MouseAnnotation[]], 
                  If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
               NeuralNetworks`Private`NetChain`fmtSelected[
               NeuralNetworks`Private`NetChain`selected, 
                NeuralNetworks`Private`NetChain`part]}, 
              GridBoxSpacings -> {"Columns" -> {{1}}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}],
             ImageSizeCache->{433., {233., 241.}},
             TrackedSymbols:>{NeuralNetworks`Private`NetChain`selected}],
            Initialization:>{NetChain}],
           BaselinePosition->Automatic], "]"}]}],
        False],
       Deploy],
      LineBreakWithin->False],
     StandardForm],
    StandardForm,
    Editable->True], ",", 
   TagBox[
    FormBox[
     TagBox[GridBox[{
        {"\<\"\"\>", "\<\"input\"\>", 
         TagBox[GridBox[{
            {"\<\"image\"\>"},
            {
             TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
                
                TemplateBox[{
                 "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                  "\" \"", 
                  
                  TemplateBox[{
                   "\[Times]", "\"\[Times]\"", "\"3\"", "\"227\"", "\"227\""},
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                 "RowDefault"], 
                GrayLevel[0.5], StripOnInput -> False]},
              "RowDefault"]}
           },
           BaselinePosition->2,
           DefaultBaseStyle->"Column",
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"]},
        {
         StyleBox["\<\"conv1\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"convolution\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"64\"", "\"113\"", "\"113\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"relu_conv1\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], 
         TagBox[
          FormBox["\<\"ReLU\"\>",
           TraditionalForm],
          TraditionalForm,
          Editable->True], 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"64\"", "\"113\"", "\"113\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"pool1\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"pooling\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"64\"", "\"56\"", "\"56\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"fire2\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"subnetwork\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"128\"", "\"56\"", "\"56\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"fire3\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"subnetwork\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"128\"", "\"56\"", "\"56\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"pool3_pad\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"padding\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"128\"", "\"57\"", "\"57\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"pool3\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"pooling\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"128\"", "\"28\"", "\"28\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"fire4\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"subnetwork\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"256\"", "\"28\"", "\"28\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"fire5\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"subnetwork\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"256\"", "\"28\"", "\"28\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"pool5_pad\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"padding\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"256\"", "\"29\"", "\"29\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"pool5\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"pooling\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"256\"", "\"14\"", "\"14\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"fire6\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"subnetwork\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"384\"", "\"14\"", "\"14\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"fire7\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"subnetwork\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"384\"", "\"14\"", "\"14\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"fire8\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"subnetwork\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"512\"", "\"14\"", "\"14\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"fire9\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"subnetwork\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"512\"", "\"14\"", "\"14\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"drop9\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"dropout\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"512\"", "\"14\"", "\"14\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"conv10\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"convolution\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"1000\"", "\"14\"", "\"14\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"relu_conv10\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], 
         TagBox[
          FormBox["\<\"ReLU\"\>",
           TraditionalForm],
          TraditionalForm,
          Editable->True], 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"1000\"", "\"14\"", "\"14\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"pool10\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"aggregation\"\>", 
         TemplateBox[{"\"vector\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1000\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"flatten\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"flatten\"\>", 
         TemplateBox[{"\"vector\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1000\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"probabilities\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"softmax\"\>", 
         TemplateBox[{"\"vector\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1000\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>", "\<\"output\"\>", "\<\"class\"\>"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {{1.1}}}],
      "Grid"],
     TraditionalForm],
    TraditionalForm,
    Editable->True], ",", "21"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7004638790416784`*^9, {3.700464062279831*^9, 3.700464086435211*^9}, 
   3.7004641413800116`*^9, 3.7004641814789705`*^9, 3.7004643121035357`*^9, 
   3.700464444209514*^9, 3.700469972233971*^9, {3.7004736791183443`*^9, 
   3.700473684374058*^9}},ExpressionUUID->"198d0999-62f5-43b9-a485-\
14affe4c40b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"net", "=", 
   RowBox[{
   "NetModel", "[", 
    "\"\<Inception V3 Trained on ImageNet Competition Data\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"StandardForm", "@", "net"}], ",", 
   RowBox[{"TraditionalForm", "@", "net"}], ",", 
   RowBox[{"Length", "@", 
    RowBox[{"Normal", "@", "net"}]}]}], "}"}]}], "Input",
 CellChangeTimes->{3.7004641731822042`*^9, 
  3.7004643032910604`*^9},ExpressionUUID->"85b05579-ff66-4482-9e7d-\
81389fc27ee6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    FormBox[
     StyleBox[
      TagBox[
       TagBox[
        RowBox[{"NetChain", 
         RowBox[{"[", 
          PanelBox[
           
           DynamicModuleBox[{NeuralNetworks`Private`NetChain`assoc3 = 
            Association[
            "Type" -> "Chain", "Nodes" -> 
             Association[
              "conv_conv2d" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{32, 3, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                 Association[
                  "OutputChannels" -> 32, "KernelSize" -> {3, 3}, 
                   "Stride" -> {2, 2}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 3, "$GroupNumber" -> 1, 
                   "$InputSize" -> {299, 299}, "$OutputSize" -> {149, 149}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{3, 299, 299}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{32, 149, 149}, 
                    NeuralNetworks`RealT]]], "conv_batchnorm" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], "Beta" -> 
                   NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                   "MovingVariance" -> 
                   NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 32, 
                   "$Shape" -> 
                   NeuralNetworks`TensorT[{32, 149, 149}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{32, 149, 149}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{32, 149, 149}, 
                    NeuralNetworks`RealT]]], "conv_relu" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {32, 149, 149}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{32, 149, 149}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{32, 149, 149}, 
                    NeuralNetworks`RealT]]], "conv_1_conv2d" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{32, 32, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                 Association[
                  "OutputChannels" -> 32, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 32, "$GroupNumber" -> 1, 
                   "$InputSize" -> {149, 149}, "$OutputSize" -> {147, 147}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{32, 149, 149}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{32, 147, 147}, 
                    NeuralNetworks`RealT]]], "conv_1_batchnorm" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], "Beta" -> 
                   NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                   "MovingVariance" -> 
                   NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 32, 
                   "$Shape" -> 
                   NeuralNetworks`TensorT[{32, 147, 147}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{32, 147, 147}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{32, 147, 147}, 
                    NeuralNetworks`RealT]]], "conv_1_relu" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {32, 147, 147}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{32, 147, 147}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{32, 147, 147}, 
                    NeuralNetworks`RealT]]], "conv_2_conv2d" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{64, 32, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                 Association[
                  "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 32, "$GroupNumber" -> 1, 
                   "$InputSize" -> {147, 147}, "$OutputSize" -> {147, 147}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{32, 147, 147}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 147, 147}, 
                    NeuralNetworks`RealT]]], "conv_2_batchnorm" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], "Beta" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                   "MovingVariance" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 64, 
                   "$Shape" -> 
                   NeuralNetworks`TensorT[{64, 147, 147}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 147, 147}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 147, 147}, 
                    NeuralNetworks`RealT]]], "conv_2_relu" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {64, 147, 147}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 147, 147}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 147, 147}, 
                    NeuralNetworks`RealT]]], "pool" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                   "PaddingSize" -> {0, 0}, "Function" -> Max, 
                   "Dimensionality" -> 2, "Channels" -> 64, 
                   "$InputSize" -> {147, 147}, "$OutputSize" -> {73, 73}, 
                   "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 147, 147}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 73, 73}, 
                    NeuralNetworks`RealT]]], "conv_3_conv2d" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{80, 64, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                 Association[
                  "OutputChannels" -> 80, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 64, "$GroupNumber" -> 1, 
                   "$InputSize" -> {73, 73}, "$OutputSize" -> {73, 73}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 73, 73}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{80, 73, 73}, 
                    NeuralNetworks`RealT]]], "conv_3_batchnorm" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{80}, NeuralNetworks`RealT], "Beta" -> 
                   NeuralNetworks`TensorT[{80}, NeuralNetworks`RealT], 
                   "MovingVariance" -> 
                   NeuralNetworks`TensorT[{80}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{80}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 80, 
                   "$Shape" -> 
                   NeuralNetworks`TensorT[{80, 73, 73}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{80, 73, 73}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{80, 73, 73}, 
                    NeuralNetworks`RealT]]], "conv_3_relu" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {80, 73, 73}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{80, 73, 73}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{80, 73, 73}, 
                    NeuralNetworks`RealT]]], "conv_4_conv2d" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{192, 80, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                 Association[
                  "OutputChannels" -> 192, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 80, "$GroupNumber" -> 1, 
                   "$InputSize" -> {73, 73}, "$OutputSize" -> {71, 71}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{80, 73, 73}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 71, 71}, 
                    NeuralNetworks`RealT]]], "conv_4_batchnorm" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 192, 
                   "$Shape" -> 
                   NeuralNetworks`TensorT[{192, 71, 71}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 71, 71}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 71, 71}, 
                    NeuralNetworks`RealT]]], "conv_4_relu" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {192, 71, 71}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 71, 71}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 71, 71}, 
                    NeuralNetworks`RealT]]], "pool1" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                   "PaddingSize" -> {0, 0}, "Function" -> Max, 
                   "Dimensionality" -> 2, "Channels" -> 192, 
                   "$InputSize" -> {71, 71}, "$OutputSize" -> {35, 35}, 
                   "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 71, 71}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 35, 35}, 
                    NeuralNetworks`RealT]]], "Inception1" -> 
               Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{256, 35, 35}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "mixed_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 192, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {35, 35}, "$OutputSize" -> {35, 35}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 64, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 35, 35}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_tower_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{48, 192, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 48, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {35, 35}, "$OutputSize" -> {35, 35}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_tower_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{48}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 48, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{48, 35, 35}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_tower_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {48, 35, 35}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_tower_conv_1_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 48, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 48, "$GroupNumber" -> 1, 
                    "$InputSize" -> {35, 35}, "$OutputSize" -> {35, 35}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_tower_conv_1_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 64, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_tower_conv_1_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 35, 35}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_tower_1_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 192, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {35, 35}, "$OutputSize" -> {35, 35}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_tower_1_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 64, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_tower_1_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 35, 35}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_tower_1_conv_1_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {35, 35}, "$OutputSize" -> {35, 35}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_tower_1_conv_1_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 96, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_tower_1_conv_1_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 35, 35}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_tower_1_conv_2_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 96, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 96, "$GroupNumber" -> 1, 
                    "$InputSize" -> {35, 35}, "$OutputSize" -> {35, 35}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_tower_1_conv_2_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 96, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_tower_1_conv_2_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 35, 35}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]]], "avg_pool_mixed_pool" -> 
                   Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "Channels" -> 192, 
                    "$InputSize" -> {35, 35}, "$OutputSize" -> {35, 35}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_tower_2_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{32, 192, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 32, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {35, 35}, "$OutputSize" -> {35, 35}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_tower_2_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "Beta" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 32, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{32, 35, 35}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_tower_2_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32, 35, 35}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 35, 35}, 
                    NeuralNetworks`RealT]]], "ch_concat_mixed_chconcat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{32, 35, 35}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{256, 35, 35}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{32, 35, 35}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 35, 35}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath[
                    "Nodes", "mixed_conv_batchnorm", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_conv_conv2d", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_conv_batchnorm", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_conv_batchnorm", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_conv_conv2d", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_conv_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_conv_1_conv2d", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_conv_relu", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_conv_1_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_conv_1_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_conv_1_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_conv_1_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_1_conv_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_1_conv_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_1_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_1_conv_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_1_conv_1_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_1_conv_relu", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_1_conv_1_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_1_conv_1_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_1_conv_1_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_1_conv_1_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_1_conv_2_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_1_conv_1_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_1_conv_2_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_1_conv_2_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_1_conv_2_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_1_conv_2_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_2_conv_conv2d", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_pool_mixed_pool", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_2_conv_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_2_conv_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_2_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_2_conv_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concat_mixed_chconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_conv_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_conv_1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_1_conv_2_relu", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_2_conv_relu", "Outputs", "Output"]},
                    NeuralNetworks`NetPath[
                    "Nodes", "avg_pool_mixed_pool", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_conv_conv2d", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_1_conv_conv2d", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_tower_conv_conv2d", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concat_mixed_chconcat", "Outputs", 
                    "Output"]}], "Inception2" -> 
               Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{256, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{288, 35, 35}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "mixed_1_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 256, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {35, 35}, "$OutputSize" -> {35, 35}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_1_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 64, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_1_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 35, 35}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_1_tower_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{48, 256, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 48, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {35, 35}, "$OutputSize" -> {35, 35}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_1_tower_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{48}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 48, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{48, 35, 35}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_1_tower_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {48, 35, 35}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_1_tower_conv_1_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 48, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 48, "$GroupNumber" -> 1, 
                    "$InputSize" -> {35, 35}, "$OutputSize" -> {35, 35}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_1_tower_conv_1_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 64, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_1_tower_conv_1_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 35, 35}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_1_tower_1_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 256, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {35, 35}, "$OutputSize" -> {35, 35}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_1_tower_1_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 64, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_1_tower_1_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 35, 35}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_1_tower_1_conv_1_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {35, 35}, "$OutputSize" -> {35, 35}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_1_tower_1_conv_1_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 96, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_1_tower_1_conv_1_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 35, 35}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_1_tower_1_conv_2_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 96, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 96, "$GroupNumber" -> 1, 
                    "$InputSize" -> {35, 35}, "$OutputSize" -> {35, 35}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_1_tower_1_conv_2_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 96, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_1_tower_1_conv_2_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 35, 35}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]]], "avg_pool_mixed_1_pool" -> 
                   Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "Channels" -> 256, 
                    "$InputSize" -> {35, 35}, "$OutputSize" -> {35, 35}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_1_tower_2_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 256, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {35, 35}, "$OutputSize" -> {35, 35}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_1_tower_2_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 64, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_1_tower_2_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 35, 35}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "ch_concat_mixed_1_chconcat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{288, 35, 35}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{288, 35, 35}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_conv_batchnorm", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_conv_conv2d", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_conv_batchnorm", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_conv_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_conv_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_conv_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_conv_1_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_conv_relu", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_conv_1_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_conv_1_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_conv_1_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_conv_1_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_1_conv_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_1_conv_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_1_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_1_conv_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_1_conv_1_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_1_conv_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_1_conv_1_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_1_conv_1_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_1_conv_1_relu", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_1_conv_1_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_1_conv_2_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_1_conv_1_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_1_conv_2_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_1_conv_2_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_1_conv_2_relu", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_1_conv_2_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_2_conv_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_pool_mixed_1_pool", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_2_conv_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_2_conv_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_2_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_2_conv_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concat_mixed_1_chconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_conv_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_conv_1_relu", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_1_conv_2_relu", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_2_conv_relu", "Outputs", 
                    "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_pool_mixed_1_pool", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_conv_conv2d", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_1_conv_conv2d", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_1_tower_conv_conv2d", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concat_mixed_1_chconcat", "Outputs", 
                    "Output"]}], "Inception3" -> 
               Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{288, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{288, 35, 35}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "mixed_2_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 288, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 288, "$GroupNumber" -> 1, 
                    "$InputSize" -> {35, 35}, "$OutputSize" -> {35, 35}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{288, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_2_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 64, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_2_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 35, 35}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_2_tower_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{48, 288, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 48, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 288, "$GroupNumber" -> 1, 
                    "$InputSize" -> {35, 35}, "$OutputSize" -> {35, 35}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{288, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_2_tower_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{48}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 48, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{48, 35, 35}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_2_tower_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {48, 35, 35}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_2_tower_conv_1_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 48, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 48, "$GroupNumber" -> 1, 
                    "$InputSize" -> {35, 35}, "$OutputSize" -> {35, 35}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_2_tower_conv_1_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 64, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_2_tower_conv_1_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 35, 35}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_2_tower_1_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 288, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 288, "$GroupNumber" -> 1, 
                    "$InputSize" -> {35, 35}, "$OutputSize" -> {35, 35}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{288, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_2_tower_1_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 64, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_2_tower_1_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 35, 35}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_2_tower_1_conv_1_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {35, 35}, "$OutputSize" -> {35, 35}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_2_tower_1_conv_1_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 96, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_2_tower_1_conv_1_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 35, 35}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_2_tower_1_conv_2_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 96, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 96, "$GroupNumber" -> 1, 
                    "$InputSize" -> {35, 35}, "$OutputSize" -> {35, 35}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_2_tower_1_conv_2_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 96, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_2_tower_1_conv_2_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 35, 35}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]]], "avg_pool_mixed_2_pool" -> 
                   Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "Channels" -> 288, 
                    "$InputSize" -> {35, 35}, "$OutputSize" -> {35, 35}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{288, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{288, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_2_tower_2_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 288, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 288, "$GroupNumber" -> 1, 
                    "$InputSize" -> {35, 35}, "$OutputSize" -> {35, 35}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{288, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_2_tower_2_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 64, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_2_tower_2_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 35, 35}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "ch_concat_mixed_2_chconcat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{288, 35, 35}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{288, 35, 35}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_conv_batchnorm", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_conv_conv2d", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_conv_batchnorm", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_conv_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_conv_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_conv_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_conv_1_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_conv_relu", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_conv_1_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_conv_1_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_conv_1_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_conv_1_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_1_conv_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_1_conv_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_1_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_1_conv_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_1_conv_1_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_1_conv_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_1_conv_1_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_1_conv_1_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_1_conv_1_relu", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_1_conv_1_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_1_conv_2_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_1_conv_1_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_1_conv_2_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_1_conv_2_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_1_conv_2_relu", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_1_conv_2_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_2_conv_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_pool_mixed_2_pool", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_2_conv_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_2_conv_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_2_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_2_conv_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concat_mixed_2_chconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_conv_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_conv_1_relu", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_1_conv_2_relu", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_2_conv_relu", "Outputs", 
                    "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_pool_mixed_2_pool", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_conv_conv2d", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_1_conv_conv2d", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_2_tower_conv_conv2d", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concat_mixed_2_chconcat", "Outputs", 
                    "Output"]}], "Inception4" -> 
               Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{288, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "mixed_3_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{384, 288, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 384, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 288, "$GroupNumber" -> 1, 
                    "$InputSize" -> {35, 35}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{288, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_3_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{384}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 384, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{384, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_3_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {384, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_3_tower_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 288, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 288, "$GroupNumber" -> 1, 
                    "$InputSize" -> {35, 35}, "$OutputSize" -> {35, 35}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{288, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_3_tower_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 64, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_3_tower_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 35, 35}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_3_tower_conv_1_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {35, 35}, "$OutputSize" -> {35, 35}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_3_tower_conv_1_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 96, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_3_tower_conv_1_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 35, 35}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]]], "mixed_3_tower_conv_2_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 96, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 96, "$GroupNumber" -> 1, 
                    "$InputSize" -> {35, 35}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_3_tower_conv_2_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 96, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_3_tower_conv_2_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 17, 17}, 
                    NeuralNetworks`RealT]]], "max_pool_mixed_3_pool" -> 
                   Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Channels" -> 288, 
                    "$InputSize" -> {35, 35}, "$OutputSize" -> {17, 17}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{288, 35, 35}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{288, 17, 17}, 
                    NeuralNetworks`RealT]]], "ch_concat_mixed_3_chconcat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{384, 17, 17}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 17, 17}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{288, 17, 17}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 3, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{384, 17, 17}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 17, 17}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{288, 17, 17}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath[
                    "Nodes", "mixed_3_conv_batchnorm", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_3_conv_conv2d", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_3_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_3_conv_batchnorm", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_3_tower_conv_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_3_tower_conv_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_3_tower_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_3_tower_conv_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_3_tower_conv_1_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_3_tower_conv_relu", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_3_tower_conv_1_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_3_tower_conv_1_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_3_tower_conv_1_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_3_tower_conv_1_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_3_tower_conv_2_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_3_tower_conv_1_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_3_tower_conv_2_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_3_tower_conv_2_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_3_tower_conv_2_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_3_tower_conv_2_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concat_mixed_3_chconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_3_conv_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_3_tower_conv_2_relu", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "max_pool_mixed_3_pool", "Outputs", "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "max_pool_mixed_3_pool", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_3_conv_conv2d", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_3_tower_conv_conv2d", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concat_mixed_3_chconcat", "Outputs", 
                    "Output"]}], "Inception5" -> 
               Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "mixed_4_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 768, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 768, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_4_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 192, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_4_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_4_tower_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 768, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 768, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_4_tower_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 128, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_4_tower_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_4_tower_conv_1_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 1, 7}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 7}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 3}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_4_tower_conv_1_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 128, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_4_tower_conv_1_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_4_tower_conv_2_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 128, 7, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {7, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {3, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_4_tower_conv_2_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 192, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_4_tower_conv_2_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_4_tower_1_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 768, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 768, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_4_tower_1_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 128, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_4_tower_1_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_4_tower_1_conv_1_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 7, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {7, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {3, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_4_tower_1_conv_1_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 128, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_4_tower_1_conv_1_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_4_tower_1_conv_2_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 1, 7}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 7}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 3}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_4_tower_1_conv_2_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 128, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_4_tower_1_conv_2_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_4_tower_1_conv_3_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 7, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {7, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {3, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_4_tower_1_conv_3_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 128, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_4_tower_1_conv_3_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_4_tower_1_conv_4_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 128, 1, 7}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 7}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 3}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_4_tower_1_conv_4_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 192, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_4_tower_1_conv_4_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "avg_pool_mixed_4_pool" -> 
                   Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "Channels" -> 768, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_4_tower_2_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 768, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 768, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_4_tower_2_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 192, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_4_tower_2_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "ch_concat_mixed_4_chconcat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_conv_batchnorm", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_conv_conv2d", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_conv_batchnorm", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_conv_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_conv_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_conv_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_conv_1_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_conv_relu", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_conv_1_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_conv_1_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_conv_1_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_conv_1_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_conv_2_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_conv_1_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_conv_2_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_conv_2_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_conv_2_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_conv_2_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_1_conv_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_1_conv_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_1_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_1_conv_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_1_conv_1_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_1_conv_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_1_conv_1_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_1_conv_1_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_1_conv_1_relu", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_1_conv_1_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_1_conv_2_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_1_conv_1_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_1_conv_2_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_1_conv_2_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_1_conv_2_relu", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_1_conv_2_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_1_conv_3_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_1_conv_2_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_1_conv_3_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_1_conv_3_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_1_conv_3_relu", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_1_conv_3_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_1_conv_4_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_1_conv_3_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_1_conv_4_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_1_conv_4_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_1_conv_4_relu", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_1_conv_4_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_2_conv_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_pool_mixed_4_pool", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_2_conv_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_2_conv_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_2_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_2_conv_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concat_mixed_4_chconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_conv_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_conv_2_relu", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_1_conv_4_relu", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_2_conv_relu", "Outputs", 
                    "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_pool_mixed_4_pool", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_conv_conv2d", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_1_conv_conv2d", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_4_tower_conv_conv2d", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concat_mixed_4_chconcat", "Outputs", 
                    "Output"]}], "Inception6" -> 
               Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "mixed_5_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 768, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 768, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_5_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 192, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_5_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_5_tower_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{160, 768, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 768, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_5_tower_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 160, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_5_tower_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_5_tower_conv_1_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{160, 160, 1, 7}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {1, 7}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 3}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 160, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_5_tower_conv_1_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 160, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_5_tower_conv_1_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_5_tower_conv_2_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 160, 7, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {7, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {3, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 160, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_5_tower_conv_2_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 192, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_5_tower_conv_2_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_5_tower_1_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{160, 768, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 768, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_5_tower_1_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 160, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_5_tower_1_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_5_tower_1_conv_1_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{160, 160, 7, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {7, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {3, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 160, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_5_tower_1_conv_1_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 160, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_5_tower_1_conv_1_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_5_tower_1_conv_2_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{160, 160, 1, 7}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {1, 7}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 3}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 160, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_5_tower_1_conv_2_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 160, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_5_tower_1_conv_2_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_5_tower_1_conv_3_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{160, 160, 7, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {7, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {3, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 160, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_5_tower_1_conv_3_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 160, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_5_tower_1_conv_3_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_5_tower_1_conv_4_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 160, 1, 7}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 7}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 3}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 160, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_5_tower_1_conv_4_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 192, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_5_tower_1_conv_4_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "avg_pool_mixed_5_pool" -> 
                   Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "Channels" -> 768, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_5_tower_2_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 768, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 768, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_5_tower_2_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 192, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_5_tower_2_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "ch_concat_mixed_5_chconcat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_conv_batchnorm", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_conv_conv2d", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_conv_batchnorm", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_conv_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_conv_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_conv_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_conv_1_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_conv_relu", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_conv_1_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_conv_1_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_conv_1_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_conv_1_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_conv_2_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_conv_1_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_conv_2_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_conv_2_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_conv_2_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_conv_2_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_1_conv_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_1_conv_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_1_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_1_conv_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_1_conv_1_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_1_conv_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_1_conv_1_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_1_conv_1_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_1_conv_1_relu", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_1_conv_1_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_1_conv_2_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_1_conv_1_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_1_conv_2_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_1_conv_2_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_1_conv_2_relu", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_1_conv_2_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_1_conv_3_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_1_conv_2_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_1_conv_3_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_1_conv_3_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_1_conv_3_relu", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_1_conv_3_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_1_conv_4_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_1_conv_3_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_1_conv_4_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_1_conv_4_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_1_conv_4_relu", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_1_conv_4_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_2_conv_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_pool_mixed_5_pool", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_2_conv_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_2_conv_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_2_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_2_conv_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concat_mixed_5_chconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_conv_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_conv_2_relu", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_1_conv_4_relu", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_2_conv_relu", "Outputs", 
                    "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_pool_mixed_5_pool", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_conv_conv2d", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_1_conv_conv2d", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_5_tower_conv_conv2d", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concat_mixed_5_chconcat", "Outputs", 
                    "Output"]}], "Inception7" -> 
               Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "mixed_6_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 768, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 768, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_6_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 192, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_6_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_6_tower_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{160, 768, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 768, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_6_tower_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 160, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_6_tower_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_6_tower_conv_1_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{160, 160, 1, 7}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {1, 7}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 3}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 160, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_6_tower_conv_1_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 160, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_6_tower_conv_1_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_6_tower_conv_2_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 160, 7, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {7, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {3, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 160, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_6_tower_conv_2_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 192, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_6_tower_conv_2_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_6_tower_1_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{160, 768, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 768, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_6_tower_1_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 160, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_6_tower_1_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_6_tower_1_conv_1_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{160, 160, 7, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {7, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {3, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 160, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_6_tower_1_conv_1_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 160, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_6_tower_1_conv_1_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_6_tower_1_conv_2_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{160, 160, 1, 7}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {1, 7}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 3}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 160, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_6_tower_1_conv_2_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 160, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_6_tower_1_conv_2_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_6_tower_1_conv_3_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{160, 160, 7, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {7, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {3, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 160, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_6_tower_1_conv_3_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 160, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_6_tower_1_conv_3_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_6_tower_1_conv_4_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 160, 1, 7}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 7}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 3}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 160, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_6_tower_1_conv_4_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 192, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_6_tower_1_conv_4_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "avg_pool_mixed_6_pool" -> 
                   Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "Channels" -> 768, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_6_tower_2_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 768, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 768, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_6_tower_2_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 192, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_6_tower_2_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "ch_concat_mixed_6_chconcat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_conv_batchnorm", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_conv_conv2d", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_conv_batchnorm", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_conv_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_conv_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_conv_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_conv_1_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_conv_relu", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_conv_1_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_conv_1_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_conv_1_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_conv_1_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_conv_2_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_conv_1_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_conv_2_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_conv_2_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_conv_2_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_conv_2_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_1_conv_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_1_conv_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_1_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_1_conv_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_1_conv_1_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_1_conv_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_1_conv_1_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_1_conv_1_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_1_conv_1_relu", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_1_conv_1_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_1_conv_2_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_1_conv_1_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_1_conv_2_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_1_conv_2_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_1_conv_2_relu", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_1_conv_2_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_1_conv_3_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_1_conv_2_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_1_conv_3_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_1_conv_3_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_1_conv_3_relu", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_1_conv_3_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_1_conv_4_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_1_conv_3_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_1_conv_4_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_1_conv_4_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_1_conv_4_relu", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_1_conv_4_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_2_conv_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_pool_mixed_6_pool", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_2_conv_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_2_conv_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_2_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_2_conv_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concat_mixed_6_chconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_conv_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_conv_2_relu", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_1_conv_4_relu", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_2_conv_relu", "Outputs", 
                    "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_pool_mixed_6_pool", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_conv_conv2d", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_1_conv_conv2d", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_6_tower_conv_conv2d", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concat_mixed_6_chconcat", "Outputs", 
                    "Output"]}], "Inception8" -> 
               Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "mixed_7_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 768, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 768, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_7_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 192, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_7_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_7_tower_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 768, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 768, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_7_tower_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 192, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_7_tower_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_7_tower_conv_1_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 192, 1, 7}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 7}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 3}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_7_tower_conv_1_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 192, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_7_tower_conv_1_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_7_tower_conv_2_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 192, 7, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {7, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {3, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_7_tower_conv_2_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 192, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_7_tower_conv_2_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_7_tower_1_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 768, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 768, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_7_tower_1_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 192, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_7_tower_1_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_7_tower_1_conv_1_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 192, 7, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {7, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {3, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_7_tower_1_conv_1_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 192, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_7_tower_1_conv_1_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_7_tower_1_conv_2_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 192, 1, 7}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 7}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 3}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_7_tower_1_conv_2_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 192, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_7_tower_1_conv_2_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_7_tower_1_conv_3_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 192, 7, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {7, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {3, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_7_tower_1_conv_3_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 192, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_7_tower_1_conv_3_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_7_tower_1_conv_4_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 192, 1, 7}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 7}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 3}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_7_tower_1_conv_4_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 192, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_7_tower_1_conv_4_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "avg_pool_mixed_7_pool" -> 
                   Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "Channels" -> 768, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_7_tower_2_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 768, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 768, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_7_tower_2_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 192, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_7_tower_2_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "ch_concat_mixed_7_chconcat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_conv_batchnorm", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_conv_conv2d", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_conv_batchnorm", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_conv_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_conv_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_conv_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_conv_1_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_conv_relu", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_conv_1_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_conv_1_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_conv_1_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_conv_1_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_conv_2_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_conv_1_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_conv_2_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_conv_2_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_conv_2_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_conv_2_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_1_conv_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_1_conv_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_1_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_1_conv_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_1_conv_1_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_1_conv_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_1_conv_1_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_1_conv_1_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_1_conv_1_relu", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_1_conv_1_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_1_conv_2_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_1_conv_1_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_1_conv_2_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_1_conv_2_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_1_conv_2_relu", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_1_conv_2_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_1_conv_3_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_1_conv_2_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_1_conv_3_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_1_conv_3_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_1_conv_3_relu", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_1_conv_3_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_1_conv_4_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_1_conv_3_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_1_conv_4_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_1_conv_4_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_1_conv_4_relu", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_1_conv_4_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_2_conv_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_pool_mixed_7_pool", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_2_conv_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_2_conv_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_2_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_2_conv_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concat_mixed_7_chconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_conv_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_conv_2_relu", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_1_conv_4_relu", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_2_conv_relu", "Outputs", 
                    "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_pool_mixed_7_pool", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_conv_conv2d", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_1_conv_conv2d", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_7_tower_conv_conv2d", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concat_mixed_7_chconcat", "Outputs", 
                    "Output"]}], "Inception9" -> 
               Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{1280, 8, 8}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "mixed_8_tower_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 768, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 768, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_8_tower_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 192, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_8_tower_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_8_tower_conv_1_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{320, 192, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 320, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {8, 8}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 8, 8}, 
                    NeuralNetworks`RealT]]], "mixed_8_tower_conv_1_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{320}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 320, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{320, 8, 8}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{320, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 8, 8}, 
                    NeuralNetworks`RealT]]], "mixed_8_tower_conv_1_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {320, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{320, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 8, 8}, 
                    NeuralNetworks`RealT]]], "mixed_8_tower_1_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 768, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 768, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_8_tower_1_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 192, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_8_tower_1_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_8_tower_1_conv_1_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 192, 1, 7}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 7}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 3}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_8_tower_1_conv_1_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 192, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_8_tower_1_conv_1_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_8_tower_1_conv_2_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 192, 7, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {7, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {3, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {17, 17}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_8_tower_1_conv_2_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 192, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_8_tower_1_conv_2_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 17, 17}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]]], "mixed_8_tower_1_conv_3_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 192, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {8, 8}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 8, 8}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_8_tower_1_conv_3_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 192, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 8, 8}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 8, 8}, 
                    NeuralNetworks`RealT]]], "mixed_8_tower_1_conv_3_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 8, 8}, 
                    NeuralNetworks`RealT]]], "max_pool_mixed_8_pool" -> 
                   Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Channels" -> 768, 
                    "$InputSize" -> {17, 17}, "$OutputSize" -> {8, 8}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{768, 17, 17}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{768, 8, 8}, 
                    NeuralNetworks`RealT]]], "ch_concat_mixed_8_chconcat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    NeuralNetworks`TensorT[{320, 8, 8}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{192, 8, 8}, NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{768, 8, 8}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 3, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{1280, 8, 8}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    NeuralNetworks`TensorT[{320, 8, 8}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{192, 8, 8}, NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{768, 8, 8}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1280, 8, 8}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_conv_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_conv_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_conv_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_conv_1_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_conv_relu", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_conv_1_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_conv_1_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_conv_1_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_conv_1_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_1_conv_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_1_conv_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_1_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_1_conv_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_1_conv_1_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_1_conv_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_1_conv_1_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_1_conv_1_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_1_conv_1_relu", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_1_conv_1_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_1_conv_2_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_1_conv_1_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_1_conv_2_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_1_conv_2_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_1_conv_2_relu", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_1_conv_2_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_1_conv_3_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_1_conv_2_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_1_conv_3_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_1_conv_3_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_1_conv_3_relu", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_1_conv_3_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concat_mixed_8_chconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_conv_1_relu", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_1_conv_3_relu", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "max_pool_mixed_8_pool", "Outputs", "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "max_pool_mixed_8_pool", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_1_conv_conv2d", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_8_tower_conv_conv2d", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concat_mixed_8_chconcat", "Outputs", 
                    "Output"]}], "Inception10" -> 
               Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{1280, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{2048, 8, 8}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "mixed_9_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{320, 1280, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 320, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 1280, "$GroupNumber" -> 1, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {8, 8}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1280, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 8, 8}, 
                    NeuralNetworks`RealT]]], "mixed_9_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT], 
                    "Beta" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 320, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{320, 8, 8}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{320, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 8, 8}, 
                    NeuralNetworks`RealT]]], "mixed_9_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {320, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{320, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 8, 8}, 
                    NeuralNetworks`RealT]]], "mixed_9_tower_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{384, 1280, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 384, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 1280, "$GroupNumber" -> 1, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {8, 8}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1280, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], "mixed_9_tower_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{384}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 384, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], "mixed_9_tower_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {384, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_9_tower_mixed_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{384, 384, 1, 3}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 384, "KernelSize" -> {1, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 384, "$GroupNumber" -> 1, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {8, 8}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_9_tower_mixed_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{384}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 384, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], "mixed_9_tower_mixed_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {384, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_9_tower_mixed_conv_1_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{384, 384, 3, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 384, "KernelSize" -> {3, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 384, "$GroupNumber" -> 1, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {8, 8}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_9_tower_mixed_conv_1_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{384}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 384, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_9_tower_mixed_conv_1_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {384, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], "mixed_9_tower_1_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{448, 1280, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 448, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 1280, "$GroupNumber" -> 1, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {8, 8}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1280, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{448, 8, 8}, 
                    NeuralNetworks`RealT]]], "mixed_9_tower_1_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{448}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{448}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{448}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{448}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 448, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{448, 8, 8}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{448, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{448, 8, 8}, 
                    NeuralNetworks`RealT]]], "mixed_9_tower_1_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {448, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{448, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{448, 8, 8}, 
                    NeuralNetworks`RealT]]], "mixed_9_tower_1_conv_1_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{384, 448, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 384, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 448, "$GroupNumber" -> 1, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {8, 8}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{448, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_9_tower_1_conv_1_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{384}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 384, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], "mixed_9_tower_1_conv_1_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {384, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_9_tower_1_mixed_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{384, 384, 1, 3}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 384, "KernelSize" -> {1, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 384, "$GroupNumber" -> 1, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {8, 8}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_9_tower_1_mixed_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{384}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 384, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_9_tower_1_mixed_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {384, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_9_tower_1_mixed_conv_1_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{384, 384, 3, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 384, "KernelSize" -> {3, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 384, "$GroupNumber" -> 1, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {8, 8}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_9_tower_1_mixed_conv_1_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{384}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 384, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_9_tower_1_mixed_conv_1_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {384, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], "avg_pool_mixed_9_pool" -> 
                   Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "Channels" -> 1280, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {8, 8}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1280, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1280, 8, 8}, 
                    NeuralNetworks`RealT]]], "mixed_9_tower_2_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 1280, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 1280, "$GroupNumber" -> 1, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {8, 8}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1280, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 8, 8}, 
                    NeuralNetworks`RealT]]], "mixed_9_tower_2_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 192, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 8, 8}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 8, 8}, 
                    NeuralNetworks`RealT]]], "mixed_9_tower_2_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 8, 8}, 
                    NeuralNetworks`RealT]]], "ch_concat_mixed_9_chconcat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    NeuralNetworks`TensorT[{320, 8, 8}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{384, 8, 8}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{384, 8, 8}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{384, 8, 8}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{384, 8, 8}, NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 8, 8}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 6, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{2048, 8, 8}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    NeuralNetworks`TensorT[{320, 8, 8}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{384, 8, 8}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{384, 8, 8}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{384, 8, 8}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{384, 8, 8}, NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 8, 8}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2048, 8, 8}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_conv_batchnorm", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_conv_conv2d", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_conv_batchnorm", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_conv_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_conv_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_conv_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_mixed_conv_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_conv_relu", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_mixed_conv_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_mixed_conv_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_mixed_conv_relu", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_mixed_conv_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_mixed_conv_1_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_conv_relu", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_mixed_conv_1_batchnorm", "Inputs",
                     "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_mixed_conv_1_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_mixed_conv_1_relu", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_mixed_conv_1_batchnorm", 
                    "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_1_conv_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_1_conv_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_1_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_1_conv_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_1_conv_1_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_1_conv_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_1_conv_1_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_1_conv_1_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_1_conv_1_relu", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_1_conv_1_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_1_mixed_conv_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_1_conv_1_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_1_mixed_conv_batchnorm", "Inputs",
                     "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_1_mixed_conv_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_1_mixed_conv_relu", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_1_mixed_conv_batchnorm", 
                    "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_1_mixed_conv_1_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_1_conv_1_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_1_mixed_conv_1_batchnorm", 
                    "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_1_mixed_conv_1_conv2d", "Outputs",
                     "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_1_mixed_conv_1_relu", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_1_mixed_conv_1_batchnorm", 
                    "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_2_conv_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_pool_mixed_9_pool", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_2_conv_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_2_conv_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_2_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_2_conv_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concat_mixed_9_chconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_conv_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_mixed_conv_relu", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_mixed_conv_1_relu", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_1_mixed_conv_relu", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_1_mixed_conv_1_relu", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_2_conv_relu", "Outputs", 
                    "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_pool_mixed_9_pool", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_conv_conv2d", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_1_conv_conv2d", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_9_tower_conv_conv2d", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concat_mixed_9_chconcat", "Outputs", 
                    "Output"]}], "Inception11" -> 
               Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{2048, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{2048, 8, 8}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "mixed_10_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{320, 2048, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 320, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 2048, "$GroupNumber" -> 1, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {8, 8}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2048, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 8, 8}, 
                    NeuralNetworks`RealT]]], "mixed_10_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{320}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 320, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{320, 8, 8}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{320, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 8, 8}, 
                    NeuralNetworks`RealT]]], "mixed_10_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {320, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{320, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 8, 8}, 
                    NeuralNetworks`RealT]]], "mixed_10_tower_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{384, 2048, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 384, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 2048, "$GroupNumber" -> 1, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {8, 8}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2048, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], "mixed_10_tower_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{384}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 384, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], "mixed_10_tower_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {384, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_10_tower_mixed_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{384, 384, 1, 3}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 384, "KernelSize" -> {1, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 384, "$GroupNumber" -> 1, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {8, 8}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_10_tower_mixed_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{384}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 384, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], "mixed_10_tower_mixed_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {384, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_10_tower_mixed_conv_1_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{384, 384, 3, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 384, "KernelSize" -> {3, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 384, "$GroupNumber" -> 1, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {8, 8}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_10_tower_mixed_conv_1_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{384}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 384, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_10_tower_mixed_conv_1_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {384, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], "mixed_10_tower_1_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{448, 2048, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 448, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 2048, "$GroupNumber" -> 1, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {8, 8}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2048, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{448, 8, 8}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_10_tower_1_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{448}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{448}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{448}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{448}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 448, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{448, 8, 8}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{448, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{448, 8, 8}, 
                    NeuralNetworks`RealT]]], "mixed_10_tower_1_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {448, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{448, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{448, 8, 8}, 
                    NeuralNetworks`RealT]]], "mixed_10_tower_1_conv_1_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{384, 448, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 384, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 448, "$GroupNumber" -> 1, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {8, 8}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{448, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_10_tower_1_conv_1_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{384}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 384, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], "mixed_10_tower_1_conv_1_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {384, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_10_tower_1_mixed_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{384, 384, 1, 3}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 384, "KernelSize" -> {1, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 384, "$GroupNumber" -> 1, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {8, 8}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_10_tower_1_mixed_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{384}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 384, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_10_tower_1_mixed_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {384, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_10_tower_1_mixed_conv_1_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{384, 384, 3, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 384, "KernelSize" -> {3, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 384, "$GroupNumber" -> 1, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {8, 8}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_10_tower_1_mixed_conv_1_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{384}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{384}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 384, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_10_tower_1_mixed_conv_1_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {384, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{384, 8, 8}, 
                    NeuralNetworks`RealT]]], "max_pool_mixed_10_pool" -> 
                   Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Channels" -> 2048, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {8, 8}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2048, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2048, 8, 8}, 
                    NeuralNetworks`RealT]]], "mixed_10_tower_2_conv_conv2d" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 2048, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 2048, "$GroupNumber" -> 1, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {8, 8}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2048, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 8, 8}, 
                    NeuralNetworks`RealT]]], 
                   "mixed_10_tower_2_conv_batchnorm" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 192, 
                    "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 8, 8}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 8, 8}, 
                    NeuralNetworks`RealT]]], "mixed_10_tower_2_conv_relu" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 8, 8}, 
                    NeuralNetworks`RealT]]], "ch_concat_mixed_10_chconcat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    NeuralNetworks`TensorT[{320, 8, 8}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{384, 8, 8}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{384, 8, 8}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{384, 8, 8}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{384, 8, 8}, NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 8, 8}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 6, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{2048, 8, 8}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    NeuralNetworks`TensorT[{320, 8, 8}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{384, 8, 8}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{384, 8, 8}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{384, 8, 8}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{384, 8, 8}, NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 8, 8}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2048, 8, 8}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_conv_batchnorm", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_conv_conv2d", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_conv_batchnorm", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_conv_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_conv_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_conv_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_mixed_conv_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_conv_relu", "Outputs", "Output"],
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_mixed_conv_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_mixed_conv_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_mixed_conv_relu", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_mixed_conv_batchnorm", "Outputs",
                     "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_mixed_conv_1_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_conv_relu", "Outputs", "Output"],
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_mixed_conv_1_batchnorm", 
                    "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_mixed_conv_1_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_mixed_conv_1_relu", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_mixed_conv_1_batchnorm", 
                    "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_1_conv_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_1_conv_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_1_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_1_conv_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_1_conv_1_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_1_conv_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_1_conv_1_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_1_conv_1_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_1_conv_1_relu", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_1_conv_1_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_1_mixed_conv_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_1_conv_1_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_1_mixed_conv_batchnorm", 
                    "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_1_mixed_conv_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_1_mixed_conv_relu", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_1_mixed_conv_batchnorm", 
                    "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_1_mixed_conv_1_conv2d", "Inputs",
                     "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_1_conv_1_relu", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_1_mixed_conv_1_batchnorm", 
                    "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_1_mixed_conv_1_conv2d", 
                    "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_1_mixed_conv_1_relu", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_1_mixed_conv_1_batchnorm", 
                    "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_2_conv_conv2d", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "max_pool_mixed_10_pool", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_2_conv_batchnorm", "Inputs", 
                    "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_2_conv_conv2d", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_2_conv_relu", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_2_conv_batchnorm", "Outputs", 
                    "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concat_mixed_10_chconcat", "Inputs", 
                    "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_conv_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_mixed_conv_relu", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_mixed_conv_1_relu", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_1_mixed_conv_relu", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_1_mixed_conv_1_relu", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_2_conv_relu", "Outputs", 
                    "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "max_pool_mixed_10_pool", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_conv_conv2d", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_1_conv_conv2d", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "mixed_10_tower_conv_conv2d", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concat_mixed_10_chconcat", "Outputs", 
                    "Output"]}], "global_pool" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {8, 8}, "Stride" -> {1, 1}, 
                   "PaddingSize" -> {0, 0}, "Function" -> Mean, 
                   "Dimensionality" -> 2, "Channels" -> 2048, 
                   "$InputSize" -> {8, 8}, "$OutputSize" -> {1, 1}, 
                   "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{2048, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{2048, 1, 1}, 
                    NeuralNetworks`RealT]]], "flatten" -> 
               Association[
                "Type" -> "Flatten", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "Level" -> DirectedInfinity[1], "OutputSize" -> {2048}, 
                   "$InputSize" -> {2048, 1, 1}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{2048, 1, 1}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{2048}, NeuralNetworks`RealT]]], 
               "fc1" -> Association[
                "Type" -> "Linear", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{1008, 2048}, NeuralNetworks`RealT],
                    "Biases" -> 
                   NeuralNetworks`TensorT[{1008}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputDimensions" -> {1008}, "$OutputSize" -> 1008, 
                   "$InputSize" -> 2048, "$InputDimensions" -> {2048}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{2048}, NeuralNetworks`RealT]], 
                 "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{1008}, NeuralNetworks`RealT]]], 
               "part" -> Association[
                "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "PartSpecification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 1001]], "$Dimensions" -> {}, "$Channels" -> 1008, 
                   "$OutputDimensions" -> {1001}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{1008}, NeuralNetworks`RealT]], 
                 "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{1001}, NeuralNetworks`RealT]]], 
               "softmax" -> 
               Association[
                "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
                 Association[], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{1001}, NeuralNetworks`RealT]], 
                 "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{1001}, NeuralNetworks`RealT]]]], 
             "Edges" -> {
              NeuralNetworks`NetPath[
                "Nodes", "conv_conv2d", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "conv_batchnorm", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv_conv2d", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "conv_relu", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv_batchnorm", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "conv_1_conv2d", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv_relu", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "conv_1_batchnorm", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv_1_conv2d", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "conv_1_relu", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv_1_batchnorm", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "conv_2_conv2d", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv_1_relu", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "conv_2_batchnorm", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv_2_conv2d", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "conv_2_relu", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv_2_batchnorm", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "pool", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv_2_relu", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "conv_3_conv2d", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "pool", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "conv_3_batchnorm", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv_3_conv2d", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "conv_3_relu", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv_3_batchnorm", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "conv_4_conv2d", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv_3_relu", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "conv_4_batchnorm", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv_4_conv2d", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "conv_4_relu", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv_4_batchnorm", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "pool1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv_4_relu", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "Inception1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "pool1", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "Inception2", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "Inception1", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "Inception3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "Inception2", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "Inception4", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "Inception3", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "Inception5", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "Inception4", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "Inception6", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "Inception5", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "Inception7", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "Inception6", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "Inception8", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "Inception7", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "Inception9", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "Inception8", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "Inception10", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "Inception9", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "Inception11", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "Inception10", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "global_pool", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "Inception11", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "flatten", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "global_pool", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "fc1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "flatten", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "part", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "fc1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "softmax", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "part", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Outputs", "Output"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "softmax", "Outputs", "Output"]}, "Inputs" -> 
             Association["Input" -> NetEncoder["Image", 
                 Association[
                 "ImageSize" -> {299, 299}, "ColorSpace" -> "RGB", 
                  "ColorChannels" -> 3, "MeanImage" -> {0.5, 0.5, 0.5}], 
                 
                 NeuralNetworks`TensorT[{3, 299, 299}, 
                  NeuralNetworks`RealT]]], "Outputs" -> 
             Association["Output" -> NetDecoder["Class", 
                 Association["Labels" -> {
                    Entity["Concept", "Other::nzvm6"], 
                    Entity["Concept", "VulpesMacrotis::jm64h"], 
                    Entity["Concept", "EnglishSetter::ps793"], 
                    Entity["Concept", "SiberianHusky::k7pkk"], 
                    Entity["Concept", "AustralianTerrier::q2h6g"], 
                    Entity["Concept", "EnglishSpringer::f4dq6"], 
                    Entity["Concept", "EschrichtiusGibbosus::2c8q9"], 
                    Entity["Concept", "AilurusFulgens::m96y6"], 
                    Entity["Concept", "EgyptianCat::sd6pw"], 
                    Entity["Concept", "CapraIbex::p5pmr"], 
                    Entity["Concept", "PersianCat::p69kd"], 
                    Entity["Concept", "Cougar::7bc9f"], 
                    Entity["Concept", "Gazelle::px427"], 
                    Entity["Concept", "Porcupine::5r285"], 
                    Entity["Concept", "SeaLion::bs87w"], 
                    Entity["Concept", "AlaskanMalamute::y6wqq"], 
                    Entity["Concept", "Badger::vcsk3"], 
                    Entity["Concept", "GreatDane::xg8dn"], 
                    Entity["Concept", "WalkerFoxhound::z3y7p"], 
                    Entity["Concept", "WelshSpringerSpaniel::qyng2"], 
                    Entity["Concept", "Whippet::57r47"], 
                    Entity["Concept", "Deerhound::btsv4"], 
                    Entity["Concept", "KillerWhale::26sj4"], 
                    Entity["Concept", "Mink::r5727"], 
                    Entity["Concept", "AfricanElephant::634z7"], 
                    Entity["Concept", "Weimaraner::476j6"], 
                    Entity["Concept", "Soft-coatedWheatenTerrier::474j2"], 
                    Entity["Concept", "DandieDinmont::ff47s"], 
                    Entity["Concept", "CanisNiger::99p6d"], 
                    Entity["Concept", "OldEnglishSheepdog::4zdy3"], 
                    Entity["Concept", "FelisOnca::jh7tq"], 
                    Entity["Concept", "OtterHound::3442w"], 
                    Entity["Concept", "Bloodhound::pc454"], 
                    Entity["Concept", "Airedale::w6gf4"], 
                    Entity["Concept", "Hyaena::7444d"], 
                    Entity["Concept", "Meerkat::q77nd"], 
                    Entity["Concept", "GiantSchnauzer::8fwv6"], 
                    Entity["Concept", "TitiMonkey::6rqgy"], 
                    Entity["Concept", "Ai::z6968"], 
                    Entity["Concept", "Sorrel::b824z"], 
                    Entity["Concept", "Black-footedFerret::r6gqg"], 
                    Entity["Concept", "CarriageDog::jh3w6"], 
                    Entity["Concept", "Black-and-tanCoonhound::84k6y"], 
                    Entity["Concept", "Papillon::zhn7j"], 
                    Entity["Concept", "WoodPussy::6886s"], 
                    Entity["Concept", "StaffordshireBullTerrier::883y3"], 
                    Entity["Concept", "MexicanHairless::m2by7"], 
                    Entity["Concept", "BouvierDesFlandres::h7txf"], 
                    Entity["Concept", "Weasel::gcxk7"], 
                    Entity["Concept", "MiniaturePoodle::4955p"], 
                    Entity["Concept", "Cardigan::b724j"], 
                    Entity["Concept", "Malinois::k8y57"], 
                    Entity["Concept", "Bighorn::773z4"], 
                    Entity["Concept", "EasternFoxSquirrel::8g9v6"], 
                    Entity["Concept", "Colobus::yqv5q"], 
                    Entity["Concept", "TigerCat::8k84h"], 
                    Entity["Concept", "LhasaApso::cr28m"], 
                    Entity["Concept", "AepycerosMelampus::q45p2"], 
                    Entity["Concept", "BrushWolf::44t57"], 
                    Entity["Concept", "YorkshireTerrier::bn4jn"], 
                    Entity["Concept", "NewfoundlandDog::q787h"], 
                    Entity["Concept", "BrownBear::8374p"], 
                    Entity["Concept", "VulpesVulpes::g8mvp"], 
                    Entity["Concept", "Elkhound::62q39"], 
                    Entity["Concept", "Rottweiler::zywt3"], 
                    Entity["Concept", "Hartebeest::r8276"], 
                    Entity["Concept", "GazelleHound::7k449"], 
                    Entity["Concept", "GrayFox::vftd5"], 
                    Entity["Concept", "Schipperke::7778z"], 
                    Entity["Concept", "Peke::b9n5f"], 
                    Entity["Concept", "BrabanconGriffon::jh5pt"], 
                    Entity["Concept", "WestHighlandWhiteTerrier::4h85y"], 
                    Entity["Concept", "SealyhamTerrier::5jz56"], 
                    Entity["Concept", "Guenon::7y986"], 
                    Entity["Concept", "Mongoose::5hp73"], 
                    Entity["Concept", "Indri::w2dsm"], 
                    Entity["Concept", "PantheraTigris::2mpmq"], 
                    Entity["Concept", "IrishWolfhound::8m3gw"], 
                    Entity["Concept", "WildBoar::5wjz4"], 
                    Entity["Concept", "EntleBucher::y43x6"], 
                    Entity["Concept", "Zebra::nx5qr"], 
                    Entity["Concept", "Tup::8y669"], 
                    Entity["Concept", "FrenchBulldog::3jg82"], 
                    Entity["Concept", "Orang::5385s"], 
                    Entity["Concept", "Basenji::k9yy2"], 
                    Entity["Concept", "PantheraPardus::r35k5"], 
                    Entity["Concept", "BerneseMountainDog::y32v5"], 
                    Entity["Concept", "MalteseDog::trsv6"], 
                    Entity["Concept", "NorfolkTerrier::b7z76"], 
                    Entity["Concept", "ToyTerrier::k3s97"], 
                    Entity["Concept", "HungarianPointer::7555p"], 
                    Entity["Concept", "CairnTerrier::67c37"], 
                    Entity["Concept", "SaimiriSciureus::f9528"], 
                    Entity["Concept", "Groenendael::5854s"], 
                    Entity["Concept", "Clumber::2ddvk"], 
                    Entity["Concept", "SiameseCat::hgg68"], 
                    Entity["Concept", "Chimp::2t668"], 
                    Entity["Concept", "Komondor::p8q9b"], 
                    Entity["Concept", "AfghanHound::6845m"], 
                    Entity["Concept", "JapaneseSpaniel::h55d9"], 
                    Entity["Concept", "NasalisLarvatus::92p77"], 
                    Entity["Concept", "CaviaCobaya::b8w85"], 
                    Entity["Concept", "ArcticWolf::4xr47"], 
                    Entity["Concept", "IceBear::fnc5j"], 
                    Entity["Concept", "Gorilla::7vrdz"], 
                    Entity["Concept", "Borzoi::v43t8"], 
                    Entity["Concept", "ToyPoodle::732f6"], 
                    Entity["Concept", "KerryBlueTerrier::t9c62"], 
                    Entity["Concept", "Ox::yhn7j"], 
                    Entity["Concept", "ScotchTerrier::2f2jw"], 
                    Entity["Concept", "TibetanMastiff::4f68b"], 
                    Entity["Concept", "AtelesGeoffroyi::8f944"], 
                    Entity["Concept", "Doberman::zgqf4"], 
                    Entity["Concept", "BostonBull::6662j"], 
                    Entity["Concept", "GreaterSwissMountainDog::t7642"], 
                    Entity["Concept", "Appenzeller::j96dj"], 
                    Entity["Concept", "Shih-Tzu::kc9k8"], 
                    Entity["Concept", "IrishWaterSpaniel::m9zkp"], 
                    Entity["Concept", "Pomeranian::dx7mr"], 
                    Entity["Concept", "BedlingtonTerrier::98h82"], 
                    Entity["Concept", "Warthog::3q477"], 
                    Entity["Concept", "ArabianCamel::98q62"], 
                    Entity["Concept", "HylobatesSyndactylus::3g4xn"], 
                    Entity["Concept", "MiniatureSchnauzer::848y9"], 
                    Entity["Concept", "Collie::999kf"], 
                    Entity["Concept", "GoldenRetriever::t59tg"], 
                    Entity["Concept", "IrishTerrier::qmsm4"], 
                    Entity["Concept", "Affenpinscher::58wr6"], 
                    Entity["Concept", "BorderCollie::463w2"], 
                    Entity["Concept", "Hare::55m72"], 
                    Entity["Concept", "Boxer::3966f"], 
                    Entity["Concept", "SilkyTerrier::xyfw3"], 
                    Entity["Concept", "Beagle::2bdvt"], 
                    Entity["Concept", "Leonberg::49td5"], 
                    Entity["Concept", "GermanShort-hairedPointer::k3297"], 
                    Entity["Concept", "ErythrocebusPatas::949v6"], 
                    Entity["Concept", "CuonAlpinus::f5yfn"], 
                    Entity["Concept", "Baboon::28m6v"], 
                    Entity["Concept", "Macaque::m87ss"], 
                    Entity["Concept", "ChesapeakeBayRetriever::s8567"], 
                    Entity["Concept", "BullMastiff::6p365"], 
                    Entity["Concept", "Kuvasz::z4sxp"], 
                    Entity["Concept", "CebusCapucinus::4r452"], 
                    Entity["Concept", "Pug::6799h"], 
                    Entity["Concept", "Curly-coatedRetriever::pb8yt"], 
                    Entity["Concept", "NorwichTerrier::9v483"], 
                    Entity["Concept", "Flat-coatedRetriever::866mk"], 
                    Entity["Concept", "Grunter::437d2"], 
                    Entity["Concept", "Keeshond::rz734"], 
                    Entity["Concept", "EskimoDog::2vm97"], 
                    Entity["Concept", "BrittanySpaniel::435gz"], 
                    Entity["Concept", "StandardPoodle::w25c4"], 
                    Entity["Concept", "LakelandTerrier::b729b"], 
                    Entity["Concept", "PantheraUncia::z6697"], 
                    Entity["Concept", "GordonSetter::yvx65"], 
                    Entity["Concept", "CanisDingo::529k9"], 
                    Entity["Concept", "StandardSchnauzer::q9j3y"], 
                    Entity["Concept", "Hamster::9yy49"], 
                    Entity["Concept", "ChrysanthemumDog::y9tps"], 
                    Entity["Concept", "AlopexLagopus::44cg9"], 
                    Entity["Concept", "Wire-hairedFoxTerrier::pn5qb"], 
                    Entity["Concept", "Basset::n769x"], 
                    Entity["Concept", "AsiaticBuffalo::532z9"], 
                    Entity["Concept", "AmericanBlackBear::763x8"], 
                    Entity["Concept", "AngoraRabbit::v6627"], 
                    Entity["Concept", "Bison::25c86"], 
                    Entity["Concept", "HowlerMonkey::87c48"], 
                    Entity["Concept", "Hippo::647b2"], 
                    Entity["Concept", "ChowChow::7x292"], 
                    Entity["Concept", "AiluropodaMelanoleuca::xg799"], 
                    Entity["Concept", "AmericanPitBullTerrier::kw55q"], 
                    Entity["Concept", "ShetlandSheepDog::sffh8"], 
                    Entity["Concept", "GreatPyrenees::t8qh7"], 
                    Entity["Concept", "Chihuahua::8hmhf"], 
                    Entity["Concept", "TabbyCat::rvg7f"], 
                    Entity["Concept", "Marmoset::3j236"], 
                    Entity["Concept", "LabradorRetriever::7g587"], 
                    Entity["Concept", "SaintBernard::r5277"], 
                    Entity["Concept", "Armadillo::s9866"], 
                    Entity["Concept", "Samoyede::rq827"], 
                    Entity["Concept", "Bluetick::fs5sw"], 
                    Entity["Concept", "Redbone::j6h4x"], 
                    Entity["Concept", "Fitch::x2w8q"], 
                    Entity["Concept", "Marmot::7vb94"], 
                    Entity["Concept", "Kelpie::k6795"], 
                    Entity["Concept", "Gibbon::7yqsr"], 
                    Entity["Concept", "Llama::pp4mc"], 
                    Entity["Concept", "MiniaturePinscher::jvy9c"], 
                    Entity["Concept", "Cottontail::bsxk4"], 
                    Entity["Concept", "ItalianGreyhound::s4gq3"], 
                    Entity["Concept", "KingOfBeasts::vrwm9"], 
                    Entity["Concept", "Cocker::7284r"], 
                    Entity["Concept", "IrishSetter::h5pp3"], 
                    Entity["Concept", "Dugong::ss39b"], 
                    Entity["Concept", "ElephasMaximus::4668g"], 
                    Entity["Concept", "Beaver::qp598"], 
                    Entity["Concept", "SussexSpaniel::sbv42"], 
                    Entity["Concept", "Pembroke::95g54"], 
                    Entity["Concept", "BlenheimSpaniel::cd3nm"], 
                    Entity["Concept", "LemurCatta::4z4fy"], 
                    Entity["Concept", "RhodesianRidgeback::jph75"], 
                    Entity["Concept", "Catamount::q4f63"], 
                    Entity["Concept", "AfricanHuntingDog::d9b86"], 
                    Entity["Concept", "Langur::3w42b"], 
                    Entity["Concept", "IbizanHound::987kj"], 
                    Entity["Concept", "CanisLupus::5gwtc"], 
                    Entity["Concept", "GiantAnteater::y96st"], 
                    Entity["Concept", "EnglishFoxhound::5v343"], 
                    Entity["Concept", "Briard::dtm5k"], 
                    Entity["Concept", "MelursusUrsinus::48x75"], 
                    Entity["Concept", "BorderTerrier::gh5h6"], 
                    Entity["Concept", "Alsatian::fh5zw"], 
                    Entity["Concept", "Otter::63tg7"], 
                    Entity["Concept", "KangarooBear::hvf3s"], 
                    Entity["Concept", "Tusker::dqq7d"], 
                    Entity["Concept", "Anteater::8t864"], 
                    Entity["Concept", "BrushKangaroo::493r2"], 
                    Entity["Concept", "Duck-billedPlatypus::b8867"], 
                    Entity["Concept", "Wombat::m5rqr"], 
                    Entity["Concept", "Six-gun::ctqb6"], 
                    Entity["Concept", "Umbrella::3mntq"], 
                    Entity["Concept", "Schooner::f2t26"], 
                    Entity["Concept", "SoccerBall::25w42"], 
                    Entity["Concept", "Accordion::vx545"], 
                    Entity["Concept", "Ant::7tznr"], 
                    Entity["Concept", "SeaStar::46w97"], 
                    Entity["Concept", "ChamberedNautilus::tspc6"], 
                    Entity["Concept", "GrandPiano::8kk56"], 
                    Entity["Concept", "Laptop::zdd33"], 
                    Entity["Concept", "Strawberry::3csyb"], 
                    Entity["Concept", "Airliner::t7542"], 
                    Entity["Concept", "MilitaryPlane::whx2r"], 
                    Entity["Concept", "Airship::dg429"], 
                    Entity["Concept", "Balloon::64p99"], 
                    Entity["Concept", "SpaceShuttle::72jnc"], 
                    Entity["Concept", "Fireboat::xf64t"], 
                    Entity["Concept", "Gondola::4ds6k"], 
                    Entity["Concept", "Speedboat::r6p4f"], 
                    Entity["Concept", "Lifeboat::3r554"], 
                    Entity["Concept", "Canoe::nnt95"], 
                    Entity["Concept", "Yawl::hggp6"], 
                    Entity["Concept", "Catamaran::7b489"], 
                    Entity["Concept", "Trimaran::2639q"], 
                    Entity["Concept", "ContainerShip::tsz7x"], 
                    Entity["Concept", "OceanLiner::s5fxp"], 
                    Entity["Concept", "PirateShip::386k8"], 
                    Entity["Concept", "AircraftCarrier::74d49"], 
                    Entity["Concept", "Pigboat::p7yyy"], 
                    Entity["Concept", "Wreck::qr554"], 
                    Entity["Concept", "HalfTrack::59zq4"], 
                    Entity["Concept", "ArmoredCombatVehicle::353r5"], 
                    Entity["Concept", "Missile::854m6"], 
                    Entity["Concept", "Bob::n2762"], 
                    Entity["Concept", "DogSled::34t8q"], 
                    Entity["Concept", "Bicycle-built-for-two::7h478"], 
                    Entity["Concept", "All-terrainBike::7n976"], 
                    Entity["Concept", "FreightCar::5pg8s"], 
                    Entity["Concept", "PassengerCar::b7xgp"], 
                    Entity["Concept", "GardenCart::7br53"], 
                    Entity["Concept", "ShoppingCart::95g62"], 
                    Entity["Concept", "MotorScooter::bbwp9"], 
                    Entity["Concept", "Forklift::b2dfv"], 
                    Entity["Concept", "ElectricLocomotive::5wv23"], 
                    Entity["Concept", "SteamLocomotive::9kv4y"], 
                    Entity["Concept", "AmphibiousVehicle::rr85n"], 
                    Entity["Concept", "Ambulance::rgts3"], 
                    Entity["Concept", "BeachWaggon::c945g"], 
                    Entity["Concept", "Taxi::379w3"], 
                    Entity["Concept", "Convertible::4pxj2"], 
                    Entity["Concept", "Jeep::5twmt"], 
                    Entity["Concept", "Limo::jfrr3"], 
                    Entity["Concept", "Minivan::yfsj9"], 
                    Entity["Concept", "ModelT::c44dv"], 
                    Entity["Concept", "RaceCar::9m8p9"], 
                    Entity["Concept", "SportCar::k9874"], 
                    Entity["Concept", "Go-kart::gjsj5"], 
                    Entity["Concept", "GolfCart::sxmp6"], 
                    Entity["Concept", "Moped::p85wp"], 
                    Entity["Concept", "Snowplough::h36y5"], 
                    Entity["Concept", "FireEngine::zsvx8"], 
                    Entity["Concept", "Dustcart::2bbpr"], 
                    Entity["Concept", "PickupTruck::9k58n"], 
                    Entity["Concept", "TowCar::ph6vn"], 
                    Entity["Concept", "ArticulatedLorry::ph66j"], 
                    Entity["Concept", "MovingVan::2s387"], 
                    Entity["Concept", "BlackMaria::5jn8v"], 
                    Entity["Concept", "RecreationalVehicle::p93tb"], 
                    Entity["Concept", "Streetcar::vhm65"], 
                    Entity["Concept", "Snowmobile::y538p"], 
                    Entity["Concept", "Tractor::39j62"], 
                    Entity["Concept", "ManufacturedHome::d7czj"], 
                    Entity["Concept", "Tricycle::3537s"], 
                    Entity["Concept", "Monocycle::mrm29"], 
                    Entity["Concept", "Horse-cart::546b9"], 
                    Entity["Concept", "Jinrikisha::g7j7m"], 
                    Entity["Concept", "Oxcart::vwjn2"], 
                    Entity["Concept", "Bassinet::yn2td"], 
                    Entity["Concept", "Cradle::3882z"], 
                    Entity["Concept", "Cot::3kgws"], 
                    Entity["Concept", "Four-poster::8kbhw"], 
                    Entity["Concept", "Bookcase::6t56v"], 
                    Entity["Concept", "ChinaCabinet::9bmqg"], 
                    Entity["Concept", "MedicineCabinet::m9g7m"], 
                    Entity["Concept", "Chiffonier::m3jmr"], 
                    Entity["Concept", "TableLamp::6239m"], 
                    Entity["Concept", "FileCabinet::vsb9c"], 
                    Entity["Concept", "ParkBench::hq98s"], 
                    Entity["Concept", "BarberChair::mybp2"], 
                    Entity["Concept", "Throne::2t9q6"], 
                    Entity["Concept", "FoldingChair::4vqcr"], 
                    Entity["Concept", "RockingChair::ncpd5"], 
                    Entity["Concept", "DayBed::nrph3"], 
                    Entity["Concept", "ToiletSeat::z8wvq"], 
                    Entity["Concept", "Desk::q73z7"], 
                    Entity["Concept", "BilliardTable::9c56d"], 
                    Entity["Concept", "DiningTable::6ypqf"], 
                    Entity["Concept", "EntertainmentCenter::mg549"], 
                    Entity["Concept", "Closet::588p6"], 
                    Entity["Concept", "GrannySmith::k3786"], 
                    Entity["Concept", "Orange::w579d"], 
                    Entity["Concept", "Lemon::743j2"], 
                    Entity["Concept", "Fig::d3p6f"], 
                    Entity["Concept", "Ananas::m6nzv"], 
                    Entity["Concept", "Banana::f6z73"], 
                    Entity["Concept", "Jak::p6r56"], 
                    Entity["Concept", "CustardApple::nx482"], 
                    Entity["Concept", "Pomegranate::dh736"], 
                    Entity["Concept", "Acorn::f62cf"], 
                    Entity["Concept", "RoseHip::333d2"], 
                    Entity["Concept", "Capitulum::834z6"], 
                    Entity["Concept", "Rapeseed::5x738"], 
                    Entity["Concept", "Corn::m7hpj"], 
                    Entity["Concept", "Conker::v8p64"], 
                    Entity["Concept", "PipeOrgan::gq9sr"], 
                    Entity["Concept", "UprightPiano::286t3"], 
                    Entity["Concept", "Chime::m6623"], 
                    Entity["Concept", "Membranophone::2x379"], 
                    Entity["Concept", "Tam-tam::m962t"], 
                    Entity["Concept", "Maraca::395nq"], 
                    Entity["Concept", "Marimba::kbbq5"], 
                    Entity["Concept", "SteelDrum::fqv7s"], 
                    Entity["Concept", "Banjo::fs3f9"], 
                    Entity["Concept", "Cello::hhbp5"], 
                    Entity["Concept", "Fiddle::q9djd"], 
                    Entity["Concept", "Harp::zz89k"], 
                    Entity["Concept", "AcousticGuitar::wp46j"], 
                    Entity["Concept", "ElectricGuitar::9pkmr"], 
                    Entity["Concept", "Cornet::35d97"], 
                    Entity["Concept", "FrenchHorn::rm367"], 
                    Entity["Concept", "Trombone::22z3w"], 
                    Entity["Concept", "Harmonica::8t835"], 
                    Entity["Concept", "Ocarina::zc9mv"], 
                    Entity["Concept", "PandeanPipe::gjck2"], 
                    Entity["Concept", "Bassoon::92ky9"], 
                    Entity["Concept", "Hautbois::937r3"], 
                    Entity["Concept", "Sax::v45s9"], 
                    Entity["Concept", "TransverseFlute::8pj76"], 
                    Entity["Concept", "Daisy::hypz2"], 
                    Entity["Concept", "CypripediumCalceolus::7tzrs"], 
                    Entity["Concept", "Cliff::q56fy"], 
                    Entity["Concept", "Vale::88wm8"], 
                    Entity["Concept", "Alp::m4bkv"], 
                    Entity["Concept", "Volcano::9fcbc"], 
                    Entity["Concept", "Headland::8n9c9"], 
                    Entity["Concept", "SandBar::4w689"], 
                    Entity["Concept", "CoralReef::669j5"], 
                    Entity["Concept", "Lakeshore::4483j"], 
                    Entity["Concept", "Sea-coast::m3d85"], 
                    Entity["Concept", "Geyser::5w69b"], 
                    Entity["Concept", "Hatchet::7cspp"], 
                    Entity["Concept", "Cleaver::bk925"], 
                    Entity["Concept", "LetterOpener::sx79v"], 
                    Entity["Concept", "CarpentersPlane::287kt"], 
                    Entity["Concept", "PowerDrill::j44yg"], 
                    Entity["Concept", "LawnMower::z97p3"], 
                    Entity["Concept", "Hammer::cx2fn"], 
                    Entity["Concept", "BottleScrew::djq6x"], 
                    Entity["Concept", "CanOpener::6b885"], 
                    Entity["Concept", "PlumbersHelper::hq4m2"], 
                    Entity["Concept", "Screwdriver::8ty86"], 
                    Entity["Concept", "Shovel::tjpz7"], 
                    Entity["Concept", "Plough::y6c4t"], 
                    Entity["Concept", "ChainSaw::f5bt6"], 
                    Entity["Concept", "Cock::2s2xh"], 
                    Entity["Concept", "Hen::49q38"], 
                    Entity["Concept", "StruthioCamelus::7fgc2"], 
                    Entity["Concept", "Brambling::47bpt"], 
                    Entity["Concept", "CarduelisCarduelis::bv5y9"], 
                    Entity["Concept", "CarpodacusMexicanus::zq6w8"], 
                    Entity["Concept", "Junco::sjqs9"], 
                    Entity["Concept", "IndigoBird::6365d"], 
                    Entity["Concept", "AmericanRobin::wf28w"], 
                    Entity["Concept", "Bulbul::4x6vd"], 
                    Entity["Concept", "Jay::9g7qw"], 
                    Entity["Concept", "Magpie::62kfm"], 
                    Entity["Concept", "Chickadee::qmsc9"], 
                    Entity["Concept", "WaterOuzel::n32d7"], 
                    Entity["Concept", "Kite::y2jjm"], 
                    Entity["Concept", "AmericanEagle::z2fqr"], 
                    Entity["Concept", "Vulture::r2nfy"], 
                    Entity["Concept", "GreatGrayOwl::97vk2"], 
                    Entity["Concept", "BlackGrouse::9w35m"], 
                    Entity["Concept", "Ptarmigan::tv6c8"], 
                    Entity["Concept", "BonasaUmbellus::bpbr3"], 
                    Entity["Concept", "PrairieChicken::2ws9g"], 
                    Entity["Concept", "Peacock::kd2y4"], 
                    Entity["Concept", "Quail::7462f"], 
                    Entity["Concept", "Partridge::t22mp"], 
                    Entity["Concept", "AfricanGray::84css"], 
                    Entity["Concept", "Macaw::ntx97"], 
                    Entity["Concept", "CacatuaGalerita::tfz9w"], 
                    Entity["Concept", "Lorikeet::4f725"], 
                    Entity["Concept", "Coucal::z95g6"], 
                    Entity["Concept", "BeeEater::376h3"], 
                    Entity["Concept", "Hornbill::6389h"], 
                    Entity["Concept", "Hummingbird::vz6gt"], 
                    Entity["Concept", "Jacamar::v7428"], 
                    Entity["Concept", "Toucan::2h2d5"], 
                    Entity["Concept", "Drake::5cdfw"], 
                    Entity["Concept", "MergusSerrator::5t86m"], 
                    Entity["Concept", "Goose::82x27"], 
                    Entity["Concept", "BlackSwan::6ft7p"], 
                    Entity["Concept", "CiconiaCiconia::wkt3m"], 
                    Entity["Concept", "BlackStork::5v349"], 
                    Entity["Concept", "Spoonbill::4939q"], 
                    Entity["Concept", "Flamingo::28r7m"], 
                    Entity["Concept", "AmericanEgret::43jz8"], 
                    Entity["Concept", "EgrettaCaerulea::9965c"], 
                    Entity["Concept", "Bittern::722qw"], 
                    Entity["Concept", "Crane::9wrg8"], 
                    Entity["Concept", "AramusPictus::964mw"], 
                    Entity["Concept", "AmericanCoot::c7452"], 
                    Entity["Concept", "Bustard::p3zj5"], 
                    Entity["Concept", "ArenariaInterpres::3rbq4"], 
                    Entity["Concept", "Dunlin::4mj52"], 
                    Entity["Concept", "Redshank::yvbj8"], 
                    Entity["Concept", "Dowitcher::47w6h"], 
                    Entity["Concept", "OysterCatcher::9drpt"], 
                    Entity["Concept", "EuropeanGallinule::c7jfx"], 
                    Entity["Concept", "Pelican::jpfg7"], 
                    Entity["Concept", "AptenodytesPatagonica::f85wf"], 
                    Entity["Concept", "Mollymawk::r8386"], 
                    Entity["Concept", "CarcharodonCarcharias::st7pj"], 
                    Entity["Concept", "GaleocerdoCuvieri::h7238"], 
                    Entity["Concept", "HammerheadShark::cky4t"], 
                    Entity["Concept", "Crampfish::6369q"], 
                    Entity["Concept", "Stingray::4cts3"], 
                    Entity["Concept", "Barracouta::dzc32"], 
                    Entity["Concept", "BlueJack::8728b"], 
                    Entity["Concept", "Tench::q9r2d"], 
                    Entity["Concept", "CarassiusAuratus::f73xs"], 
                    Entity["Concept", "Eel::6yymn"], 
                    Entity["Concept", "HolocanthusTricolor::6t872"], 
                    Entity["Concept", "AnemoneFish::5mdgt"], 
                    Entity["Concept", "Lionfish::45vp5"], 
                    Entity["Concept", "Globefish::z6448"], 
                    Entity["Concept", "Sturgeon::46xyk"], 
                    Entity["Concept", "Garfish::p9w7b"], 
                    Entity["Concept", "CarettaCaretta::768y9"], 
                    Entity["Concept", "DermochelysCoriacea::ypc4b"], 
                    Entity["Concept", "MudTurtle::47p9w"], 
                    Entity["Concept", "Terrapin::5j9b2"], 
                    Entity["Concept", "BoxTortoise::hksb9"], 
                    Entity["Concept", "BandedGecko::38zhr"], 
                    Entity["Concept", "CommonIguana::66q43"], 
                    Entity["Concept", "AmericanChameleon::67k54"], 
                    Entity["Concept", "Whiptail::sb62k"], 
                    Entity["Concept", "Agama::22vdx"], 
                    Entity["Concept", "ChlamydosaurusKingi::stq3k"], 
                    Entity["Concept", "AlligatorLizard::k6335"], 
                    Entity["Concept", "GilaMonster::k8q26"], 
                    Entity["Concept", "GreenLizard::2fkzv"], 
                    Entity["Concept", "AfricanChameleon::x82fs"], 
                    Entity["Concept", "DragonLizard::s68v6"], 
                    Entity["Concept", "Triceratops::p997c"], 
                    Entity["Concept", "AfricanCrocodile::zw55f"], 
                    Entity["Concept", "AlligatorMississipiensis::s7582"], 
                    Entity["Concept", "CarphophisAmoenus::35dfs"], 
                    Entity["Concept", "Ring-neckedSnake::2f823"], 
                    Entity["Concept", "HognoseSnake::k5k58"], 
                    Entity["Concept", "GrassSnake::pv2xf"], 
                    Entity["Concept", "KingSnake::t9m8y"], 
                    Entity["Concept", "GarterSnake::892t9"], 
                    Entity["Concept", "WaterSnake::y627x"], 
                    Entity["Concept", "VineSnake::9kywz"], 
                    Entity["Concept", "HypsiglenaTorquata::6869v"], 
                    Entity["Concept", "BoaConstrictor::qq73z"], 
                    Entity["Concept", "PythonSebae::dmhh6"], 
                    Entity["Concept", "IndianCobra::2sv7h"], 
                    Entity["Concept", "GreenMamba::c9qn3"], 
                    Entity["Concept", "SeaSnake::s529y"], 
                    Entity["Concept", "Cerastes::6575z"], 
                    Entity["Concept", "CrotalusAdamanteus::8ynrx"], 
                    Entity["Concept", "CrotalusCerastes::m382t"], 
                    Entity["Concept", "EuropeanFireSalamander::t6v33"], 
                    Entity["Concept", "CommonNewt::9nx3s"], 
                    Entity["Concept", "Eft::t3bv7"], 
                    Entity["Concept", "AmbystomaMaculatum::qnd2g"], 
                    Entity["Concept", "AmbystomaMexicanum::k9j45"], 
                    Entity["Concept", "Bullfrog::r9cvc"], 
                    Entity["Concept", "Tree-frog::m988r"], 
                    Entity["Concept", "AscaphusTrui::qr2np"], 
                    Entity["Concept", "Whistle::pv275"], 
                    Entity["Concept", "Wing::tbhz7"], 
                    Entity["Concept", "Paintbrush::2456k"], 
                    Entity["Concept", "BlowDrier::t4dpz"], 
                    Entity["Concept", "OxygenMask::4k479"], 
                    Entity["Concept", "Snorkel::53ncf"], 
                    Entity["Concept", "Loudspeaker::44d64"], 
                    Entity["Concept", "Microphone::7bqww"], 
                    Entity["Concept", "CRTScreen::q6vr6"], 
                    Entity["Concept", "ComputerMouse::kbzr4"], 
                    Entity["Concept", "ElectricFan::n79z5"], 
                    Entity["Concept", "OilFilter::d8chh"], 
                    Entity["Concept", "Strainer::2c2kx"], 
                    Entity["Concept", "SpaceHeater::spt23"], 
                    Entity["Concept", "Stove::27vm8"], 
                    Entity["Concept", "Guillotine::w4656"], 
                    Entity["Concept", "Barometer::65g49"], 
                    Entity["Concept", "Rule::shrw6"], 
                    Entity["Concept", "Hodometer::jw6kb"], 
                    Entity["Concept", "WeighingMachine::2xvy7"], 
                    Entity["Concept", "AnalogClock::3832f"], 
                    Entity["Concept", "DigitalClock::hm3x5"], 
                    Entity["Concept", "WallClock::w5687"], 
                    Entity["Concept", "Hourglass::83jnz"], 
                    Entity["Concept", "Sundial::7mj6d"], 
                    Entity["Concept", "ParkingMeter::h445p"], 
                    Entity["Concept", "StopWatch::4vk6s"], 
                    Entity["Concept", "DigitalWatch::v274r"], 
                    Entity["Concept", "Stethoscope::f829c"], 
                    Entity["Concept", "Syringe::8j57r"], 
                    Entity["Concept", "MagneticCompass::5r692"], 
                    Entity["Concept", "Binoculars::yp4ss"], 
                    Entity["Concept", "Projector::d56q9"], 
                    Entity["Concept", "DarkGlasses::855bw"], 
                    Entity["Concept", "JewelersLoupe::kg4bc"], 
                    Entity["Concept", "RadioReflector::55ckr"], 
                    Entity["Concept", "Bow::89mx8"], 
                    Entity["Concept", "Cannon::54f56"], 
                    Entity["Concept", "AssaultRifle::d2gst"], 
                    Entity["Concept", "Rifle::x7pp3"], 
                    Entity["Concept", "Missile::n28m6"], 
                    Entity["Concept", "ComputerKeyboard::26d5s"], 
                    Entity["Concept", "TypewriterKeyboard::z8334"], 
                    Entity["Concept", "Crane::k29p4"], 
                    Entity["Concept", "Igniter::638td"], 
                    Entity["Concept", "Abacus::s322h"], 
                    Entity["Concept", "AutomatedTeller::w8746"], 
                    Entity["Concept", "SlideRule::59p96"], 
                    Entity["Concept", "DesktopComputer::f8gmj"], 
                    Entity["Concept", "Hand-heldComputer::zs5zw"], 
                    Entity["Concept", "NotebookComputer::b3h64"], 
                    Entity["Concept", "InternetSite::639pp"], 
                    Entity["Concept", "Harvester::472sq"], 
                    Entity["Concept", "ThreshingMachine::372m3"], 
                    Entity["Concept", "Printer::c4244"], 
                    Entity["Concept", "One-armedBandit::573v8"], 
                    Entity["Concept", "VendingMachine::96kgg"], 
                    Entity["Concept", "SewingMachine::23c46"], 
                    Entity["Concept", "Joystick::nj32z"], 
                    Entity["Concept", "ElectricalSwitch::5gnjt"], 
                    Entity["Concept", "Claw::7kmg8"], 
                    Entity["Concept", "CarWheel::t6f2y"], 
                    Entity["Concept", "PaddleWheel::c59g3"], 
                    Entity["Concept", "Pinwheel::85td5"], 
                    Entity["Concept", "PottersWheel::zwt32"], 
                    Entity["Concept", "GasolinePump::wk2nk"], 
                    Entity["Concept", "Carousel::n2992"], 
                    Entity["Concept", "Swing::s5b96"], 
                    Entity["Concept", "Reel::v4rgf"], 
                    Entity["Concept", "Radiator::3959j"], 
                    Entity["Concept", "HockeyPuck::3hj3q"], 
                    Entity["Concept", "FixedDisk::5xfff"], 
                    Entity["Concept", "Sunglass::xc3yz"], 
                    Entity["Concept", "Plectron::5g596"], 
                    Entity["Concept", "CarMirror::5xccg"], 
                    Entity["Concept", "SolarCollector::pw2xw"], 
                    Entity["Concept", "Remote::h4drx"], 
                    Entity["Concept", "DiscBrake::bxcw7"], 
                    Entity["Concept", "Buckle::3398s"], 
                    Entity["Concept", "HairSlide::3xwcp"], 
                    Entity["Concept", "Knot::f4x5y"], 
                    Entity["Concept", "CombinationLock::b8rp7"], 
                    Entity["Concept", "Padlock::73c99"], 
                    Entity["Concept", "Nail::x2828"], 
                    Entity["Concept", "SafetyPin::8h4m3"], 
                    Entity["Concept", "Screw::wwzc4"], 
                    Entity["Concept", "Muzzle::c7f4q"], 
                    Entity["Concept", "SeatBelt::4qg32"], 
                    Entity["Concept", "Ski::5nbj2"], 
                    Entity["Concept", "WaxLight::d9rqz"], 
                    Entity["Concept", "Jack-o-lantern::yss6v"], 
                    Entity["Concept", "Spot::q3792"], 
                    Entity["Concept", "Torch::j9rg7"], 
                    Entity["Concept", "NeckBrace::hxh4p"], 
                    Entity["Concept", "Pier::36y3h"], 
                    Entity["Concept", "Tripod::pqth2"], 
                    Entity["Concept", "Maypole::qc3qr"], 
                    Entity["Concept", "Mousetrap::j8542"], 
                    Entity["Concept", "SpidersWeb::28fz6"], 
                    Entity["Concept", "Trilobite::3qyq3"], 
                    Entity["Concept", "Harvestman::545h3"], 
                    Entity["Concept", "Scorpion::9rx48"], 
                    Entity["Concept", "ArgiopeAurantia::633xv"], 
                    Entity["Concept", "AraneusCavaticus::thm3g"], 
                    Entity["Concept", "AraneaDiademata::4jvj8"], 
                    Entity["Concept", "BlackWidow::4682d"], 
                    Entity["Concept", "Tarantula::mc462"], 
                    Entity["Concept", "HuntingSpider::q7898"], 
                    Entity["Concept", "Tick::xw6hc"], 
                    Entity["Concept", "Centipede::s8w7r"], 
                    Entity["Concept", "Isopod::4z747"], 
                    Entity["Concept", "CancerMagister::5r562"], 
                    Entity["Concept", "CancerIrroratus::d69mr"], 
                    Entity["Concept", "FiddlerCrab::4mt9n"], 
                    Entity["Concept", "ParalithodesCamtschatica::pfzy2"], 
                    Entity["Concept", "HomarusAmericanus::n2j65"], 
                    Entity["Concept", "SeaCrawfish::x53g2"], 
                    Entity["Concept", "Crawdaddy::946y4"], 
                    Entity["Concept", "HermitCrab::4k242"], 
                    Entity["Concept", "TigerBeetle::8362y"], 
                    Entity["Concept", "LadyBeetle::tx6bz"], 
                    Entity["Concept", "CarabidBeetle::w3hjn"], 
                    Entity["Concept", "Long-hornedBeetle::9zzc8"], 
                    Entity["Concept", "Chrysomelid::y8pqz"], 
                    Entity["Concept", "DungBeetle::bt6hz"], 
                    Entity["Concept", "RhinocerosBeetle::23y53"], 
                    Entity["Concept", "Weevil::r87rt"], 
                    Entity["Concept", "Fly::68s97"], 
                    Entity["Concept", "Bee::d8yym"], 
                    Entity["Concept", "Grasshopper::52v2f"], 
                    Entity["Concept", "Cricket::82n55"], 
                    Entity["Concept", "StickInsect::4x983"], 
                    Entity["Concept", "Cockroach::7426w"], 
                    Entity["Concept", "Mantid::93t86"], 
                    Entity["Concept", "Cicada::w2299"], 
                    Entity["Concept", "Leafhopper::8k2k2"], 
                    Entity["Concept", "Lacewing::8v2m6"], 
                    Entity["Concept", "Dragonfly::7s252"], 
                    Entity["Concept", "Damselfly::dh8zj"], 
                    Entity["Concept", "Admiral::j6fvp"], 
                    Entity["Concept", "RingletButterfly::28v7s"], 
                    Entity["Concept", "DanausPlexippus::bfk9c"], 
                    Entity["Concept", "CabbageButterfly::c8v77"], 
                    Entity["Concept", "SulfurButterfly::b9263"], 
                    Entity["Concept", "Lycaenid::4whyw"], 
                    Entity["Concept", "Jellyfish::fs9rf"], 
                    Entity["Concept", "SeaAnemone::5n98x"], 
                    Entity["Concept", "BrainCoral::v7844"], 
                    Entity["Concept", "Flatworm::h957w"], 
                    Entity["Concept", "Nematode::hz536"], 
                    Entity["Concept", "Conch::44pfv"], 
                    Entity["Concept", "Snail::3r58h"], 
                    Entity["Concept", "Slug::d4638"], 
                    Entity["Concept", "Nudibranch::dq2vh"], 
                    Entity["Concept", "Coat-of-mailShell::h3tp5"], 
                    Entity["Concept", "SeaUrchin::7b835"], 
                    Entity["Concept", "Holothurian::7jk5q"], 
                    Entity["Concept", "SmoothingIron::274h7"], 
                    Entity["Concept", "EspressoMaker::z42xs"], 
                    Entity["Concept", "MicrowaveOven::fs7tb"], 
                    Entity["Concept", "DutchOven::qy3dv"], 
                    Entity["Concept", "Rotisserie::c8hjy"], 
                    Entity["Concept", "Toaster::rp6v2"], 
                    Entity["Concept", "WaffleIron::gpqx8"], 
                    Entity["Concept", "VacuumCleaner::7rg56"], 
                    Entity["Concept", "DishWasher::px58r"], 
                    Entity["Concept", "Icebox::tnkd4"], 
                    Entity["Concept", "AutomaticWasher::6d32z"], 
                    Entity["Concept", "CrockPot::w5t85"], 
                    Entity["Concept", "FryingPan::23fyh"], 
                    Entity["Concept", "Wok::fv9fj"], 
                    Entity["Concept", "Caldron::k6c8c"], 
                    Entity["Concept", "Coffeepot::32tb2"], 
                    Entity["Concept", "Teapot::c54x7"], 
                    Entity["Concept", "Spatula::r7876"], 
                    Entity["Concept", "Altar::z644x"], 
                    Entity["Concept", "TriumphalArch::q79sh"], 
                    Entity["Concept", "Patio::65kf2"], 
                    Entity["Concept", "SteelArchBridge::46zx5"], 
                    Entity["Concept", "SuspensionBridge::66qcg"], 
                    Entity["Concept", "Viaduct::p32mt"], 
                    Entity["Concept", "Barn::6xw3q"], 
                    Entity["Concept", "Glasshouse::qxjm6"], 
                    Entity["Concept", "Palace::3556d"], 
                    Entity["Concept", "Monastery::mkgg8"], 
                    Entity["Concept", "Library::8855f"], 
                    Entity["Concept", "Apiary::d939v"], 
                    Entity["Concept", "Boathouse::59rht"], 
                    Entity["Concept", "ChurchBuilding::2394b"], 
                    Entity["Concept", "Mosque::35k94"], 
                    Entity["Concept", "Stupa::g64q6"], 
                    Entity["Concept", "Planetarium::kq5yg"], 
                    Entity["Concept", "Eatery::f73dy"], 
                    Entity["Concept", "MovieHouse::hbj23"], 
                    Entity["Concept", "HomeTheater::4y845"], 
                    Entity["Concept", "Lumbermill::94r3y"], 
                    Entity["Concept", "Coil::c7h65"], 
                    Entity["Concept", "Obelisk::s7vg6"], 
                    Entity["Concept", "TotemPole::gbxn5"], 
                    Entity["Concept", "Castle::m2pbs"], 
                    Entity["Concept", "Prison::rsq7c"], 
                    Entity["Concept", "FoodMarket::4bmts"], 
                    Entity["Concept", "Bakehouse::6nmsm"], 
                    Entity["Concept", "Barbershop::qg6kn"], 
                    Entity["Concept", "Bookshop::4rgfr"], 
                    Entity["Concept", "ButcherShop::hfp48"], 
                    Entity["Concept", "CandyStore::268x7"], 
                    Entity["Concept", "Shoe-shop::7ds48"], 
                    Entity["Concept", "TobacconistShop::88ncg"], 
                    Entity["Concept", "Toyshop::74q74"], 
                    Entity["Concept", "Fountain::yn972"], 
                    Entity["Concept", "CliffDwelling::5c9sb"], 
                    Entity["Concept", "Yurt::4bbtv"], 
                    Entity["Concept", "DockingFacility::f42zy"], 
                    Entity["Concept", "MemorialTablet::66g76"], 
                    Entity["Concept", "Megalith::753z9"], 
                    Entity["Concept", "Balusters::nt6x4"], 
                    Entity["Concept", "Breakwater::nrtz2"], 
                    Entity["Concept", "Dam::w9687"], 
                    Entity["Concept", "ChainlinkFence::pfv8d"], 
                    Entity["Concept", "Paling::2brd3"], 
                    Entity["Concept", "SnakeFence::837z2"], 
                    Entity["Concept", "StoneWall::8489j"], 
                    Entity["Concept", "RadiatorGrille::75d36"], 
                    Entity["Concept", "SlidingDoor::m65qk"], 
                    Entity["Concept", "Turnstile::82gr4"], 
                    Entity["Concept", "MountainTent::k5s7y"], 
                    Entity["Concept", "Scoreboard::z76vk"], 
                    Entity["Concept", "Honeycomb::qq347"], 
                    Entity["Concept", "PlateRack::sxt2r"], 
                    Entity["Concept", "Footstall::b89vf"], 
                    Entity["Concept", "BeaconLight::k282w"], 
                    Entity["Concept", "MashedPotato::8ys8w"], 
                    Entity["Concept", "BellPepper::9w646"], 
                    Entity["Concept", "HeadCabbage::9c693"], 
                    Entity["Concept", "Broccoli::spbm9"], 
                    Entity["Concept", "Cauliflower::fmp3m"], 
                    Entity["Concept", "Courgette::44yb5"], 
                    Entity["Concept", "SpaghettiSquash::8j979"], 
                    Entity["Concept", "AcornSquash::8p8y2"], 
                    Entity["Concept", "ButternutSquash::6k466"], 
                    Entity["Concept", "Cuke::nzfb2"], 
                    Entity["Concept", "Artichoke::ntvv7"], 
                    Entity["Concept", "Cardoon::s78dn"], 
                    Entity["Concept", "Mushroom::3xw4j"], 
                    Entity["Concept", "ShowerCurtain::6cs25"], 
                    Entity["Concept", "BlueJean::68hww"], 
                    Entity["Concept", "Carton::769gr"], 
                    Entity["Concept", "Handkerchief::84d24"], 
                    Entity["Concept", "Sandal::7f3xr"], 
                    Entity["Concept", "Ash-bin::6sd8p"], 
                    Entity["Concept", "Safe::36p67"], 
                    Entity["Concept", "Plate::2244k"], 
                    Entity["Concept", "Necklace::58n8w"], 
                    Entity["Concept", "CroquetBall::g84t5"], 
                    Entity["Concept", "FurCoat::6q374"], 
                    Entity["Concept", "Thimble::9828b"], 
                    Entity["Concept", "Jammies::5vhcb"], 
                    Entity["Concept", "RunningShoe::z7fvm"], 
                    Entity["Concept", "CocktailShaker::r9655"], 
                    Entity["Concept", "Chest::fd956"], 
                    Entity["Concept", "ManholeCover::4x7fq"], 
                    Entity["Concept", "Modem::wq8j3"], 
                    Entity["Concept", "Vat::vcpt8"], 
                    Entity["Concept", "Tray::jyx2n"], 
                    Entity["Concept", "BalanceBeam::6nyqs"], 
                    Entity["Concept", "Bagel::x38n5"], 
                    Entity["Concept", "PrayerMat::x6rjb"], 
                    Entity["Concept", "Kimono::284nv"], 
                    Entity["Concept", "HotPot::kgb8q"], 
                    Entity["Concept", "WhiskeyJug::5gcrh"], 
                    Entity["Concept", "KneePad::nh7y5"], 
                    Entity["Concept", "BookJacket::sy4d3"], 
                    Entity["Concept", "Spindle::7zh9v"], 
                    Entity["Concept", "SkiMask::6hd4m"], 
                    Entity["Concept", "BeerBottle::8gz7t"], 
                    Entity["Concept", "CrashHelmet::76cs8"], 
                    Entity["Concept", "Bottlecap::mgg5c"], 
                    Entity["Concept", "TileRoof::5p749"], 
                    Entity["Concept", "Mask::798jz"], 
                    Entity["Concept", "Maillot::d8grj"], 
                    Entity["Concept", "PetriDish::xt977"], 
                    Entity["Concept", "FootballHelmet::c6twc"], 
                    Entity["Concept", "BathingCap::tsd8r"], 
                    Entity["Concept", "TeddyBear::f56q9"], 
                    Entity["Concept", "Holster::g2prc"], 
                    Entity["Concept", "PopBottle::6243b"], 
                    Entity["Concept", "Photocopier::33g75"], 
                    Entity["Concept", "Vestment::334y8"], 
                    Entity["Concept", "Crossword::yqtk6"], 
                    Entity["Concept", "GolfBall::63tb2"], 
                    Entity["Concept", "Trifle::b4264"], 
                    Entity["Concept", "SuitOfClothes::5c67x"], 
                    Entity["Concept", "WaterTower::4rr5d"], 
                    Entity["Concept", "FeatherBoa::c94h7"], 
                    Entity["Concept", "Cloak::dj822"], 
                    Entity["Concept", "RedWine::666g6"], 
                    Entity["Concept", "Drumstick::4j5yw"], 
                    Entity["Concept", "Buckler::4m7zq"], 
                    Entity["Concept", "ChristmasStocking::867r8"], 
                    Entity["Concept", "Hoopskirt::3784g"], 
                    Entity["Concept", "Menu::g698m"], 
                    Entity["Concept", "Stage::86r83"], 
                    Entity["Concept", "PokeBonnet::f4y42"], 
                    Entity["Concept", "MeatLoaf::t7nnp"], 
                    Entity["Concept", "Baseball::9f8qz"], 
                    Entity["Concept", "FacePowder::yzy7x"], 
                    Entity["Concept", "Scabbard::77z36"], 
                    Entity["Concept", "Sunblock::65k7n"], 
                    Entity["Concept", "BeerGlass::r6xp2"], 
                    Entity["Concept", "GrifolaFrondosa::m7rxd"], 
                    Entity["Concept", "Guacamole::xc482"], 
                    Entity["Concept", "LampShade::4b824"], 
                    Entity["Concept", "Woolen::ns82d"], 
                    Entity["Concept", "Hay::vcd3m"], 
                    Entity["Concept", "Bow-tie::79h37"], 
                    Entity["Concept", "Postbag::ck37r"], 
                    Entity["Concept", "WaterJug::759dt"], 
                    Entity["Concept", "Bucket::f9743"], 
                    Entity["Concept", "Dishcloth::4t678"], 
                    Entity["Concept", "SoupBowl::w86pk"], 
                    Entity["Concept", "Eggnog::9v7t8"], 
                    Entity["Concept", "Mortar::jz37q"], 
                    Entity["Concept", "TrenchCoat::rq833"], 
                    Entity["Concept", "BoatPaddle::843sz"], 
                    Entity["Concept", "Chain::w9j9s"], 
                    Entity["Concept", "Mop::v6xdr"], 
                    Entity["Concept", "MixingBowl::djy62"], 
                    Entity["Concept", "Potpie::38zh5"], 
                    Entity["Concept", "WineBottle::g4m78"], 
                    Entity["Concept", "Shoji::x95jt"], 
                    Entity["Concept", "BulletproofVest::djqn3"], 
                    Entity["Concept", "DrillingPlatform::r792r"], 
                    Entity["Concept", "Ring-binder::848m9"], 
                    Entity["Concept", "Cardigan::237mv"], 
                    Entity["Concept", "Sweatshirt::s5937"], 
                    Entity["Concept", "Flowerpot::jjb26"], 
                    Entity["Concept", "Birdhouse::n3qgq"], 
                    Entity["Concept", "Hamper::3b93m"], 
                    Entity["Concept", "Ping-pongBall::3vdwp"], 
                    Entity["Concept", "PencilBox::977v9"], 
                    Entity["Concept", "Pay-phone::4h2kc"], 
                    Entity["Concept", "Consomme::37g8f"], 
                    Entity["Concept", "Apron::qr79c"], 
                    Entity["Concept", "PunchBag::wm5qg"], 
                    Entity["Concept", "BackPack::2cjsp"], 
                    Entity["Concept", "Bridegroom::85m28"], 
                    Entity["Concept", "Busby::448c3"], 
                    Entity["Concept", "PencilSharpener::23nv4"], 
                    Entity["Concept", "Broom::hgy49"], 
                    Entity["Concept", "MosquitoNet::5z562"], 
                    Entity["Concept", "Abaya::327b3"], 
                    Entity["Concept", "Mortarboard::8r99w"], 
                    Entity["Concept", "Poncho::tr389"], 
                    Entity["Concept", "Crutch::3q57h"], 
                    Entity["Concept", "PolaroidCamera::38q9k"], 
                    Entity["Concept", "SpaceBar::735sr"], 
                    Entity["Concept", "Cup::q9zjy"], 
                    Entity["Concept", "Racquet::53f72"], 
                    Entity["Concept", "TrafficLight::b4966"], 
                    Entity["Concept", "QuillPen::jm57s"], 
                    Entity["Concept", "Radio::8p736"], 
                    Entity["Concept", "Dough::8x86g"], 
                    Entity["Concept", "Cuirass::256jq"], 
                    Entity["Concept", "MilitaryUniform::r9626"], 
                    Entity["Concept", "LipRouge::4vd22"], 
                    Entity["Concept", "ShowerCap::2787m"], 
                    Entity["Concept", "Monitor::nh8d4"], 
                    Entity["Concept", "Cathode-rayOscilloscope::z4q77"], 
                    Entity["Concept", "Mitten::7d534"], 
                    Entity["Concept", "Bandeau::4j247"], 
                    Entity["Concept", "FrenchLoaf::x859t"], 
                    Entity["Concept", "Vase::4x594"], 
                    Entity["Concept", "MilkCan::d9g72"], 
                    Entity["Concept", "RugbyBall::34tbp"], 
                    Entity["Concept", "PaperTowel::j7j8m"], 
                    Entity["Concept", "Earthstar::678m7"], 
                    Entity["Concept", "Envelope::c722j"], 
                    Entity["Concept", "Mini::pn78q"], 
                    Entity["Concept", "CowboyHat::59wk9"], 
                    Entity["Concept", "TracklessTrolley::78g52"], 
                    Entity["Concept", "Essence::9m7fx"], 
                    Entity["Concept", "BathingTub::729f8"], 
                    Entity["Concept", "RedHot::3j848"], 
                    Entity["Concept", "CoralFungus::f7fp4"], 
                    Entity["Concept", "BulletTrain::4dfr5"], 
                    Entity["Concept", "Pillow::3y32w"], 
                    Entity["Concept", "BathroomTissue::ts4sr"], 
                    Entity["Concept", "Cassette::2pvzn"], 
                    Entity["Concept", "CarpentersKit::37rxx"], 
                    Entity["Concept", "Ladle::3m7q7"], 
                    Entity["Concept", "CarrionFungus::wj2ng"], 
                    Entity["Concept", "Lotion::79h3v"], 
                    Entity["Concept", "HairSpray::9w6z4"], 
                    Entity["Concept", "AcademicGown::6vvft"], 
                    Entity["Concept", "Dome::5j3x2"], 
                    Entity["Concept", "Crate::wmc92"], 
                    Entity["Concept", "Wig::9msqy"], 
                    Entity["Concept", "Burrito::4xwy5"], 
                    Entity["Concept", "PillBottle::r9pdj"], 
                    Entity["Concept", "ChainArmor::h32y6"], 
                    Entity["Concept", "TheaterCurtain::5kbhk"], 
                    Entity["Concept", "WindowShade::3rh75"], 
                    Entity["Concept", "Barrel::3pzvn"], 
                    Entity["Concept", "Handbasin::6w875"], 
                    Entity["Concept", "Ballpen::k35fx"], 
                    Entity["Concept", "Basketball::jq262"], 
                    Entity["Concept", "BathTowel::72qcw"], 
                    Entity["Concept", "CowboyBoot::5f655"], 
                    Entity["Concept", "Gown::76k26"], 
                    Entity["Concept", "WindowScreen::wfk7m"], 
                    Entity["Concept", "Agaric::844w2"], 
                    Entity["Concept", "Cellphone::5k4s4"], 
                    Entity["Concept", "Nipple::jfzc3"], 
                    Entity["Concept", "Barbell::295kg"], 
                    Entity["Concept", "LetterBox::pccp7"], 
                    Entity["Concept", "LabCoat::6fg55"], 
                    Entity["Concept", "FireScreen::665b5"], 
                    Entity["Concept", "Minibus::y94d9"], 
                    Entity["Concept", "Packet::r63y2"], 
                    Entity["Concept", "Labyrinth::gc6rg"], 
                    Entity["Concept", "Pole::c4566"], 
                    Entity["Concept", "HighBar::n5222"], 
                    Entity["Concept", "Sombrero::k9893"], 
                    Entity["Concept", "Pickelhaube::pgr6y"], 
                    Entity["Concept", "RainBarrel::65nkh"], 
                    Entity["Concept", "Billfold::z7845"], 
                    Entity["Concept", "CassettePlayer::v2ng9"], 
                    Entity["Concept", "ComicBook::ty3qz"], 
                    Entity["Concept", "PennyBank::78b56"], 
                    Entity["Concept", "StreetSign::ysx2f"], 
                    Entity["Concept", "BellCot::567d3"], 
                    Entity["Concept", "FountainPen::r2vw4"], 
                    Entity["Concept", "WindsorTie::5tt62"], 
                    Entity["Concept", "Volleyball::q7bkw"], 
                    Entity["Concept", "Overskirt::n87sx"], 
                    Entity["Concept", "Sarong::96j5v"], 
                    Entity["Concept", "Purse::n57jd"], 
                    Entity["Concept", "BolaTie::g65x6"], 
                    Entity["Concept", "Bib::5wq8k"], 
                    Entity["Concept", "Parachute::k594d"], 
                    Entity["Concept", "SleepingBag::549k4"], 
                    Entity["Concept", "TelevisionSystem::5593b"], 
                    Entity["Concept", "BathingTrunks::c892w"], 
                    Entity["Concept", "MeasuringCup::7b637"], 
                    Entity["Concept", "Espresso::rv2y4"], 
                    Entity["Concept", "Pizza::56w88"], 
                    Entity["Concept", "Breastplate::4fmw7"], 
                    Entity["Concept", "ShoppingBasket::db865"], 
                    Entity["Concept", "WoodenSpoon::nc2wp"], 
                    Entity["Concept", "SaltShaker::7k48t"], 
                    Entity["Concept", "ChocolateSauce::y5838"], 
                    Entity["Concept", "Ballplayer::7v976"], 
                    Entity["Concept", "Goblet::h85x9"], 
                    Entity["Concept", "Gyromitra::3v4zb"], 
                    Entity["Concept", "Stretcher::74r96"], 
                    Entity["Concept", "WaterBottle::5wh67"], 
                    Entity["Concept", "DialPhone::3j2f6"], 
                    Entity["Concept", "SoapDispenser::c2fjc"], 
                    Entity["Concept", "TeeShirt::nk5bs"], 
                    Entity["Concept", "SchoolBus::2983r"], 
                    Entity["Concept", "JigsawPuzzle::jgp79"], 
                    Entity["Concept", "PlasticBag::9x453"], 
                    Entity["Concept", "ReflexCamera::j67h4"], 
                    Entity["Concept", "Nappy::6979r"], 
                    Entity["Concept", "BandAid::z727z"], 
                    Entity["Concept", "IceLolly::473v3"], 
                    Entity["Concept", "Velvet::575z6"], 
                    Entity["Concept", "TennisBall::xk58h"], 
                    Entity["Concept", "GasHelmet::23k79"], 
                    Entity["Concept", "WelcomeMat::jqb5y"], 
                    Entity["Concept", "Loafer::br9fk"], 
                    Entity["Concept", "IceCream::825yn"], 
                    Entity["Concept", "Pretzel::967k7"], 
                    Entity["Concept", "Quilt::f56w9"], 
                    Entity["Concept", "TankSuit::5k74s"], 
                    Entity["Concept", "TapePlayer::bf5f8"], 
                    Entity["Concept", "Geta::3r9c9"], 
                    Entity["Concept", "IPod::366dw"], 
                    Entity["Concept", "Bolete::9g3s2"], 
                    Entity["Concept", "ScubaDiver::kqb95"], 
                    Entity["Concept", "Ewer::w6672"], 
                    Entity["Concept", "Matchstick::266wm"], 
                    Entity["Concept", "Bikini::m86f8"], 
                    Entity["Concept", "Sock::8w379"], 
                    Entity["Concept", "CDPlayer::7gq93"], 
                    Entity["Concept", "LensCap::6j259"], 
                    Entity["Concept", "ThatchedRoof::w2cjw"], 
                    Entity["Concept", "Vault::7k875"], 
                    Entity["Concept", "Beaker::btv5s"], 
                    Entity["Concept", "Bubble::qp224"], 
                    Entity["Concept", "Cheeseburger::3z2z7"], 
                    Entity["Concept", "Bars::3m828"], 
                    Entity["Concept", "Flagstaff::qz2t6"], 
                    Entity["Concept", "CoffeeMug::gwhm5"], 
                    Entity["Concept", "PencilEraser::7y7dd"], 
                    Entity["Concept", "Stole::g8fqc"], 
                    Entity["Concept", "Carbonara::9my37"], 
                    Entity["Concept", "Dumbbell::qjh33"]}, "Dimensions" -> 
                  1001], 
                 NeuralNetworks`TensorT[{1001}, NeuralNetworks`RealT]]]], 
            NeuralNetworks`Private`NetChain`opart, 
            NeuralNetworks`Private`NetChain`part, 
            NeuralNetworks`Private`NetChain`selected = Null}, 
            DynamicBox[GridBox[{{
                NeuralNetworks`Private`NetChain`MouseClickBoxes[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"3\"", "\"299\"", 
                    "\"299\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv_conv2d\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_conv2d"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_conv2d"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"32\"", "\"149\"", 
                    "\"149\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv_conv2d"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv_batchnorm\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_batchnorm"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_batchnorm"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"32\"", "\"149\"", 
                    "\"149\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv_batchnorm"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv_relu\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_relu"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_relu"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"32\"", "\"149\"", 
                    "\"149\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv_relu"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv_1_conv2d\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_1_conv2d"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_1_conv2d"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"32\"", "\"147\"", 
                    "\"147\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv_1_conv2d"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv_1_batchnorm\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_1_batchnorm"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_1_batchnorm"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"32\"", "\"147\"", 
                    "\"147\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv_1_batchnorm"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv_1_relu\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_1_relu"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_1_relu"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"32\"", "\"147\"", 
                    "\"147\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv_1_relu"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv_2_conv2d\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_2_conv2d"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_2_conv2d"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"147\"", 
                    "\"147\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv_2_conv2d"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv_2_batchnorm\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_2_batchnorm"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_2_batchnorm"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"147\"", 
                    "\"147\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv_2_batchnorm"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv_2_relu\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_2_relu"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_2_relu"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"147\"", 
                    "\"147\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv_2_relu"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"73\"", "\"73\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv_3_conv2d\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_3_conv2d"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_3_conv2d"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"80\"", "\"73\"", "\"73\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv_3_conv2d"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv_3_batchnorm\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_3_batchnorm"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_3_batchnorm"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"80\"", "\"73\"", "\"73\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv_3_batchnorm"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv_3_relu\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_3_relu"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_3_relu"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"80\"", "\"73\"", "\"73\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv_3_relu"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv_4_conv2d\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_4_conv2d"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_4_conv2d"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"192\"", "\"71\"", 
                    "\"71\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv_4_conv2d"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv_4_batchnorm\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_4_batchnorm"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_4_batchnorm"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"192\"", "\"71\"", 
                    "\"71\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv_4_batchnorm"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv_4_relu\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_4_relu"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_4_relu"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"192\"", "\"71\"", 
                    "\"71\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv_4_relu"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"192\"", "\"35\"", 
                    "\"35\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Inception1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Inception1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "23", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Inception1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"256\"", "\"35\"", 
                    "\"35\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "Inception1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Inception2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Inception2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "23", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Inception2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"288\"", "\"35\"", 
                    "\"35\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "Inception2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Inception3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Inception3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "23", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Inception3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"288\"", "\"35\"", 
                    "\"35\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "Inception3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Inception4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Inception4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "14", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Inception4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"768\"", "\"17\"", 
                    "\"17\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "Inception4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Inception5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Inception5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "32", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Inception5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"768\"", "\"17\"", 
                    "\"17\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "Inception5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Inception6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Inception6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "32", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Inception6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"768\"", "\"17\"", 
                    "\"17\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "Inception6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Inception7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Inception7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "32", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Inception7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"768\"", "\"17\"", 
                    "\"17\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "Inception7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Inception8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Inception8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "32", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Inception8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"768\"", "\"17\"", 
                    "\"17\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "Inception8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Inception9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Inception9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Inception9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1280\"", "\"8\"", "\"8\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "Inception9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Inception10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Inception10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "29", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Inception10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"2048\"", "\"8\"", "\"8\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "Inception10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Inception11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Inception11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "29", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Inception11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"2048\"", "\"8\"", "\"8\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "Inception11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"global_pool\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "global_pool"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "global_pool"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"2048\"", "\"1\"", "\"1\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "global_pool"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"flatten\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2048\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"fc1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fc1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fc1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1008\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "fc1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"part\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "part"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PartLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "part"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1001\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "part"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"softmax\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1001\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                 If[
                  ListQ[
                  NeuralNetworks`Private`NetChain`part = MouseAnnotation[]], 
                  If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
               NeuralNetworks`Private`NetChain`fmtSelected[
               NeuralNetworks`Private`NetChain`selected, 
                NeuralNetworks`Private`NetChain`part]}, 
              GridBoxSpacings -> {"Columns" -> {{1}}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}],
             ImageSizeCache->{524., {353., 361.}},
             TrackedSymbols:>{NeuralNetworks`Private`NetChain`selected}],
            Initialization:>{NetChain}],
           BaselinePosition->Automatic], "]"}]}],
        False],
       Deploy],
      LineBreakWithin->False],
     StandardForm],
    StandardForm,
    Editable->True], ",", 
   TagBox[
    FormBox[
     TagBox[GridBox[{
        {"\<\"\"\>", "\<\"input\"\>", 
         TagBox[GridBox[{
            {"\<\"image\"\>"},
            {
             TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
                
                TemplateBox[{
                 "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                  "\" \"", 
                  
                  TemplateBox[{
                   "\[Times]", "\"\[Times]\"", "\"3\"", "\"299\"", "\"299\""},
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                 "RowDefault"], 
                GrayLevel[0.5], StripOnInput -> False]},
              "RowDefault"]}
           },
           BaselinePosition->2,
           DefaultBaseStyle->"Column",
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"]},
        {
         StyleBox["\<\"conv_conv2d\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"convolution\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"32\"", "\"149\"", "\"149\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"conv_batchnorm\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"batch normalization\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"32\"", "\"149\"", "\"149\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"conv_relu\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], 
         TagBox[
          FormBox["\<\"ReLU\"\>",
           TraditionalForm],
          TraditionalForm,
          Editable->True], 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"32\"", "\"149\"", "\"149\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"conv_1_conv2d\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"convolution\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"32\"", "\"147\"", "\"147\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"conv_1_batchnorm\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"batch normalization\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"32\"", "\"147\"", "\"147\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"conv_1_relu\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], 
         TagBox[
          FormBox["\<\"ReLU\"\>",
           TraditionalForm],
          TraditionalForm,
          Editable->True], 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"32\"", "\"147\"", "\"147\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"conv_2_conv2d\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"convolution\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"64\"", "\"147\"", "\"147\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"conv_2_batchnorm\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"batch normalization\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"64\"", "\"147\"", "\"147\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"conv_2_relu\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], 
         TagBox[
          FormBox["\<\"ReLU\"\>",
           TraditionalForm],
          TraditionalForm,
          Editable->True], 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"64\"", "\"147\"", "\"147\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"pool\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"pooling\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"64\"", "\"73\"", "\"73\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"conv_3_conv2d\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"convolution\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"80\"", "\"73\"", "\"73\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"conv_3_batchnorm\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"batch normalization\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"80\"", "\"73\"", "\"73\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"conv_3_relu\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], 
         TagBox[
          FormBox["\<\"ReLU\"\>",
           TraditionalForm],
          TraditionalForm,
          Editable->True], 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"80\"", "\"73\"", "\"73\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"conv_4_conv2d\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"convolution\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"192\"", "\"71\"", "\"71\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"conv_4_batchnorm\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"batch normalization\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"192\"", "\"71\"", "\"71\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"conv_4_relu\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], 
         TagBox[
          FormBox["\<\"ReLU\"\>",
           TraditionalForm],
          TraditionalForm,
          Editable->True], 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"192\"", "\"71\"", "\"71\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"pool1\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"pooling\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"192\"", "\"35\"", "\"35\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"inception1\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"subnetwork\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"256\"", "\"35\"", "\"35\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"inception2\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"subnetwork\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"288\"", "\"35\"", "\"35\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"inception3\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"subnetwork\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"288\"", "\"35\"", "\"35\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"inception4\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"subnetwork\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"768\"", "\"17\"", "\"17\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"inception5\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"subnetwork\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"768\"", "\"17\"", "\"17\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"inception6\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"subnetwork\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"768\"", "\"17\"", "\"17\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"inception7\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"subnetwork\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"768\"", "\"17\"", "\"17\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"inception8\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"subnetwork\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"768\"", "\"17\"", "\"17\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"inception9\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"subnetwork\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"1280\"", "\"8\"", "\"8\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"inception10\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"subnetwork\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"2048\"", "\"8\"", "\"8\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"inception11\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"subnetwork\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"2048\"", "\"8\"", "\"8\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"global_pool\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"pooling\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"2048\"", "\"1\"", "\"1\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"flatten\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"flatten\"\>", 
         TemplateBox[{"\"vector\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2048\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"fc1\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"linear\"\>", 
         TemplateBox[{"\"vector\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1008\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"part\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"part\"\>", 
         TemplateBox[{"\"vector\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1001\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"softmax\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"softmax\"\>", 
         TemplateBox[{"\"vector\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1001\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>", "\<\"output\"\>", "\<\"class\"\>"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {{1.1}}}],
      "Grid"],
     TraditionalForm],
    TraditionalForm,
    Editable->True], ",", "33"}], "}"}]], "Output",
 CellChangeTimes->{
  3.700464194134227*^9, 3.700464312369143*^9, 3.700464444506362*^9, 
   3.7004699725459905`*^9, {3.7004736792489862`*^9, 
   3.7004736845146837`*^9}},ExpressionUUID->"758dd608-8da0-4890-a90c-\
ce0cccc95b10"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"net", "=", 
   RowBox[{
   "NetModel", "[", "\"\<VGG-16 Trained on ImageNet Competition Data\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"StandardForm", "@", "net"}], ",", 
   RowBox[{"TraditionalForm", "@", "net"}], ",", 
   RowBox[{"Length", "@", 
    RowBox[{"Normal", "@", "net"}]}]}], "}"}]}], "Input",
 CellChangeTimes->{3.7004641796040053`*^9, 
  3.7004643063379087`*^9},ExpressionUUID->"203a3d70-f13c-4bf3-b969-\
33cf14b5e7f5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    FormBox[
     StyleBox[
      TagBox[
       TagBox[
        RowBox[{"NetChain", 
         RowBox[{"[", 
          PanelBox[
           
           DynamicModuleBox[{NeuralNetworks`Private`NetChain`assoc3 = 
            Association[
            "Type" -> "Chain", "Nodes" -> 
             Association[
              "conv1_1" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{64, 3, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 3, "$GroupNumber" -> 1, 
                   "$InputSize" -> {224, 224}, "$OutputSize" -> {224, 224}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "relu1_1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {64, 224, 224}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "conv1_2" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{64, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 64, "$GroupNumber" -> 1, 
                   "$InputSize" -> {224, 224}, "$OutputSize" -> {224, 224}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "relu1_2" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {64, 224, 224}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "pool1" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                   "PaddingSize" -> {0, 0}, "Function" -> Max, 
                   "Dimensionality" -> 2, "Channels" -> 64, 
                   "$InputSize" -> {224, 224}, "$OutputSize" -> {112, 112}, 
                   "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]]], "conv2_1" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{128, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 64, "$GroupNumber" -> 1, 
                   "$InputSize" -> {112, 112}, "$OutputSize" -> {112, 112}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "relu2_1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {128, 112, 112}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "conv2_2" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{128, 128, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 128, "$GroupNumber" -> 1, 
                   "$InputSize" -> {112, 112}, "$OutputSize" -> {112, 112}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "relu2_2" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {128, 112, 112}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "pool2" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                   "PaddingSize" -> {0, 0}, "Function" -> Max, 
                   "Dimensionality" -> 2, "Channels" -> 128, 
                   "$InputSize" -> {112, 112}, "$OutputSize" -> {56, 56}, 
                   "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3_1" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{256, 128, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 128, "$GroupNumber" -> 1, 
                   "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3_1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3_2" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{256, 256, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 256, "$GroupNumber" -> 1, 
                   "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3_2" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3_3" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{256, 256, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 256, "$GroupNumber" -> 1, 
                   "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3_3" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "pool3" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                   "PaddingSize" -> {0, 0}, "Function" -> Max, 
                   "Dimensionality" -> 2, "Channels" -> 256, 
                   "$InputSize" -> {56, 56}, "$OutputSize" -> {28, 28}, 
                   "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv4_1" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{512, 256, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 256, "$GroupNumber" -> 1, 
                   "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu4_1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv4_2" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{512, 512, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 512, "$GroupNumber" -> 1, 
                   "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu4_2" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv4_3" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{512, 512, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 512, "$GroupNumber" -> 1, 
                   "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu4_3" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "pool4" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                   "PaddingSize" -> {0, 0}, "Function" -> Max, 
                   "Dimensionality" -> 2, "Channels" -> 512, 
                   "$InputSize" -> {28, 28}, "$OutputSize" -> {14, 14}, 
                   "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv5_1" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{512, 512, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 512, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu5_1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {512, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv5_2" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{512, 512, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 512, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu5_2" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {512, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv5_3" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{512, 512, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 512, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu5_3" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {512, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "pool5" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                   "PaddingSize" -> {0, 0}, "Function" -> Max, 
                   "Dimensionality" -> 2, "Channels" -> 512, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {7, 7}, 
                   "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "flatten_0" -> 
               Association[
                "Type" -> "Flatten", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "Level" -> DirectedInfinity[1], "OutputSize" -> {25088}, 
                   "$InputSize" -> {512, 7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{512, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{25088}, NeuralNetworks`RealT]]], 
               "fc6" -> Association[
                "Type" -> "Linear", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{4096, 25088}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputDimensions" -> {4096}, "$OutputSize" -> 4096, 
                   "$InputSize" -> 25088, "$InputDimensions" -> {25088}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{25088}, NeuralNetworks`RealT]], 
                 "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]]], 
               "relu6" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {4096}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]], 
                 "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]]], 
               "drop6" -> 
               Association[
                "Type" -> "Dropout", "Arrays" -> Association[], "Parameters" -> 
                 Association["DropoutProbability" -> 0.5], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]], 
                 "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]]], 
               "fc7" -> Association[
                "Type" -> "Linear", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{4096, 4096}, NeuralNetworks`RealT],
                    "Biases" -> 
                   NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputDimensions" -> {4096}, "$OutputSize" -> 4096, 
                   "$InputSize" -> 4096, "$InputDimensions" -> {4096}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]], 
                 "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]]], 
               "relu7" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {4096}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]], 
                 "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]]], 
               "drop7" -> 
               Association[
                "Type" -> "Dropout", "Arrays" -> Association[], "Parameters" -> 
                 Association["DropoutProbability" -> 0.5], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]], 
                 "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]]], 
               "fc8" -> Association[
                "Type" -> "Linear", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{1000, 4096}, NeuralNetworks`RealT],
                    "Biases" -> 
                   NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputDimensions" -> {1000}, "$OutputSize" -> 1000, 
                   "$InputSize" -> 4096, "$InputDimensions" -> {4096}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]], 
                 "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]]], 
               "prob" -> Association[
                "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
                 Association[], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]], 
                 "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]]]], 
             "Edges" -> {
              NeuralNetworks`NetPath["Nodes", "conv1_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Nodes", "relu1_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv1_1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "conv1_2", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu1_1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu1_2", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv1_2", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "pool1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu1_2", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "conv2_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "pool1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu2_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv2_1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "conv2_2", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu2_1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu2_2", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv2_2", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "pool2", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu2_2", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "conv3_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "pool2", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu3_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv3_1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "conv3_2", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu3_1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu3_2", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv3_2", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "conv3_3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu3_2", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu3_3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv3_3", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "pool3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu3_3", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "conv4_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "pool3", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu4_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv4_1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "conv4_2", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu4_1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu4_2", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv4_2", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "conv4_3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu4_2", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu4_3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv4_3", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "pool4", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu4_3", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "conv5_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "pool4", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu5_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv5_1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "conv5_2", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu5_1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu5_2", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv5_2", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "conv5_3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu5_2", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu5_3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv5_3", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "pool5", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu5_3", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "flatten_0", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "pool5", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "fc6", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "flatten_0", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu6", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "fc6", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "drop6", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "relu6", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "fc7", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "drop6", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu7", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "fc7", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "drop7", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "relu7", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "fc8", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "drop7", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "prob", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "fc8", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Outputs", "Output"] -> 
               NeuralNetworks`NetPath["Nodes", "prob", "Outputs", "Output"]}, 
             "Inputs" -> Association["Input" -> NetEncoder["Image", 
                 Association[
                 "ImageSize" -> {224, 224}, "ColorSpace" -> "RGB", 
                  "ColorChannels" -> 3, 
                  "MeanImage" -> {0.4850196078431373, 0.457956862745098, 
                   0.4076039215686274}], 
                 NeuralNetworks`TensorT[{3, 224, 224}, 
                  NeuralNetworks`RealT]]], "Outputs" -> 
             Association["Output" -> NetDecoder["Class", 
                 Association["Labels" -> {
                    Entity["Concept", "Tench::q9r2d"], 
                    Entity["Concept", "CarassiusAuratus::f73xs"], 
                    Entity["Concept", "CarcharodonCarcharias::st7pj"], 
                    Entity["Concept", "GaleocerdoCuvieri::h7238"], 
                    Entity["Concept", "HammerheadShark::cky4t"], 
                    Entity["Concept", "Crampfish::6369q"], 
                    Entity["Concept", "Stingray::4cts3"], 
                    Entity["Concept", "Cock::2s2xh"], 
                    Entity["Concept", "Hen::49q38"], 
                    Entity["Concept", "StruthioCamelus::7fgc2"], 
                    Entity["Concept", "Brambling::47bpt"], 
                    Entity["Concept", "CarduelisCarduelis::bv5y9"], 
                    Entity["Concept", "CarpodacusMexicanus::zq6w8"], 
                    Entity["Concept", "Junco::sjqs9"], 
                    Entity["Concept", "IndigoBird::6365d"], 
                    Entity["Concept", "AmericanRobin::wf28w"], 
                    Entity["Concept", "Bulbul::4x6vd"], 
                    Entity["Concept", "Jay::9g7qw"], 
                    Entity["Concept", "Magpie::62kfm"], 
                    Entity["Concept", "Chickadee::qmsc9"], 
                    Entity["Concept", "WaterOuzel::n32d7"], 
                    Entity["Concept", "Kite::y2jjm"], 
                    Entity["Concept", "AmericanEagle::z2fqr"], 
                    Entity["Concept", "Vulture::r2nfy"], 
                    Entity["Concept", "GreatGrayOwl::97vk2"], 
                    Entity["Concept", "EuropeanFireSalamander::t6v33"], 
                    Entity["Concept", "CommonNewt::9nx3s"], 
                    Entity["Concept", "Eft::t3bv7"], 
                    Entity["Concept", "AmbystomaMaculatum::qnd2g"], 
                    Entity["Concept", "AmbystomaMexicanum::k9j45"], 
                    Entity["Concept", "Bullfrog::r9cvc"], 
                    Entity["Concept", "Tree-frog::m988r"], 
                    Entity["Concept", "AscaphusTrui::qr2np"], 
                    Entity["Concept", "CarettaCaretta::768y9"], 
                    Entity["Concept", "DermochelysCoriacea::ypc4b"], 
                    Entity["Concept", "MudTurtle::47p9w"], 
                    Entity["Concept", "Terrapin::5j9b2"], 
                    Entity["Concept", "BoxTortoise::hksb9"], 
                    Entity["Concept", "BandedGecko::38zhr"], 
                    Entity["Concept", "CommonIguana::66q43"], 
                    Entity["Concept", "AmericanChameleon::67k54"], 
                    Entity["Concept", "Whiptail::sb62k"], 
                    Entity["Concept", "Agama::22vdx"], 
                    Entity["Concept", "ChlamydosaurusKingi::stq3k"], 
                    Entity["Concept", "AlligatorLizard::k6335"], 
                    Entity["Concept", "GilaMonster::k8q26"], 
                    Entity["Concept", "GreenLizard::2fkzv"], 
                    Entity["Concept", "AfricanChameleon::x82fs"], 
                    Entity["Concept", "DragonLizard::s68v6"], 
                    Entity["Concept", "AfricanCrocodile::zw55f"], 
                    Entity["Concept", "AlligatorMississipiensis::s7582"], 
                    Entity["Concept", "Triceratops::p997c"], 
                    Entity["Concept", "CarphophisAmoenus::35dfs"], 
                    Entity["Concept", "Ring-neckedSnake::2f823"], 
                    Entity["Concept", "HognoseSnake::k5k58"], 
                    Entity["Concept", "GrassSnake::pv2xf"], 
                    Entity["Concept", "KingSnake::t9m8y"], 
                    Entity["Concept", "GarterSnake::892t9"], 
                    Entity["Concept", "WaterSnake::y627x"], 
                    Entity["Concept", "VineSnake::9kywz"], 
                    Entity["Concept", "HypsiglenaTorquata::6869v"], 
                    Entity["Concept", "BoaConstrictor::qq73z"], 
                    Entity["Concept", "PythonSebae::dmhh6"], 
                    Entity["Concept", "IndianCobra::2sv7h"], 
                    Entity["Concept", "GreenMamba::c9qn3"], 
                    Entity["Concept", "SeaSnake::s529y"], 
                    Entity["Concept", "Cerastes::6575z"], 
                    Entity["Concept", "CrotalusAdamanteus::8ynrx"], 
                    Entity["Concept", "CrotalusCerastes::m382t"], 
                    Entity["Concept", "Trilobite::3qyq3"], 
                    Entity["Concept", "Harvestman::545h3"], 
                    Entity["Concept", "Scorpion::9rx48"], 
                    Entity["Concept", "ArgiopeAurantia::633xv"], 
                    Entity["Concept", "AraneusCavaticus::thm3g"], 
                    Entity["Concept", "AraneaDiademata::4jvj8"], 
                    Entity["Concept", "BlackWidow::4682d"], 
                    Entity["Concept", "Tarantula::mc462"], 
                    Entity["Concept", "HuntingSpider::q7898"], 
                    Entity["Concept", "Tick::xw6hc"], 
                    Entity["Concept", "Centipede::s8w7r"], 
                    Entity["Concept", "BlackGrouse::9w35m"], 
                    Entity["Concept", "Ptarmigan::tv6c8"], 
                    Entity["Concept", "BonasaUmbellus::bpbr3"], 
                    Entity["Concept", "PrairieChicken::2ws9g"], 
                    Entity["Concept", "Peacock::kd2y4"], 
                    Entity["Concept", "Quail::7462f"], 
                    Entity["Concept", "Partridge::t22mp"], 
                    Entity["Concept", "AfricanGray::84css"], 
                    Entity["Concept", "Macaw::ntx97"], 
                    Entity["Concept", "CacatuaGalerita::tfz9w"], 
                    Entity["Concept", "Lorikeet::4f725"], 
                    Entity["Concept", "Coucal::z95g6"], 
                    Entity["Concept", "BeeEater::376h3"], 
                    Entity["Concept", "Hornbill::6389h"], 
                    Entity["Concept", "Hummingbird::vz6gt"], 
                    Entity["Concept", "Jacamar::v7428"], 
                    Entity["Concept", "Toucan::2h2d5"], 
                    Entity["Concept", "Drake::5cdfw"], 
                    Entity["Concept", "MergusSerrator::5t86m"], 
                    Entity["Concept", "Goose::82x27"], 
                    Entity["Concept", "BlackSwan::6ft7p"], 
                    Entity["Concept", "Tusker::dqq7d"], 
                    Entity["Concept", "Anteater::8t864"], 
                    Entity["Concept", "Duck-billedPlatypus::b8867"], 
                    Entity["Concept", "BrushKangaroo::493r2"], 
                    Entity["Concept", "KangarooBear::hvf3s"], 
                    Entity["Concept", "Wombat::m5rqr"], 
                    Entity["Concept", "Jellyfish::fs9rf"], 
                    Entity["Concept", "SeaAnemone::5n98x"], 
                    Entity["Concept", "BrainCoral::v7844"], 
                    Entity["Concept", "Flatworm::h957w"], 
                    Entity["Concept", "Nematode::hz536"], 
                    Entity["Concept", "Conch::44pfv"], 
                    Entity["Concept", "Snail::3r58h"], 
                    Entity["Concept", "Slug::d4638"], 
                    Entity["Concept", "Nudibranch::dq2vh"], 
                    Entity["Concept", "Coat-of-mailShell::h3tp5"], 
                    Entity["Concept", "ChamberedNautilus::tspc6"], 
                    Entity["Concept", "CancerMagister::5r562"], 
                    Entity["Concept", "CancerIrroratus::d69mr"], 
                    Entity["Concept", "FiddlerCrab::4mt9n"], 
                    Entity["Concept", "ParalithodesCamtschatica::pfzy2"], 
                    Entity["Concept", "HomarusAmericanus::n2j65"], 
                    Entity["Concept", "SeaCrawfish::x53g2"], 
                    Entity["Concept", "Crawdaddy::946y4"], 
                    Entity["Concept", "HermitCrab::4k242"], 
                    Entity["Concept", "Isopod::4z747"], 
                    Entity["Concept", "CiconiaCiconia::wkt3m"], 
                    Entity["Concept", "BlackStork::5v349"], 
                    Entity["Concept", "Spoonbill::4939q"], 
                    Entity["Concept", "Flamingo::28r7m"], 
                    Entity["Concept", "EgrettaCaerulea::9965c"], 
                    Entity["Concept", "AmericanEgret::43jz8"], 
                    Entity["Concept", "Bittern::722qw"], 
                    Entity["Concept", "Crane::9wrg8"], 
                    Entity["Concept", "AramusPictus::964mw"], 
                    Entity["Concept", "EuropeanGallinule::c7jfx"], 
                    Entity["Concept", "AmericanCoot::c7452"], 
                    Entity["Concept", "Bustard::p3zj5"], 
                    Entity["Concept", "ArenariaInterpres::3rbq4"], 
                    Entity["Concept", "Dunlin::4mj52"], 
                    Entity["Concept", "Redshank::yvbj8"], 
                    Entity["Concept", "Dowitcher::47w6h"], 
                    Entity["Concept", "OysterCatcher::9drpt"], 
                    Entity["Concept", "Pelican::jpfg7"], 
                    Entity["Concept", "AptenodytesPatagonica::f85wf"], 
                    Entity["Concept", "Mollymawk::r8386"], 
                    Entity["Concept", "EschrichtiusGibbosus::2c8q9"], 
                    Entity["Concept", "KillerWhale::26sj4"], 
                    Entity["Concept", "Dugong::ss39b"], 
                    Entity["Concept", "SeaLion::bs87w"], 
                    Entity["Concept", "Chihuahua::8hmhf"], 
                    Entity["Concept", "JapaneseSpaniel::h55d9"], 
                    Entity["Concept", "MalteseDog::trsv6"], 
                    Entity["Concept", "Peke::b9n5f"], 
                    Entity["Concept", "Shih-Tzu::kc9k8"], 
                    Entity["Concept", "BlenheimSpaniel::cd3nm"], 
                    Entity["Concept", "Papillon::zhn7j"], 
                    Entity["Concept", "ToyTerrier::k3s97"], 
                    Entity["Concept", "RhodesianRidgeback::jph75"], 
                    Entity["Concept", "AfghanHound::6845m"], 
                    Entity["Concept", "Basset::n769x"], 
                    Entity["Concept", "Beagle::2bdvt"], 
                    Entity["Concept", "Bloodhound::pc454"], 
                    Entity["Concept", "Bluetick::fs5sw"], 
                    Entity["Concept", "Black-and-tanCoonhound::84k6y"], 
                    Entity["Concept", "WalkerFoxhound::z3y7p"], 
                    Entity["Concept", "EnglishFoxhound::5v343"], 
                    Entity["Concept", "Redbone::j6h4x"], 
                    Entity["Concept", "Borzoi::v43t8"], 
                    Entity["Concept", "IrishWolfhound::8m3gw"], 
                    Entity["Concept", "ItalianGreyhound::s4gq3"], 
                    Entity["Concept", "Whippet::57r47"], 
                    Entity["Concept", "IbizanHound::987kj"], 
                    Entity["Concept", "Elkhound::62q39"], 
                    Entity["Concept", "OtterHound::3442w"], 
                    Entity["Concept", "GazelleHound::7k449"], 
                    Entity["Concept", "Deerhound::btsv4"], 
                    Entity["Concept", "Weimaraner::476j6"], 
                    Entity["Concept", "StaffordshireBullTerrier::883y3"], 
                    Entity["Concept", "AmericanPitBullTerrier::kw55q"], 
                    Entity["Concept", "BedlingtonTerrier::98h82"], 
                    Entity["Concept", "BorderTerrier::gh5h6"], 
                    Entity["Concept", "KerryBlueTerrier::t9c62"], 
                    Entity["Concept", "IrishTerrier::qmsm4"], 
                    Entity["Concept", "NorfolkTerrier::b7z76"], 
                    Entity["Concept", "NorwichTerrier::9v483"], 
                    Entity["Concept", "YorkshireTerrier::bn4jn"], 
                    Entity["Concept", "Wire-hairedFoxTerrier::pn5qb"], 
                    Entity["Concept", "LakelandTerrier::b729b"], 
                    Entity["Concept", "SealyhamTerrier::5jz56"], 
                    Entity["Concept", "Airedale::w6gf4"], 
                    Entity["Concept", "CairnTerrier::67c37"], 
                    Entity["Concept", "AustralianTerrier::q2h6g"], 
                    Entity["Concept", "DandieDinmont::ff47s"], 
                    Entity["Concept", "BostonBull::6662j"], 
                    Entity["Concept", "MiniatureSchnauzer::848y9"], 
                    Entity["Concept", "GiantSchnauzer::8fwv6"], 
                    Entity["Concept", "StandardSchnauzer::q9j3y"], 
                    Entity["Concept", "ScotchTerrier::2f2jw"], 
                    Entity["Concept", "ChrysanthemumDog::y9tps"], 
                    Entity["Concept", "SilkyTerrier::xyfw3"], 
                    Entity["Concept", "Soft-coatedWheatenTerrier::474j2"], 
                    Entity["Concept", "WestHighlandWhiteTerrier::4h85y"], 
                    Entity["Concept", "LhasaApso::cr28m"], 
                    Entity["Concept", "Flat-coatedRetriever::866mk"], 
                    Entity["Concept", "Curly-coatedRetriever::pb8yt"], 
                    Entity["Concept", "GoldenRetriever::t59tg"], 
                    Entity["Concept", "LabradorRetriever::7g587"], 
                    Entity["Concept", "ChesapeakeBayRetriever::s8567"], 
                    Entity["Concept", "GermanShort-hairedPointer::k3297"], 
                    Entity["Concept", "HungarianPointer::7555p"], 
                    Entity["Concept", "EnglishSetter::ps793"], 
                    Entity["Concept", "IrishSetter::h5pp3"], 
                    Entity["Concept", "GordonSetter::yvx65"], 
                    Entity["Concept", "BrittanySpaniel::435gz"], 
                    Entity["Concept", "Clumber::2ddvk"], 
                    Entity["Concept", "EnglishSpringer::f4dq6"], 
                    Entity["Concept", "WelshSpringerSpaniel::qyng2"], 
                    Entity["Concept", "Cocker::7284r"], 
                    Entity["Concept", "SussexSpaniel::sbv42"], 
                    Entity["Concept", "IrishWaterSpaniel::m9zkp"], 
                    Entity["Concept", "Kuvasz::z4sxp"], 
                    Entity["Concept", "Schipperke::7778z"], 
                    Entity["Concept", "Groenendael::5854s"], 
                    Entity["Concept", "Malinois::k8y57"], 
                    Entity["Concept", "Briard::dtm5k"], 
                    Entity["Concept", "Kelpie::k6795"], 
                    Entity["Concept", "Komondor::p8q9b"], 
                    Entity["Concept", "OldEnglishSheepdog::4zdy3"], 
                    Entity["Concept", "ShetlandSheepDog::sffh8"], 
                    Entity["Concept", "Collie::999kf"], 
                    Entity["Concept", "BorderCollie::463w2"], 
                    Entity["Concept", "BouvierDesFlandres::h7txf"], 
                    Entity["Concept", "Rottweiler::zywt3"], 
                    Entity["Concept", "Alsatian::fh5zw"], 
                    Entity["Concept", "Doberman::zgqf4"], 
                    Entity["Concept", "MiniaturePinscher::jvy9c"], 
                    Entity["Concept", "GreaterSwissMountainDog::t7642"], 
                    Entity["Concept", "BerneseMountainDog::y32v5"], 
                    Entity["Concept", "Appenzeller::j96dj"], 
                    Entity["Concept", "EntleBucher::y43x6"], 
                    Entity["Concept", "Boxer::3966f"], 
                    Entity["Concept", "BullMastiff::6p365"], 
                    Entity["Concept", "TibetanMastiff::4f68b"], 
                    Entity["Concept", "FrenchBulldog::3jg82"], 
                    Entity["Concept", "GreatDane::xg8dn"], 
                    Entity["Concept", "SaintBernard::r5277"], 
                    Entity["Concept", "EskimoDog::2vm97"], 
                    Entity["Concept", "AlaskanMalamute::y6wqq"], 
                    Entity["Concept", "SiberianHusky::k7pkk"], 
                    Entity["Concept", "CarriageDog::jh3w6"], 
                    Entity["Concept", "Affenpinscher::58wr6"], 
                    Entity["Concept", "Basenji::k9yy2"], 
                    Entity["Concept", "Pug::6799h"], 
                    Entity["Concept", "Leonberg::49td5"], 
                    Entity["Concept", "NewfoundlandDog::q787h"], 
                    Entity["Concept", "GreatPyrenees::t8qh7"], 
                    Entity["Concept", "Samoyede::rq827"], 
                    Entity["Concept", "Pomeranian::dx7mr"], 
                    Entity["Concept", "ChowChow::7x292"], 
                    Entity["Concept", "Keeshond::rz734"], 
                    Entity["Concept", "BrabanconGriffon::jh5pt"], 
                    Entity["Concept", "Pembroke::95g54"], 
                    Entity["Concept", "Cardigan::b724j"], 
                    Entity["Concept", "ToyPoodle::732f6"], 
                    Entity["Concept", "MiniaturePoodle::4955p"], 
                    Entity["Concept", "StandardPoodle::w25c4"], 
                    Entity["Concept", "MexicanHairless::m2by7"], 
                    Entity["Concept", "CanisLupus::5gwtc"], 
                    Entity["Concept", "ArcticWolf::4xr47"], 
                    Entity["Concept", "CanisNiger::99p6d"], 
                    Entity["Concept", "BrushWolf::44t57"], 
                    Entity["Concept", "CanisDingo::529k9"], 
                    Entity["Concept", "CuonAlpinus::f5yfn"], 
                    Entity["Concept", "AfricanHuntingDog::d9b86"], 
                    Entity["Concept", "Hyaena::7444d"], 
                    Entity["Concept", "VulpesVulpes::g8mvp"], 
                    Entity["Concept", "VulpesMacrotis::jm64h"], 
                    Entity["Concept", "AlopexLagopus::44cg9"], 
                    Entity["Concept", "GrayFox::vftd5"], 
                    Entity["Concept", "TabbyCat::rvg7f"], 
                    Entity["Concept", "TigerCat::8k84h"], 
                    Entity["Concept", "PersianCat::p69kd"], 
                    Entity["Concept", "SiameseCat::hgg68"], 
                    Entity["Concept", "EgyptianCat::sd6pw"], 
                    Entity["Concept", "Cougar::7bc9f"], 
                    Entity["Concept", "Catamount::q4f63"], 
                    Entity["Concept", "PantheraPardus::r35k5"], 
                    Entity["Concept", "PantheraUncia::z6697"], 
                    Entity["Concept", "FelisOnca::jh7tq"], 
                    Entity["Concept", "KingOfBeasts::vrwm9"], 
                    Entity["Concept", "PantheraTigris::2mpmq"], 
                    Entity["Concept", "GiantAnteater::y96st"], 
                    Entity["Concept", "BrownBear::8374p"], 
                    Entity["Concept", "AmericanBlackBear::763x8"], 
                    Entity["Concept", "IceBear::fnc5j"], 
                    Entity["Concept", "MelursusUrsinus::48x75"], 
                    Entity["Concept", "Mongoose::5hp73"], 
                    Entity["Concept", "Meerkat::q77nd"], 
                    Entity["Concept", "TigerBeetle::8362y"], 
                    Entity["Concept", "LadyBeetle::tx6bz"], 
                    Entity["Concept", "CarabidBeetle::w3hjn"], 
                    Entity["Concept", "Long-hornedBeetle::9zzc8"], 
                    Entity["Concept", "Chrysomelid::y8pqz"], 
                    Entity["Concept", "DungBeetle::bt6hz"], 
                    Entity["Concept", "RhinocerosBeetle::23y53"], 
                    Entity["Concept", "Weevil::r87rt"], 
                    Entity["Concept", "Fly::68s97"], 
                    Entity["Concept", "Bee::d8yym"], 
                    Entity["Concept", "Ant::7tznr"], 
                    Entity["Concept", "Grasshopper::52v2f"], 
                    Entity["Concept", "Cricket::82n55"], 
                    Entity["Concept", "StickInsect::4x983"], 
                    Entity["Concept", "Cockroach::7426w"], 
                    Entity["Concept", "Mantid::93t86"], 
                    Entity["Concept", "Cicada::w2299"], 
                    Entity["Concept", "Leafhopper::8k2k2"], 
                    Entity["Concept", "Lacewing::8v2m6"], 
                    Entity["Concept", "Dragonfly::7s252"], 
                    Entity["Concept", "Damselfly::dh8zj"], 
                    Entity["Concept", "Admiral::j6fvp"], 
                    Entity["Concept", "RingletButterfly::28v7s"], 
                    Entity["Concept", "DanausPlexippus::bfk9c"], 
                    Entity["Concept", "CabbageButterfly::c8v77"], 
                    Entity["Concept", "SulfurButterfly::b9263"], 
                    Entity["Concept", "Lycaenid::4whyw"], 
                    Entity["Concept", "SeaStar::46w97"], 
                    Entity["Concept", "SeaUrchin::7b835"], 
                    Entity["Concept", "Holothurian::7jk5q"], 
                    Entity["Concept", "Cottontail::bsxk4"], 
                    Entity["Concept", "Hare::55m72"], 
                    Entity["Concept", "AngoraRabbit::v6627"], 
                    Entity["Concept", "Hamster::9yy49"], 
                    Entity["Concept", "Porcupine::5r285"], 
                    Entity["Concept", "EasternFoxSquirrel::8g9v6"], 
                    Entity["Concept", "Marmot::7vb94"], 
                    Entity["Concept", "Beaver::qp598"], 
                    Entity["Concept", "CaviaCobaya::b8w85"], 
                    Entity["Concept", "Sorrel::b824z"], 
                    Entity["Concept", "Zebra::nx5qr"], 
                    Entity["Concept", "Grunter::437d2"], 
                    Entity["Concept", "WildBoar::5wjz4"], 
                    Entity["Concept", "Warthog::3q477"], 
                    Entity["Concept", "Hippo::647b2"], 
                    Entity["Concept", "Ox::yhn7j"], 
                    Entity["Concept", "AsiaticBuffalo::532z9"], 
                    Entity["Concept", "Bison::25c86"], 
                    Entity["Concept", "Tup::8y669"], 
                    Entity["Concept", "Bighorn::773z4"], 
                    Entity["Concept", "CapraIbex::p5pmr"], 
                    Entity["Concept", "Hartebeest::r8276"], 
                    Entity["Concept", "AepycerosMelampus::q45p2"], 
                    Entity["Concept", "Gazelle::px427"], 
                    Entity["Concept", "ArabianCamel::98q62"], 
                    Entity["Concept", "Llama::pp4mc"], 
                    Entity["Concept", "Weasel::gcxk7"], 
                    Entity["Concept", "Mink::r5727"], 
                    Entity["Concept", "Fitch::x2w8q"], 
                    Entity["Concept", "Black-footedFerret::r6gqg"], 
                    Entity["Concept", "Otter::63tg7"], 
                    Entity["Concept", "WoodPussy::6886s"], 
                    Entity["Concept", "Badger::vcsk3"], 
                    Entity["Concept", "Armadillo::s9866"], 
                    Entity["Concept", "Ai::z6968"], 
                    Entity["Concept", "Orang::5385s"], 
                    Entity["Concept", "Gorilla::7vrdz"], 
                    Entity["Concept", "Chimp::2t668"], 
                    Entity["Concept", "Gibbon::7yqsr"], 
                    Entity["Concept", "HylobatesSyndactylus::3g4xn"], 
                    Entity["Concept", "Guenon::7y986"], 
                    Entity["Concept", "ErythrocebusPatas::949v6"], 
                    Entity["Concept", "Baboon::28m6v"], 
                    Entity["Concept", "Macaque::m87ss"], 
                    Entity["Concept", "Langur::3w42b"], 
                    Entity["Concept", "Colobus::yqv5q"], 
                    Entity["Concept", "NasalisLarvatus::92p77"], 
                    Entity["Concept", "Marmoset::3j236"], 
                    Entity["Concept", "CebusCapucinus::4r452"], 
                    Entity["Concept", "HowlerMonkey::87c48"], 
                    Entity["Concept", "TitiMonkey::6rqgy"], 
                    Entity["Concept", "AtelesGeoffroyi::8f944"], 
                    Entity["Concept", "SaimiriSciureus::f9528"], 
                    Entity["Concept", "LemurCatta::4z4fy"], 
                    Entity["Concept", "Indri::w2dsm"], 
                    Entity["Concept", "ElephasMaximus::4668g"], 
                    Entity["Concept", "AfricanElephant::634z7"], 
                    Entity["Concept", "AilurusFulgens::m96y6"], 
                    Entity["Concept", "AiluropodaMelanoleuca::xg799"], 
                    Entity["Concept", "Barracouta::dzc32"], 
                    Entity["Concept", "Eel::6yymn"], 
                    Entity["Concept", "BlueJack::8728b"], 
                    Entity["Concept", "HolocanthusTricolor::6t872"], 
                    Entity["Concept", "AnemoneFish::5mdgt"], 
                    Entity["Concept", "Sturgeon::46xyk"], 
                    Entity["Concept", "Garfish::p9w7b"], 
                    Entity["Concept", "Lionfish::45vp5"], 
                    Entity["Concept", "Globefish::z6448"], 
                    Entity["Concept", "Abacus::s322h"], 
                    Entity["Concept", "Abaya::327b3"], 
                    Entity["Concept", "AcademicGown::6vvft"], 
                    Entity["Concept", "Accordion::vx545"], 
                    Entity["Concept", "AcousticGuitar::wp46j"], 
                    Entity["Concept", "AircraftCarrier::74d49"], 
                    Entity["Concept", "Airliner::t7542"], 
                    Entity["Concept", "Airship::dg429"], 
                    Entity["Concept", "Altar::z644x"], 
                    Entity["Concept", "Ambulance::rgts3"], 
                    Entity["Concept", "AmphibiousVehicle::rr85n"], 
                    Entity["Concept", "AnalogClock::3832f"], 
                    Entity["Concept", "Apiary::d939v"], 
                    Entity["Concept", "Apron::qr79c"], 
                    Entity["Concept", "Ash-bin::6sd8p"], 
                    Entity["Concept", "AssaultRifle::d2gst"], 
                    Entity["Concept", "BackPack::2cjsp"], 
                    Entity["Concept", "Bakehouse::6nmsm"], 
                    Entity["Concept", "BalanceBeam::6nyqs"], 
                    Entity["Concept", "Balloon::64p99"], 
                    Entity["Concept", "Ballpen::k35fx"], 
                    Entity["Concept", "BandAid::z727z"], 
                    Entity["Concept", "Banjo::fs3f9"], 
                    Entity["Concept", "Balusters::nt6x4"], 
                    Entity["Concept", "Barbell::295kg"], 
                    Entity["Concept", "BarberChair::mybp2"], 
                    Entity["Concept", "Barbershop::qg6kn"], 
                    Entity["Concept", "Barn::6xw3q"], 
                    Entity["Concept", "Barometer::65g49"], 
                    Entity["Concept", "Barrel::3pzvn"], 
                    Entity["Concept", "GardenCart::7br53"], 
                    Entity["Concept", "Baseball::9f8qz"], 
                    Entity["Concept", "Basketball::jq262"], 
                    Entity["Concept", "Bassinet::yn2td"], 
                    Entity["Concept", "Bassoon::92ky9"], 
                    Entity["Concept", "BathingCap::tsd8r"], 
                    Entity["Concept", "BathTowel::72qcw"], 
                    Entity["Concept", "BathingTub::729f8"], 
                    Entity["Concept", "BeachWaggon::c945g"], 
                    Entity["Concept", "BeaconLight::k282w"], 
                    Entity["Concept", "Beaker::btv5s"], 
                    Entity["Concept", "Busby::448c3"], 
                    Entity["Concept", "BeerBottle::8gz7t"], 
                    Entity["Concept", "BeerGlass::r6xp2"], 
                    Entity["Concept", "BellCot::567d3"], 
                    Entity["Concept", "Bib::5wq8k"], 
                    Entity["Concept", "Bicycle-built-for-two::7h478"], 
                    Entity["Concept", "Bikini::m86f8"], 
                    Entity["Concept", "Ring-binder::848m9"], 
                    Entity["Concept", "Binoculars::yp4ss"], 
                    Entity["Concept", "Birdhouse::n3qgq"], 
                    Entity["Concept", "Boathouse::59rht"], 
                    Entity["Concept", "Bob::n2762"], 
                    Entity["Concept", "BolaTie::g65x6"], 
                    Entity["Concept", "PokeBonnet::f4y42"], 
                    Entity["Concept", "Bookcase::6t56v"], 
                    Entity["Concept", "Bookshop::4rgfr"], 
                    Entity["Concept", "Bottlecap::mgg5c"], 
                    Entity["Concept", "Bow::89mx8"], 
                    Entity["Concept", "Bow-tie::79h37"], 
                    Entity["Concept", "MemorialTablet::66g76"], 
                    Entity["Concept", "Bandeau::4j247"], 
                    Entity["Concept", "Breakwater::nrtz2"], 
                    Entity["Concept", "Breastplate::4fmw7"], 
                    Entity["Concept", "Broom::hgy49"], 
                    Entity["Concept", "Bucket::f9743"], 
                    Entity["Concept", "Buckle::3398s"], 
                    Entity["Concept", "BulletproofVest::djqn3"], 
                    Entity["Concept", "BulletTrain::4dfr5"], 
                    Entity["Concept", "ButcherShop::hfp48"], 
                    Entity["Concept", "Taxi::379w3"], 
                    Entity["Concept", "Caldron::k6c8c"], 
                    Entity["Concept", "WaxLight::d9rqz"], 
                    Entity["Concept", "Cannon::54f56"], 
                    Entity["Concept", "Canoe::nnt95"], 
                    Entity["Concept", "CanOpener::6b885"], 
                    Entity["Concept", "Cardigan::237mv"], 
                    Entity["Concept", "CarMirror::5xccg"], 
                    Entity["Concept", "Carousel::n2992"], 
                    Entity["Concept", "CarpentersKit::37rxx"], 
                    Entity["Concept", "Carton::769gr"], 
                    Entity["Concept", "CarWheel::t6f2y"], 
                    Entity["Concept", "AutomatedTeller::w8746"], 
                    Entity["Concept", "Cassette::2pvzn"], 
                    Entity["Concept", "CassettePlayer::v2ng9"], 
                    Entity["Concept", "Castle::m2pbs"], 
                    Entity["Concept", "Catamaran::7b489"], 
                    Entity["Concept", "CDPlayer::7gq93"], 
                    Entity["Concept", "Cello::hhbp5"], 
                    Entity["Concept", "Cellphone::5k4s4"], 
                    Entity["Concept", "Chain::w9j9s"], 
                    Entity["Concept", "ChainlinkFence::pfv8d"], 
                    Entity["Concept", "ChainArmor::h32y6"], 
                    Entity["Concept", "ChainSaw::f5bt6"], 
                    Entity["Concept", "Chest::fd956"], 
                    Entity["Concept", "Chiffonier::m3jmr"], 
                    Entity["Concept", "Chime::m6623"], 
                    Entity["Concept", "ChinaCabinet::9bmqg"], 
                    Entity["Concept", "ChristmasStocking::867r8"], 
                    Entity["Concept", "ChurchBuilding::2394b"], 
                    Entity["Concept", "MovieHouse::hbj23"], 
                    Entity["Concept", "Cleaver::bk925"], 
                    Entity["Concept", "CliffDwelling::5c9sb"], 
                    Entity["Concept", "Cloak::dj822"], 
                    Entity["Concept", "Geta::3r9c9"], 
                    Entity["Concept", "CocktailShaker::r9655"], 
                    Entity["Concept", "CoffeeMug::gwhm5"], 
                    Entity["Concept", "Coffeepot::32tb2"], 
                    Entity["Concept", "Coil::c7h65"], 
                    Entity["Concept", "CombinationLock::b8rp7"], 
                    Entity["Concept", "ComputerKeyboard::26d5s"], 
                    Entity["Concept", "CandyStore::268x7"], 
                    Entity["Concept", "ContainerShip::tsz7x"], 
                    Entity["Concept", "Convertible::4pxj2"], 
                    Entity["Concept", "BottleScrew::djq6x"], 
                    Entity["Concept", "Cornet::35d97"], 
                    Entity["Concept", "CowboyBoot::5f655"], 
                    Entity["Concept", "CowboyHat::59wk9"], 
                    Entity["Concept", "Cradle::3882z"], 
                    Entity["Concept", "Crane::k29p4"], 
                    Entity["Concept", "CrashHelmet::76cs8"], 
                    Entity["Concept", "Crate::wmc92"], 
                    Entity["Concept", "Cot::3kgws"], 
                    Entity["Concept", "CrockPot::w5t85"], 
                    Entity["Concept", "CroquetBall::g84t5"], 
                    Entity["Concept", "Crutch::3q57h"], 
                    Entity["Concept", "Cuirass::256jq"], 
                    Entity["Concept", "Dam::w9687"], 
                    Entity["Concept", "Desk::q73z7"], 
                    Entity["Concept", "DesktopComputer::f8gmj"], 
                    Entity["Concept", "DialPhone::3j2f6"], 
                    Entity["Concept", "Nappy::6979r"], 
                    Entity["Concept", "DigitalClock::hm3x5"], 
                    Entity["Concept", "DigitalWatch::v274r"], 
                    Entity["Concept", "DiningTable::6ypqf"], 
                    Entity["Concept", "Dishcloth::4t678"], 
                    Entity["Concept", "DishWasher::px58r"], 
                    Entity["Concept", "DiscBrake::bxcw7"], 
                    Entity["Concept", "DockingFacility::f42zy"], 
                    Entity["Concept", "DogSled::34t8q"], 
                    Entity["Concept", "Dome::5j3x2"], 
                    Entity["Concept", "WelcomeMat::jqb5y"], 
                    Entity["Concept", "DrillingPlatform::r792r"], 
                    Entity["Concept", "Membranophone::2x379"], 
                    Entity["Concept", "Drumstick::4j5yw"], 
                    Entity["Concept", "Dumbbell::qjh33"], 
                    Entity["Concept", "DutchOven::qy3dv"], 
                    Entity["Concept", "ElectricFan::n79z5"], 
                    Entity["Concept", "ElectricGuitar::9pkmr"], 
                    Entity["Concept", "ElectricLocomotive::5wv23"], 
                    Entity["Concept", "EntertainmentCenter::mg549"], 
                    Entity["Concept", "Envelope::c722j"], 
                    Entity["Concept", "EspressoMaker::z42xs"], 
                    Entity["Concept", "FacePowder::yzy7x"], 
                    Entity["Concept", "FeatherBoa::c94h7"], 
                    Entity["Concept", "FileCabinet::vsb9c"], 
                    Entity["Concept", "Fireboat::xf64t"], 
                    Entity["Concept", "FireEngine::zsvx8"], 
                    Entity["Concept", "FireScreen::665b5"], 
                    Entity["Concept", "Flagstaff::qz2t6"], 
                    Entity["Concept", "TransverseFlute::8pj76"], 
                    Entity["Concept", "FoldingChair::4vqcr"], 
                    Entity["Concept", "FootballHelmet::c6twc"], 
                    Entity["Concept", "Forklift::b2dfv"], 
                    Entity["Concept", "Fountain::yn972"], 
                    Entity["Concept", "FountainPen::r2vw4"], 
                    Entity["Concept", "Four-poster::8kbhw"], 
                    Entity["Concept", "FreightCar::5pg8s"], 
                    Entity["Concept", "FrenchHorn::rm367"], 
                    Entity["Concept", "FryingPan::23fyh"], 
                    Entity["Concept", "FurCoat::6q374"], 
                    Entity["Concept", "Dustcart::2bbpr"], 
                    Entity["Concept", "GasHelmet::23k79"], 
                    Entity["Concept", "GasolinePump::wk2nk"], 
                    Entity["Concept", "Goblet::h85x9"], 
                    Entity["Concept", "Go-kart::gjsj5"], 
                    Entity["Concept", "GolfBall::63tb2"], 
                    Entity["Concept", "GolfCart::sxmp6"], 
                    Entity["Concept", "Gondola::4ds6k"], 
                    Entity["Concept", "Tam-tam::m962t"], 
                    Entity["Concept", "Gown::76k26"], 
                    Entity["Concept", "GrandPiano::8kk56"], 
                    Entity["Concept", "Glasshouse::qxjm6"], 
                    Entity["Concept", "RadiatorGrille::75d36"], 
                    Entity["Concept", "FoodMarket::4bmts"], 
                    Entity["Concept", "Guillotine::w4656"], 
                    Entity["Concept", "HairSlide::3xwcp"], 
                    Entity["Concept", "HairSpray::9w6z4"], 
                    Entity["Concept", "HalfTrack::59zq4"], 
                    Entity["Concept", "Hammer::cx2fn"], 
                    Entity["Concept", "Hamper::3b93m"], 
                    Entity["Concept", "BlowDrier::t4dpz"], 
                    Entity["Concept", "Hand-heldComputer::zs5zw"], 
                    Entity["Concept", "Handkerchief::84d24"], 
                    Entity["Concept", "FixedDisk::5xfff"], 
                    Entity["Concept", "Harmonica::8t835"], 
                    Entity["Concept", "Harp::zz89k"], 
                    Entity["Concept", "Harvester::472sq"], 
                    Entity["Concept", "Hatchet::7cspp"], 
                    Entity["Concept", "Holster::g2prc"], 
                    Entity["Concept", "HomeTheater::4y845"], 
                    Entity["Concept", "Honeycomb::qq347"], 
                    Entity["Concept", "Claw::7kmg8"], 
                    Entity["Concept", "Hoopskirt::3784g"], 
                    Entity["Concept", "HighBar::n5222"], 
                    Entity["Concept", "Horse-cart::546b9"], 
                    Entity["Concept", "Hourglass::83jnz"], 
                    Entity["Concept", "IPod::366dw"], 
                    Entity["Concept", "SmoothingIron::274h7"], 
                    Entity["Concept", "Jack-o-lantern::yss6v"], 
                    Entity["Concept", "BlueJean::68hww"], 
                    Entity["Concept", "Jeep::5twmt"], 
                    Entity["Concept", "TeeShirt::nk5bs"], 
                    Entity["Concept", "JigsawPuzzle::jgp79"], 
                    Entity["Concept", "Jinrikisha::g7j7m"], 
                    Entity["Concept", "Joystick::nj32z"], 
                    Entity["Concept", "Kimono::284nv"], 
                    Entity["Concept", "KneePad::nh7y5"], 
                    Entity["Concept", "Knot::f4x5y"], 
                    Entity["Concept", "LabCoat::6fg55"], 
                    Entity["Concept", "Ladle::3m7q7"], 
                    Entity["Concept", "LampShade::4b824"], 
                    Entity["Concept", "Laptop::zdd33"], 
                    Entity["Concept", "LawnMower::z97p3"], 
                    Entity["Concept", "LensCap::6j259"], 
                    Entity["Concept", "LetterOpener::sx79v"], 
                    Entity["Concept", "Library::8855f"], 
                    Entity["Concept", "Lifeboat::3r554"], 
                    Entity["Concept", "Igniter::638td"], 
                    Entity["Concept", "Limo::jfrr3"], 
                    Entity["Concept", "OceanLiner::s5fxp"], 
                    Entity["Concept", "LipRouge::4vd22"], 
                    Entity["Concept", "Loafer::br9fk"], 
                    Entity["Concept", "Lotion::79h3v"], 
                    Entity["Concept", "Loudspeaker::44d64"], 
                    Entity["Concept", "JewelersLoupe::kg4bc"], 
                    Entity["Concept", "Lumbermill::94r3y"], 
                    Entity["Concept", "MagneticCompass::5r692"], 
                    Entity["Concept", "Postbag::ck37r"], 
                    Entity["Concept", "LetterBox::pccp7"], 
                    Entity["Concept", "Maillot::d8grj"], 
                    Entity["Concept", "TankSuit::5k74s"], 
                    Entity["Concept", "ManholeCover::4x7fq"], 
                    Entity["Concept", "Maraca::395nq"], 
                    Entity["Concept", "Marimba::kbbq5"], 
                    Entity["Concept", "Mask::798jz"], 
                    Entity["Concept", "Matchstick::266wm"], 
                    Entity["Concept", "Maypole::qc3qr"], 
                    Entity["Concept", "Labyrinth::gc6rg"], 
                    Entity["Concept", "MeasuringCup::7b637"], 
                    Entity["Concept", "MedicineCabinet::m9g7m"], 
                    Entity["Concept", "Megalith::753z9"], 
                    Entity["Concept", "Microphone::7bqww"], 
                    Entity["Concept", "MicrowaveOven::fs7tb"], 
                    Entity["Concept", "MilitaryUniform::r9626"], 
                    Entity["Concept", "MilkCan::d9g72"], 
                    Entity["Concept", "Minibus::y94d9"], 
                    Entity["Concept", "Mini::pn78q"], 
                    Entity["Concept", "Minivan::yfsj9"], 
                    Entity["Concept", "Missile::854m6"], 
                    Entity["Concept", "Mitten::7d534"], 
                    Entity["Concept", "MixingBowl::djy62"], 
                    Entity["Concept", "ManufacturedHome::d7czj"], 
                    Entity["Concept", "ModelT::c44dv"], 
                    Entity["Concept", "Modem::wq8j3"], 
                    Entity["Concept", "Monastery::mkgg8"], 
                    Entity["Concept", "Monitor::nh8d4"], 
                    Entity["Concept", "Moped::p85wp"], 
                    Entity["Concept", "Mortar::jz37q"], 
                    Entity["Concept", "Mortarboard::8r99w"], 
                    Entity["Concept", "Mosque::35k94"], 
                    Entity["Concept", "MosquitoNet::5z562"], 
                    Entity["Concept", "MotorScooter::bbwp9"], 
                    Entity["Concept", "All-terrainBike::7n976"], 
                    Entity["Concept", "MountainTent::k5s7y"], 
                    Entity["Concept", "ComputerMouse::kbzr4"], 
                    Entity["Concept", "Mousetrap::j8542"], 
                    Entity["Concept", "MovingVan::2s387"], 
                    Entity["Concept", "Muzzle::c7f4q"], 
                    Entity["Concept", "Nail::x2828"], 
                    Entity["Concept", "NeckBrace::hxh4p"], 
                    Entity["Concept", "Necklace::58n8w"], 
                    Entity["Concept", "Nipple::jfzc3"], 
                    Entity["Concept", "NotebookComputer::b3h64"], 
                    Entity["Concept", "Obelisk::s7vg6"], 
                    Entity["Concept", "Hautbois::937r3"], 
                    Entity["Concept", "Ocarina::zc9mv"], 
                    Entity["Concept", "Hodometer::jw6kb"], 
                    Entity["Concept", "OilFilter::d8chh"], 
                    Entity["Concept", "PipeOrgan::gq9sr"], 
                    Entity["Concept", "Cathode-rayOscilloscope::z4q77"], 
                    Entity["Concept", "Overskirt::n87sx"], 
                    Entity["Concept", "Oxcart::vwjn2"], 
                    Entity["Concept", "OxygenMask::4k479"], 
                    Entity["Concept", "Packet::r63y2"], 
                    Entity["Concept", "BoatPaddle::843sz"], 
                    Entity["Concept", "PaddleWheel::c59g3"], 
                    Entity["Concept", "Padlock::73c99"], 
                    Entity["Concept", "Paintbrush::2456k"], 
                    Entity["Concept", "Jammies::5vhcb"], 
                    Entity["Concept", "Palace::3556d"], 
                    Entity["Concept", "PandeanPipe::gjck2"], 
                    Entity["Concept", "PaperTowel::j7j8m"], 
                    Entity["Concept", "Parachute::k594d"], 
                    Entity["Concept", "Bars::3m828"], 
                    Entity["Concept", "ParkBench::hq98s"], 
                    Entity["Concept", "ParkingMeter::h445p"], 
                    Entity["Concept", "PassengerCar::b7xgp"], 
                    Entity["Concept", "Patio::65kf2"], 
                    Entity["Concept", "Pay-phone::4h2kc"], 
                    Entity["Concept", "Footstall::b89vf"], 
                    Entity["Concept", "PencilBox::977v9"], 
                    Entity["Concept", "PencilSharpener::23nv4"], 
                    Entity["Concept", "Essence::9m7fx"], 
                    Entity["Concept", "PetriDish::xt977"], 
                    Entity["Concept", "Photocopier::33g75"], 
                    Entity["Concept", "Plectron::5g596"], 
                    Entity["Concept", "Pickelhaube::pgr6y"], 
                    Entity["Concept", "Paling::2brd3"], 
                    Entity["Concept", "PickupTruck::9k58n"], 
                    Entity["Concept", "Pier::36y3h"], 
                    Entity["Concept", "PennyBank::78b56"], 
                    Entity["Concept", "PillBottle::r9pdj"], 
                    Entity["Concept", "Pillow::3y32w"], 
                    Entity["Concept", "Ping-pongBall::3vdwp"], 
                    Entity["Concept", "Pinwheel::85td5"], 
                    Entity["Concept", "PirateShip::386k8"], 
                    Entity["Concept", "Ewer::w6672"], 
                    Entity["Concept", "CarpentersPlane::287kt"], 
                    Entity["Concept", "Planetarium::kq5yg"], 
                    Entity["Concept", "PlasticBag::9x453"], 
                    Entity["Concept", "PlateRack::sxt2r"], 
                    Entity["Concept", "Plough::y6c4t"], 
                    Entity["Concept", "PlumbersHelper::hq4m2"], 
                    Entity["Concept", "PolaroidCamera::38q9k"], 
                    Entity["Concept", "Pole::c4566"], 
                    Entity["Concept", "BlackMaria::5jn8v"], 
                    Entity["Concept", "Poncho::tr389"], 
                    Entity["Concept", "BilliardTable::9c56d"], 
                    Entity["Concept", "PopBottle::6243b"], 
                    Entity["Concept", "Flowerpot::jjb26"], 
                    Entity["Concept", "PottersWheel::zwt32"], 
                    Entity["Concept", "PowerDrill::j44yg"], 
                    Entity["Concept", "PrayerMat::x6rjb"], 
                    Entity["Concept", "Printer::c4244"], 
                    Entity["Concept", "Prison::rsq7c"], 
                    Entity["Concept", "Missile::n28m6"], 
                    Entity["Concept", "Projector::d56q9"], 
                    Entity["Concept", "HockeyPuck::3hj3q"], 
                    Entity["Concept", "PunchBag::wm5qg"], 
                    Entity["Concept", "Purse::n57jd"], 
                    Entity["Concept", "QuillPen::jm57s"], 
                    Entity["Concept", "Quilt::f56w9"], 
                    Entity["Concept", "RaceCar::9m8p9"], 
                    Entity["Concept", "Racquet::53f72"], 
                    Entity["Concept", "Radiator::3959j"], 
                    Entity["Concept", "Radio::8p736"], 
                    Entity["Concept", "RadioReflector::55ckr"], 
                    Entity["Concept", "RainBarrel::65nkh"], 
                    Entity["Concept", "RecreationalVehicle::p93tb"], 
                    Entity["Concept", "Reel::v4rgf"], 
                    Entity["Concept", "ReflexCamera::j67h4"], 
                    Entity["Concept", "Icebox::tnkd4"], 
                    Entity["Concept", "Remote::h4drx"], 
                    Entity["Concept", "Eatery::f73dy"], 
                    Entity["Concept", "Six-gun::ctqb6"], 
                    Entity["Concept", "Rifle::x7pp3"], 
                    Entity["Concept", "RockingChair::ncpd5"], 
                    Entity["Concept", "Rotisserie::c8hjy"], 
                    Entity["Concept", "PencilEraser::7y7dd"], 
                    Entity["Concept", "RugbyBall::34tbp"], 
                    Entity["Concept", "Rule::shrw6"], 
                    Entity["Concept", "RunningShoe::z7fvm"], 
                    Entity["Concept", "Safe::36p67"], 
                    Entity["Concept", "SafetyPin::8h4m3"], 
                    Entity["Concept", "SaltShaker::7k48t"], 
                    Entity["Concept", "Sandal::7f3xr"], 
                    Entity["Concept", "Sarong::96j5v"], 
                    Entity["Concept", "Sax::v45s9"], 
                    Entity["Concept", "Scabbard::77z36"], 
                    Entity["Concept", "WeighingMachine::2xvy7"], 
                    Entity["Concept", "SchoolBus::2983r"], 
                    Entity["Concept", "Schooner::f2t26"], 
                    Entity["Concept", "Scoreboard::z76vk"], 
                    Entity["Concept", "CRTScreen::q6vr6"], 
                    Entity["Concept", "Screw::wwzc4"], 
                    Entity["Concept", "Screwdriver::8ty86"], 
                    Entity["Concept", "SeatBelt::4qg32"], 
                    Entity["Concept", "SewingMachine::23c46"], 
                    Entity["Concept", "Buckler::4m7zq"], 
                    Entity["Concept", "Shoe-shop::7ds48"], 
                    Entity["Concept", "Shoji::x95jt"], 
                    Entity["Concept", "ShoppingBasket::db865"], 
                    Entity["Concept", "ShoppingCart::95g62"], 
                    Entity["Concept", "Shovel::tjpz7"], 
                    Entity["Concept", "ShowerCap::2787m"], 
                    Entity["Concept", "ShowerCurtain::6cs25"], 
                    Entity["Concept", "Ski::5nbj2"], 
                    Entity["Concept", "SkiMask::6hd4m"], 
                    Entity["Concept", "SleepingBag::549k4"], 
                    Entity["Concept", "SlideRule::59p96"], 
                    Entity["Concept", "SlidingDoor::m65qk"], 
                    Entity["Concept", "One-armedBandit::573v8"], 
                    Entity["Concept", "Snorkel::53ncf"], 
                    Entity["Concept", "Snowmobile::y538p"], 
                    Entity["Concept", "Snowplough::h36y5"], 
                    Entity["Concept", "SoapDispenser::c2fjc"], 
                    Entity["Concept", "SoccerBall::25w42"], 
                    Entity["Concept", "Sock::8w379"], 
                    Entity["Concept", "SolarCollector::pw2xw"], 
                    Entity["Concept", "Sombrero::k9893"], 
                    Entity["Concept", "SoupBowl::w86pk"], 
                    Entity["Concept", "SpaceBar::735sr"], 
                    Entity["Concept", "SpaceHeater::spt23"], 
                    Entity["Concept", "SpaceShuttle::72jnc"], 
                    Entity["Concept", "Spatula::r7876"], 
                    Entity["Concept", "Speedboat::r6p4f"], 
                    Entity["Concept", "SpidersWeb::28fz6"], 
                    Entity["Concept", "Spindle::7zh9v"], 
                    Entity["Concept", "SportCar::k9874"], 
                    Entity["Concept", "Spot::q3792"], 
                    Entity["Concept", "Stage::86r83"], 
                    Entity["Concept", "SteamLocomotive::9kv4y"], 
                    Entity["Concept", "SteelArchBridge::46zx5"], 
                    Entity["Concept", "SteelDrum::fqv7s"], 
                    Entity["Concept", "Stethoscope::f829c"], 
                    Entity["Concept", "Stole::g8fqc"], 
                    Entity["Concept", "StoneWall::8489j"], 
                    Entity["Concept", "StopWatch::4vk6s"], 
                    Entity["Concept", "Stove::27vm8"], 
                    Entity["Concept", "Strainer::2c2kx"], 
                    Entity["Concept", "Streetcar::vhm65"], 
                    Entity["Concept", "Stretcher::74r96"], 
                    Entity["Concept", "DayBed::nrph3"], 
                    Entity["Concept", "Stupa::g64q6"], 
                    Entity["Concept", "Pigboat::p7yyy"], 
                    Entity["Concept", "SuitOfClothes::5c67x"], 
                    Entity["Concept", "Sundial::7mj6d"], 
                    Entity["Concept", "Sunglass::xc3yz"], 
                    Entity["Concept", "DarkGlasses::855bw"], 
                    Entity["Concept", "Sunblock::65k7n"], 
                    Entity["Concept", "SuspensionBridge::66qcg"], 
                    Entity["Concept", "Mop::v6xdr"], 
                    Entity["Concept", "Sweatshirt::s5937"], 
                    Entity["Concept", "BathingTrunks::c892w"], 
                    Entity["Concept", "Swing::s5b96"], 
                    Entity["Concept", "ElectricalSwitch::5gnjt"], 
                    Entity["Concept", "Syringe::8j57r"], 
                    Entity["Concept", "TableLamp::6239m"], 
                    Entity["Concept", "ArmoredCombatVehicle::353r5"], 
                    Entity["Concept", "TapePlayer::bf5f8"], 
                    Entity["Concept", "Teapot::c54x7"], 
                    Entity["Concept", "TeddyBear::f56q9"], 
                    Entity["Concept", "TelevisionSystem::5593b"], 
                    Entity["Concept", "TennisBall::xk58h"], 
                    Entity["Concept", "ThatchedRoof::w2cjw"], 
                    Entity["Concept", "TheaterCurtain::5kbhk"], 
                    Entity["Concept", "Thimble::9828b"], 
                    Entity["Concept", "ThreshingMachine::372m3"], 
                    Entity["Concept", "Throne::2t9q6"], 
                    Entity["Concept", "TileRoof::5p749"], 
                    Entity["Concept", "Toaster::rp6v2"], 
                    Entity["Concept", "TobacconistShop::88ncg"], 
                    Entity["Concept", "ToiletSeat::z8wvq"], 
                    Entity["Concept", "Torch::j9rg7"], 
                    Entity["Concept", "TotemPole::gbxn5"], 
                    Entity["Concept", "TowCar::ph6vn"], 
                    Entity["Concept", "Toyshop::74q74"], 
                    Entity["Concept", "Tractor::39j62"], 
                    Entity["Concept", "ArticulatedLorry::ph66j"], 
                    Entity["Concept", "Tray::jyx2n"], 
                    Entity["Concept", "TrenchCoat::rq833"], 
                    Entity["Concept", "Tricycle::3537s"], 
                    Entity["Concept", "Trimaran::2639q"], 
                    Entity["Concept", "Tripod::pqth2"], 
                    Entity["Concept", "TriumphalArch::q79sh"], 
                    Entity["Concept", "TracklessTrolley::78g52"], 
                    Entity["Concept", "Trombone::22z3w"], 
                    Entity["Concept", "Vat::vcpt8"], 
                    Entity["Concept", "Turnstile::82gr4"], 
                    Entity["Concept", "TypewriterKeyboard::z8334"], 
                    Entity["Concept", "Umbrella::3mntq"], 
                    Entity["Concept", "Monocycle::mrm29"], 
                    Entity["Concept", "UprightPiano::286t3"], 
                    Entity["Concept", "VacuumCleaner::7rg56"], 
                    Entity["Concept", "Vase::4x594"], 
                    Entity["Concept", "Vault::7k875"], 
                    Entity["Concept", "Velvet::575z6"], 
                    Entity["Concept", "VendingMachine::96kgg"], 
                    Entity["Concept", "Vestment::334y8"], 
                    Entity["Concept", "Viaduct::p32mt"], 
                    Entity["Concept", "Fiddle::q9djd"], 
                    Entity["Concept", "Volleyball::q7bkw"], 
                    Entity["Concept", "WaffleIron::gpqx8"], 
                    Entity["Concept", "WallClock::w5687"], 
                    Entity["Concept", "Billfold::z7845"], 
                    Entity["Concept", "Closet::588p6"], 
                    Entity["Concept", "MilitaryPlane::whx2r"], 
                    Entity["Concept", "Handbasin::6w875"], 
                    Entity["Concept", "AutomaticWasher::6d32z"], 
                    Entity["Concept", "WaterBottle::5wh67"], 
                    Entity["Concept", "WaterJug::759dt"], 
                    Entity["Concept", "WaterTower::4rr5d"], 
                    Entity["Concept", "WhiskeyJug::5gcrh"], 
                    Entity["Concept", "Whistle::pv275"], 
                    Entity["Concept", "Wig::9msqy"], 
                    Entity["Concept", "WindowScreen::wfk7m"], 
                    Entity["Concept", "WindowShade::3rh75"], 
                    Entity["Concept", "WindsorTie::5tt62"], 
                    Entity["Concept", "WineBottle::g4m78"], 
                    Entity["Concept", "Wing::tbhz7"], 
                    Entity["Concept", "Wok::fv9fj"], 
                    Entity["Concept", "WoodenSpoon::nc2wp"], 
                    Entity["Concept", "Woolen::ns82d"], 
                    Entity["Concept", "SnakeFence::837z2"], 
                    Entity["Concept", "Wreck::qr554"], 
                    Entity["Concept", "Yawl::hggp6"], 
                    Entity["Concept", "Yurt::4bbtv"], 
                    Entity["Concept", "InternetSite::639pp"], 
                    Entity["Concept", "ComicBook::ty3qz"], 
                    Entity["Concept", "Crossword::yqtk6"], 
                    Entity["Concept", "StreetSign::ysx2f"], 
                    Entity["Concept", "TrafficLight::b4966"], 
                    Entity["Concept", "BookJacket::sy4d3"], 
                    Entity["Concept", "Menu::g698m"], 
                    Entity["Concept", "Plate::2244k"], 
                    Entity["Concept", "Guacamole::xc482"], 
                    Entity["Concept", "Consomme::37g8f"], 
                    Entity["Concept", "HotPot::kgb8q"], 
                    Entity["Concept", "Trifle::b4264"], 
                    Entity["Concept", "IceCream::825yn"], 
                    Entity["Concept", "IceLolly::473v3"], 
                    Entity["Concept", "FrenchLoaf::x859t"], 
                    Entity["Concept", "Bagel::x38n5"], 
                    Entity["Concept", "Pretzel::967k7"], 
                    Entity["Concept", "Cheeseburger::3z2z7"], 
                    Entity["Concept", "RedHot::3j848"], 
                    Entity["Concept", "MashedPotato::8ys8w"], 
                    Entity["Concept", "HeadCabbage::9c693"], 
                    Entity["Concept", "Broccoli::spbm9"], 
                    Entity["Concept", "Cauliflower::fmp3m"], 
                    Entity["Concept", "Courgette::44yb5"], 
                    Entity["Concept", "SpaghettiSquash::8j979"], 
                    Entity["Concept", "AcornSquash::8p8y2"], 
                    Entity["Concept", "ButternutSquash::6k466"], 
                    Entity["Concept", "Cuke::nzfb2"], 
                    Entity["Concept", "Artichoke::ntvv7"], 
                    Entity["Concept", "BellPepper::9w646"], 
                    Entity["Concept", "Cardoon::s78dn"], 
                    Entity["Concept", "Mushroom::3xw4j"], 
                    Entity["Concept", "GrannySmith::k3786"], 
                    Entity["Concept", "Strawberry::3csyb"], 
                    Entity["Concept", "Orange::w579d"], 
                    Entity["Concept", "Lemon::743j2"], 
                    Entity["Concept", "Fig::d3p6f"], 
                    Entity["Concept", "Ananas::m6nzv"], 
                    Entity["Concept", "Banana::f6z73"], 
                    Entity["Concept", "Jak::p6r56"], 
                    Entity["Concept", "CustardApple::nx482"], 
                    Entity["Concept", "Pomegranate::dh736"], 
                    Entity["Concept", "Hay::vcd3m"], 
                    Entity["Concept", "Carbonara::9my37"], 
                    Entity["Concept", "ChocolateSauce::y5838"], 
                    Entity["Concept", "Dough::8x86g"], 
                    Entity["Concept", "MeatLoaf::t7nnp"], 
                    Entity["Concept", "Pizza::56w88"], 
                    Entity["Concept", "Potpie::38zh5"], 
                    Entity["Concept", "Burrito::4xwy5"], 
                    Entity["Concept", "RedWine::666g6"], 
                    Entity["Concept", "Espresso::rv2y4"], 
                    Entity["Concept", "Cup::q9zjy"], 
                    Entity["Concept", "Eggnog::9v7t8"], 
                    Entity["Concept", "Alp::m4bkv"], 
                    Entity["Concept", "Bubble::qp224"], 
                    Entity["Concept", "Cliff::q56fy"], 
                    Entity["Concept", "CoralReef::669j5"], 
                    Entity["Concept", "Geyser::5w69b"], 
                    Entity["Concept", "Lakeshore::4483j"], 
                    Entity["Concept", "Headland::8n9c9"], 
                    Entity["Concept", "SandBar::4w689"], 
                    Entity["Concept", "Sea-coast::m3d85"], 
                    Entity["Concept", "Vale::88wm8"], 
                    Entity["Concept", "Volcano::9fcbc"], 
                    Entity["Concept", "Ballplayer::7v976"], 
                    Entity["Concept", "Bridegroom::85m28"], 
                    Entity["Concept", "ScubaDiver::kqb95"], 
                    Entity["Concept", "Rapeseed::5x738"], 
                    Entity["Concept", "Daisy::hypz2"], 
                    Entity["Concept", "CypripediumCalceolus::7tzrs"], 
                    Entity["Concept", "Corn::m7hpj"], 
                    Entity["Concept", "Acorn::f62cf"], 
                    Entity["Concept", "RoseHip::333d2"], 
                    Entity["Concept", "Conker::v8p64"], 
                    Entity["Concept", "CoralFungus::f7fp4"], 
                    Entity["Concept", "Agaric::844w2"], 
                    Entity["Concept", "Gyromitra::3v4zb"], 
                    Entity["Concept", "CarrionFungus::wj2ng"], 
                    Entity["Concept", "Earthstar::678m7"], 
                    Entity["Concept", "GrifolaFrondosa::m7rxd"], 
                    Entity["Concept", "Bolete::9g3s2"], 
                    Entity["Concept", "Capitulum::834z6"], 
                    Entity["Concept", "BathroomTissue::ts4sr"]}, "Dimensions" -> 
                  1000], 
                 NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]]]], 
            NeuralNetworks`Private`NetChain`opart, 
            NeuralNetworks`Private`NetChain`part, 
            NeuralNetworks`Private`NetChain`selected = Null}, 
            DynamicBox[GridBox[{{
                NeuralNetworks`Private`NetChain`MouseClickBoxes[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"3\"", "\"224\"", 
                    "\"224\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"224\"", 
                    "\"224\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu1_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"224\"", 
                    "\"224\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"224\"", 
                    "\"224\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu1_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"224\"", 
                    "\"224\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"112\"", 
                    "\"112\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv2_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"128\"", "\"112\"", 
                    "\"112\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu2_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"128\"", "\"112\"", 
                    "\"112\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv2_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"128\"", "\"112\"", 
                    "\"112\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu2_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"128\"", "\"112\"", 
                    "\"112\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"128\"", "\"56\"", 
                    "\"56\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"256\"", "\"56\"", 
                    "\"56\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu3_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"256\"", "\"56\"", 
                    "\"56\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"256\"", "\"56\"", 
                    "\"56\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu3_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"256\"", "\"56\"", 
                    "\"56\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"256\"", "\"56\"", 
                    "\"56\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu3_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"256\"", "\"56\"", 
                    "\"56\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"256\"", "\"28\"", 
                    "\"28\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv4_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"512\"", "\"28\"", 
                    "\"28\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu4_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"512\"", "\"28\"", 
                    "\"28\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv4_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"512\"", "\"28\"", 
                    "\"28\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu4_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"512\"", "\"28\"", 
                    "\"28\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv4_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"512\"", "\"28\"", 
                    "\"28\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu4_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"512\"", "\"28\"", 
                    "\"28\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"512\"", "\"14\"", 
                    "\"14\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv5_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"512\"", "\"14\"", 
                    "\"14\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu5_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"512\"", "\"14\"", 
                    "\"14\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv5_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"512\"", "\"14\"", 
                    "\"14\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu5_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"512\"", "\"14\"", 
                    "\"14\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv5_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"512\"", "\"14\"", 
                    "\"14\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu5_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"512\"", "\"14\"", 
                    "\"14\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"512\"", "\"7\"", "\"7\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"flatten_0\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten_0"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten_0"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"25088\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "flatten_0"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"fc6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fc6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fc6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4096\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "fc6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4096\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"drop6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4096\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "drop6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"fc7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fc7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fc7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4096\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "fc7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4096\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"drop7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4096\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "drop7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"fc8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fc8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fc8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1000\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "fc8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"prob\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "prob"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "prob"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1000\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "prob"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                 If[
                  ListQ[
                  NeuralNetworks`Private`NetChain`part = MouseAnnotation[]], 
                  If[
                   NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
               NeuralNetworks`Private`NetChain`fmtSelected[
               NeuralNetworks`Private`NetChain`selected, 
                NeuralNetworks`Private`NetChain`part]}, 
              GridBoxSpacings -> {"Columns" -> {{1}}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}],
             ImageSizeCache->{412., {423., 431.}},
             TrackedSymbols:>{NeuralNetworks`Private`NetChain`selected}],
            Initialization:>{NetChain}],
           BaselinePosition->Automatic], "]"}]}],
        False],
       Deploy],
      LineBreakWithin->False],
     StandardForm],
    StandardForm,
    Editable->True], ",", 
   TagBox[
    FormBox[
     TagBox[GridBox[{
        {"\<\"\"\>", "\<\"input\"\>", 
         TagBox[GridBox[{
            {"\<\"image\"\>"},
            {
             TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
                
                TemplateBox[{
                 "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                  "\" \"", 
                  
                  TemplateBox[{
                   "\[Times]", "\"\[Times]\"", "\"3\"", "\"224\"", "\"224\""},
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                 "RowDefault"], 
                GrayLevel[0.5], StripOnInput -> False]},
              "RowDefault"]}
           },
           BaselinePosition->2,
           DefaultBaseStyle->"Column",
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"]},
        {
         StyleBox["\<\"conv1_1\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"convolution\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"64\"", "\"224\"", "\"224\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"relu1_1\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], 
         TagBox[
          FormBox["\<\"ReLU\"\>",
           TraditionalForm],
          TraditionalForm,
          Editable->True], 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"64\"", "\"224\"", "\"224\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"conv1_2\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"convolution\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"64\"", "\"224\"", "\"224\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"relu1_2\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], 
         TagBox[
          FormBox["\<\"ReLU\"\>",
           TraditionalForm],
          TraditionalForm,
          Editable->True], 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"64\"", "\"224\"", "\"224\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"pool1\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"pooling\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"64\"", "\"112\"", "\"112\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"conv2_1\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"convolution\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"128\"", "\"112\"", "\"112\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"relu2_1\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], 
         TagBox[
          FormBox["\<\"ReLU\"\>",
           TraditionalForm],
          TraditionalForm,
          Editable->True], 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"128\"", "\"112\"", "\"112\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"conv2_2\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"convolution\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"128\"", "\"112\"", "\"112\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"relu2_2\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], 
         TagBox[
          FormBox["\<\"ReLU\"\>",
           TraditionalForm],
          TraditionalForm,
          Editable->True], 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"128\"", "\"112\"", "\"112\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"pool2\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"pooling\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"128\"", "\"56\"", "\"56\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"conv3_1\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"convolution\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"256\"", "\"56\"", "\"56\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"relu3_1\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], 
         TagBox[
          FormBox["\<\"ReLU\"\>",
           TraditionalForm],
          TraditionalForm,
          Editable->True], 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"256\"", "\"56\"", "\"56\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"conv3_2\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"convolution\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"256\"", "\"56\"", "\"56\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"relu3_2\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], 
         TagBox[
          FormBox["\<\"ReLU\"\>",
           TraditionalForm],
          TraditionalForm,
          Editable->True], 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"256\"", "\"56\"", "\"56\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"conv3_3\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"convolution\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"256\"", "\"56\"", "\"56\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"relu3_3\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], 
         TagBox[
          FormBox["\<\"ReLU\"\>",
           TraditionalForm],
          TraditionalForm,
          Editable->True], 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"256\"", "\"56\"", "\"56\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"pool3\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"pooling\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"256\"", "\"28\"", "\"28\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"conv4_1\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"convolution\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"512\"", "\"28\"", "\"28\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"relu4_1\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], 
         TagBox[
          FormBox["\<\"ReLU\"\>",
           TraditionalForm],
          TraditionalForm,
          Editable->True], 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"512\"", "\"28\"", "\"28\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"conv4_2\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"convolution\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"512\"", "\"28\"", "\"28\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"relu4_2\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], 
         TagBox[
          FormBox["\<\"ReLU\"\>",
           TraditionalForm],
          TraditionalForm,
          Editable->True], 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"512\"", "\"28\"", "\"28\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"conv4_3\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"convolution\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"512\"", "\"28\"", "\"28\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"relu4_3\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], 
         TagBox[
          FormBox["\<\"ReLU\"\>",
           TraditionalForm],
          TraditionalForm,
          Editable->True], 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"512\"", "\"28\"", "\"28\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"pool4\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"pooling\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"512\"", "\"14\"", "\"14\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"conv5_1\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"convolution\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"512\"", "\"14\"", "\"14\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"relu5_1\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], 
         TagBox[
          FormBox["\<\"ReLU\"\>",
           TraditionalForm],
          TraditionalForm,
          Editable->True], 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"512\"", "\"14\"", "\"14\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"conv5_2\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"convolution\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"512\"", "\"14\"", "\"14\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"relu5_2\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], 
         TagBox[
          FormBox["\<\"ReLU\"\>",
           TraditionalForm],
          TraditionalForm,
          Editable->True], 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"512\"", "\"14\"", "\"14\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"conv5_3\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"convolution\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"512\"", "\"14\"", "\"14\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"relu5_3\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], 
         TagBox[
          FormBox["\<\"ReLU\"\>",
           TraditionalForm],
          TraditionalForm,
          Editable->True], 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"512\"", "\"14\"", "\"14\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"pool5\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"pooling\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"512\"", "\"7\"", "\"7\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"flatten_0\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"flatten\"\>", 
         TemplateBox[{"\"vector\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{"\[Times]", "\"\[Times]\"", "\"25088\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"fc6\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"linear\"\>", 
         TemplateBox[{"\"vector\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4096\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"relu6\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], 
         TagBox[
          FormBox["\<\"ReLU\"\>",
           TraditionalForm],
          TraditionalForm,
          Editable->True], 
         TemplateBox[{"\"vector\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4096\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"drop6\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"dropout\"\>", 
         TemplateBox[{"\"vector\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4096\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"fc7\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"linear\"\>", 
         TemplateBox[{"\"vector\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4096\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"relu7\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], 
         TagBox[
          FormBox["\<\"ReLU\"\>",
           TraditionalForm],
          TraditionalForm,
          Editable->True], 
         TemplateBox[{"\"vector\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4096\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"drop7\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"dropout\"\>", 
         TemplateBox[{"\"vector\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4096\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"fc8\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"linear\"\>", 
         TemplateBox[{"\"vector\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1000\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"prob\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"softmax\"\>", 
         TemplateBox[{"\"vector\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1000\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>", "\<\"output\"\>", "\<\"class\"\>"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {{1.1}}}],
      "Grid"],
     TraditionalForm],
    TraditionalForm,
    Editable->True], ",", "40"}], "}"}]], "Output",
 CellChangeTimes->{
  3.70046419432176*^9, 3.700464312759787*^9, 3.7004644449751153`*^9, 
   3.7004699730180163`*^9, {3.7004736794833655`*^9, 
   3.7004736847178106`*^9}},ExpressionUUID->"54b9866c-a5bf-4ddb-9229-\
bd749eda00e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"net", "=", 
   RowBox[{
   "NetModel", "[", "\"\<Wolfram ImageIdentify Net for WL 11.1\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"StandardForm", "@", "net"}], ",", 
   RowBox[{"TraditionalForm", "@", "net"}], ",", 
   RowBox[{"Length", "@", 
    RowBox[{"Normal", "@", "net"}]}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.7004640297952523`*^9, 3.7004640372388744`*^9}, {
   3.700464097106967*^9, 3.7004641065446634`*^9}, 3.7004641594266806`*^9, 
   3.700464309603516*^9},ExpressionUUID->"805f1a2f-9075-40c3-bdf6-\
1e7c82e285f1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    FormBox[
     StyleBox[
      TagBox[
       TagBox[
        RowBox[{"NetChain", 
         RowBox[{"[", 
          PanelBox[
           
           DynamicModuleBox[{NeuralNetworks`Private`NetChain`assoc3 = 
            Association[
            "Type" -> "Chain", "Nodes" -> 
             Association[
              "conv_1" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{64, 3, 7, 7}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 64, "KernelSize" -> {7, 7}, 
                   "Stride" -> {2, 2}, "PaddingSize" -> {3, 3}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 3, "$GroupNumber" -> 1, 
                   "$InputSize" -> {224, 224}, "$OutputSize" -> {112, 112}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]]], "bn_1" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], "Beta" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                   "MovingVariance" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   64, "$Shape" -> 
                   NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]]], "relu_1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {64, 112, 112}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]]], "pool_1" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                   "PaddingSize" -> {0, 0}, "Function" -> Max, 
                   "Dimensionality" -> 2, "Channels" -> 64, 
                   "$InputSize" -> {112, 112}, "$OutputSize" -> {55, 55}, 
                   "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]]], "conv_2_red" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{64, 64, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 64, "$GroupNumber" -> 1, 
                   "$InputSize" -> {55, 55}, "$OutputSize" -> {55, 55}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]]], "bn_2_red" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], "Beta" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                   "MovingVariance" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   64, "$Shape" -> 
                   NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]]], "relu_2_red" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {64, 55, 55}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]]], "conv_2" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{192, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 192, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 64, "$GroupNumber" -> 1, 
                   "$InputSize" -> {55, 55}, "$OutputSize" -> {55, 55}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 55, 55}, 
                    NeuralNetworks`RealT]]], "bn_2" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   192, "$Shape" -> 
                   NeuralNetworks`TensorT[{192, 55, 55}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 55, 55}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 55, 55}, 
                    NeuralNetworks`RealT]]], "relu_2" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {192, 55, 55}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 55, 55}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 55, 55}, 
                    NeuralNetworks`RealT]]], "pool_2" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                   "PaddingSize" -> {0, 0}, "Function" -> Max, 
                   "Dimensionality" -> 2, "Channels" -> 192, 
                   "$InputSize" -> {55, 55}, "$OutputSize" -> {27, 27}, 
                   "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 55, 55}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]]], "3a" -> 
               Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "conv1x1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 192, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    64, "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 192, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    64, "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    64, "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 192, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    64, "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 96, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 96, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
                   Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "Channels" -> 192, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{32, 192, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 32, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    32, "$Shape" -> 
                    NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath["Nodes", "bn1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Outputs", "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
               "3b" -> Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{320, 27, 27}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "conv1x1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 256, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    64, "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 256, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    64, "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 256, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    64, "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 96, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 96, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
                   Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "Channels" -> 256, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 256, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    64, "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{320, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 27, 27}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath["Nodes", "bn1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Outputs", "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
               "3c" -> Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{320, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "conv3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 320, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 320, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{320, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 27, 27}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{160, 128, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    160, "$Shape" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 320, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 320, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{320, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    64, "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 96, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 96, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "max_poolpool" -> 
                   Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Channels" -> 320, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {14, 14}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{320, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 14, 14}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{320, 14, 14}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 3, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{320, 14, 14}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "max_poolpool", "Outputs", "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "max_poolpool", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
               "4a" -> Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "conv1x1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{224, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 224, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{224}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    224, "$Shape" -> 
                    NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {224, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    64, "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 96, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 96, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
                   Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "Channels" -> 576, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath["Nodes", "bn1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Outputs", "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
               "4b" -> Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "conv1x1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    192, "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 96, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 96, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 96, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 96, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
                   Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "Channels" -> 576, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath["Nodes", "bn1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Outputs", "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
               "4c" -> Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "conv1x1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{160, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    160, "$Shape" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{160, 128, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    160, "$Shape" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{160, 128, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    160, "$Shape" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{160, 160, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 160, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    160, "$Shape" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
                   Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "Channels" -> 576, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath["Nodes", "bn1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Outputs", "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
               "4d" -> Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "conv1x1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 608, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 608, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 608, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 608, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 128, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    192, "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{160, 608, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 608, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    160, "$Shape" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 160, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 160, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    192, "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 192, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    192, "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
                   Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "Channels" -> 608, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 608, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 608, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath["Nodes", "bn1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Outputs", "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
               "4e" -> Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "conv3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 608, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 608, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 128, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    192, "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 608, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 608, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    192, "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{256, 192, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    256, "$Shape" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{256, 256, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    256, "$Shape" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]]], "max_poolpool" -> 
                   Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Channels" -> 608, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {7, 7}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{608, 7, 7}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    NeuralNetworks`TensorT[{192, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{256, 7, 7}, NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{608, 7, 7}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 3, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    NeuralNetworks`TensorT[{192, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{256, 7, 7}, NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{608, 7, 7}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "max_poolpool", "Outputs", "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "max_poolpool", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
               "5a" -> Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "conv1x1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{352, 1056, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{352}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 352, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 1056, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{352}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{352}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{352}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{352}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    352, "$Shape" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {352, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 1056, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 1056, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    192, "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{320, 192, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 320, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{320}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    320, "$Shape" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {320, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{160, 1056, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 1056, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    160, "$Shape" -> 
                    NeuralNetworks`TensorT[{160, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{224, 160, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 224, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 160, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                    "Beta" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    224, "$Shape" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {224, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{224, 224, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 224, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 224, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{224}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    224, "$Shape" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {224, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
                   Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "Channels" -> 1056, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 1056, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 1056, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    NeuralNetworks`TensorT[{352, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{320, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{224, 7, 7}, NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    NeuralNetworks`TensorT[{352, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{320, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{224, 7, 7}, NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath["Nodes", "bn1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Outputs", "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
               "5b" -> Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "conv1x1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{352, 1024, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{352}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 352, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 1024, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{352}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{352}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{352}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{352}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    352, "$Shape" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {352, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 1024, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 1024, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    192, "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{320, 192, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 320, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{320}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    320, "$Shape" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {320, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 1024, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 1024, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    192, "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{224, 192, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 224, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{224}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    224, "$Shape" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {224, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{224, 224, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 224, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 224, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{224}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    224, "$Shape" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {224, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "max_poolpool" -> 
                   Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Channels" -> 1024, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 1024, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 1024, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    NeuralNetworks`TensorT[{352, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{320, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{224, 7, 7}, NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    NeuralNetworks`TensorT[{352, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{320, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{224, 7, 7}, NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath["Nodes", "bn1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "max_poolpool", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Outputs", "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "max_poolpool", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
               "global_pool" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {7, 7}, "Stride" -> {1, 1}, 
                   "PaddingSize" -> {0, 0}, "Function" -> Mean, 
                   "Dimensionality" -> 2, "Channels" -> 1024, 
                   "$InputSize" -> {7, 7}, "$OutputSize" -> {1, 1}, 
                   "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{1024, 1, 1}, 
                    NeuralNetworks`RealT]]], "linear" -> 
               Association[
                "Type" -> "Linear", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{4315, 1024}, NeuralNetworks`RealT],
                    "Biases" -> 
                   NeuralNetworks`TensorT[{4315}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputDimensions" -> {4315}, "$OutputSize" -> 4315, 
                   "$InputSize" -> 1024, "$InputDimensions" -> {1024, 1, 1}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{1024, 1, 1}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{4315}, NeuralNetworks`RealT]]], 
               "softmax" -> 
               Association[
                "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
                 Association[], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{4315}, NeuralNetworks`RealT]], 
                 "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{4315}, NeuralNetworks`RealT]]]], 
             "Edges" -> {
              NeuralNetworks`NetPath["Nodes", "conv_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Nodes", "bn_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "conv_1", "Outputs", "Output"],
                NeuralNetworks`NetPath["Nodes", "relu_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "bn_1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "pool_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "relu_1", "Outputs", "Output"],
                NeuralNetworks`NetPath[
                "Nodes", "conv_2_red", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "pool_1", "Outputs", "Output"],
                NeuralNetworks`NetPath[
                "Nodes", "bn_2_red", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv_2_red", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu_2_red", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bn_2_red", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "conv_2", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu_2_red", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "bn_2", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "conv_2", "Outputs", "Output"],
                NeuralNetworks`NetPath["Nodes", "relu_2", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "bn_2", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "pool_2", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "relu_2", "Outputs", "Output"],
                NeuralNetworks`NetPath["Nodes", "3a", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "pool_2", "Outputs", "Output"],
                NeuralNetworks`NetPath["Nodes", "3b", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "3a", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "3c", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "3b", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "4a", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "3c", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "4b", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "4a", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "4c", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "4b", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "4d", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "4c", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "4e", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "4d", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "5a", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "4e", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "5b", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "5a", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "global_pool", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "5b", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "linear", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "global_pool", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "softmax", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "linear", "Outputs", "Output"],
                NeuralNetworks`NetPath["Outputs", "Output"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "softmax", "Outputs", "Output"]}, "Inputs" -> 
             Association["Input" -> NetEncoder["Image", 
                 Association[
                 "ImageSize" -> {224, 224}, "ColorSpace" -> "RGB", 
                  "ColorChannels" -> 3, "MeanImage" -> {0.48, 0.46, 0.4}], 
                 
                 NeuralNetworks`TensorT[{3, 224, 224}, 
                  NeuralNetworks`RealT]]], "Outputs" -> 
             Association["Output" -> NetDecoder["Class", 
                 Association["Labels" -> {
                    Entity["Building", "AzadiTower::7v988"], 
                    Entity["Building", "Colosseum::pq39x"], 
                    Entity["Building", "EiffelTower::5h9w8"], 
                    Entity["Building", "ElizabethTower::4brf8"], 
                    Entity["Building", "GatewayArch::b5qvn"], 
                    Entity["Building", "GreatPyramidOfGiza::jbm66"], 
                    Entity["Building", "GreatWall::f96r6"], 
                    Entity["Building", "LeaningTowerOfPisa::snx99"], 
                    Entity["Building", "LincolnMemorial::z9s68"], 
                    Entity["Building", "MachuPicchu::3243b"], 
                    Entity["Building", "Monticello::54xdv"], 
                    Entity["Building", "Parthenon::p68yz"], 
                    Entity["Building", "SpaceNeedle::79xq6"], 
                    Entity["Building", "StatueOfLiberty::6k253"], 
                    Entity["Building", "Stonehenge::46k59"], 
                    Entity["Building", "TajMahal::zw4mm"], 
                    Entity["Building", "ThePentagon::qzh8d"], 
                    Entity["Building", "TheWhiteHouse::7q2yf"], 
                    Entity["Building", "WashingtonMonument::37nf3"], 
                    Entity["Concept", "Aardvark::r3rg2"], 
                    Entity["Concept", "AaronsRod::2488g"], 
                    Entity["Concept", "Abacus::s322h"], 
                    Entity["Concept", "Abaya::327b3"], 
                    Entity["Concept", "Abele::ryw6v"], 
                    Entity["Concept", "Abelia::27b49"], 
                    Entity["Concept", "AbelmoschusEsculentus::nr6z4"], 
                    Entity["Concept", "AbelmoschusMoschatus::jrg26"], 
                    Entity["Concept", "AberdeenAngus::7452t"], 
                    Entity["Concept", "AbiesAlba::25t96"], 
                    Entity["Concept", "AbiesAmabilis::933n8"], 
                    Entity["Concept", "AbiesBalsamea::7z53n"], 
                    Entity["Concept", "AbiesConcolor::3npn5"], 
                    Entity["Concept", "AbiesFraseri::85r34"], 
                    Entity["Concept", "AbiesGrandis::frn87"], 
                    Entity["Concept", "AbiesLasiocarpa::4ttmt"], 
                    Entity["Concept", "AbroniaVillosa::26xg2"], 
                    Entity["Concept", "Absinth::mzz4c"], 
                    Entity["Concept", "AbudefdufSaxatilis::62t8d"], 
                    Entity["Concept", "AbutilonTheophrasti::qvn7p"], 
                    Entity["Concept", "AbyssinianBanana::3y6f3"], 
                    Entity["Concept", "AcaciaAuriculiformis::cyz5s"], 
                    Entity["Concept", "AcaciaDealbata::73zc6"], 
                    Entity["Concept", "AcaciaFarnesiana::458p4"], 
                    Entity["Concept", "AcaciaMelanoxylon::y8vxf"], 
                    Entity["Concept", "AcaciaPycnantha::r4vzy"], 
                    Entity["Concept", "AcaciaXanthophloea::s8p96"], 
                    Entity["Concept", "AcademicCostume::p832h"], 
                    Entity["Concept", "AcanthocybiumSolandri::82x45"], 
                    Entity["Concept", "AcanthusMollis::742p4"], 
                    Entity["Concept", "AcceleratorPedal::c2h79"], 
                    Entity["Concept", "AccipiterCooperii::45z67"], 
                    Entity["Concept", "AccipiterGentilis::3g4m3"], 
                    Entity["Concept", "AccipiterNisus::2w332"], 
                    Entity["Concept", "Accordion::vx545"], 
                    Entity["Concept", "AcerCampestre::3wqy7"], 
                    Entity["Concept", "AcerCircinatum::dwx7x"], 
                    Entity["Concept", "AcerJaponicum::24h8p"], 
                    Entity["Concept", "AcerMacrophyllum::6vq83"], 
                    Entity["Concept", "AcerNegundoCalifornicum::r6947"], 
                    Entity["Concept", "AcerPlatanoides::cz4f2"], 
                    Entity["Concept", "AcerPseudoplatanus::rc533"], 
                    Entity["Concept", "AcerRubrum::zq9pv"], 
                    Entity["Concept", "AcerSaccharinum::8tg99"], 
                    Entity["Concept", "AcerSaccharum::p6272"], 
                    Entity["Concept", "AcherontiaAtropos::363wr"], 
                    Entity["Concept", "AchilleaMillefolium::v85t4"], 
                    Entity["Concept", "Achimenes::66c96"], 
                    Entity["Concept", "AcinonyxJubatus::3g535"], 
                    Entity["Concept", "AcipenserHuso::8f6fg"], 
                    Entity["Concept", "AconitumNapellus::gdjd9"], 
                    Entity["Concept", "AcornBarnacle::xshw8"], 
                    Entity["Concept", "Acorn::f62cf"], 
                    Entity["Concept", "AcornSquash::666k4"], 
                    Entity["Concept", "AcousticGuitar::wp46j"], 
                    Entity["Concept", "AcridotheresTristis::57j92"], 
                    Entity["Concept", "AcrocephalusSchoenobaenus::d46nv"], 
                    Entity["Concept", "Acropolis::2bxcw"], 
                    Entity["Concept", "ActaeaRubra::6v334"], 
                    Entity["Concept", "ActiasLuna::nrv8g"], 
                    Entity["Concept", "Actinia::xd3m2"], 
                    Entity["Concept", "ActinidiaChinensis::8xs3f"], 
                    Entity["Concept", "ActinomerisAlternifolia::vjmd9"], 
                    Entity["Concept", "ActitisHypoleucos::x9q23"], 
                    Entity["Concept", "ActitisMacularia::2byms"], 
                    Entity["Concept", "AcuminateLeaf::4jc7x"], 
                    Entity["Concept", "AdaliaBipunctata::s33k6"], 
                    Entity["Concept", "AdamsNeedle::j2m7x"], 
                    Entity["Concept", "AdansoniaDigitata::8p962"], 
                    Entity["Concept", "Adaptor::329c4"], 
                    Entity["Concept", "Addax::tr228"], 
                    Entity["Concept", "AddersFern::4b6t5"], 
                    Entity["Concept", "Adelie::k5595"], 
                    Entity["Concept", "AdenantheraPavonina::vjd26"], 
                    Entity["Concept", "AdeniumMultiflorum::dxmf4"], 
                    Entity["Concept", "Adenoid::72djz"], 
                    Entity["Concept", "AdiantumCapillus-veneris::v3qvt"], 
                    Entity["Concept", "AdiantumPedatum::3cy7x"], 
                    Entity["Concept", "AdjutantBird::2385x"], 
                    Entity["Concept", "Admiral::j6fvp"], 
                    Entity["Concept", "AedesAegypti::22f79"], 
                    Entity["Concept", "AedesAlbopictus::645w3"], 
                    Entity["Concept", "AegicerasMajus::k4phc"], 
                    Entity["Concept", "AegilopsTriuncalis::8j547"], 
                    Entity["Concept", "AegypiusMonachus::928n2"], 
                    Entity["Concept", "AepycerosMelampus::q45p2"], 
                    Entity["Concept", "AerialPhoto::9wkn2"], 
                    Entity["Concept", "AerialTramway::65m89"], 
                    Entity["Concept", "Aerides::ns9g6"], 
                    Entity["Concept", "Aerogenerator::j5j56"], 
                    Entity["Concept", "AetobatusNarinari::3yb87"], 
                    Entity["Concept", "Affenpinscher::58wr6"], 
                    Entity["Concept", "Afghan::8fnxm"], 
                    Entity["Concept", "AfghanHound::6845m"], 
                    Entity["Concept", "AfricanChameleon::x82fs"], 
                    Entity["Concept", "AfricanClawedFrog::497m9"], 
                    Entity["Concept", "AfricanCrocodile::zw55f"], 
                    Entity["Concept", "AfricanDaisy::c744x"], 
                    Entity["Concept", "AfricanElephant::634z7"], 
                    Entity["Concept", "AfricanGray::84css"], 
                    Entity["Concept", "AfricanHuntingDog::d9b86"], 
                    Entity["Concept", "AfricanizedBee::sf5kh"], 
                    Entity["Concept", "AfricanLily::96qmb"], 
                    Entity["Concept", "AfricanMarigold::7v8h5"], 
                    Entity["Concept", "AfricanMonitor::44h97"], 
                    Entity["Concept", "AfricanViolet::r84d7"], 
                    Entity["Concept", "Agama::22vdx"], 
                    Entity["Concept", "AgastacheFoeniculum::rq857"], 
                    Entity["Concept", "AgathisAustralis::888t3"], 
                    Entity["Concept", "AgaveAmericana::r8gzy"], 
                    Entity["Concept", "AgaveAtrovirens::2979g"], 
                    Entity["Concept", "AgaveCantala::gbt8b"], 
                    Entity["Concept", "AgelaiusPhoeniceus::62wmq"], 
                    Entity["Concept", "AgeratumHoustonianum::957ng"], 
                    Entity["Concept", "AgkistrodonContortrix::83n6g"], 
                    Entity["Concept", "AgkistrodonPiscivorus::68k55"], 
                    Entity["Concept", "AgrimoniaEupatoria::vw3jb"], 
                    Entity["Concept", "AgriocharisOcellata::8974j"], 
                    Entity["Concept", "AgrostemmaGithago::mkq93"], 
                    Entity["Concept", "Agua::66y92"], 
                    Entity["Concept", "Aguacate::874wr"], 
                    Entity["Concept", "AgueWeed::3n727"], 
                    Entity["Concept", "AilanthusAltissima::jg3fn"], 
                    Entity["Concept", "AiluropodaMelanoleuca::xg799"], 
                    Entity["Concept", "AilurusFulgens::m96y6"], 
                    Entity["Concept", "AirCompressor::8kmj7"], 
                    Entity["Concept", "AirConditioner::4842v"], 
                    Entity["Concept", "AircraftCarrier::74d49"], 
                    Entity["Concept", "AircraftEngine::3svnv"], 
                    Entity["Concept", "Airdock::22k56"], 
                    Entity["Concept", "Airedale::w6gf4"], 
                    Entity["Concept", "AirplanePropeller::pk3dv"], 
                    Entity["Concept", "AirportTerminal::dv5dp"], 
                    Entity["Concept", "AixGalericulata::9527q"], 
                    Entity["Concept", "Ai::z6968"], 
                    Entity["Concept", "AjaiaAjaja::wtz9n"], 
                    Entity["Concept", "AjugaGenevensis::35j66"], 
                    Entity["Concept", "AjugaPyramidalis::yv32g"], 
                    Entity["Concept", "AjugaReptans::y9zv3"], 
                    Entity["Concept", "AlaskaFurSeal::5227v"], 
                    Entity["Concept", "AlaskanBrownBear::49b26"], 
                    Entity["Concept", "AlaskanMalamute::y6wqq"], 
                    Entity["Concept", "AlaudaArvensis::38bs5"], 
                    Entity["Concept", "AlbiziaJulibrissin::ysb84"], 
                    Entity["Concept", "AlbiziaSaman::28c92"], 
                    Entity["Concept", "AlbulaVulpes::85mbd"], 
                    Entity["Concept", "AlcaTorda::x423g"], 
                    Entity["Concept", "AlceaRosea::82d33"], 
                    Entity["Concept", "AlcedoAtthis::92zy2"], 
                    Entity["Concept", "AlcesAlces::h5543"], 
                    Entity["Concept", "AlderFly::jsf58"], 
                    Entity["Concept", "AlectorisRuffa::jd6hg"], 
                    Entity["Concept", "AlecturaLathami::kqwv9"], 
                    Entity["Concept", "Alehoof::3cn25"], 
                    Entity["Concept", "Alfalfa::6fw4m"], 
                    Entity["Concept", "Alkanet::gmd5z"], 
                    Entity["Concept", "AllamandaCathartica::sfyx4"], 
                    Entity["Concept", "All-daySucker::2tz2s"], 
                    Entity["Concept", "AlleghanyPlum::7mfkm"], 
                    Entity["Concept", "AlleghenyChinkapin::p5mbj"], 
                    Entity["Concept", "AllenWrench::cdzf5"], 
                    Entity["Concept", "AlliariaOfficinalis::rk2wp"], 
                    Entity["Concept", "AlligatorClip::5gkpq"], 
                    Entity["Concept", "AlligatorLizard::k6335"], 
                    Entity["Concept", "AlligatorMississipiensis::s7582"], 
                    Entity["Concept", "AlligatorSinensis::n53hb"], 
                    Entity["Concept", "AlligatorSnapper::n74bb"], 
                    Entity["Concept", "AlliumAscalonicum::m5rhr"], 
                    Entity["Concept", "AlliumCernuum::ycy2v"], 
                    Entity["Concept", "AlliumSchoenoprasum::78x9x"], 
                    Entity["Concept", "AlliumTuberosum::h7h8g"], 
                    Entity["Concept", "AlliumUrsinum::nf3xf"], 
                    Entity["Concept", "Allmouth::h2psq"], 
                    Entity["Concept", "All-terrainBike::7n976"], 
                    Entity["Concept", "AlnusGlutinosa::4689g"], 
                    Entity["Concept", "AlnusRhombifolia::2mbwg"], 
                    Entity["Concept", "Alpenstock::9b5p5"], 
                    Entity["Concept", "AlpineAsh::ymt7b"], 
                    Entity["Concept", "AlpiniaGalanga::587p3"], 
                    Entity["Concept", "AlpiniaSpeciosa::97wpn"], 
                    Entity["Concept", "Alsatian::fh5zw"], 
                    Entity["Concept", "AlstoniaScholaris::2b983"], 
                    Entity["Concept", "Altarpiece::qqr25"], 
                    Entity["Concept", "AltheaOfficinalis::92rgc"], 
                    Entity["Concept", "AltocumulusClouds::756ys"], 
                    Entity["Concept", "AltostratusClouds::9cct6"], 
                    Entity["Concept", "AluminiumFoil::kf568"], 
                    Entity["Concept", "Alyssum::7yyc5"], 
                    Entity["Concept", "AmaranthusAlbus::xr28d"], 
                    Entity["Concept", "AmaranthusHypochondriacus::9vkry"], 
                    Entity["Concept", "Amazon::p9mwr"], 
                    Entity["Concept", "Amberbell::smqr2"], 
                    Entity["Concept", "Amberfish::dvy83"], 
                    Entity["Concept", "AmblyrhynchusCristatus::885jt"], 
                    Entity["Concept", "Ambo::585vd"], 
                    Entity["Concept", "AmbrosiaPsilostachya::3wjms"], 
                    Entity["Concept", "Ambulance::rgts3"], 
                    Entity["Concept", "AmbystomaMaculatum::qnd2g"], 
                    Entity["Concept", "AmbystomaMexicanum::k9j45"], 
                    Entity["Concept", "AmbystomaTigrinum::vpc9p"], 
                    Entity["Concept", "AmericanAntelope::mnsp5"], 
                    Entity["Concept", "AmericanArborvitae::wj2dk"], 
                    Entity["Concept", "AmericanBasswood::568cf"], 
                    Entity["Concept", "AmericanBeech::3238n"], 
                    Entity["Concept", "AmericanBison::68dvx"], 
                    Entity["Concept", "AmericanBittern::r6scm"], 
                    Entity["Concept", "AmericanChameleon::67k54"], 
                    Entity["Concept", "AmericanChestnut::w7h35"], 
                    Entity["Concept", "AmericanCockroach::wm66b"], 
                    Entity["Concept", "AmericanCoot::c7452"], 
                    Entity["Concept", "AmericanCopper::x7272"], 
                    Entity["Concept", "AmericanCranberryBush::gv698"], 
                    Entity["Concept", "AmericanCreeper::5vvm6"], 
                    Entity["Concept", "AmericanCrow::bxn7d"], 
                    Entity["Concept", "AmericanDogTick::vm2m6"], 
                    Entity["Concept", "AmericanDogwood::6jtx3"], 
                    Entity["Concept", "AmericanEagle::z2fqr"], 
                    Entity["Concept", "AmericanEgret::43jz8"], 
                    Entity["Concept", "AmericanElm::5y2b7"], 
                    Entity["Concept", "AmericanGallinule::c8742"], 
                    Entity["Concept", "AmericanGrayBirch::9m669"], 
                    Entity["Concept", "AmericanHolly::5scr6"], 
                    Entity["Concept", "AmericanKestrel::82hr9"], 
                    Entity["Concept", "AmericanLarch::x472z"], 
                    Entity["Concept", "AmericanLaurel::pjwr4"], 
                    Entity["Concept", "AmericanLotus::85f57"], 
                    Entity["Concept", "AmericanMerganser::4hkvk"], 
                    Entity["Concept", "AmericanPennyroyal::4z3zh"], 
                    Entity["Concept", "AmericanPitBullTerrier::kw55q"], 
                    Entity["Concept", "AmericanPlane::87s54"], 
                    Entity["Concept", "AmericanRedSquirrel::846xb"], 
                    Entity["Concept", "AmericanRedstart::3bb6k"], 
                    Entity["Concept", "AmericanRobin::wf28w"], 
                    Entity["Concept", "AmericanSweetGum::8f7yg"], 
                    Entity["Concept", "AmericanToad::xv8bt"], 
                    Entity["Concept", "AmericanWhiteBirch::xq58n"], 
                    Entity["Concept", "AmericanWhiteOak::nv864"], 
                    Entity["Concept", "AmericanWhitePine::rcc27"], 
                    Entity["Concept", "AmericanWidgeon::58xy9"], 
                    Entity["Concept", "AmericanWistaria::ff444"], 
                    Entity["Concept", "AmericanWoodcock::mbm6v"], 
                    Entity["Concept", "AmiaCalva::262tw"], 
                    Entity["Concept", "Ammeter::5mkwk"], 
                    Entity["Concept", "AmmotragusLervia::h6b45"], 
                    Entity["Concept", "Amniota::g962d"], 
                    Entity["Concept", "AmorphaFruticosa::dqy3f"], 
                    Entity["Concept", "Amorphophallus::rsf65"], 
                    Entity["Concept", "AmphibiousAircraft::2pcpg"], 
                    Entity["Concept", "AmphibiousVehicle::rr85n"], 
                    Entity["Concept", "AmphiprionPercula::yzg99"], 
                    Entity["Concept", "Amphora::tm522"], 
                    Entity["Concept", "Ampoule::k4mq2"], 
                    Entity["Concept", "AnacardiumOccidentale::kf925"], 
                    Entity["Concept", "Anaconda::5k458"], 
                    Entity["Concept", "AnagallisArvensis::zm8cw"], 
                    Entity["Concept", "AnalogClock::3832f"], 
                    Entity["Concept", "AnalogWatch::tzv3w"], 
                    Entity["Concept", "AnalyticalBalance::2s8ys"], 
                    Entity["Concept", "AnanasComosus::k4k95"], 
                    Entity["Concept", "Ananas::m6nzv"], 
                    Entity["Concept", "AnaphalisMargaritacea::7n59j"], 
                    Entity["Concept", "AnasAcuta::24h83"], 
                    Entity["Concept", "AnasaTristis::sp54v"], 
                    Entity["Concept", "AnasClypeata::877d5"], 
                    Entity["Concept", "AnasCrecca::b32sw"], 
                    Entity["Concept", "AnasDiscors::442rs"], 
                    Entity["Concept", "AnasPlatyrhynchos::pqj5k"], 
                    Entity["Concept", "AnasQuerquedula::bdkn2"], 
                    Entity["Concept", "AnasRubripes::x6444"], 
                    Entity["Concept", "AncientPine::v26dg"], 
                    Entity["Concept", "AndeanCondor::wgyy4"], 
                    Entity["Concept", "AndiraInermis::fzy9s"], 
                    Entity["Concept", "Andiron::659jh"], 
                    Entity["Concept", "Andrena::99w94"], 
                    Entity["Concept", "AndropogonFurcatus::dtb7z"], 
                    Entity["Concept", "AndropogonScoparius::46vdr"], 
                    Entity["Concept", "AnechoicChamber::7t8x3"], 
                    Entity["Concept", "Anemometer::v39h8"], 
                    Entity["Concept", "AnemoneCanadensis::gs5r5"], 
                    Entity["Concept", "AnemonellaThalictroides::7f6j7"], 
                    Entity["Concept", "AnemoneNemorosa::z8gkp"], 
                    Entity["Concept", "AnemoneQuinquefolia::4479c"], 
                    Entity["Concept", "AnemoneSylvestris::426c7"], 
                    Entity["Concept", "Aneroid::442f3"], 
                    Entity["Concept", "AnethumGraveolens::9f8z5"], 
                    Entity["Concept", "Angelfish::9gq44"], 
                    Entity["Concept", "AngelicaArchangelica::gjk57"], 
                    Entity["Concept", "Angelica::j92q5"], 
                    Entity["Concept", "AngelicaSylvestris::nbr76"], 
                    Entity["Concept", "AngelShark::s4f4d"], 
                    Entity["Concept", "Angel-wingBegonia::bw4hy"], 
                    Entity["Concept", "Angiopteris::nj8nv"], 
                    Entity["Concept", "Angleworm::qxp7y"], 
                    Entity["Concept", "AngoraGoat::fnd84"], 
                    Entity["Concept", "AngoraRabbit::v6627"], 
                    Entity["Concept", "AnguillaSucklandii::m669m"], 
                    Entity["Concept", "AnguisFragilis::8swd9"], 
                    Entity["Concept", "AnhingaAnhinga::zf9ph"], 
                    Entity["Concept", "AnigozanthusManglesii::643ys"], 
                    Entity["Concept", "AnisotremusVirginicus::4924z"], 
                    Entity["Concept", "AnkleBrace::tsvr6"], 
                    Entity["Concept", "AnoplophoraGlabripennis::f286d"], 
                    Entity["Concept", "AnserAnser::w8ynn"], 
                    Entity["Concept", "AnserCygnoides::ctz8c"], 
                    Entity["Concept", "AnsweringMachine::5xr2s"], 
                    Entity["Concept", "Anteater::5krjh"], 
                    Entity["Concept", "Anteater::8t864"], 
                    Entity["Concept", "Antechamber::9375h"], 
                    Entity["Concept", "AnthemisArvensis::7335m"], 
                    Entity["Concept", "AnthemisCotula::v9bk7"], 
                    Entity["Concept", "AnthemisNobilis::fjz7h"], 
                    Entity["Concept", "AnthemisTinctoria::n5228"], 
                    Entity["Concept", "AntheraeaPolyphemus::r22ss"], 
                    Entity["Concept", "AnthriscusSylvestris::h53d6"], 
                    Entity["Concept", "AnthuriumAndraeanum::wzm5k"], 
                    Entity["Concept", "AnthusPratensis::484b3"], 
                    Entity["Concept", "AnthyllisVulneraria::h87x5"], 
                    Entity["Concept", "AntidorcasEuchore::scch6"], 
                    Entity["Concept", "AntilopeCervicapra::4f79g"], 
                    Entity["Concept", "Antiperspirant::f8568"], 
                    Entity["Concept", "AntirrhinumMajus::3t825"], 
                    Entity["Concept", "Anti-torqueRotor::5798j"], 
                    Entity["Concept", "AntLion::963qn"], 
                    Entity["Concept", "AntrozousPallidus::7cxsy"], 
                    Entity["Concept", "Anvil::q9q72"], 
                    Entity["Concept", "ApartmentBuilding::x94gv"], 
                    Entity["Concept", "ApaturaIris::p296z"], 
                    Entity["Concept", "Aperea::4hzj9"], 
                    Entity["Concept", "AphrizaVirgata::75fd5"], 
                    Entity["Concept", "AplysiaPunctata::x5rgz"], 
                    Entity["Concept", "ApogonMaculatus::3vxmq"], 
                    Entity["Concept", "Appenzeller::j96dj"], 
                    Entity["Concept", "AppleMint::5h4y6"], 
                    Entity["Concept", "AppleTurnover::9vdnn"], 
                    Entity["Concept", "Apricot::p7qn3"], 
                    Entity["Concept", "Apron::qr79c"], 
                    Entity["Concept", "Apse::3qvqs"], 
                    Entity["Concept", "AptenodytesForsteri::58mn3"], 
                    Entity["Concept", "AptenodytesPatagonica::f85wf"], 
                    Entity["Concept", "Apteryx::9jq79"], 
                    Entity["Concept", "ApusApus::77dfp"], 
                    Entity["Concept", "Aqua-Lung::r2673"], 
                    Entity["Concept", "Aquarium::sz7z5"], 
                    Entity["Concept", "Aqueduct::2d474"], 
                    Entity["Concept", "AquilaRapax::5f749"], 
                    Entity["Concept", "AquilegiaCaerulea::7yn44"], 
                    Entity["Concept", "AquilegiaCanadensis::cpph4"], 
                    Entity["Concept", "AquilegiaVulgaris::4r235"], 
                    Entity["Concept", "ArabianCamel::98q62"], 
                    Entity["Concept", "ArabianCoffee::s2k7p"], 
                    Entity["Concept", "Aralia::6n927"], 
                    Entity["Concept", "AramusGuarauna::qmjh7"], 
                    Entity["Concept", "AramusPictus::964mw"], 
                    Entity["Concept", "AraneaDiademata::4jvj8"], 
                    Entity["Concept", "AraneusCavaticus::thm3g"], 
                    Entity["Concept", "AraucariaAraucana::3g682"], 
                    Entity["Concept", "AraucariaBidwillii::6xmc2"], 
                    Entity["Concept", "Arbalest::y43pd"], 
                    Entity["Concept", "Arboretum::ssfz3"], 
                    Entity["Concept", "ArbutusUnedo::rz26d"], 
                    Entity["Concept", "Arc-boutant::485fc"], 
                    Entity["Concept", "Arch::46gv5"], 
                    Entity["Concept", "ArchilochusColubris::rrgd8"], 
                    Entity["Concept", "Architecture::8748k"], 
                    Entity["Concept", "Archive::vmr27"], 
                    Entity["Concept", "Arch::n7j5k"], 
                    Entity["Concept", "ArchosargusProbatocephalus::t8r67"], 
                    Entity["Concept", "Arctic::b27sp"], 
                    Entity["Concept", "ArcticGroundSquirrel::p3s78"], 
                    Entity["Concept", "ArcticPoppy::yn6m6"], 
                    Entity["Concept", "ArcticSkua::5f657"], 
                    Entity["Concept", "ArctictisBintourong::2c3dg"], 
                    Entity["Concept", "ArcticWolf::4xr47"], 
                    Entity["Concept", "ArctiumLappa::5bf6w"], 
                    Entity["Concept", "ArctocephalusPhilippi::8cf6g"], 
                    Entity["Concept", "ArdeaHerodius::7cpck"], 
                    Entity["Concept", "ArdeaOccidentalis::548hy"], 
                    Entity["Concept", "ArenariaGroenlandica::k6zk6"], 
                    Entity["Concept", "ArenariaInterpres::3rbq4"], 
                    Entity["Concept", "Arenaria-Melanocephala::3s2g6"], 
                    Entity["Concept", "ArenaTheater::6tsfn"], 
                    Entity["Concept", "ArengaPinnata::254c7"], 
                    Entity["Concept", "ArethusaBulbosa::5rxmx"], 
                    Entity["Concept", "ArgemoneMexicana::66p5p"], 
                    Entity["Concept", "ArgiopeAurantia::633xv"], 
                    Entity["Concept", "ArgonautaArgo::9bg47"], 
                    Entity["Concept", "Argyle::4vtp6"], 
                    Entity["Concept", "ArgyranthemumFrutescens::nk3rm"], 
                    Entity["Concept", "ArgyrotaeniaCitrana::9x86j"], 
                    Entity["Concept", "ArgyroxiphiumSandwicense::3c427"], 
                    Entity["Concept", "ArilusCristatus::3nvr3"], 
                    Entity["Concept", "ArisaemaAtrorubens::88jk7"], 
                    Entity["Concept", "Arishth::2929z"], 
                    Entity["Concept", "AristolochiaSerpentaria::537g9"], 
                    Entity["Concept", "ArizonaCypress::gm343"], 
                    Entity["Concept", "ArizonaElegans::s5b7p"], 
                    Entity["Concept", "ArkansasKingbird::986bj"], 
                    Entity["Concept", "ArkShell::t8782"], 
                    Entity["Concept", "Armadillo::s9866"], 
                    Entity["Concept", "Armguard::6c3y4"], 
                    Entity["Concept", "Armoire::g6zc9"], 
                    Entity["Concept", "ArmoredCar::9924f"], 
                    Entity["Concept", "ArmoredCombatVehicle::353r5"], 
                    Entity["Concept", "ArmoredPersonnelCarrier::sz5mm"], 
                    Entity["Concept", "Arm::y6nb4"], 
                    Entity["Concept", "ArmyWorm::z5d77"], 
                    Entity["Concept", "ArnicaMontana::593qr"], 
                    Entity["Concept", "Arnica::zv6p4"], 
                    Entity["Concept", "ArollaPine::3xt4c"], 
                    Entity["Concept", "ArrhenatherumElatius::x6223"], 
                    Entity["Concept", "ArrivalGate::982r5"], 
                    Entity["Concept", "ArrozConPollo::c7d58"], 
                    Entity["Concept", "ArtemisiaCana::6brb3"], 
                    Entity["Concept", "ArtemisiaVulgaris::45qms"], 
                    Entity["Concept", "ArtGallery::rsz9r"], 
                    Entity["Concept", "Arthrogram::5txyf"], 
                    Entity["Concept", "ArtichokePlant::rmw6w"], 
                    Entity["Concept", "ArticulatioCubiti::wmq7z"], 
                    Entity["Concept", "ArticulatioGenus::bsf7d"], 
                    Entity["Concept", "ArtificialHorizon::n2jpt"], 
                    Entity["Concept", "ArtocarpusAltilis::4cjt8"], 
                    Entity["Concept", "ArtocarpusHeterophyllus::9msf8"], 
                    Entity["Concept", "Artwork::r5p3c"], 
                    Entity["Concept", "ArumMaculatum::nqs2x"], 
                    Entity["Concept", "ArvicolaAmphibius::m2756"], 
                    Entity["Concept", "AsarumShuttleworthii::mnj24"], 
                    Entity["Concept", "AsarumVirginicum::73f4v"], 
                    Entity["Concept", "AscaphusTrui::qr2np"], 
                    Entity["Concept", "AsclepiasIncarnata::4stqh"], 
                    Entity["Concept", "AsclepiasSpeciosa::952r2"], 
                    Entity["Concept", "AsclepiasTuberosa::nm653"], 
                    Entity["Concept", "Ash-bin::6sd8p"], 
                    Entity["Concept", "Ashtray::h9yk8"], 
                    Entity["Concept", "AsianCrocodile::6gkmv"], 
                    Entity["Concept", "AsiaticBlackBear::8m644"], 
                    Entity["Concept", "AsiaticCockroach::t6693"], 
                    Entity["Concept", "AsiminaTriloba::q3mvh"], 
                    Entity["Concept", "AsioOtus::7f796"], 
                    Entity["Concept", "AsparagusFern::2wf5f"], 
                    Entity["Concept", "AsparagusOfficinales::wm8p2"], 
                    Entity["Concept", "AsperulaOdorata::36c83"], 
                    Entity["Concept", "Asphyxiator::6785n"], 
                    Entity["Concept", "Aspidistra::hjc8q"], 
                    Entity["Concept", "AspleniumAdiantum-nigrum::qzyz6"], 
                    Entity["Concept", "AspleniumRhizophyllum::v2f75"], 
                    Entity["Concept", "AspleniumScolopendrium::bh43t"], 
                    Entity["Concept", "AspViper::m954p"], 
                    Entity["Concept", "AssamRubber::nkq2n"], 
                    Entity["Concept", "AssaultRifle::d2gst"], 
                    Entity["Concept", "AssemblyLine::jk2m8"], 
                    Entity["Concept", "AsterDumosus::dwb9g"], 
                    Entity["Concept", "Asterism::6b59z"], 
                    Entity["Concept", "AsterNovae-angliae::q4qrt"], 
                    Entity["Concept", "AsterNovi-belgii::4m92c"], 
                    Entity["Concept", "AsterTurbinellis::8f4r7"], 
                    Entity["Concept", "AstilbeChinensisPumila::4zryw"], 
                    Entity["Concept", "AstilbeJaponica::c4q4q"], 
                    Entity["Concept", "AstrantiaMajor::59g99"], 
                    Entity["Concept", "Astrolabe::qy8np"], 
                    Entity["Concept", "AtelesGeoffroyi::8f944"], 
                    Entity["Concept", "AtheneNoctua::x8368"], 
                    Entity["Concept", "AthleticField::t9837"], 
                    Entity["Concept", "AthleticSupporter::vhwr3"], 
                    Entity["Concept", "AtlanticBonito::887f9"], 
                    Entity["Concept", "AtlanticBottlenoseDolphin::nnx4p"], 
                    Entity["Concept", "AtlanticHalibut::s7k74"], 
                    Entity["Concept", "AtlanticManta::44vb6"], 
                    Entity["Concept", "AtlanticPuffin::98ws7"], 
                    Entity["Concept", "AtlanticRidley::62m5c"], 
                    Entity["Concept", "AtlanticWhiteCedar::9y954"], 
                    Entity["Concept", "AtlasCedar::p9r69"], 
                    Entity["Concept", "AtlasMoth::25g9d"], 
                    Entity["Concept", "AttackSubmarine::3rswy"], 
                    Entity["Concept", "Attic::xfq86"], 
                    Entity["Concept", "Auditorium::m9586"], 
                    Entity["Concept", "AudubonsWarbler::4n8t9"], 
                    Entity["Concept", "Auklet::88j2s"], 
                    Entity["Concept", "AulostomusMaculatus::xpz65"], 
                    Entity["Concept", "Auricle::2skh8"], 
                    Entity["Concept", "Auriscope::2xz56"], 
                    Entity["Concept", "AustralianPine::52n53"], 
                    Entity["Concept", "AustralianPitcherPlant::qh4b4"], 
                    Entity["Concept", "AustralianSeaLion::87p2r"], 
                    Entity["Concept", "AustralianTerrier::q2h6g"], 
                    Entity["Concept", "AustralianTurtledove::b5nth"], 
                    Entity["Concept", "Autobus::v5t2j"], 
                    Entity["Concept", "Autogiro::2d396"], 
                    Entity["Concept", "Automat::82n8m"], 
                    Entity["Concept", "AutomatedTeller::w8746"], 
                    Entity["Concept", "AutomaticPistol::kq9qc"], 
                    Entity["Concept", "AutomaticWasher::6d32z"], 
                    Entity["Concept", "AutomerisIo::p9k29"], 
                    Entity["Concept", "AutomobileEngine::jpgq6"], 
                    Entity["Concept", "AutumnPumpkin::3768d"], 
                    Entity["Concept", "AvenaSativa::3jjqv"], 
                    Entity["Concept", "AverrhoaCarambola::n8cd6"], 
                    Entity["Concept", "AvicenniaMarina::9b23m"], 
                    Entity["Concept", "AvicenniaOfficinalis::377q7"], 
                    Entity["Concept", "Avocet::g48jy"], 
                    Entity["Concept", "Awning::2x69m"], 
                    Entity["Concept", "AwningDeck::8rhdm"], 
                    Entity["Concept", "AxeHead::z2822"], 
                    Entity["Concept", "Ax::hjh5w"], 
                    Entity["Concept", "Axle::397yk"], 
                    Entity["Concept", "Axseed::qhx87"], 
                    Entity["Concept", "AythyaAffinis::m2brh"], 
                    Entity["Concept", "AythyaAmericana::p32f9"], 
                    Entity["Concept", "AythyaFerina::p2rg3"], 
                    Entity["Concept", "AythyaMarila::ht2qn"], 
                    Entity["Concept", "AythyaValisineria::2537r"], 
                    Entity["Concept", "Azalea::gtf4s"], 
                    Entity["Concept", "Azedarach::8xrm6"], 
                    Entity["Concept", "Babbler::3f37s"], 
                    Entity["Concept", "Babies-breath::6mw26"], 
                    Entity["Concept", "BabiesSlippers::n4839"], 
                    Entity["Concept", "Baby::3mrdc"], 
                    Entity["Concept", "BabyBlue-eyes::7572z"], 
                    Entity["Concept", "BabyGrand::2sh57"], 
                    Entity["Concept", "BabylonianWeepingWillow::b56t4"], 
                    Entity["Concept", "BabyShoe::dn5sd"], 
                    Entity["Concept", "Baby-walker::k6qtt"], 
                    Entity["Concept", "BackBrace::m3gm9"], 
                    Entity["Concept", "BackgammonBoard::k7yg6"], 
                    Entity["Concept", "Backhoe::g2d26"], 
                    Entity["Concept", "Backseat::q536j"], 
                    Entity["Concept", "BaconAndEggs::644m8"], 
                    Entity["Concept", "Bacon-lettuce-tomatoSandwich::k7pbz"], 
                    Entity["Concept", "Bacteria::3z543"], 
                    Entity["Concept", "BactrianCamel::v5wzd"], 
                    Entity["Concept", "Badlands::pmyj4"], 
                    Entity["Concept", "BadmintonRacket::h89z7"], 
                    Entity["Concept", "BaggageClaim::h8632"], 
                    Entity["Concept", "Baguet::3ch28"], 
                    Entity["Concept", "BakedAlaska::4yh84"], 
                    Entity["Concept", "BakingTray::r396g"], 
                    Entity["Concept", "Balaclava::xqj86"], 
                    Entity["Concept", "BalaenicepsRex::ymcp8"], 
                    Entity["Concept", "BalaenopteraAcutorostrata::3sgfm"], 
                    Entity["Concept", "BalaenopteraMusculus::tgr6f"], 
                    Entity["Concept", "BalaenopteraPhysalus::47mv6"], 
                    Entity["Concept", "BalanceBeam::6nyqs"], 
                    Entity["Concept", "BalataTree::8h462"], 
                    Entity["Concept", "Balcony::83c78"], 
                    Entity["Concept", "Balcony::j257v"], 
                    Entity["Concept", "Bald-facedHornet::7nmym"], 
                    Entity["Concept", "Balibago::4j747"], 
                    Entity["Concept", "BalistesVetula::t7fb5"], 
                    Entity["Concept", "Balk::2nmz4"], 
                    Entity["Concept", "BalletSkirt::gbrw7"], 
                    Entity["Concept", "BallGown::n6thb"], 
                    Entity["Concept", "Balloonfish::2c785"], 
                    Entity["Concept", "BalloonFlower::3r2s8"], 
                    Entity["Concept", "BalloonVine::z5224"], 
                    Entity["Concept", "Ballpark::g5x44"], 
                    Entity["Concept", "Ballpen::k35fx"], 
                    Entity["Concept", "Ballroom::kjwj8"], 
                    Entity["Concept", "BalsamApple::rzxv9"], 
                    Entity["Concept", "BalsamPear::gvnp4"], 
                    Entity["Concept", "BalsamPoplar::m69f2"], 
                    Entity["Concept", "Balsamroot::8rq7g"], 
                    Entity["Concept", "BaltimoreBird::7q394"], 
                    Entity["Concept", "Baluster::245tk"], 
                    Entity["Concept", "Balusters::nt6x4"], 
                    Entity["Concept", "Bamboo::78j53"], 
                    Entity["Concept", "Banana::f6z73"], 
                    Entity["Concept", "BananaSplit::9nbrq"], 
                    Entity["Concept", "Bandana::z6v48"], 
                    Entity["Concept", "BandedAnteater::926y5"], 
                    Entity["Concept", "BandedGecko::38zhr"], 
                    Entity["Concept", "BandedPurple::75g43"], 
                    Entity["Concept", "BandedWaterSnake::fcm3k"], 
                    Entity["Concept", "BandSaw::873wp"], 
                    Entity["Concept", "Bandtail::964s4"], 
                    Entity["Concept", "Bangle::22nf3"], 
                    Entity["Concept", "BanianTree::34q55"], 
                    Entity["Concept", "Banjo::fs3f9"], 
                    Entity["Concept", "BankBill::htnm3"], 
                    Entity["Concept", "BankMartin::4267x"], 
                    Entity["Concept", "BankVault::gd39s"], 
                    Entity["Concept", "Bantam::7z27m"], 
                    Entity["Concept", "BaptismalFont::m7729"], 
                    Entity["Concept", "Bar::35r9j"], 
                    Entity["Concept", "BarbareaVulgaris::x8fdj"], 
                    Entity["Concept", "BarbaryApe::2965z"], 
                    Entity["Concept", "BarbecuedSpareribs::725n3"], 
                    Entity["Concept", "BarbecuedWing::kq2z4"], 
                    Entity["Concept", "Barbecue::h56st"], 
                    Entity["Concept", "Barbecue::jq488"], 
                    Entity["Concept", "BarbecueSauce::g7rzs"], 
                    Entity["Concept", "Barbell::295kg"], 
                    Entity["Concept", "BarberChair::mybp2"], 
                    Entity["Concept", "BarbertonDaisy::r3793"], 
                    Entity["Concept", "Barbet::gp324"], 
                    Entity["Concept", "BarChart::44c43"], 
                    Entity["Concept", "BarCode::5bh6b"], 
                    Entity["Concept", "BaritoneHorn::887r9"], 
                    Entity["Concept", "BarkingDeer::8n8fz"], 
                    Entity["Concept", "BarleyGrass::h8n4t"], 
                    Entity["Concept", "Barn::6xw3q"], 
                    Entity["Concept", "BarnabysThistle::y3325"], 
                    Entity["Concept", "BarnacleGoose::5vb97"], 
                    Entity["Concept", "BarnDoor::96gzk"], 
                    Entity["Concept", "BarnOwl::gm4jf"], 
                    Entity["Concept", "BarnSwallow::7k4v5"], 
                    Entity["Concept", "Barque::g982v"], 
                    Entity["Concept", "Barracouta::dzc32"], 
                    Entity["Concept", "BarredOwl::779y6"], 
                    Entity["Concept", "BarrelCactus::55s5r"], 
                    Entity["Concept", "BarrelVault::v8d65"], 
                    Entity["Concept", "Barrette::pz59n"], 
                    Entity["Concept", "BarrowsGoldeneye::p7kt4"], 
                    Entity["Concept", "BarSoap::42v57"], 
                    Entity["Concept", "BartramiaLongicauda::4q46t"], 
                    Entity["Concept", "Baseball::9f8qz"], 
                    Entity["Concept", "BaseballBat::2n8qr"], 
                    Entity["Concept", "BaseballCap::pmh98"], 
                    Entity["Concept", "BaseballGlove::6c78v"], 
                    Entity["Concept", "Basement::947k9"], 
                    Entity["Concept", "Basenji::k9yy2"], 
                    Entity["Concept", "Basil::b57p5"], 
                    Entity["Concept", "Basilisk::4z438"], 
                    Entity["Concept", "Basinet::gqth8"], 
                    Entity["Concept", "BasketballBackboard::rssb7"], 
                    Entity["Concept", "BasketballHoop::c7dns"], 
                    Entity["Concept", "Basketball::jq262"], 
                    Entity["Concept", "BasketOak::y2t59"], 
                    Entity["Concept", "BasketWillow::jf7zp"], 
                    Entity["Concept", "BaskingShark::684t7"], 
                    Entity["Concept", "BassariscusAstutus::p275y"], 
                    Entity["Concept", "BassClarinet::4342c"], 
                    Entity["Concept", "BassDrum::qhs4v"], 
                    Entity["Concept", "Basset::n769x"], 
                    Entity["Concept", "BassFiddle::dqh28"], 
                    Entity["Concept", "BassGuitar::9qns7"], 
                    Entity["Concept", "Bassinet::yn2td"], 
                    Entity["Concept", "Bastion::n6jhh"], 
                    Entity["Concept", "BathingCap::tsd8r"], 
                    Entity["Concept", "BathingTub::729f8"], 
                    Entity["Concept", "Bath::xtj9q"], 
                    Entity["Concept", "BattersBox::n7h73"], 
                    Entity["Concept", "BatteryCharger::g32t7"], 
                    Entity["Concept", "BattingCage::n64n4"], 
                    Entity["Concept", "BattingHelmet::7k2gg"], 
                    Entity["Concept", "BattleCruiser::4mpcq"], 
                    Entity["Concept", "BattleDress::748k5"], 
                    Entity["Concept", "Battlement::5h3tz"], 
                    Entity["Concept", "BauhiniaVariegata::fd586"], 
                    Entity["Concept", "Baya::kd826"], 
                    Entity["Concept", "BayLaurel::85yy7"], 
                    Entity["Concept", "BayLeaf::865h6"], 
                    Entity["Concept", "BayLynx::7fk4n"], 
                    Entity["Concept", "Bay-rumTree::c8cdd"], 
                    Entity["Concept", "BayWillow::xnb68"], 
                    Entity["Concept", "Bazaar::3p4tn"], 
                    Entity["Concept", "Bazooka::62c79"], 
                    Entity["Concept", "BeachBuggy::39g96"], 
                    Entity["Concept", "BeachChair::3hqpw"], 
                    Entity["Concept", "Beach::gn7tk"], 
                    Entity["Concept", "BeachPea::3j589"], 
                    Entity["Concept", "BeachStrawberry::7mgqz"], 
                    Entity["Concept", "BeachWaggon::c945g"], 
                    Entity["Concept", "BeadedLizard::j45r4"], 
                    Entity["Concept", "BeadFern::z57r8"], 
                    Entity["Concept", "Beagle::2bdvt"], 
                    Entity["Concept", "Beaker::btv5s"], 
                    Entity["Concept", "BeamScale::ff3sq"], 
                    Entity["Concept", "Beanie::b5ht9"], 
                    Entity["Concept", "BeardedVulture::4539z"], 
                    Entity["Concept", "Bearwood::6393w"], 
                    Entity["Concept", "Bechamel::3788k"], 
                    Entity["Concept", "BechtelCrab::84h95"], 
                    Entity["Concept", "BedBug::z9265"], 
                    Entity["Concept", "Bedchamber::v7pzd"], 
                    Entity["Concept", "BeddingGeranium::d539m"], 
                    Entity["Concept", "BedlingtonTerrier::98h82"], 
                    Entity["Concept", "Bedpan::g93bf"], 
                    Entity["Concept", "BeeEater::376h3"], 
                    Entity["Concept", "BeeFly::tcv7z"], 
                    Entity["Concept", "BeefsteakGeranium::rz57v"], 
                    Entity["Concept", "BeefWellington::6fy2n"], 
                    Entity["Concept", "BeeKiller::m5d2m"], 
                    Entity["Concept", "BeeOrchid::3zdtx"], 
                    Entity["Concept", "BeerBarrel::qwq72"], 
                    Entity["Concept", "BeerCan::y99p8"], 
                    Entity["Concept", "BeerGlass::r6xp2"], 
                    Entity["Concept", "BeerMat::nmyt6"], 
                    Entity["Concept", "BegoniaSemperflorens::6p9m6"], 
                    Entity["Concept", "BelamcandaChinensis::s288q"], 
                    Entity["Concept", "BelleDeNuit::dj4mt"], 
                    Entity["Concept", "BellGlass::95qp5"], 
                    Entity["Concept", "BellisPerennis::n7494"], 
                    Entity["Concept", "BellMagpie::kpp8d"], 
                    Entity["Concept", "BeltBuckle::49v92"], 
                    Entity["Concept", "BeltedKingfisher::77b5w"], 
                    Entity["Concept", "BerberisVulgaris::z4bnn"], 
                    Entity["Concept", "Beret::w5573"], 
                    Entity["Concept", "Berg::7894d"], 
                    Entity["Concept", "Bergamot::sgz25"], 
                    Entity["Concept", "Bergenia::ppf7r"], 
                    Entity["Concept", "BermudaButtercup::4f62h"], 
                    Entity["Concept", "BermudaLily::5y748"], 
                    Entity["Concept", "BerneseMountainDog::y32v5"], 
                    Entity["Concept", "BetaVulgarisRubra::9628z"], 
                    Entity["Concept", "BetulaAlleghaniensis::947kz"], 
                    Entity["Concept", "BetulaFontinalis::t5y9c"], 
                    Entity["Concept", "BetulaNigra::gs843"], 
                    Entity["Concept", "BetulaPendula::9pb9j"], 
                    Entity["Concept", "BetulaPubescens::fw752"], 
                    Entity["Concept", "BewicksSwan::24k48"], 
                    Entity["Concept", "BibosGaurus::qp482"], 
                    Entity["Concept", "BicycleChain::g4pkq"], 
                    Entity["Concept", "BicyclePump::42s52"], 
                    Entity["Concept", "BicycleRack::x55p5"], 
                    Entity["Concept", "BicycleSeat::43yz8"], 
                    Entity["Concept", "BicycleWheel::6xj3c"], 
                    Entity["Concept", "BidensCoronata::9875k"], 
                    Entity["Concept", "Bigarade::744q4"], 
                    Entity["Concept", "Bighorn::773z4"], 
                    Entity["Concept", "Bikini::m86f8"], 
                    Entity["Concept", "Billboard::54n96"], 
                    Entity["Concept", "Billfold::z7845"], 
                    Entity["Concept", "BilliardTable::9c56d"], 
                    Entity["Concept", "BingCherry::c82w2"], 
                    Entity["Concept", "Binoculars::yp4ss"], 
                    Entity["Concept", "Biplane::33z4g"], 
                    Entity["Concept", "BirchBark::vpy97"], 
                    Entity["Concept", "Birdbath::823y9"], 
                    Entity["Concept", "Birdcage::jj9yq"], 
                    Entity["Concept", "BirdPepper::4g59c"], 
                    Entity["Concept", "BirdsEye::w6tft"], 
                    Entity["Concept", "Birds-footViolet::qq9y6"], 
                    Entity["Concept", "BirdVetch::drp98"], 
                    Entity["Concept", "BisonBonasus::f3q36"], 
                    Entity["Concept", "BitisArietans::tg3cx"], 
                    Entity["Concept", "BitisGabonica::5cznw"], 
                    Entity["Concept", "BitterOrange::gwkh7"], 
                    Entity["Concept", "Bitterroot::hpx5r"], 
                    Entity["Concept", "Black-backedGull::9nrzk"], 
                    Entity["Concept", "Blackberry::p4kdk"], 
                    Entity["Concept", "Blackboard::4b535"], 
                    Entity["Concept", "Blackburn::9858t"], 
                    Entity["Concept", "Black-cappedChickadee::43cc8"], 
                    Entity["Concept", "BlackcapRaspberry::8bt6n"], 
                    Entity["Concept", "BlackCherryTree::nj44p"], 
                    Entity["Concept", "Black-crownedNightHeron::29x3b"], 
                    Entity["Concept", "Black-eyedSusanVine::86v4z"], 
                    Entity["Concept", "BlackFly::3s98j"], 
                    Entity["Concept", "Black-footedFerret::r6gqg"], 
                    Entity["Concept", "BlackGuillemot::d3336"], 
                    Entity["Concept", "BlackHemlock::7v4wr"], 
                    Entity["Concept", "BlackHenbane::pygm6"], 
                    Entity["Concept", "BlackKite::zfcf6"], 
                    Entity["Concept", "BlackMallee::8sn2z"], 
                    Entity["Concept", "BlackMarlin::845f2"], 
                    Entity["Concept", "BlackMedick::n25zw"], 
                    Entity["Concept", "Black-neckedCobra::h8nhp"], 
                    Entity["Concept", "Black-neckedGrebe::9j9p5"], 
                    Entity["Concept", "Black-neckedStilt::6kcyb"], 
                    Entity["Concept", "Black-neckedStork::p5232"], 
                    Entity["Concept", "BlackOak::q8n4d"], 
                    Entity["Concept", "BlackOlive::8r2d2"], 
                    Entity["Concept", "BlackPepper::pk4tm"], 
                    Entity["Concept", "Blackpoll::kg2y9"], 
                    Entity["Concept", "BlackRat::3m762"], 
                    Entity["Concept", "BlackRatSnake::j53yn"], 
                    Entity["Concept", "BlackRhinoceros::5w25r"], 
                    Entity["Concept", "BlackSpruce::wc86j"], 
                    Entity["Concept", "BlackSquirrel::qmv96"], 
                    Entity["Concept", "BlackStork::5v349"], 
                    Entity["Concept", "BlackSwan::6ft7p"], 
                    Entity["Concept", "Blacktail::2kk7g"], 
                    Entity["Concept", "BlacktailPrairieDog::923m7"], 
                    Entity["Concept", "BlacktipShark::dhh38"], 
                    Entity["Concept", "BlackWalnutTree::zp675"], 
                    Entity["Concept", "BlackWidow::4682d"], 
                    Entity["Concept", "BlackWillow::3sxd4"], 
                    Entity["Concept", "Black-wingedStilt::23r8r"], 
                    Entity["Concept", "BlattellaGermanica::f6z3c"], 
                    Entity["Concept", "BlechnumSpicant::6522v"], 
                    Entity["Concept", "Blender::3sh4p"], 
                    Entity["Concept", "BlenheimSpaniel::cd3nm"], 
                    Entity["Concept", "Bletia::3ncp2"], 
                    Entity["Concept", "BletiaStriata::gm9sf"], 
                    Entity["Concept", "Blimp::w7d5x"], 
                    Entity["Concept", "Blindfold::hj9h4"], 
                    Entity["Concept", "BlockPlane::js7mh"], 
                    Entity["Concept", "Bloodhound::pc454"], 
                    Entity["Concept", "Blood-twig::43mxc"], 
                    Entity["Concept", "BlowDrier::t4dpz"], 
                    Entity["Concept", "Blucher::2486k"], 
                    Entity["Concept", "BlueAsh::ym26k"], 
                    Entity["Concept", "BluebackSalmon::r7jd3"], 
                    Entity["Concept", "Blue-belly::838vp"], 
                    Entity["Concept", "Blueberry::3zbfr"], 
                    Entity["Concept", "Bluebird::4k266"], 
                    Entity["Concept", "BlueCat::6j687"], 
                    Entity["Concept", "BlueDaisy::z5gtt"], 
                    Entity["Concept", "Blue-eyedGrass::bcx97"], 
                    Entity["Concept", "Blue::g6685"], 
                    Entity["Concept", "Bluegill::38s78"], 
                    Entity["Concept", "BlueGum::yr7pn"], 
                    Entity["Concept", "Blue-headedVireo::wrvt3"], 
                    Entity["Concept", "BlueJack::8728b"], 
                    Entity["Concept", "BluejackOak::5vdf6"], 
                    Entity["Concept", "BlueJay::b863w"], 
                    Entity["Concept", "BlueMarlin::3899r"], 
                    Entity["Concept", "BlueOrchid::c8sgf"], 
                    Entity["Concept", "BluePeafowl::8h39h"], 
                    Entity["Concept", "BluePea::tyng6"], 
                    Entity["Concept", "BluePoppy::r9qm8"], 
                    Entity["Concept", "BlueShark::rzgk9"], 
                    Entity["Concept", "BlueThistle::f5t65"], 
                    Entity["Concept", "Bluethroat::yvgw3"], 
                    Entity["Concept", "BlueTit::fwp5g"], 
                    Entity["Concept", "BoaConstrictor::qq73z"], 
                    Entity["Concept", "BoarThistle::fs46t"], 
                    Entity["Concept", "Boatbill::h464x"], 
                    Entity["Concept", "BoatDeck::r56tw"], 
                    Entity["Concept", "BoatswainBird::68y74"], 
                    Entity["Concept", "BobbyPin::2567h"], 
                    Entity["Concept", "Bob::n2762"], 
                    Entity["Concept", "Bobolink::tqs3j"], 
                    Entity["Concept", "Bobsled::38s7j"], 
                    Entity["Concept", "BocceBall::y7249"], 
                    Entity["Concept", "BoehmeriaNivea::jw26c"], 
                    Entity["Concept", "BoforsGun::zyd59"], 
                    Entity["Concept", "Bogbean::389dp"], 
                    Entity["Concept", "BogCandles::f3t2d"], 
                    Entity["Concept", "BogRhubarb::bkm4n"], 
                    Entity["Concept", "BogStar::xj5qm"], 
                    Entity["Concept", "BohemianWaxwing::289t5"], 
                    Entity["Concept", "Boiler::63p28"], 
                    Entity["Concept", "BolaTie::g65x6"], 
                    Entity["Concept", "Bolero::69r43"], 
                    Entity["Concept", "BoltCutter::q9tfy"], 
                    Entity["Concept", "BombaxCeiba::7j634"], 
                    Entity["Concept", "BombayCeiba::dxmw4"], 
                    Entity["Concept", "BomberJacket::j3q4v"], 
                    Entity["Concept", "BombinaBombina::95k62"], 
                    Entity["Concept", "BombycillaCedrorun::msgb4"], 
                    Entity["Concept", "BonasaUmbellus::bpbr3"], 
                    Entity["Concept", "BoneMarrow::fh99r"], 
                    Entity["Concept", "Bones::4n66z"], 
                    Entity["Concept", "BongoDrum::w3t7w"], 
                    Entity["Concept", "Bonnethead::w3y42"], 
                    Entity["Concept", "Bonobo::54f68"], 
                    Entity["Concept", "BoobTube::b9272"], 
                    Entity["Concept", "Booby::4z483"], 
                    Entity["Concept", "BoocercusEurycerus::f4827"], 
                    Entity["Concept", "Bookcase::6t56v"], 
                    Entity["Concept", "Bookend::349j8"], 
                    Entity["Concept", "BookJacket::sy4d3"], 
                    Entity["Concept", "Bookmark::5hh5k"], 
                    Entity["Concept", "Book::mf665"], 
                    Entity["Concept", "Bookshelf::zq9fw"], 
                    Entity["Concept", "BoomBox::vw8bx"], 
                    Entity["Concept", "Bootee::2b576"], 
                    Entity["Concept", "Booyong::4gntw"], 
                    Entity["Concept", "Borage::973df"], 
                    Entity["Concept", "BoragoOfficinalis::564j6"], 
                    Entity["Concept", "BorassusFlabellifer::86fcb"], 
                    Entity["Concept", "BorderCollie::463w2"], 
                    Entity["Concept", "BorderTerrier::gh5h6"], 
                    Entity["Concept", "Borsch::f9945"], 
                    Entity["Concept", "Borzoi::v43t8"], 
                    Entity["Concept", "BosGrunniens::srgv4"], 
                    Entity["Concept", "BostonBull::6662j"], 
                    Entity["Concept", "BostonFern::423t8"], 
                    Entity["Concept", "BostonIvy::m933m"], 
                    Entity["Concept", "BotaurusStellaris::r6vb9"], 
                    Entity["Concept", "BothropsAtrops::2x3rf"], 
                    Entity["Concept", "BoTree::77m47"], 
                    Entity["Concept", "Bottlecap::mgg5c"], 
                    Entity["Concept", "BottleCork::z5hjf"], 
                    Entity["Concept", "BottledWater::454g5"], 
                    Entity["Concept", "BottleGentian::9wmj7"], 
                    Entity["Concept", "BottleGourd::5jb5k"], 
                    Entity["Concept", "Bottle-grass::nrr2w"], 
                    Entity["Concept", "Bottle-nosedWhale::pt7m3"], 
                    Entity["Concept", "BottleScrew::djq6x"], 
                    Entity["Concept", "BouncingBess::x8h9c"], 
                    Entity["Concept", "BouvierDesFlandres::h7txf"], 
                    Entity["Concept", "BowieKnife::jz2b2"], 
                    Entity["Concept", "BowlerHat::696ct"], 
                    Entity["Concept", "BowlingAlley::sg32k"], 
                    Entity["Concept", "BowlingBall::fy69r"], 
                    Entity["Concept", "BowlingShoe::3tn86"], 
                    Entity["Concept", "Bowsprit::qtr3f"], 
                    Entity["Concept", "BowWindow::52m3k"], 
                    Entity["Concept", "BoxCamera::57hd8"], 
                    Entity["Concept", "BoxEndWrench::74q93"], 
                    Entity["Concept", "Boxer::3966f"], 
                    Entity["Concept", "Boxers::45t28"], 
                    Entity["Concept", "BoxingGlove::ck37g"], 
                    Entity["Concept", "BoxingRing::5tw2s"], 
                    Entity["Concept", "BoxWhiteOak::43vy2"], 
                    Entity["Concept", "Boysenberry::866z8"], 
                    Entity["Concept", "Braces::5qx97"], 
                    Entity["Concept", "BrachychitonAcerifolius::5599d"], 
                    Entity["Concept", "BrachychitonAustralis::vspg5"], 
                    Entity["Concept", "BrachychitonPopulneus::7r9rg"], 
                    Entity["Concept", "BrachycomeIberidifolia::565y3"], 
                    Entity["Concept", "Brachyuran::fm8q7"], 
                    Entity["Concept", "BrainCoral::v7844"], 
                    Entity["Concept", "BrakeDisk::6yptr"], 
                    Entity["Concept", "Brambling::47bpt"], 
                    Entity["Concept", "BrandyGlass::p8dwb"], 
                    Entity["Concept", "Brandy::jq7gy"], 
                    Entity["Concept", "BranMuffin::k3krq"], 
                    Entity["Concept", "BrantaBernicla::qn6nc"], 
                    Entity["Concept", "BrantaCanadensis::yc965"], 
                    Entity["Concept", "Brassavola::cmn5x"], 
                    Entity["Concept", "BrassiaLawrenceana::vc2q9"], 
                    Entity["Concept", "BrassiaVerrucosa::2c225"], 
                    Entity["Concept", "BrassicaKaber::z3rcc"], 
                    Entity["Concept", "BrassicaNapus::3c2dt"], 
                    Entity["Concept", "BrassicaOleraceaBotrytis::m3yj2"], 
                    Entity["Concept", "BrassicaOleraceaGemmifera::d5rqx"], 
                    Entity["Concept", "BrassicaOleraceaItalica::56n93"], 
                    Entity["Concept", "BrassicaRapaChinensis::t3fw4"], 
                    Entity["Concept", "BrassicaRapa::p2qbx"], 
                    Entity["Concept", "BrassKnuckles::bc3wj"], 
                    Entity["Concept", "BrazilianRosewood::rkbc8"], 
                    Entity["Concept", "Breadbasket::h2h29"], 
                    Entity["Concept", "Bread-bin::p5jwy"], 
                    Entity["Concept", "BreadDough::9zf37"], 
                    Entity["Concept", "Breadfruit::cm6jy"], 
                    Entity["Concept", "Breathalyser::7jsrg"], 
                    Entity["Concept", "Bren::47r93"], 
                    Entity["Concept", "BrewersMountainHeather::6x296"], 
                    Entity["Concept", "Brewery::hhm7q"], 
                    Entity["Concept", "Briard::dtm5k"], 
                    Entity["Concept", "BricksAndMortar::b2qvp"], 
                    Entity["Concept", "BridalGown::662x3"], 
                    Entity["Concept", "Bridge::76h97"], 
                    Entity["Concept", "Brig::b6hrc"], 
                    Entity["Concept", "Brioche::x7xd6"], 
                    Entity["Concept", "BristleBrush::b6gs7"], 
                    Entity["Concept", "BristleconePine::g5z8x"], 
                    Entity["Concept", "BristlyOxtongue::ww993"], 
                    Entity["Concept", "BrittanySpaniel::435gz"], 
                    Entity["Concept", "BrittleBladderFern::x42bt"], 
                    Entity["Concept", "BrittleBush::544m2"], 
                    Entity["Concept", "Brittle-star::ydp77"], 
                    Entity["Concept", "BroadBean::955b8"], 
                    Entity["Concept", "Broadbill::2kg82"], 
                    Entity["Concept", "BromptonStock::49cjg"], 
                    Entity["Concept", "Brook::z4949"], 
                    Entity["Concept", "Broom::hgy49"], 
                    Entity["Concept", "BroomPalm::6m525"], 
                    Entity["Concept", "BrosmeBrosme::sc4qg"], 
                    Entity["Concept", "BroussonetiaPapyrifera::7443m"], 
                    Entity["Concept", "Browallia::56q39"], 
                    Entity["Concept", "BrownAlgae::56b53"], 
                    Entity["Concept", "BrownBat::739v4"], 
                    Entity["Concept", "BrownSnail::t5tsj"], 
                    Entity["Concept", "BrownSwiss::26cr8"], 
                    Entity["Concept", "BrownThrasher::h6nxc"], 
                    Entity["Concept", "BrugmansiaArborea::8fqzs"], 
                    Entity["Concept", "BrugmansiaSuaveolens::7k3vx"], 
                    Entity["Concept", "BrusselsBiscuit::7jzvh"], 
                    Entity["Concept", "BuboVirginianus::br8w5"], 
                    Entity["Concept", "BubulcusIbis::4mj5p"], 
                    Entity["Concept", "BucephelaAlbeola::vn2cw"], 
                    Entity["Concept", "BucketSeat::4y2tt"], 
                    Entity["Concept", "Buckskin::899xy"], 
                    Entity["Concept", "BuckthornBerry::9734v"], 
                    Entity["Concept", "Buddleia::2hhsc"], 
                    Entity["Concept", "Budgereegah::bx5pf"], 
                    Entity["Concept", "BudorcasTaxicolor::zh22d"], 
                    Entity["Concept", "BuffaloGourd::73t83"], 
                    Entity["Concept", "BuffaloWing::d8r27"], 
                    Entity["Concept", "BuffetCar::4gb7m"], 
                    Entity["Concept", "BufoBoreas::939f7"], 
                    Entity["Concept", "BufoBufo::g49f9"], 
                    Entity["Concept", "BufoCalamita::ykdk3"], 
                    Entity["Concept", "Bufo::n2778"], 
                    Entity["Concept", "BufoSpeciosus::gp55b"], 
                    Entity["Concept", "BufoViridis::zs7g4"], 
                    Entity["Concept", "Bug::572w9"], 
                    Entity["Concept", "Buggy::x3gz4"], 
                    Entity["Concept", "Bugle::2397d"], 
                    Entity["Concept", "Built-inBed::ch624"], 
                    Entity["Concept", "Bulbul::4x6vd"], 
                    Entity["Concept", "BullBay::p5456"], 
                    Entity["Concept", "BulletTrain::4dfr5"], 
                    Entity["Concept", "Bullfinch::372cj"], 
                    Entity["Concept", "Bullfrog::r9cvc"], 
                    Entity["Concept", "Bullhorn::786cg"], 
                    Entity["Concept", "BullMastiff::6p365"], 
                    Entity["Concept", "BullocksOriole::7x8yq"], 
                    Entity["Concept", "BullPine::x3mrr"], 
                    Entity["Concept", "Bullring::xb6sp"], 
                    Entity["Concept", "BullShark::3p769"], 
                    Entity["Concept", "Bumblebee::939y7"], 
                    Entity["Concept", "BumeliaLycioides::74c47"], 
                    Entity["Concept", "BumperCar::k9984"], 
                    Entity["Concept", "Bunchberry::36dm8"], 
                    Entity["Concept", "BunkBed::nyhz8"], 
                    Entity["Concept", "Bunker::td9km"], 
                    Entity["Concept", "Bunting::3p293"], 
                    Entity["Concept", "Burbot::fwtr6"], 
                    Entity["Concept", "BurchellsZebra::bxp9w"], 
                    Entity["Concept", "BurhinusOedicnemus::2872w"], 
                    Entity["Concept", "BurialChamber::8xv8q"], 
                    Entity["Concept", "BurialGround::zv438"], 
                    Entity["Concept", "Burka::x4wwc"], 
                    Entity["Concept", "BurlapBag::6n6tr"], 
                    Entity["Concept", "BurOak::m93q3"], 
                    Entity["Concept", "BurpGun::r8stj"], 
                    Entity["Concept", "BurseraMicrophylla::f8jbw"], 
                    Entity["Concept", "BurseraSimaruba::w2b5b"], 
                    Entity["Concept", "Busby::448c3"], 
                    Entity["Concept", "BushBaby::d273h"], 
                    Entity["Concept", "Bushbuck::q6pcd"], 
                    Entity["Concept", "BushHibiscus::6ndvg"], 
                    Entity["Concept", "BushNasturtium::3j296"], 
                    Entity["Concept", "BushTit::983y4"], 
                    Entity["Concept", "BusinessOffice::5478w"], 
                    Entity["Concept", "Butcherbird::v429j"], 
                    Entity["Concept", "ButchersBroom::73q88"], 
                    Entity["Concept", "ButeoButeo::j8ck9"], 
                    Entity["Concept", "ButeoLagopus::syyy3"], 
                    Entity["Concept", "ButeoLineatus::6cd35"], 
                    Entity["Concept", "Butter-beanPlant::5kf8g"], 
                    Entity["Concept", "ButterChurn::cw3jk"], 
                    Entity["Concept", "ButterDish::8q9g3"], 
                    Entity["Concept", "Butterflyfish::3334j"], 
                    Entity["Concept", "ButterflyNut::9m67c"], 
                    Entity["Concept", "ButtermilkBiscuit::s7292"], 
                    Entity["Concept", "Butternut::8w4gv"], 
                    Entity["Concept", "ButtHinge::4g4dz"], 
                    Entity["Concept", "ButtonPink::ph7mp"], 
                    Entity["Concept", "Button::rx92b"], 
                    Entity["Concept", "ButtPack::579sh"], 
                    Entity["Concept", "CabbagePalmetto::p2c35"], 
                    Entity["Concept", "Cabbageworm::s3p9c"], 
                    Entity["Concept", "Caber::673fd"], 
                    Entity["Concept", "Cabin::7jtd4"], 
                    Entity["Concept", "CabinCar::q56wh"], 
                    Entity["Concept", "Cabinet::5773y"], 
                    Entity["Concept", "CableCar::x24w2"], 
                    Entity["Concept", "CacaoBean::88qh3"], 
                    Entity["Concept", "CacatuaGalerita::tfz9w"], 
                    Entity["Concept", "CactusWren::32j37"], 
                    Entity["Concept", "CaesalpiniaGilliesii::c3vyg"], 
                    Entity["Concept", "CaesarSalad::48fpk"], 
                    Entity["Concept", "CairinaMoschata::459fj"], 
                    Entity["Concept", "CairnTerrier::67c37"], 
                    Entity["Concept", "Calabura::23f85"], 
                    Entity["Concept", "CalamagrostisAcutiflora::fdhn4"], 
                    Entity["Concept", "CalaminthaNepeta::w96tc"], 
                    Entity["Concept", "Calamus::8597d"], 
                    Entity["Concept", "CalathianViolet::9923v"], 
                    Entity["Concept", "Calceolaria::2hwtc"], 
                    Entity["Concept", "Caldron::k6c8c"], 
                    Entity["Concept", "Calean::5sgy7"], 
                    Entity["Concept", "CalendulaOfficinalis::9k356"], 
                    Entity["Concept", "CalidrisCanutus::32v4h"], 
                    Entity["Concept", "CalidrisFerruginea::jz86q"], 
                    Entity["Concept", "CalidrisMelanotos::mq342"], 
                    Entity["Concept", "CaliforniaBayTree::5xg3h"], 
                    Entity["Concept", "CaliforniaCondor::gpv64"], 
                    Entity["Concept", "CaliforniaDandelion::f3792"], 
                    Entity["Concept", "CaliforniaFern::9yf2t"], 
                    Entity["Concept", "CaliforniaFourOclock::9r45q"], 
                    Entity["Concept", "CaliforniaFuchsia::6gp9f"], 
                    Entity["Concept", "CaliforniaLadysSlipper::6hhn6"], 
                    Entity["Concept", "CaliforniaLiveOak::7tq9v"], 
                    Entity["Concept", "CaliforniaNewt::85gmf"], 
                    Entity["Concept", "CaliforniaPoppy::k74m4"], 
                    Entity["Concept", "CaliforniaQuail::76k28"], 
                    Entity["Concept", "CaliforniaRedbud::69t63"], 
                    Entity["Concept", "CaliforniaSeaLion::56f89"], 
                    Entity["Concept", "CaliforniaSycamore::d6694"], 
                    Entity["Concept", "CaliforniaTreePoppy::7kcsx"], 
                    Entity["Concept", "CaliforniaWhiteOak::2qv4v"], 
                    Entity["Concept", "CaliforniaYellowBells::b4w22"], 
                    Entity["Concept", "CallaPalustris::3bggc"], 
                    Entity["Concept", "Calliandra::q737x"], 
                    Entity["Concept", "CallimorphaJacobeae::9h265"], 
                    Entity["Concept", "CallinectesSapidus::c8436"], 
                    Entity["Concept", "Calliopsis::89b69"], 
                    Entity["Concept", "CalliphoraVicina::gr7tx"], 
                    Entity["Concept", "CallistephusChinensis::4qw39"], 
                    Entity["Concept", "CalocarpumZapota::xyv65"], 
                    Entity["Concept", "CalocedrusDecurrens::23kp6"], 
                    Entity["Concept", "CalopogonPulchellum::pfj5f"], 
                    Entity["Concept", "CalthaPalustris::q3vtz"], 
                    Entity["Concept", "CalycanthusFloridus::bmrm5"], 
                    Entity["Concept", "Calypso::9dctk"], 
                    Entity["Concept", "CalyxTube::9p998"], 
                    Entity["Concept", "CamassiaQuamash::42z86"], 
                    Entity["Concept", "CamberwellBeauty::2tbht"], 
                    Entity["Concept", "Camcorder::mpq8q"], 
                    Entity["Concept", "Camelopard::6b787"], 
                    Entity["Concept", "Camion::787n2"], 
                    Entity["Concept", "Camisole::7n69y"], 
                    Entity["Concept", "CampanulaCarpatica::8763z"], 
                    Entity["Concept", "CampanulaGlomerata::tg654"], 
                    Entity["Concept", "CampanulaMedium::6gpk5"], 
                    Entity["Concept", "CampanulaPersicifolia::jj6nk"], 
                    Entity["Concept", "CampanulaRapunculoides::md4hn"], 
                    Entity["Concept", "CampanulaRapunculus::mn7z4"], 
                    Entity["Concept", "CampChair::34gvj"], 
                    Entity["Concept", "Campeachy::rgkb4"], 
                    Entity["Concept", "CamperTrailer::jvc73"], 
                    Entity["Concept", "Campground::vm243"], 
                    Entity["Concept", "CamphorTree::7qwnc"], 
                    Entity["Concept", "CanachitesCanadensis::j6595"], 
                    Entity["Concept", "CanadaLily::28f43"], 
                    Entity["Concept", "CanadaLynx::p6f6d"], 
                    Entity["Concept", "CanadaPorcupine::v8sv3"], 
                    Entity["Concept", "CanadaThistle::723p9"], 
                    Entity["Concept", "CanadianFleabane::t8897"], 
                    Entity["Concept", "CanadianGoldenrod::9gvj6"], 
                    Entity["Concept", "CanadianHemlock::dx2k5"], 
                    Entity["Concept", "CanadianRedPine::v54t7"], 
                    Entity["Concept", "Canafistola::xwc2x"], 
                    Entity["Concept", "Canal::ss93h"], 
                    Entity["Concept", "CanangaOdorata::3m972"], 
                    Entity["Concept", "CanaryWhitewood::9r784"], 
                    Entity["Concept", "CancerIrroratus::d69mr"], 
                    Entity["Concept", "CancerMagister::5r562"], 
                    Entity["Concept", "CancerWeed::7drhx"], 
                    Entity["Concept", "CandiedApple::vss8x"], 
                    Entity["Concept", "CandyCane::mbss2"], 
                    Entity["Concept", "CandyCorn::5hy24"], 
                    Entity["Concept", "Candytuft::2xn4s"], 
                    Entity["Concept", "Caning::374y4"], 
                    Entity["Concept", "CanisAureus::twfy2"], 
                    Entity["Concept", "CanisDingo::529k9"], 
                    Entity["Concept", "CanisLupus::5gwtc"], 
                    Entity["Concept", "CanisNiger::99p6d"], 
                    Entity["Concept", "CankerBrake::92hv3"], 
                    Entity["Concept", "Cannister::548cs"], 
                    Entity["Concept", "Cannon::54f56"], 
                    Entity["Concept", "CannonBall::4zc4c"], 
                    Entity["Concept", "CanoeCedar::f8bn5"], 
                    Entity["Concept", "CanopicJar::7s97j"], 
                    Entity["Concept", "CantaloupeVine::478j8"], 
                    Entity["Concept", "Cantaloup::qyzs9"], 
                    Entity["Concept", "Canteen::74f49"], 
                    Entity["Concept", "CantonGinger::fk664"], 
                    Entity["Concept", "Canvas::4gtd7"], 
                    Entity["Concept", "CanyonLiveOak::w33rj"], 
                    Entity["Concept", "CanyonTreefrog::b6rw3"], 
                    Entity["Concept", "CapacitorMicrophone::chyd6"], 
                    Entity["Concept", "CapeBuffalo::rm3ct"], 
                    Entity["Concept", "CapeDagga::j4xsf"], 
                    Entity["Concept", "CapeGooseberry::f8h8x"], 
                    Entity["Concept", "CapeJasmine::25c27"], 
                    Entity["Concept", "CapeMarigold::3354z"], 
                    Entity["Concept", "CapeMayWarbler::6386h"], 
                    Entity["Concept", "CapePeriwinkle::39v32"], 
                    Entity["Concept", "Capercaillie::7535b"], 
                    Entity["Concept", "Capibara::4d672"], 
                    Entity["Concept", "Capitol::vb9nn"], 
                    Entity["Concept", "CapparisSpinosa::pfp3b"], 
                    Entity["Concept", "CapraIbex::p5pmr"], 
                    Entity["Concept", "Caput::qmm2m"], 
                    Entity["Concept", "Carabao::ynz4s"], 
                    Entity["Concept", "Carabiner::9bfq9"], 
                    Entity["Concept", "Caracal::562y8"], 
                    Entity["Concept", "CaramelBun::c24jc"], 
                    Entity["Concept", "Carancha::xrg4t"], 
                    Entity["Concept", "Caranda::qck34"], 
                    Entity["Concept", "CaranxHippos::77z2v"], 
                    Entity["Concept", "CarassiusCarassius::j43sw"], 
                    Entity["Concept", "Caravan::r337w"], 
                    Entity["Concept", "Carbine::rrpj9"], 
                    Entity["Concept", "Carburetor::nvxx7"], 
                    Entity["Concept", "Carcase::yx479"], 
                    Entity["Concept", "CarcharhinusPlumbeus::pj8vp"], 
                    Entity["Concept", "CarchariasTaurus::g9jx9"], 
                    Entity["Concept", "CarcharinusLongimanus::4tgqp"], 
                    Entity["Concept", "CarcharodonCarcharias::st7pj"], 
                    Entity["Concept", "CardamineDiphylla::72bv8"], 
                    Entity["Concept", "CardaminePratensis::2ns9z"], 
                    Entity["Concept", "Cardamum::65trb"], 
                    Entity["Concept", "Cardcase::2279h"], 
                    Entity["Concept", "Cardcastle::g5kmj"], 
                    Entity["Concept", "Cardigan::237mv"], 
                    Entity["Concept", "Cardigan::b724j"], 
                    Entity["Concept", "CardinalGrosbeak::px456"], 
                    Entity["Concept", "CardinalTetra::mvc66"], 
                    Entity["Concept", "CardiumEdule::c94pm"], 
                    Entity["Concept", "CarduelisCannabina::gtk6y"], 
                    Entity["Concept", "CarduelisCarduelis::bv5y9"], 
                    Entity["Concept", "CarduelisFlammea::ntwd7"], 
                    Entity["Concept", "CarduelisHornemanni::nk8cy"], 
                    Entity["Concept", "CarduelisSpinus::c5n6r"], 
                    Entity["Concept", "CarduusNutans::98fq3"], 
                    Entity["Concept", "CarettaCaretta::768y9"], 
                    Entity["Concept", "CargoContainer::4p889"], 
                    Entity["Concept", "CariamaCristata::c3xds"], 
                    Entity["Concept", "Caribe::99dsf"], 
                    Entity["Concept", "CaricaPapaya::97w82"], 
                    Entity["Concept", "CarlinaAcaulis::dbyv9"], 
                    Entity["Concept", "CarlinaVulgaris::2687s"], 
                    Entity["Concept", "CarnaubaPalm::kdtz3"], 
                    Entity["Concept", "CarnegieaGigantea::49t23"], 
                    Entity["Concept", "CarobBeanTree::q2y37"], 
                    Entity["Concept", "CarolinaChickadee::h3c56"], 
                    Entity["Concept", "CarolinaJasmine::52p59"], 
                    Entity["Concept", "CarolinaWren::45v3f"], 
                    Entity["Concept", "Carousel::n2992"], 
                    Entity["Concept", "CarPark::52j62"], 
                    Entity["Concept", "CarpenterAnt::yfnw5"], 
                    Entity["Concept", "CarpenterBee::7x684"], 
                    Entity["Concept", "CarpentersHammer::5526j"], 
                    Entity["Concept", "CarpentersKit::37rxx"], 
                    Entity["Concept", "CarpetMoth::nhx7j"], 
                    Entity["Concept", "CarpetSnake::qn3ms"], 
                    Entity["Concept", "CarphophisAmoenus::35dfs"], 
                    Entity["Concept", "CarpinusBetulus::yt6xh"], 
                    Entity["Concept", "CarpobrotusEdulis::z9965"], 
                    Entity["Concept", "CarpodacusMexicanus::zq6w8"], 
                    Entity["Concept", "CarpodacusPurpureus::95v2k"], 
                    Entity["Concept", "CarriageHouse::5xzrj"], 
                    Entity["Concept", "CarrionCrow::t3644"], 
                    Entity["Concept", "CarTransporter::c7745"], 
                    Entity["Concept", "Cart-trackPlant::w67b2"], 
                    Entity["Concept", "Caryatid::6834j"], 
                    Entity["Concept", "CaryotaUrens::788gn"], 
                    Entity["Concept", "Casbah::t984x"], 
                    Entity["Concept", "CaseKnife::v32q8"], 
                    Entity["Concept", "CashRegister::hcz77"], 
                    Entity["Concept", "CasmerodiusAlbus::kxw9m"], 
                    Entity["Concept", "Cassava::6684p"], 
                    Entity["Concept", "CassegrainianTelescope::56y92"], 
                    Entity["Concept", "CassetteRecorder::4c799"], 
                    Entity["Concept", "CassetteTape::k7576"], 
                    Entity["Concept", "Cassia-barkTree::4sdx8"], 
                    Entity["Concept", "CassiaBark::z2jgx"], 
                    Entity["Concept", "CassinsKingbird::7w258"], 
                    Entity["Concept", "Cassowary::4253c"], 
                    Entity["Concept", "CastaneaOzarkensis::877pq"], 
                    Entity["Concept", "Caster::2y3t4"], 
                    Entity["Concept", "CastillejaChromosa::6ngfv"], 
                    Entity["Concept", "CastillejaMiniata::wj4f5"], 
                    Entity["Concept", "Castle::m2pbs"], 
                    Entity["Concept", "CastorBeanPlant::yqd4j"], 
                    Entity["Concept", "Catacomb::3227k"], 
                    Entity["Concept", "CatalyticConverter::3y493"], 
                    Entity["Concept", "Catamaran::7b489"], 
                    Entity["Concept", "Catamountain::b5867"], 
                    Entity["Concept", "Catboat::m32w2"], 
                    Entity["Concept", "CatharactaSkua::9p855"], 
                    Entity["Concept", "CathartesAura::sj2yh"], 
                    Entity["Concept", "Cathode-rayOscilloscope::z4q77"], 
                    Entity["Concept", "Catmint::26zfk"], 
                    Entity["Concept", "CatoptrophorusSemipalmatus::3g736"], 
                    Entity["Concept", "CATScanner::3rq64"], 
                    Entity["Concept", "Catsup::9x525"], 
                    Entity["Concept", "CatsupBottle::b797q"], 
                    Entity["Concept", "CattlePen::k693j"], 
                    Entity["Concept", "Cattleya::mwj95"], 
                    Entity["Concept", "CaucasianWalnut::sgc6s"], 
                    Entity["Concept", "Cavalla::hf445"], 
                    Entity["Concept", "Cavern::f8d88"], 
                    Entity["Concept", "CaviaCobaya::b8w85"], 
                    Entity["Concept", "Cayenne::p5td2"], 
                    Entity["Concept", "C-clamp::k82d3"], 
                    Entity["Concept", "CDDrive::drc4h"], 
                    Entity["Concept", "CebuellaPygmaea::5yf74"], 
                    Entity["Concept", "CebusCapucinus::4r452"], 
                    Entity["Concept", "Cecropia::43dm2"], 
                    Entity["Concept", "CedarElm::627tb"], 
                    Entity["Concept", "CedarOfLebanon::kvk3n"], 
                    Entity["Concept", "CedrusDeodara::2f94b"], 
                    Entity["Concept", "Ceibo::r4w87"], 
                    Entity["Concept", "CelandinePoppy::r6h2f"], 
                    Entity["Concept", "CeleryStick::425q5"], 
                    Entity["Concept", "Cello::hhbp5"], 
                    Entity["Concept", "Cellphone::5k4s4"], 
                    Entity["Concept", "CelosiaArgenteaCristata::cb353"], 
                    Entity["Concept", "CeltisAustralis::95g25"], 
                    Entity["Concept", "Cembalo::353r5"], 
                    Entity["Concept", "CementMixer::xcp2d"], 
                    Entity["Concept", "Cenotaph::kpy5x"], 
                    Entity["Concept", "Censer::99dd2"], 
                    Entity["Concept", "CentaureaCineraria::n29f5"], 
                    Entity["Concept", "CentaureaCyanus::693zp"], 
                    Entity["Concept", "CentaureaScabiosa::937nq"], 
                    Entity["Concept", "CentranthusRuber::ry9bh"], 
                    Entity["Concept", "CentrifugalPump::w6jf8"], 
                    Entity["Concept", "CentrocercusUrophasianus::j72rz"], 
                    Entity["Concept", "CentrosemaVirginianum::2g627"], 
                    Entity["Concept", "CephalantheraRubra::3bx7j"], 
                    Entity["Concept", "CepphusColumba::p23vv"], 
                    Entity["Concept", "Cerastes::6575z"], 
                    Entity["Concept", "CerastiumTomentosum::92fh7"], 
                    Entity["Concept", "CeratotheriumSimum::h93cc"], 
                    Entity["Concept", "CercidiumFloridum::cn9rh"], 
                    Entity["Concept", "CercisCanadensis::r4cq7"], 
                    Entity[
                    "Concept", "CercopithecusAethiopsPygerythrus::3cvsf"], 
                    Entity["Concept", "CerealBox::rqt58"], 
                    Entity["Concept", "CervusElaphusCanadensis::hff4r"], 
                    Entity["Concept", "CervusNipon::6h4vj"], 
                    Entity["Concept", "CestrumNocturnum::mvdh8"], 
                    Entity["Concept", "CetoniaAurata::n2dm8"], 
                    Entity["Concept", "Chacma::bvff9"], 
                    Entity["Concept", "ChaenomelesJaponica::7nv52"], 
                    Entity["Concept", "Chaetodon::cmz2t"], 
                    Entity["Concept", "Chaffinch::kn3mk"], 
                    Entity["Concept", "ChafingDish::677t7"], 
                    Entity["Concept", "ChainSaw::f5bt6"], 
                    Entity["Concept", "Chain::w548s"], 
                    Entity["Concept", "ChairLift::dg6tp"], 
                    Entity["Concept", "ChaiseLongue::3g9s5"], 
                    Entity["Concept", "ChaliceVine::2rcjd"], 
                    Entity["Concept", "Challah::597ch"], 
                    Entity["Concept", "ChamaecyparisLawsoniana::537j4"], 
                    Entity["Concept", "ChamberedNautilus::tspc6"], 
                    Entity["Concept", "ChannelBass::24fs7"], 
                    Entity["Concept", "ChaparralCock::6f624"], 
                    Entity["Concept", "ChaparralSage::rg5pd"], 
                    Entity["Concept", "CharadriusMelodus::p22rw"], 
                    Entity["Concept", "CharadriusMorinellus::39tcv"], 
                    Entity["Concept", "CharadriusVociferus::gwnc5"], 
                    Entity["Concept", "ChargeCard::g6353"], 
                    Entity["Concept", "Charolais::p42jk"], 
                    Entity["Concept", "Chassis::y9ryg"], 
                    Entity["Concept", "Checkerbloom::z7x45"], 
                    Entity["Concept", "CheckeredAdder::xnvm9"], 
                    Entity["Concept", "CheckeredDaffodil::rj492"], 
                    Entity["Concept", "CheckoutCounter::36dwm"], 
                    Entity["Concept", "CheddarPink::qxyc9"], 
                    Entity["Concept", "Cheeseburger::3z2z7"], 
                    Entity["Concept", "CheiranthusCheiri::p39qc"], 
                    Entity["Concept", "ChelidoniumMajus::s99xk"], 
                    Entity["Concept", "CheloniaMydas::v39xn"], 
                    Entity["Concept", "ChelydraSerpentina::n75f9"], 
                    Entity["Concept", "Chemise::yr2nk"], 
                    Entity["Concept", "Chenfish::338gm"], 
                    Entity["Concept", "Cherimolla::3tdmg"], 
                    Entity["Concept", "CherryApple::79hn5"], 
                    Entity["Concept", "CherryPlum::4td2s"], 
                    Entity["Concept", "Chervil::65m77"], 
                    Entity["Concept", "ChesapeakeBayRetriever::s8567"], 
                    Entity["Concept", "Chesterfield::723zr"], 
                    Entity["Concept", "Chestnut::6pvm9"], 
                    Entity["Concept", "Chestnut::c38mp"], 
                    Entity["Concept", "ChickenCoop::d2x7j"], 
                    Entity["Concept", "ChickenSandwich::rqmx7"], 
                    Entity["Concept", "Chickeree::7bxdb"], 
                    Entity["Concept", "Chickpea::3fv2z"], 
                    Entity["Concept", "ChickpeaPlant::5n9d3"], 
                    Entity["Concept", "ChicoryPlant::x6426"], 
                    Entity["Concept", "Chicory::w8795"], 
                    Entity["Concept", "Chicot::3sfc5"], 
                    Entity["Concept", "Chihuahua::8hmhf"], 
                    Entity["Concept", "ChiliDog::vg8q9"], 
                    Entity["Concept", "ChilopsisLinearis::5zbgq"], 
                    Entity["Concept", "Chimneypiece::4gztm"], 
                    Entity["Concept", "ChinaCabinet::9bmqg"], 
                    Entity["Concept", "ChinchillaLaniger::369fj"], 
                    Entity["Concept", "ChineseDate::cf6cn"], 
                    Entity["Concept", "ChineseForget-me-not::nxpc8"], 
                    Entity["Concept", "ChineseFriedRice::2784t"], 
                    Entity["Concept", "ChineseLantern::9n4sj"], 
                    Entity["Concept", "ChineseParasol::6yqnj"], 
                    Entity["Concept", "ChineseParsley::wzsz6"], 
                    Entity["Concept", "ChineseScholarTree::pqx4s"], 
                    Entity["Concept", "ChinkapinOak::k38cz"], 
                    Entity["Concept", "ChinRest::m3vy6"], 
                    Entity["Concept", "Chipmunk::s96n3"], 
                    Entity["Concept", "ChippingSparrow::74hdn"], 
                    Entity["Concept", "Chips::96f85"], 
                    Entity["Concept", "Chives::2477v"], 
                    Entity["Concept", "ChlamydosaurusKingi::stq3k"], 
                    Entity["Concept", "ChocolateEgg::h867z"], 
                    Entity["Concept", "ChocolateKiss::zhx73"], 
                    Entity["Concept", "ChocolateTruffle::2k628"], 
                    Entity["Concept", "Cholla::7gjk8"], 
                    Entity["Concept", "CholoepusDidactylus::nf69z"], 
                    Entity["Concept", "CholoepusHoffmanni::56zg6"], 
                    Entity["Concept", "ChorusFrog::j543k"], 
                    Entity["Concept", "Chough::h5b3v"], 
                    Entity["Concept", "ChowChow::7x292"], 
                    Entity["Concept", "ChristmasCactus::4735s"], 
                    Entity["Concept", "ChristmasFlower::n5k23"], 
                    Entity["Concept", "ChristmasStocking::867r8"], 
                    Entity["Concept", "ChristPlant::y9n49"], 
                    Entity["Concept", "Chronograph::yrsy8"], 
                    Entity["Concept", "Chrysalis::dvmq3"], 
                    Entity["Concept", "ChrysanthemumCoccineum::n2j8s"], 
                    Entity["Concept", "ChrysanthemumCoronarium::h6577"], 
                    Entity["Concept", "ChrysanthemumDog::y9tps"], 
                    Entity["Concept", "ChrysanthemumLeucanthemum::245y5"], 
                    Entity["Concept", "ChrysanthemumMaximum::5qtnd"], 
                    Entity["Concept", "ChrysanthemumMaximumMaximum::24j2c"], 
                    Entity["Concept", "ChrysanthemumMorifolium::ftmx4"], 
                    Entity["Concept", "ChrysanthemumParthenium::f3vjh"], 
                    Entity["Concept", "ChrysanthemumPtarmiciflorum::2w5q8"], 
                    Entity["Concept", "ChrysanthemumSegetum::f752k"], 
                    Entity["Concept", "ChrysemysPicta::9h494"], 
                    Entity["Concept", "ChrysolophusPictus::q6xmr"], 
                    Entity["Concept", "ChrysophrysAuratus::jbs4s"], 
                    Entity["Concept", "Chuckwalla::vm727"], 
                    Entity["Concept", "Chunga::mntt9"], 
                    Entity["Concept", "ChurchBench::38xgk"], 
                    Entity["Concept", "ChurchBuilding::2394b"], 
                    Entity["Concept", "CicadaKiller::294n3"], 
                    Entity["Concept", "CiconiaCiconia::wkt3m"], 
                    Entity["Concept", "CicutaVerosa::vmh57"], 
                    Entity["Concept", "CigarBand::3fb43"], 
                    Entity["Concept", "CigarCutter::33xw5"], 
                    Entity["Concept", "CigaretteCase::5nbz4"], 
                    Entity["Concept", "CigaretteHolder::7tqk2"], 
                    Entity["Concept", "CigaretteLighter::574w7"], 
                    Entity["Concept", "CinerariaMaritima::548jg"], 
                    Entity["Concept", "Cineraria::zh8tb"], 
                    Entity["Concept", "CinnamonBark::2k8wr"], 
                    Entity["Concept", "CinnamonBun::d8rw6"], 
                    Entity["Concept", "Cinquefoil::jy558"], 
                    Entity["Concept", "CircassianWalnut::8v6k4"], 
                    Entity["Concept", "CircisSiliquastrum::pf8b7"], 
                    Entity["Concept", "CircuitBreaker::39h3x"], 
                    Entity["Concept", "Circuitry::356v7"], 
                    Entity["Concept", "CircusAeruginosus::vy86s"], 
                    Entity["Concept", "CircusCyaneus::n432j"], 
                    Entity["Concept", "CircusPygargus::534qx"], 
                    Entity["Concept", "Cirrocumulus::2tvsx"], 
                    Entity["Concept", "Cirrostratus::5k65f"], 
                    Entity["Concept", "CirrusCloud::yh54t"], 
                    Entity["Concept", "CirsiumDiscolor::6f4d8"], 
                    Entity["Concept", "CirsiumEriophorum::y5vcm"], 
                    Entity["Concept", "CistothorusPalustris::jn3dm"], 
                    Entity["Concept", "CistothorusPlatensis::d7gx4"], 
                    Entity["Concept", "CitellusLateralis::3473f"], 
                    Entity["Concept", "CitellusVariegatus::275qx"], 
                    Entity["Concept", "Citron::24q25"], 
                    Entity["Concept", "CitrusAurantifolia::g87mw"], 
                    Entity["Concept", "CitrusDecumana::6qj94"], 
                    Entity["Concept", "CitrusLimetta::4343s"], 
                    Entity["Concept", "CitrusParadisi::2vg75"], 
                    Entity["Concept", "CitrusSinensis::z9bz5"], 
                    Entity["Concept", "ClangulaHyemalis::qtv7p"], 
                    Entity["Concept", "Clapperboard::92r9q"], 
                    Entity["Concept", "ClarksNutcracker::6n757"], 
                    Entity["Concept", "Clary::rvks2"], 
                    Entity["Concept", "ClarySage::464f8"], 
                    Entity["Concept", "Classroom::h6r5j"], 
                    Entity["Concept", "ClatoniaLanceolata::xx3zd"], 
                    Entity["Concept", "Clavichord::xdf9n"], 
                    Entity["Concept", "ClaytoniaVirginica::jv3vs"], 
                    Entity["Concept", "Clayware::5y675"], 
                    Entity["Concept", "CleanRoom::t7y7k"], 
                    Entity["Concept", "Cleats::zk8mb"], 
                    Entity["Concept", "Cleat::t396r"], 
                    Entity["Concept", "Cleaver::bk925"], 
                    Entity["Concept", "Cleg::47pmj"], 
                    Entity["Concept", "ClematisTexensis::375c9"], 
                    Entity["Concept", "ClematisVerticillaris::24n3d"], 
                    Entity["Concept", "Clementine::fx26v"], 
                    Entity["Concept", "ClianthusFormosus::33m9k"], 
                    Entity["Concept", "ClickBeetle::hz374"], 
                    Entity["Concept", "Cliff::q56fy"], 
                    Entity["Concept", "CliffSwallow::5c494"], 
                    Entity["Concept", "ClimbingIron::2t7wk"], 
                    Entity["Concept", "ClimbingLily::34g67"], 
                    Entity["Concept", "ClinopodiumVulgare::cc4bv"], 
                    Entity["Concept", "ClitoriaMariana::vrfv2"], 
                    Entity["Concept", "Cloche::y3gxy"], 
                    Entity["Concept", "ClockRadio::7rknq"], 
                    Entity["Concept", "ClothCap::qw37g"], 
                    Entity["Concept", "Clothesbrush::g53w9"], 
                    Entity["Concept", "ClothesCloset::n45n8"], 
                    Entity["Concept", "ClothesHanger::xd6ws"], 
                    Entity["Concept", "ClothesPeg::w5mrd"], 
                    Entity["Concept", "ClothesTree::86w48"], 
                    Entity["Concept", "CloudBank::38h22"], 
                    Entity["Concept", "ClovePink::x9fg3"], 
                    Entity["Concept", "Club-head::cr868"], 
                    Entity["Concept", "Clumber::2ddvk"], 
                    Entity["Concept", "Clydesdale::7r247"], 
                    Entity["Concept", "CnemidophorusSexlineatus::fkv7n"], 
                    Entity["Concept", "CnidoscolusUrens::85ht8"], 
                    Entity["Concept", "Coati::c4t96"], 
                    Entity["Concept", "Coat-of-mailShell::h3tp5"], 
                    Entity["Concept", "Cob::6tf5q"], 
                    Entity["Concept", "CoccothraustesCoccothraustes::6y626"], 
                    Entity["Concept", "Cockateel::vt923"], 
                    Entity["Concept", "Cockchafer::759hk"], 
                    Entity["Concept", "Cocker::7284r"], 
                    Entity["Concept", "Cockpit::n5cvg"], 
                    Entity["Concept", "Cocksfoot::r5p72"], 
                    Entity["Concept", "CocktailShaker::r9655"], 
                    Entity["Concept", "Cocoanut::m9m7g"], 
                    Entity["Concept", "Coco::xh382"], 
                    Entity["Concept", "CoeloglossumViride::24wn8"], 
                    Entity["Concept", "CoffeeBean::2585r"], 
                    Entity["Concept", "CoilSpring::99x44"], 
                    Entity["Concept", "Coin::b3sgt"], 
                    Entity["Concept", "Colander::73kyp"], 
                    Entity["Concept", "ColaptesAuratus::755k8"], 
                    Entity["Concept", "ColaptesCaperCollaris::644q4"], 
                    Entity["Concept", "ColdChisel::v2772"], 
                    Entity["Concept", "ColdFrame::r62r5"], 
                    Entity["Concept", "ColdStuffedTomato::bk686"], 
                    Entity["Concept", "ColeusBlumei::48fzj"], 
                    Entity["Concept", "ColinusVirginianus::s54v6"], 
                    Entity["Concept", "Coliseum::4njz3"], 
                    Entity["Concept", "CollapsibleShelter::dhj5j"], 
                    Entity["Concept", "Collar::2524y"], 
                    Entity["Concept", "CollaredPeccary::zkv5x"], 
                    Entity["Concept", "College::399zg"], 
                    Entity["Concept", "Collembolan::s4cpy"], 
                    Entity["Concept", "ColletChuck::v6pvn"], 
                    Entity["Concept", "Collie::999kf"], 
                    Entity["Concept", "ColocasiaEsculenta::58qdq"], 
                    Entity["Concept", "ColoradoBeetle::7b393"], 
                    Entity["Concept", "ColoradoBlueSpruce::g3bgh"], 
                    Entity["Concept", "ColumbaLivia::8bb89"], 
                    Entity["Concept", "ColumbaPalumbus::hh238"], 
                    Entity["Concept", "Comatulid::8w224"], 
                    Entity["Concept", "CombinationLock::b8rp7"], 
                    Entity["Concept", "Combine::mm8c8"], 
                    Entity["Concept", "CommaButterfly::w98vn"], 
                    Entity["Concept", "CommandKey::2j7ng"], 
                    Entity["Concept", "Commelina::swf9p"], 
                    Entity["Concept", "Common::36z45"], 
                    Entity["Concept", "CommonApricot::972x4"], 
                    Entity["Concept", "CommonBirdCherry::vpt55"], 
                    Entity["Concept", "CommonBlackfish::k59t5"], 
                    Entity["Concept", "CommonBroom::k4s8n"], 
                    Entity["Concept", "CommonCanary::drf76"], 
                    Entity["Concept", "CommonChickweed::4d8d5"], 
                    Entity["Concept", "CommonComfrey::vjm8v"], 
                    Entity["Concept", "CommonCottonGrass::xpzp7"], 
                    Entity["Concept", "CommonDandelion::35b9v"], 
                    Entity["Concept", "CommonDevilsClaw::535k3"], 
                    Entity["Concept", "CommonDolphin::79h29"], 
                    Entity["Concept", "CommonDuckweed::z7s24"], 
                    Entity["Concept", "CommonEuropeanAsh::g8rbx"], 
                    Entity["Concept", "CommonEuropeanEarwig::s7kkz"], 
                    Entity["Concept", "CommonEveningPrimrose::45x8b"], 
                    Entity["Concept", "CommonFour-oclock::bpj6x"], 
                    Entity["Concept", "CommonFoxglove::82p77"], 
                    Entity["Concept", "CommonGarterSnake::btbf6"], 
                    Entity["Concept", "CommonGrapeHyacinth::y5849"], 
                    Entity["Concept", "CommonHorsetail::mb25m"], 
                    Entity["Concept", "CommonHyacinth::44r2r"], 
                    Entity["Concept", "CommonIguana::66q43"], 
                    Entity["Concept", "CommonJasmine::y5m56"], 
                    Entity["Concept", "CommonKingsnake::55dmr"], 
                    Entity["Concept", "CommonLadys-slipper::kxv7z"], 
                    Entity["Concept", "CommonLettuce::yxz6t"], 
                    Entity["Concept", "CommonLilac::5x956"], 
                    Entity["Concept", "CommonLimpet::555j8"], 
                    Entity["Concept", "CommonLynx::8vpj2"], 
                    Entity["Concept", "CommonMallow::vxgw3"], 
                    Entity["Concept", "CommonMilkwort::hm55r"], 
                    Entity["Concept", "CommonMosquito::93z7s"], 
                    Entity["Concept", "CommonMurre::tf445"], 
                    Entity["Concept", "CommonMyrtle::hyhk5"], 
                    Entity["Concept", "CommonNewt::9nx3s"], 
                    Entity["Concept", "CommonOak::yd666"], 
                    Entity["Concept", "CommonOpossum::s7846"], 
                    Entity["Concept", "CommonOsier::vr87w"], 
                    Entity["Concept", "CommonPlum::28tbv"], 
                    Entity["Concept", "CommonPrivet::5453q"], 
                    Entity["Concept", "CommonRaccoon::p862w"], 
                    Entity["Concept", "CommonRoseMallow::s6857"], 
                    Entity["Concept", "CommonSage::rwvg8"], 
                    Entity["Concept", "CommonScoter::w8hkc"], 
                    Entity["Concept", "CommonSeal::439f8"], 
                    Entity["Concept", "CommonSpeedwell::rpt35"], 
                    Entity["Concept", "CommonSpoonbill::yc7t2"], 
                    Entity["Concept", "CommonSpottedOrchid::s8yj8"], 
                    Entity["Concept", "CommonStaghornFern::3r99s"], 
                    Entity["Concept", "CommonStarling::679bc"], 
                    Entity["Concept", "CommonStJohnsWort::mn3s5"], 
                    Entity["Concept", "CommonSunflower::px2hr"], 
                    Entity["Concept", "CommonTeasel::469qr"], 
                    Entity["Concept", "CommonValerian::y5cr5"], 
                    Entity["Concept", "CommonViper::423c3"], 
                    Entity["Concept", "CommonWasp::58v7y"], 
                    Entity["Concept", "CommonWhiteDogwood::5z5k9"], 
                    Entity["Concept", "CommonWoodSorrel::d4m32"], 
                    Entity["Concept", "CommonYellowthroat::t443w"], 
                    Entity["Concept", "CommunionTable::d559s"], 
                    Entity["Concept", "Community::8xqvn"], 
                    Entity["Concept", "Compass::g328m"], 
                    Entity["Concept", "CompoundMicroscope::s234b"], 
                    Entity["Concept", "ComputerKeyboard::26d5s"], 
                    Entity["Concept", "ComputerMonitor::53q3f"], 
                    Entity["Concept", "ComputerMouse::kbzr4"], 
                    Entity["Concept", "Conacaste::4293n"], 
                    Entity["Concept", "Concertina::77wpr"], 
                    Entity["Concept", "ConcordGrape::t8ph3"], 
                    Entity["Concept", "CondensationTrail::n87kq"], 
                    Entity["Concept", "Coneflower::cf654"], 
                    Entity["Concept", "Conessi::x4846"], 
                    Entity["Concept", "Conestoga::k745k"], 
                    Entity["Concept", "ConfederateRose::bdb59"], 
                    Entity["Concept", "ConferenceCenter::g243v"], 
                    Entity["Concept", "ConferenceRoom::2rhz6"], 
                    Entity["Concept", "Conger::55j3j"], 
                    Entity["Concept", "Conker::v8p64"], 
                    Entity["Concept", "ConocliniumCoelestinum::z84vx"], 
                    Entity["Concept", "ConsoleTable::ht624"], 
                    Entity["Concept", "ConsolidaAmbigua::k3sbf"], 
                    Entity["Concept", "ContainerShip::tsz7x"], 
                    Entity["Concept", "ContopusSordidulus::787v9"], 
                    Entity["Concept", "ControlRoom::t65s6"], 
                    Entity["Concept", "Convertible::4pxj2"], 
                    Entity["Concept", "ConvolvulusArvensis::q2577"], 
                    Entity["Concept", "Cooker::84g9c"], 
                    Entity["Concept", "CookieCutter::9868k"], 
                    Entity["Concept", "CookingPan::638nx"], 
                    Entity["Concept", "CoolingTower::mgb4t"], 
                    Entity["Concept", "Coolwart::57g4n"], 
                    Entity["Concept", "Coonskin::3n76g"], 
                    Entity["Concept", "Cooter::k95t6"], 
                    Entity["Concept", "CopperBeech::rfxy3"], 
                    Entity["Concept", "CoraciasGarrulus::23t7t"], 
                    Entity["Concept", "Coracle::z74nc"], 
                    Entity["Concept", "CoralBean::264t3"], 
                    Entity["Concept", "CoralHoneysuckle::c8433"], 
                    Entity["Concept", "CorallorhizaMaculata::df7jr"], 
                    Entity["Concept", "CordiaAlliodora::3683f"], 
                    Entity["Concept", "CordylineAustralis::cnwq7"], 
                    Entity["Concept", "CorkOak::zy697"], 
                    Entity["Concept", "CorkscrewFlower::22myd"], 
                    Entity["Concept", "Cormorant::ww5zj"], 
                    Entity["Concept", "CornelianCherry::z8qjs"], 
                    Entity["Concept", "Cornetfish::rvg6q"], 
                    Entity["Concept", "CornflowerAster::d6tmc"], 
                    Entity["Concept", "Corn::m7hpj"], 
                    Entity["Concept", "CornPoppy::m8cg5"], 
                    Entity["Concept", "CornSnake::w9dcv"], 
                    Entity["Concept", "CornSpeedwell::q2hst"], 
                    Entity["Concept", "CornStalk::96r29"], 
                    Entity["Concept", "CorrectionalInstitution::64g7n"], 
                    Entity["Concept", "Corridor::99yrs"], 
                    Entity["Concept", "Corsage::2385f"], 
                    Entity["Concept", "CortaderiaSelloana::57f92"], 
                    Entity["Concept", "CorvusCorax::zb2rx"], 
                    Entity["Concept", "CorvusFrugilegus::5t7y3"], 
                    Entity["Concept", "CorvusMonedula::sn488"], 
                    Entity["Concept", "Corydalis::9vc49"], 
                    Entity["Concept", "CorydalusCornutus::yc2y3"], 
                    Entity["Concept", "Coscoroba::8k8ry"], 
                    Entity["Concept", "Cosmea::b72fv"], 
                    Entity["Concept", "Cosy::gjgd5"], 
                    Entity["Concept", "Cot::3kgws"], 
                    Entity["Concept", "CottagePink::693k7"], 
                    Entity["Concept", "CottonThistle::yhb2w"], 
                    Entity["Concept", "Cougar::7bc9f"], 
                    Entity["Concept", "CountryStore::244r3"], 
                    Entity["Concept", "Coupe::5vr58"], 
                    Entity["Concept", "Courthouse::96yx7"], 
                    Entity["Concept", "Courtroom::25rwj"], 
                    Entity["Concept", "Courtyard::5n4j8"], 
                    Entity["Concept", "Couscous::647q5"], 
                    Entity["Concept", "Cowbell::x5gjp"], 
                    Entity["Concept", "Cowbird::939g9"], 
                    Entity["Concept", "CowboyBoot::5f655"], 
                    Entity["Concept", "CowboyHat::59wk9"], 
                    Entity["Concept", "Cowfish::zvxw3"], 
                    Entity["Concept", "CowParsnip::99j33"], 
                    Entity["Concept", "CowpeaPlant::w8v26"], 
                    Entity["Concept", "Coypu::bq656"], 
                    Entity["Concept", "CrabApple::qb6th"], 
                    Entity["Concept", "CrabCactus::4ptjf"], 
                    Entity["Concept", "CrabeaterSeal::4r7rw"], 
                    Entity["Concept", "Cradle::3882z"], 
                    Entity["Concept", "Crampbark::f9384"], 
                    Entity["Concept", "Crampfish::6369q"], 
                    Entity["Concept", "Cranberry::257f4"], 
                    Entity["Concept", "CraneFly::5y4f8"], 
                    Entity["Concept", "Crapaud::b64yv"], 
                    Entity["Concept", "CrapeMyrtle::5jm5c"], 
                    Entity["Concept", "CrashHelmet::76cs8"], 
                    Entity["Concept", "CrataegusCalpodendron::398s2"], 
                    Entity["Concept", "Crayon::37pgx"], 
                    Entity["Concept", "CreamViolet::74vc5"], 
                    Entity["Concept", "Credenza::87dzp"], 
                    Entity["Concept", "CreepingButtercup::928z9"], 
                    Entity["Concept", "CreepingCharlie::9xb8j"], 
                    Entity["Concept", "CreepingOxalis::64j2z"], 
                    Entity["Concept", "CreepingStJohnsWort::z2576"], 
                    Entity["Concept", "CreepingThyme::97kt6"], 
                    Entity["Concept", "CremeCaramel::z6x3r"], 
                    Entity["Concept", "CrenateLeaf::x8zry"], 
                    Entity["Concept", "CrescentRoll::9vn94"], 
                    Entity["Concept", "CrestedPenguin::5wf33"], 
                    Entity["Concept", "Crevasse::2m6jk"], 
                    Entity["Concept", "CricketBall::6fw2k"], 
                    Entity["Concept", "CricketBat::4t76w"], 
                    Entity["Concept", "CrimsonClover::n8443"], 
                    Entity["Concept", "Crisp::2y3w4"], 
                    Entity["Concept", "CrocethiaAlba::gnyq9"], 
                    Entity["Concept", "CrochetHook::dxy6f"], 
                    Entity["Concept", "CrocusSativus::54dg5"], 
                    Entity["Concept", "CrocutaCrocuta::52k76"], 
                    Entity["Concept", "Cromlech::2pyz5"], 
                    Entity["Concept", "CroquetBall::g84t5"], 
                    Entity["Concept", "CroquetMallet::8346z"], 
                    Entity["Concept", "Croquette::7772m"], 
                    Entity["Concept", "Crossbill::34d6d"], 
                    Entity["Concept", "Crossbow::zjp6v"], 
                    Entity["Concept", "CrossBun::c5483"], 
                    Entity["Concept", "CrossOfLorraine::s3szj"], 
                    Entity["Concept", "Crossword::yqtk6"], 
                    Entity["Concept", "Cross::xc66j"], 
                    Entity["Concept", "CrotalusAdamanteus::8ynrx"], 
                    Entity["Concept", "CrotalusAtrox::v8yfj"], 
                    Entity["Concept", "CrotalusCerastes::m382t"], 
                    Entity["Concept", "CrotalusLepidus::9xr87"], 
                    Entity["Concept", "CrotalusMitchellii::g5588"], 
                    Entity["Concept", "CrotalusScutulatus::qxf3b"], 
                    Entity["Concept", "CrotalusViridis::7y7s2"], 
                    Entity["Concept", "Crouton::r9yct"], 
                    Entity["Concept", "CrownImperial::24y69"], 
                    Entity["Concept", "CrowsNest::35fb8"], 
                    Entity["Concept", "CruiseLiner::jnx3v"], 
                    Entity["Concept", "Crutch::3q57h"], 
                    Entity["Concept", "CryptobranchusAlleganiensis::9539q"], 
                    Entity["Concept", "CryptomeriaJaponica::2fb8v"], 
                    Entity["Concept", "CubanSandwich::p7fv7"], 
                    Entity["Concept", "CuckooClock::kgv4r"], 
                    Entity["Concept", "CuculusCanorus::2h9wb"], 
                    Entity["Concept", "CucumisMeloInodorus::dxk47"], 
                    Entity["Concept", "CucumisMeloReticulatus::8p63b"], 
                    Entity["Concept", "CucurbitaArgyrosperma::8555j"], 
                    Entity["Concept", "CucurbitaMoschata::7bsn7"], 
                    Entity["Concept", "CueBall::9vs43"], 
                    Entity["Concept", "CueStick::8w35b"], 
                    Entity["Concept", "Cuirass::256jq"], 
                    Entity["Concept", "Cumulonimbus::ns75q"], 
                    Entity["Concept", "CumulusCloud::m982g"], 
                    Entity["Concept", "CuonAlpinus::f5yfn"], 
                    Entity["Concept", "Cupola::4rw2g"], 
                    Entity["Concept", "CupressusMacrocarpa::68km8"], 
                    Entity["Concept", "CupressusSempervirens::fvg4q"], 
                    Entity["Concept", "Cup::w4d7b"], 
                    Entity["Concept", "Curler::6wmw4"], 
                    Entity["Concept", "CurlingIron::sqm4h"], 
                    Entity["Concept", "Currant::234zf"], 
                    Entity["Concept", "Cuttle::8r287"], 
                    Entity["Concept", "CycasCircinalis::q63d8"], 
                    Entity["Concept", "CyclamenHederifolium::x88pq"], 
                    Entity["Concept", "Cyclamen::pnf5j"], 
                    Entity["Concept", "CydoniaOblonga::wds96"], 
                    Entity["Concept", "CygnusBuccinator::6cpmj"], 
                    Entity["Concept", "CygnusColumbianusColumbianus::748d2"], 
                    Entity["Concept", "CygnusCygnus::32d36"], 
                    Entity["Concept", "CygnusOlor::6hb7f"], 
                    Entity["Concept", "Cylinder::w6cqg"], 
                    Entity["Concept", "Cymbid::x2c38"], 
                    Entity["Concept", "CynaraCardunculus::3rpkm"], 
                    Entity["Concept", "CynoscionNebulosus::y7my6"], 
                    Entity["Concept", "CyperusAlternifolius::b2772"], 
                    Entity["Concept", "CyperusRotundus::77x49"], 
                    Entity["Concept", "CypraeaTigris::24g68"], 
                    Entity["Concept", "CypressSpurge::hm63f"], 
                    Entity["Concept", "CypressVine::7t688"], 
                    Entity["Concept", "CypripediumAcaule::w3xgw"], 
                    Entity["Concept", "CypripediumCalceolusPubescens::3xfwp"], 
                    Entity["Concept", "CypripediumMontanum::tfjg3"], 
                    Entity["Concept", "CyrtomiumAculeatum::z3p49"], 
                    Entity["Concept", "Dabchick::3qzh4"], 
                    Entity["Concept", "Dace::2bsqd"], 
                    Entity["Concept", "DaceloGigas::79k86"], 
                    Entity["Concept", "DacrydiumCupressinum::59r6f"], 
                    Entity["Concept", "Dahlia::2sjyw"], 
                    Entity["Concept", "Daikon::69b64"], 
                    Entity["Concept", "DailyDew::z4dvh"], 
                    Entity["Concept", "Daishiki::62rk6"], 
                    Entity["Concept", "DaisyFleabane::c55mm"], 
                    Entity["Concept", "DallisGrass::646wv"], 
                    Entity["Concept", "DallSheep::4532t"], 
                    Entity["Concept", "DamaDama::whc7y"], 
                    Entity["Concept", "DamaliscusLunatus::jm5f2"], 
                    Entity["Concept", "DamaskRose::4fcx7"], 
                    Entity["Concept", "DamaskViolet::9276p"], 
                    Entity["Concept", "Damselfly::dh8zj"], 
                    Entity["Concept", "Dam::w9687"], 
                    Entity["Concept", "DanausPlexippus::bfk9c"], 
                    Entity["Concept", "DancingLadyOrchid::xqt2h"], 
                    Entity["Concept", "DandieDinmont::ff47s"], 
                    Entity["Concept", "Dandy::57gbz"], 
                    Entity["Concept", "DaphneMezereum::66hq5"], 
                    Entity["Concept", "Daphnia::83f39"], 
                    Entity["Concept", "DarkBread::r8g28"], 
                    Entity["Concept", "Dark-eyedJunco::b7474"], 
                    Entity["Concept", "Dashboard::928h5"], 
                    Entity["Concept", "Dashboard::92m73"], 
                    Entity["Concept", "DataSystem::89b67"], 
                    Entity["Concept", "Date::67nkx"], 
                    Entity["Concept", "DatePalm::y5mb9"], 
                    Entity["Concept", "DaucusCarota::8w562"], 
                    Entity["Concept", "DawnRedwood::x59wn"], 
                    Entity["Concept", "Dayfly::7tqm2"], 
                    Entity["Concept", "Deaf-aid::w7kvd"], 
                    Entity["Concept", "DeathChair::t8v74"], 
                    Entity["Concept", "Deerhound::btsv4"], 
                    Entity["Concept", "DeerMouse::jg82k"], 
                    Entity["Concept", "DeerTick::399kd"], 
                    Entity["Concept", "DelichonUrbica::t9xr5"], 
                    Entity["Concept", "DelonixRegia::8nq2w"], 
                    Entity["Concept", "DelphinapterusLeucas::99ngb"], 
                    Entity["Concept", "Dendrobium::2v36c"], 
                    Entity["Concept", "DendroicaCoronata::bt9rz"], 
                    Entity["Concept", "DendroicaPetechia::xx2x2"], 
                    Entity["Concept", "DenisoniaSuperba::w8kjr"], 
                    Entity["Concept", "DentalPlate::j97md"], 
                    Entity["Concept", "DermochelysCoriacea::ypc4b"], 
                    Entity["Concept", "Derrick::nvw77"], 
                    Entity["Concept", "Desert::44kv3"], 
                    Entity["Concept", "DesertIguana::89b3x"], 
                    Entity["Concept", "DesertSunflower::g3q6p"], 
                    Entity["Concept", "DesertTortoise::jsm9w"], 
                    Entity["Concept", "Deutzia::446q7"], 
                    Entity["Concept", "DeviledEgg::k9523"], 
                    Entity["Concept", "Devilfish::56ymn"], 
                    Entity["Concept", "DevilLily::4y38d"], 
                    Entity["Concept", "DevilsWeed::7y289"], 
                    Entity["Concept", "Dhow::gh7jb"], 
                    Entity["Concept", "Dial::952x2"], 
                    Entity["Concept", "DialogBox::nqmj9"], 
                    Entity["Concept", "DialPhone::3j2f6"], 
                    Entity["Concept", "DiamondbackTerrapin::2b479"], 
                    Entity["Concept", "DianthusBarbatus::kw8n5"], 
                    Entity["Concept", "DianthusChinensisHeddewigii::7khfj"], 
                    Entity["Concept", "DianthusDeltoides::tp39x"], 
                    Entity["Concept", "Diaper::rzs4y"], 
                    Entity["Concept", "Diapheromera::wpb68"], 
                    Entity["Concept", "Dicamptodon::2p34r"], 
                    Entity["Concept", "DicentraCucullaria::82hrt"], 
                    Entity["Concept", "DicentraSpectabilis::trds2"], 
                    Entity["Concept", "DicksoniaAntarctica::w42q3"], 
                    Entity["Concept", "DigitalClock::hm3x5"], 
                    Entity["Concept", "DigitalWatch::v274r"], 
                    Entity["Concept", "Dik-dik::54qs9"], 
                    Entity["Concept", "DillPickle::7czzn"], 
                    Entity["Concept", "DillWeed::8747b"], 
                    Entity["Concept", "DimocarpusLongan::k4hbj"], 
                    Entity["Concept", "Dinette::wyp77"], 
                    Entity["Concept", "Dining-room::5jgkb"], 
                    Entity["Concept", "DinnerTable::7662t"], 
                    Entity["Concept", "DiodonHystrix::n539q"], 
                    Entity["Concept", "DiomedeaExulans::c6k7w"], 
                    Entity["Concept", "DionaeaMuscipula::dtb45"], 
                    Entity["Concept", "Dioon::g65j7"], 
                    Entity["Concept", "DiospyrosKaki::sqn25"], 
                    Entity["Concept", "Dipper::p28qc"], 
                    Entity["Concept", "Dirndl::rbz8c"], 
                    Entity["Concept", "Disa::2p6jw"], 
                    Entity["Concept", "DishAerial::bkh5h"], 
                    Entity["Concept", "DishRack::qq224"], 
                    Entity["Concept", "DishWasher::px58r"], 
                    Entity["Concept", "DiskClutch::yzj3q"], 
                    Entity["Concept", "Diskette::fp826"], 
                    Entity["Concept", "DistributorCap::f4y3d"], 
                    Entity["Concept", "DitchFern::j8sgm"], 
                    Entity["Concept", "Diver::224c5"], 
                    Entity["Concept", "DivingDress::y8tp4"], 
                    Entity["Concept", "Doberman::zgqf4"], 
                    Entity["Concept", "DockingFacility::f42zy"], 
                    Entity["Concept", "DogHouse::mpn6r"], 
                    Entity["Concept", "DogSled::34t8q"], 
                    Entity["Concept", "Dogs-toothCheck::2g572"], 
                    Entity["Concept", "DogViolet::4b726"], 
                    Entity["Concept", "Doily::w45vm"], 
                    Entity["Concept", "Dolmas::92qhy"], 
                    Entity["Concept", "DomesticCat::jpx55"], 
                    Entity["Concept", "Donjon::vh559"], 
                    Entity["Concept", "Donut::332td"], 
                    Entity["Concept", "Door::3fzr9"], 
                    Entity["Concept", "Doorknocker::776hy"], 
                    Entity["Concept", "DoorLatch::268jn"], 
                    Entity["Concept", "Door::px47t"], 
                    Entity["Concept", "Doorway::34g6p"], 
                    Entity["Concept", "Dormer::k8s27"], 
                    Entity["Concept", "DorotheanthusBellidiformis::d3jvh"], 
                    Entity["Concept", "DoubleBed::m57pc"], 
                    Entity["Concept", "DoubleDoor::h3vk2"], 
                    Entity["Concept", "Doublet::spd47"], 
                    Entity["Concept", "DouglasHemlock::fn7nb"], 
                    Entity["Concept", "Dovekie::6p8b6"], 
                    Entity["Concept", "DovesFootGeranium::qq3q8"], 
                    Entity["Concept", "Dovetail::m9387"], 
                    Entity["Concept", "DownyWoodpecker::x4724"], 
                    Entity["Concept", "DraftingTable::mfcf4"], 
                    Entity["Concept", "Dragee::5x423"], 
                    Entity["Concept", "Dragger::jbp7n"], 
                    Entity["Concept", "Dragonet::frhy2"], 
                    Entity["Concept", "Dragonfly::7s252"], 
                    Entity["Concept", "DragonLizard::s68v6"], 
                    Entity["Concept", "Drawer::9csq7"], 
                    Entity["Concept", "DreissenaPolymorpha::syy79"], 
                    Entity["Concept", "Dresser::3528x"], 
                    Entity["Concept", "DressHat::yz2ft"], 
                    Entity["Concept", "DressingTable::pqrw2"], 
                    Entity["Concept", "DrillingRig::28rrt"], 
                    Entity["Concept", "DrinkingFountain::5ydsw"], 
                    Entity["Concept", "DrivingRange::ms4vs"], 
                    Entity["Concept", "DrivingWheel::3dxmz"], 
                    Entity["Concept", "DromaiusNovaehollandiae::55fcb"], 
                    Entity["Concept", "DroppedEgg::97z84"], 
                    Entity["Concept", "Drosophila::qp482"], 
                    Entity["Concept", "Drumhead::mcjn2"], 
                    Entity["Concept", "DryasOctopetala::5g2v6"], 
                    Entity["Concept", "DryFly::gc3yb"], 
                    Entity["Concept", "DryopterisFilix-mas::d6647"], 
                    Entity["Concept", "DryopterisMarginalis::w5qrb"], 
                    Entity["Concept", "DryopterisOreopteris::rc6jr"], 
                    Entity["Concept", "DryopterisPhegopteris::2rgtz"], 
                    Entity["Concept", "Dry-stoneWall::34n59"], 
                    Entity["Concept", "Duck-billedPlatypus::b8867"], 
                    Entity["Concept", "DuffelBag::jfzg6"], 
                    Entity["Concept", "Dugong::ss39b"], 
                    Entity["Concept", "Dulcimer::9g5zf"], 
                    Entity["Concept", "Dumbbell::qjh33"], 
                    Entity["Concept", "DumetellaCarolinensis::395sk"], 
                    Entity["Concept", "Dumper::rm443"], 
                    Entity["Concept", "Dumpsite::cw88k"], 
                    Entity["Concept", "Dumpster::696r5"], 
                    Entity["Concept", "Dune::255v6"], 
                    Entity["Concept", "Dunlin::4mj52"], 
                    Entity["Concept", "Dunnock::r43s6"], 
                    Entity["Concept", "Durian::894w2"], 
                    Entity["Concept", "DurianTree::3pr5k"], 
                    Entity["Concept", "DuskySalamander::hshp6"], 
                    Entity["Concept", "Dustcart::2bbpr"], 
                    Entity["Concept", "Dustpan::5t3z3"], 
                    Entity["Concept", "DutchCase-knifeBean::d4362"], 
                    Entity["Concept", "DutchClover::nyt23"], 
                    Entity["Concept", "DutchElm::n9v2q"], 
                    Entity["Concept", "DutchOven::f8685"], 
                    Entity["Concept", "DutchOven::qy3dv"], 
                    Entity["Concept", "DwarfBanana::8p7n7"], 
                    Entity["Concept", "DwarfMountainPine::p7kc7"], 
                    Entity["Concept", "DwarfPhlox::w76km"], 
                    Entity["Concept", "DwarfTulip::mgff6"], 
                    Entity["Concept", "Dyers-broom::m4ypk"], 
                    Entity["Concept", "DyersWoad::p2dw8"], 
                    Entity["Concept", "EaclesImperialis::pyj95"], 
                    Entity["Concept", "Earflap::256g4"], 
                    Entity["Concept", "EarlessLizard::97y66"], 
                    Entity["Concept", "EarlyPurpleOrchid::cf73z"], 
                    Entity["Concept", "EarlySpiderOrchid::qb4f6"], 
                    Entity["Concept", "Earmuff::cfp8x"], 
                    Entity["Concept", "Earplug::dcs7g"], 
                    Entity["Concept", "Earplug::fct3t"], 
                    Entity["Concept", "Earring::p6535"], 
                    Entity["Concept", "Earth-closet::qd56h"], 
                    Entity["Concept", "Earthenware::875r3"], 
                    Entity["Concept", "Earth::h8krm"], 
                    Entity["Concept", "Easel::55c39"], 
                    Entity["Concept", "EasterDaisy::2f36b"], 
                    Entity["Concept", "EasterEgg::64cmg"], 
                    Entity["Concept", "EasternChimpanzee::r74nz"], 
                    Entity["Concept", "EasternChipmunk::g95t6"], 
                    Entity["Concept", "EasternCoralSnake::325pn"], 
                    Entity["Concept", "EasternCottontail::d74j9"], 
                    Entity["Concept", "EasternCottonwood::q74cr"], 
                    Entity["Concept", "EasternFenceLizard::5qt37"], 
                    Entity["Concept", "EasternFoxSquirrel::8g9v6"], 
                    Entity["Concept", "EasternGraySquirrel::69qd5"], 
                    Entity["Concept", "EasternHopHornbeam::xbhj4"], 
                    Entity["Concept", "EasternKingbird::gg4f3"], 
                    Entity["Concept", "EasternLowlandGorilla::x3jk3"], 
                    Entity["Concept", "EasternMeadowlark::94j4n"], 
                    Entity["Concept", "EasternNarrow-mouthedToad::d8m56"], 
                    Entity["Concept", "EasternRed-backedSalamander::3nscb"], 
                    Entity["Concept", "EasternSpruce::99n26"], 
                    Entity["Concept", "Eatery::f73dy"], 
                    Entity["Concept", "EcballiumElaterium::g4crv"], 
                    Entity["Concept", "EchinocactusGrusonii::m2g3t"], 
                    Entity["Concept", "EchinusEsculentus::xw9q7"], 
                    Entity["Concept", "Echogram::dc9h9"], 
                    Entity["Concept", "Edelweiss::62cs4"], 
                    Entity["Concept", "EdibleBanana::c4254"], 
                    Entity["Concept", "EdibleMussel::kbt8x"], 
                    Entity["Concept", "EdibleSnail::7wx97"], 
                    Entity["Concept", "Eft::t3bv7"], 
                    Entity["Concept", "EggRoll::9xj3c"], 
                    Entity["Concept", "EggsBenedict::r55d8"], 
                    Entity["Concept", "Eggs::j9vgc"], 
                    Entity["Concept", "Eggwhisk::yptm8"], 
                    Entity["Concept", "EggYolk::dxq54"], 
                    Entity["Concept", "EgrettaCaerulea::9965c"], 
                    Entity["Concept", "EgrettaGarzetta::z8r5n"], 
                    Entity["Concept", "EgrettaThula::x9964"], 
                    Entity["Concept", "EgyptianVulture::gmkt2"], 
                    Entity["Concept", "EichhorniaCrassipes::m38gx"], 
                    Entity["Concept", "Eider::69g47"], 
                    Entity["Concept", "EightBall::ftn78"], 
                    Entity["Concept", "EjectionSeat::zrf49"], 
                    Entity["Concept", "ElagatisBipinnulata::xf2bm"], 
                    Entity["Concept", "ElanoidesForficatus::498w3"], 
                    Entity["Concept", "ElanusLeucurus::4tj3m"], 
                    Entity["Concept", "ElasticBand::5c995"], 
                    Entity["Concept", "ElbowPad::845g2"], 
                    Entity["Concept", "Elderberry::8d773"], 
                    Entity["Concept", "ElectricalRelay::765d3"], 
                    Entity["Concept", "ElectricalSwitch::5gnjt"], 
                    Entity["Concept", "ElectricBattery::m666h"], 
                    Entity["Concept", "ElectricDrill::3t24j"], 
                    Entity["Concept", "ElectricEel::x4785"], 
                    Entity["Concept", "ElectricFan::n79z5"], 
                    Entity["Concept", "ElectricGuitar::9pkmr"], 
                    Entity["Concept", "ElectricHammer::xr83q"], 
                    Entity["Concept", "ElectricLight::n7mkr"], 
                    Entity["Concept", "ElectricMeter::4w545"], 
                    Entity["Concept", "ElectricOrgan::544h8"], 
                    Entity["Concept", "ElectricPig::t7p29"], 
                    Entity["Concept", "ElectricRange::9gtc2"], 
                    Entity["Concept", "ElectricRazor::nmkt4"], 
                    Entity["Concept", "ElectricToothbrush::r3763"], 
                    Entity["Concept", "Electrocardiograph::c7bq9"], 
                    Entity["Concept", "ElectronicBalance::5snxr"], 
                    Entity["Concept", "ElephantSeal::8vcmx"], 
                    Entity["Concept", "Elevator::2v7fm"], 
                    Entity["Concept", "ElevatorCar::952n3"], 
                    Entity["Concept", "ElevatorShaft::3qvj9"], 
                    Entity["Concept", "ElfCup::6fhxh"], 
                    Entity["Concept", "Elkhound::62q39"], 
                    Entity["Concept", "Elk-wood::274y8"], 
                    Entity["Concept", "ElongateLeaf::27cx9"], 
                    Entity["Concept", "EmberizaCitrinella::kx2d7"], 
                    Entity["Concept", "EmberizaHortulana::7p279"], 
                    Entity["Concept", "EmberizaSchoeniclus::78bg2"], 
                    Entity["Concept", "EmbroideryFrame::667hy"], 
                    Entity["Concept", "EmeraldCreeper::z8j92"], 
                    Entity["Concept", "EmeryWheel::2h3df"], 
                    Entity["Concept", "Emmental::j243h"], 
                    Entity["Concept", "EmperorMoth::8528k"], 
                    Entity["Concept", "Enamelware::n2zqf"], 
                    Entity["Concept", "Encephalartos::ks4p7"], 
                    Entity["Concept", "EncycliaTampensis::5gqy9"], 
                    Entity["Concept", "EncycliaVenosa::2873n"], 
                    Entity["Concept", "EngineRoom::89p36"], 
                    Entity["Concept", "EnglishCavalrySaddle::g8shx"], 
                    Entity["Concept", "EnglishElm::5cdy3"], 
                    Entity["Concept", "EnglishLavender::w4s47"], 
                    Entity["Concept", "EnglishMuffin::xsr56"], 
                    Entity["Concept", "EnglishPrimrose::96j23"], 
                    Entity["Concept", "EnglishSetter::ps793"], 
                    Entity["Concept", "EnglishSparrow::2w45v"], 
                    Entity["Concept", "EnglishSpringer::f4dq6"], 
                    Entity["Concept", "EnglishYew::z5d64"], 
                    Entity["Concept", "EnhydraLutris::7d589"], 
                    Entity["Concept", "Entablature::66n65"], 
                    Entity["Concept", "Entellus::395b7"], 
                    Entity["Concept", "EntertainmentCenter::mg549"], 
                    Entity["Concept", "Envelope::c722j"], 
                    Entity["Concept", "Envelope::zmg8p"], 
                    Entity["Concept", "Epee::t8vg6"], 
                    Entity["Concept", "EphippiorhynchusSenegalensis::4b69b"], 
                    Entity["Concept", "EpilobiumAngustifolium::672zd"], 
                    Entity["Concept", "EpipactisGigantea::2822d"], 
                    Entity["Concept", "EpipactisHelleborine::snty4"], 
                    Entity["Concept", "Epiphyllum::76yj6"], 
                    Entity["Concept", "EpipremnumAureum::g382k"], 
                    Entity["Concept", "Equaliser::k2286"], 
                    Entity["Concept", "Equatorial::4mf5p"], 
                    Entity["Concept", "EquisetumHyemale::pyym8"], 
                    Entity["Concept", "EquusCaballusPrzevalskii::s625w"], 
                    Entity["Concept", "EquusGrevyi::tkv46"], 
                    Entity["Concept", "EquusZebraZebra::4283j"], 
                    Entity["Concept", "EranthisHyemalis::9gc45"], 
                    Entity["Concept", "ErechtitesHieracifolia::s53xy"], 
                    Entity["Concept", "EretmochelysImbricata::8pz8w"], 
                    Entity["Concept", "EricaArborea::8s556"], 
                    Entity["Concept", "EricaCarnea::6nw3h"], 
                    Entity["Concept", "EricaCinerea::rb6xc"], 
                    Entity["Concept", "ErigeronAurantiacus::48m26"], 
                    Entity["Concept", "ErigeronPhiladelphicus::v4744"], 
                    Entity["Concept", "ErinaceusEuropaeus::w9py5"], 
                    Entity["Concept", "EriobotryaJaponica::43d7r"], 
                    Entity["Concept", "ErithacusRubecola::h5f49"], 
                    Entity["Concept", "ErlenmeyerFlask::bq3vr"], 
                    Entity["Concept", "Ern::jpsr9"], 
                    Entity["Concept", "EroliaMinutilla::b28ky"], 
                    Entity["Concept", "EryngiumMaritimum::65zy9"], 
                    Entity["Concept", "ErythrinaIndica::m3xmn"], 
                    Entity["Concept", "ErythrinaVespertilio::962s3"], 
                    Entity["Concept", "ErythrocebusPatas::949v6"], 
                    Entity["Concept", "ErythroniumCalifornicum::78g4t"], 
                    Entity["Concept", "ErythroniumGrandiflorum::7566b"], 
                    Entity["Concept", "EschrichtiusGibbosus::2c8q9"], 
                    Entity["Concept", "Escritoire::pfmc4"], 
                    Entity["Concept", "EskimoDog::2vm97"], 
                    Entity["Concept", "EsoxLucius::3s3s7"], 
                    Entity["Concept", "EsoxMasquinongy::c3kb4"], 
                    Entity["Concept", "Esparcet::7hmp3"], 
                    Entity["Concept", "EspressoMaker::z42xs"], 
                    Entity["Concept", "EthernetCable::h5k9t"], 
                    Entity["Concept", "EucalyptusAmygdalina::g4ysf"], 
                    Entity["Concept", "EucalyptusCalophylla::2n8r5"], 
                    Entity["Concept", "EucalyptusCoriacea::63fm6"], 
                    Entity["Concept", "EucalyptusRegnans::29qqd"], 
                    Entity["Concept", "EugeniaCorynantha::f4h48"], 
                    Entity["Concept", "EugeniaUniflora::9w4mx"], 
                    Entity["Concept", "EumecesSkiltonianus::g2753"], 
                    Entity["Concept", "EumetopiasJubatus::w7jz4"], 
                    Entity["Concept", "EuonymusAmericanus::9654x"], 
                    Entity["Concept", "EuonymusAtropurpureus::d3bvn"], 
                    Entity["Concept", "EuopeanHoopoe::hxy53"], 
                    Entity["Concept", "EupatoriumMaculatum::6yn92"], 
                    Entity["Concept", "EupatoriumPerfoliatum::b8y57"], 
                    Entity["Concept", "EupatoriumPurpureum::486t3"], 
                    Entity["Concept", "EuphagusCarilonus::x359x"], 
                    Entity["Concept", "Euphonium::t6x7q"], 
                    Entity["Concept", "EuphorbiaAmygdaloides::6zpxg"], 
                    Entity["Concept", "EuphorbiaMarginata::knxm6"], 
                    Entity["Concept", "EurasianOtter::33j23"], 
                    Entity["Concept", "EuropeanBlackbird::3q593"], 
                    Entity["Concept", "EuropeanBlackCurrant::9694q"], 
                    Entity["Concept", "EuropeanBlackGrouse::b9265"], 
                    Entity["Concept", "EuropeanBlueberry::kzyt8"], 
                    Entity["Concept", "EuropeanBrooklime::zsy56"], 
                    Entity["Concept", "EuropeanCatfish::236c6"], 
                    Entity["Concept", "EuropeanCurlew::7762d"], 
                    Entity["Concept", "EuropeanFieldElm::nm844"], 
                    Entity["Concept", "EuropeanFireSalamander::t6v33"], 
                    Entity["Concept", "EuropeanGallinule::c7jfx"], 
                    Entity["Concept", "EuropeanHare::kgq4j"], 
                    Entity["Concept", "EuropeanLadiesTresses::32bqs"], 
                    Entity["Concept", "EuropeanMagpie::z7842"], 
                    Entity["Concept", "EuropeanMountainAsh::2g528"], 
                    Entity["Concept", "EuropeanNuthatch::8tnr9"], 
                    Entity["Concept", "EuropeanNutPine::ky8mm"], 
                    Entity["Concept", "EuropeanOliveTree::3dnxp"], 
                    Entity["Concept", "EuropeanPerch::nr688"], 
                    Entity["Concept", "EuropeanQuakingAspen::94w29"], 
                    Entity["Concept", "EuropeanRabbit::5325f"], 
                    Entity["Concept", "EuropeanRaspberry::3b9br"], 
                    Entity["Concept", "EuropeanRedElder::382z9"], 
                    Entity["Concept", "EuropeanShrike::9786b"], 
                    Entity["Concept", "EuropeanSpiderCrab::64k92"], 
                    Entity["Concept", "EuropeanTortoise::548zs"], 
                    Entity["Concept", "EuropeanTurkeyOak::mv8h7"], 
                    Entity["Concept", "EuropeanWhiteLily::j8v4c"], 
                    Entity["Concept", "EuropeanWolfSpider::sdts3"], 
                    Entity["Concept", "EustomaGrandiflorum::29tp3"], 
                    Entity["Concept", "EuterpeOleracea::3296m"], 
                    Entity["Concept", "EveningGrosbeak::jn55r"], 
                    Entity["Concept", "EveningLychnis::pj37v"], 
                    Entity["Concept", "EvergreenWinterberry::bg889"], 
                    Entity["Concept", "Ewer::w6672"], 
                    Entity["Concept", "Excavation::x8kvh"], 
                    Entity["Concept", "ExerciseBike::72h39"], 
                    Entity["Concept", "Exmoor::c38bq"], 
                    Entity["Concept", "ExtensionCord::k4824"], 
                    Entity["Concept", "Eyeglasses::f7686"], 
                    Entity["Concept", "Eyeglass::tpc34"], 
                    Entity["Concept", "EyeMask::52fc2"], 
                    Entity["Concept", "Eyepatch::3358g"], 
                    Entity["Concept", "Facade::32gmh"], 
                    Entity["Concept", "Factory::n4m6r"], 
                    Entity["Concept", "FagusPendula::ftk9n"], 
                    Entity["Concept", "Fair-maids-of-France::x8433"], 
                    Entity["Concept", "Fairway::5s4g5"], 
                    Entity["Concept", "FairyBluebird::f2wvp"], 
                    Entity["Concept", "FairyLight::2kvqk"], 
                    Entity["Concept", "FalcoColumbarius::6n935"], 
                    Entity["Concept", "FalcoRusticolus::7qg84"], 
                    Entity["Concept", "FalcoSubbuteo::q62xt"], 
                    Entity["Concept", "FalcoTinnunculus::b9969"], 
                    Entity["Concept", "FallArmyworm::zgqx9"], 
                    Entity["Concept", "Fall-bloomingHydrangea::8g3gg"], 
                    Entity["Concept", "FallWebworm::6whpt"], 
                    Entity["Concept", "FalseDogwood::5888y"], 
                    Entity["Concept", "FalseLupine::km4xd"], 
                    Entity["Concept", "FanBlade::45p75"], 
                    Entity["Concept", "FanjetEngine::8t5dm"], 
                    Entity["Concept", "Fanweed::z33w6"], 
                    Entity["Concept", "Faucet::92d79"], 
                    Entity["Concept", "Fawn::4x83j"], 
                    Entity["Concept", "FeabaneMullet::ky88g"], 
                    Entity["Concept", "FeatherBall::dq5v6"], 
                    Entity["Concept", "FeatherBoa::c94h7"], 
                    Entity["Concept", "Fedora::bqh65"], 
                    Entity["Concept", "FeedingBottle::6z3y5"], 
                    Entity["Concept", "FeedingChair::r5pt6"], 
                    Entity["Concept", "FelisChaus::33y75"], 
                    Entity["Concept", "FelisManul::c4fp8"], 
                    Entity["Concept", "FelisOnca::jh7tq"], 
                    Entity["Concept", "FelisPardalis::64wb4"], 
                    Entity["Concept", "FelisServal::pc9s5"], 
                    Entity["Concept", "FelisWiedi::43vr5"], 
                    Entity["Concept", "Felucca::9378z"], 
                    Entity["Concept", "FencersMask::f9wwp"], 
                    Entity["Concept", "Fennel::r54jh"], 
                    Entity["Concept", "FenOrchid::4749f"], 
                    Entity["Concept", "FernRhapis::6hmn8"], 
                    Entity["Concept", "Ferret::s9q8z"], 
                    Entity["Concept", "FerrisWheel::4tg6j"], 
                    Entity["Concept", "Ferrule::ydx5v"], 
                    Entity["Concept", "Fescue::3n8dm"], 
                    Entity["Concept", "Fez::98s7x"], 
                    Entity["Concept", "FicusAurea::r9483"], 
                    Entity["Concept", "FiddlerCrab::4mt9n"], 
                    Entity["Concept", "Field::3w493"], 
                    Entity["Concept", "FieldArtillery::cq795"], 
                    Entity["Concept", "Fieldfare::4v272"], 
                    Entity["Concept", "FieldHockeyBall::6fx8x"], 
                    Entity["Concept", "FieldLens::4tdmt"], 
                    Entity["Concept", "FieldPansy::9p5j7"], 
                    Entity["Concept", "FieldScabious::pgc4m"], 
                    Entity["Concept", "FieldSparrow::5946r"], 
                    Entity["Concept", "FieldSpeedwell::jxz53"], 
                    Entity["Concept", "FiestaFlower::q385j"], 
                    Entity["Concept", "Fig::d3p6f"], 
                    Entity["Concept", "Figeater::4np38"], 
                    Entity["Concept", "FigureSkate::tgqh8"], 
                    Entity["Concept", "Filament::5w9zb"], 
                    Entity["Concept", "FileFolder::wq3fp"], 
                    Entity["Concept", "FillingStation::c4d3x"], 
                    Entity["Concept", "FilmFern::5438b"], 
                    Entity["Concept", "Finger::f4343"], 
                    Entity["Concept", "Fingerprint::gd3mk"], 
                    Entity["Concept", "FireAnt::m624h"], 
                    Entity["Concept", "FireBeetle::t3348"], 
                    Entity["Concept", "FireBell::c8tfs"], 
                    Entity["Concept", "Fireboat::xf64t"], 
                    Entity["Concept", "Firedrake::2t6c9"], 
                    Entity["Concept", "FireEngine::zsvx8"], 
                    Entity["Concept", "Firehouse::72spn"], 
                    Entity["Concept", "FirePink::zj86y"], 
                    Entity["Concept", "FireSalamander::k4gr5"], 
                    Entity["Concept", "FireScreen::665b5"], 
                    Entity["Concept", "Fireside::2hv85"], 
                    Entity["Concept", "FireThorn::g6pdx"], 
                    Entity["Concept", "FiringRange::8zf95"], 
                    Entity["Concept", "First-aidKit::39wfg"], 
                    Entity["Concept", "FishAndChips::hj3hc"], 
                    Entity["Concept", "FishEagle::yrv87"], 
                    Entity["Concept", "FishingEagle::479m6"], 
                    Entity["Concept", "FishingPole::g9568"], 
                    Entity["Concept", "Flagon::k253t"], 
                    Entity["Concept", "Flag::w2299"], 
                    Entity["Concept", "Flake::3656z"], 
                    Entity["Concept", "Flamingo::28r7m"], 
                    Entity["Concept", "FlamingPoppy::pbn8b"], 
                    Entity["Concept", "Flan::z4mr6"], 
                    Entity["Concept", "FlashBulb::n52mt"], 
                    Entity["Concept", "FlatBench::4y22t"], 
                    Entity["Concept", "Flat-coatedRetriever::866mk"], 
                    Entity["Concept", "Flathead::5hkk7"], 
                    Entity["Concept", "Flathead::5ms79"], 
                    Entity["Concept", "FlatheadCatfish::658g4"], 
                    Entity["Concept", "Flat-leafParsley::q56x5"], 
                    Entity["Concept", "FlatPanelDisplay::6hqw5"], 
                    Entity["Concept", "Flats::r36b3"], 
                    Entity["Concept", "Flax::znxv2"], 
                    Entity["Concept", "FleaBeetle::3794s"], 
                    Entity["Concept", "FleshFly::qb52h"], 
                    Entity["Concept", "Fleur-de-lys::9njtt"], 
                    Entity["Concept", "FlightDeck::bs5yd"], 
                    Entity["Concept", "FlindersiaAustralis::xv4tg"], 
                    Entity["Concept", "Flinthead::p5m53"], 
                    Entity["Concept", "Flip-flop::3m4br"], 
                    Entity["Concept", "Floatplane::5wd4t"], 
                    Entity["Concept", "Floe::38bf9"], 
                    Entity["Concept", "FloorJoist::3t382"], 
                    Entity["Concept", "FloorLamp::b77v8"], 
                    Entity["Concept", "FloridaGallinule::7qjyx"], 
                    Entity["Concept", "FloristsWillow::dvr6d"], 
                    Entity["Concept", "Floss::6cbrs"], 
                    Entity["Concept", "Flounder::9r5cv"], 
                    Entity["Concept", "FlowerGarden::z2869"], 
                    Entity["Concept", "FloweringHazel::h5cyx"], 
                    Entity["Concept", "FloweringMaple::2c928"], 
                    Entity["Concept", "FlowerPetal::ds674"], 
                    Entity["Concept", "Fluegelhorn::9p72b"], 
                    Entity["Concept", "FluorescentLamp::4z25p"], 
                    Entity["Concept", "FlushToilet::c8456"], 
                    Entity["Concept", "FlyingBoat::t75c7"], 
                    Entity["Concept", "FlyingFox::388fb"], 
                    Entity["Concept", "FlyOrchid::67pxv"], 
                    Entity["Concept", "Flyswat::mgs7t"], 
                    Entity["Concept", "FoeniculumVulgare::994f2"], 
                    Entity["Concept", "FoetidPothos::5933j"], 
                    Entity["Concept", "Foil::xsy6p"], 
                    Entity["Concept", "FoodProcessor::2q437"], 
                    Entity["Concept", "FootballHelmet::c6twc"], 
                    Entity["Concept", "FootballStadium::w5x75"], 
                    Entity["Concept", "Footrest::s8q86"], 
                    Entity["Concept", "ForestTentCaterpillar::74fkh"], 
                    Entity["Concept", "Forget-me-not::h7226"], 
                    Entity["Concept", "Fork::c4c8f"], 
                    Entity["Concept", "Forklift::b2dfv"], 
                    Entity["Concept", "FormalGarden::3y2cq"], 
                    Entity["Concept", "FormicaRufa::3gxdn"], 
                    Entity["Concept", "FormicaSanguinea::55w97"], 
                    Entity["Concept", "Forsythia::d7277"], 
                    Entity["Concept", "FortifiedWine::9y8m8"], 
                    Entity["Concept", "Fothergilla::4335d"], 
                    Entity["Concept", "Fountain::4sk7q"], 
                    Entity["Concept", "FountainGrass::jhb99"], 
                    Entity["Concept", "FountainPen::r2vw4"], 
                    Entity["Concept", "Foxberry::4x323"], 
                    Entity["Concept", "FragrantOrchid::z5494"], 
                    Entity["Concept", "FragrantWaterLily::hh7jj"], 
                    Entity["Concept", "Frame::27k2n"], 
                    Entity["Concept", "FrancoaRamosa::wkc2f"], 
                    Entity["Concept", "FrankfurterBun::b84z3"], 
                    Entity["Concept", "FrankincensePine::d9858"], 
                    Entity["Concept", "FraterculaCorniculata::69x43"], 
                    Entity["Concept", "FraxinusAmericana::2mwn4"], 
                    Entity["Concept", "FraxinusLatifolia::p6zfv"], 
                    Entity["Concept", "FraxinusOrnus::4rf7x"], 
                    Entity["Concept", "FraxinusTexensis::kd3z5"], 
                    Entity["Concept", "FraxinusTomentosa::rp8qt"], 
                    Entity["Concept", "Freewheel::48d95"], 
                    Entity["Concept", "Freighter::968s8"], 
                    Entity["Concept", "FrenchBulldog::3jg82"], 
                    Entity["Concept", "FrenchHorn::rm367"], 
                    Entity["Concept", "FrenchMarigold::7ny7z"], 
                    Entity["Concept", "FrenchToast::5y3db"], 
                    Entity["Concept", "FriedEgg::49snd"], 
                    Entity["Concept", "FrigateBird::844j6"], 
                    Entity["Concept", "Frisbee::9h9t9"], 
                    Entity["Concept", "Frittata::3rg4x"], 
                    Entity["Concept", "Frogfish::378r9"], 
                    Entity["Concept", "Froghopper::7g6w5"], 
                    Entity["Concept", "Frogmouth::km243"], 
                    Entity["Concept", "FrontProjector::4y896"], 
                    Entity["Concept", "FrontRoom::773p3"], 
                    Entity["Concept", "FuelGauge::86hh8"], 
                    Entity["Concept", "Fuji::jqr4s"], 
                    Entity["Concept", "FulicaAtra::834gk"], 
                    Entity["Concept", "Fulmar::2fpjc"], 
                    Entity["Concept", "FundulusMajalis::2463q"], 
                    Entity["Concept", "Furze::4t243"], 
                    Entity["Concept", "GaleocerdoCuvieri::h7238"], 
                    Entity["Concept", "GaleopsisTetrahit::dzk3q"], 
                    Entity["Concept", "GaliumVerum::96dyq"], 
                    Entity["Concept", "GallinagoGallinago::9g6jk"], 
                    Entity["Concept", "GallinagoMedia::5s745"], 
                    Entity["Concept", "GallinulaChloropus::h8gqz"], 
                    Entity["Concept", "Gallus::627y8"], 
                    Entity["Concept", "Gamba::3vw39"], 
                    Entity["Concept", "GamblingCasino::6yv82"], 
                    Entity["Concept", "GambusiaAffinis::99r7d"], 
                    Entity["Concept", "Garage::m5448"], 
                    Entity["Concept", "GardenBalm::f4s42"], 
                    Entity["Concept", "GardenersDelight::tbb52"], 
                    Entity["Concept", "GardenForget-me-not::r5ynq"], 
                    Entity["Concept", "GardenNasturtium::6fsqm"], 
                    Entity["Concept", "GardenPea::jn6hk"], 
                    Entity["Concept", "GardenRhubarb::8njf6"], 
                    Entity["Concept", "Garfish::p9w7b"], 
                    Entity["Concept", "Garget::99c58"], 
                    Entity["Concept", "GarryOak::yrd6t"], 
                    Entity["Concept", "GasGage::j9554"], 
                    Entity["Concept", "GasHelmet::23k79"], 
                    Entity["Concept", "GasMeter::2q6zx"], 
                    Entity["Concept", "GasolinePump::wk2nk"], 
                    Entity["Concept", "GasRing::9sskg"], 
                    Entity["Concept", "Gavial::f4qny"], 
                    Entity["Concept", "GazaniaRigens::hm7rv"], 
                    Entity["Concept", "Gazebo::kgq3t"], 
                    Entity["Concept", "GazellaThomsoni::j5cmv"], 
                    Entity["Concept", "GazelleHound::7k449"], 
                    Entity["Concept", "Gearset::jy5rq"], 
                    Entity["Concept", "GemClip::34d4y"], 
                    Entity["Concept", "Gemsbok::6552p"], 
                    Entity["Concept", "Genet::775k8"], 
                    Entity["Concept", "GentianaAcaulis::47k49"], 
                    Entity["Concept", "GentianaClausa::7kk8q"], 
                    Entity["Concept", "GentianaLutea::d625g"], 
                    Entity["Concept", "GeodesicDome::3z9g7"], 
                    Entity["Concept", "Geoduck::h95p3"], 
                    Entity["Concept", "GeorgiaPine::3y635"], 
                    Entity["Concept", "GeraniumMaculatum::kr853"], 
                    Entity["Concept", "GeraniumPratense::2cdkk"], 
                    Entity["Concept", "GeraniumRobertianum::3996g"], 
                    Entity["Concept", "Gerenuk::8949v"], 
                    Entity["Concept", "GermanChamomile::jpp74"], 
                    Entity["Concept", "GermanShort-hairedPointer::k3297"], 
                    Entity["Concept", "Geta::3r9c9"], 
                    Entity["Concept", "GeumTriflorum::s9xxg"], 
                    Entity["Concept", "GiantAnteater::y96st"], 
                    Entity["Concept", "GiantConch::f3kfh"], 
                    Entity["Concept", "GiantGranadilla::p9925"], 
                    Entity["Concept", "GiantHornet::r4yrx"], 
                    Entity["Concept", "GiantKangaroo::45dx4"], 
                    Entity["Concept", "GiantSalamander::599jh"], 
                    Entity["Concept", "GiantSchnauzer::8fwv6"], 
                    Entity["Concept", "GiantSunflower::4y488"], 
                    Entity["Concept", "GiantWaterBug::fnz6r"], 
                    Entity["Concept", "Gibbon::7yqsr"], 
                    Entity["Concept", "Gig::gn638"], 
                    Entity["Concept", "GilaMonster::k8q26"], 
                    Entity["Concept", "Gingko::ky9mp"], 
                    Entity["Concept", "GinglymostomaCirratum::8gyc5"], 
                    Entity["Concept", "Ginseng::8675h"], 
                    Entity["Concept", "GipsyMoth::8kgb3"], 
                    Entity["Concept", "Glasshouse::qxjm6"], 
                    Entity["Concept", "GlauciumFlavum::fd5qs"], 
                    Entity["Concept", "GleditsiaTriacanthos::28fq9"], 
                    Entity["Concept", "GlobalPositioningSystem::x6392"], 
                    Entity["Concept", "GlobeAmaranth::vzj8x"], 
                    Entity["Concept", "Globefish::z6448"], 
                    Entity["Concept", "GlobeThistle::b8726"], 
                    Entity["Concept", "Glockenspiel::p75rx"], 
                    Entity["Concept", "GloveCompartment::7y7bd"], 
                    Entity["Concept", "GloxiniaPerennis::384j4"], 
                    Entity["Concept", "Gnu::y7788"], 
                    Entity["Concept", "GoaBeanVine::z6xfx"], 
                    Entity["Concept", "Goalpost::24v65"], 
                    Entity["Concept", "Goatsbeard::c234z"], 
                    Entity["Concept", "GobioGobio::z3gym"], 
                    Entity["Concept", "Goblet::h85x9"], 
                    Entity["Concept", "Go-kart::gjsj5"], 
                    Entity["Concept", "Goldcrest::2zfkw"], 
                    Entity["Concept", "GoldenButtons::2tjbs"], 
                    Entity["Concept", "GoldenEverlasting::48wjy"], 
                    Entity["Concept", "GoldenHamster::s252h"], 
                    Entity["Concept", "GoldenOriole::tr8jz"], 
                    Entity["Concept", "GoldenPlover::869c8"], 
                    Entity["Concept", "GoldenRetriever::t59tg"], 
                    Entity["Concept", "GoldenSeal::gk753"], 
                    Entity["Concept", "GoldenWillow::7877c"], 
                    Entity["Concept", "GolfBag::r894j"], 
                    Entity["Concept", "GolfBall::63tb2"], 
                    Entity["Concept", "GolfCart::sxmp6"], 
                    Entity["Concept", "GolfCourse::6kg47"], 
                    Entity["Concept", "GolfGlove::76j8h"], 
                    Entity["Concept", "GolfTee::6q54h"], 
                    Entity["Concept", "Golliwog::vggr6"], 
                    Entity["Concept", "Goober::h4f7y"], 
                    Entity["Concept", "Goosander::c3nqw"], 
                    Entity["Concept", "GooseBarnacle::v2vv4"], 
                    Entity["Concept", "GooseberryBush::58ffq"], 
                    Entity["Concept", "GopherTortoise::b3d4v"], 
                    Entity["Concept", "GordonSetter::yvx65"], 
                    Entity["Concept", "Gorget::wyt76"], 
                    Entity["Concept", "GorillaGorillaGorilla::mdgn8"], 
                    Entity["Concept", "Gosling::c6pth"], 
                    Entity["Concept", "Gouge::m9z7p"], 
                    Entity["Concept", "GrabBar::6vr95"], 
                    Entity["Concept", "GraculaReligiosa::nrf2b"], 
                    Entity["Concept", "GraduatedCylinder::7wgfs"], 
                    Entity["Concept", "Graffiti::4c8mh"], 
                    Entity["Concept", "Grain::687zf"], 
                    Entity["Concept", "GrandfatherClock::ttqp2"], 
                    Entity["Concept", "Grapefruit::9539q"], 
                    Entity["Concept", "GrassFrog::43r85"], 
                    Entity["Concept", "GrassSkirt::64f74"], 
                    Entity["Concept", "Grate::kk3kz"], 
                    Entity["Concept", "Grater::2c596"], 
                    Entity["Concept", "Gravestone::5g3c5"], 
                    Entity["Concept", "Gray::6499h"], 
                    Entity["Concept", "GrayFox::vftd5"], 
                    Entity["Concept", "GrayKingbird::77dz3"], 
                    Entity["Concept", "GrayPartridge::78kgc"], 
                    Entity["Concept", "GrazingLand::489x6"], 
                    Entity["Concept", "Grease-gun::4hxzh"], 
                    Entity["Concept", "GreatCrestedGrebe::33v29"], 
                    Entity["Concept", "GreatDane::xg8dn"], 
                    Entity["Concept", "GreaterKudu::b5gr2"], 
                    Entity["Concept", "GreaterPrairieChicken::7ff7x"], 
                    Entity["Concept", "GreaterSwissMountainDog::t7642"], 
                    Entity["Concept", "GreaterWhitethroat::36r5t"], 
                    Entity["Concept", "GreaterYellowlegs::k65zr"], 
                    Entity["Concept", "GreatGrayOwl::97vk2"], 
                    Entity["Concept", "GreatPyrenees::t8qh7"], 
                    Entity["Concept", "GreatStJohnsWort::xk69f"], 
                    Entity["Concept", "Greenbottle::8sm7p"], 
                    Entity["Concept", "GreenCorn::8cpx4"], 
                    Entity["Concept", "GreenFringedOrchis::d9557"], 
                    Entity["Concept", "GreenFrog::8c683"], 
                    Entity["Concept", "Greenhood::7j733"], 
                    Entity["Concept", "GreenLizard::2fkzv"], 
                    Entity["Concept", "GreenOlive::m444c"], 
                    Entity["Concept", "GreenPeafowl::dg5pr"], 
                    Entity["Concept", "GreenPlover::vz8dm"], 
                    Entity["Concept", "GreenSalad::sg3k8"], 
                    Entity["Concept", "Greenshank::5s743"], 
                    Entity["Concept", "GreenSnake::35p23"], 
                    Entity["Concept", "GreenWoodpecker::zpv3y"], 
                    Entity["Concept", "Grey-leafPine::258t9"], 
                    Entity["Concept", "Griddle::b57db"], 
                    Entity["Concept", "GriffonVulture::mb24w"], 
                    Entity["Concept", "Grinder::3v695"], 
                    Entity["Concept", "Grindstone::6xy8z"], 
                    Entity["Concept", "Grizzly::rj93f"], 
                    Entity["Concept", "Groats::852cq"], 
                    Entity["Concept", "Groenendael::5854s"], 
                    Entity["Concept", "Ground-effectMachine::f72j2"], 
                    Entity["Concept", "GroundFir::t765m"], 
                    Entity["Concept", "Groundhog::xm342"], 
                    Entity["Concept", "GroundRattler::d9f52"], 
                    Entity["Concept", "Grunter::437d2"], 
                    Entity["Concept", "GrusAmericana::4xmbs"], 
                    Entity["Concept", "Guacamole::xc482"], 
                    Entity["Concept", "Guanabana::j83p3"], 
                    Entity["Concept", "Guanaco::3s6dj"], 
                    Entity["Concept", "Guardrail::mq454"], 
                    Entity["Concept", "GuavaBush::8rnkc"], 
                    Entity["Concept", "Guillotine::w4656"], 
                    Entity["Concept", "GuineaHen::jtq9p"], 
                    Entity["Concept", "GuitarPick::827f6"], 
                    Entity["Concept", "GuloGulo::2v5b7"], 
                    Entity["Concept", "GunEnclosure::yk88b"], 
                    Entity["Concept", "Guppy::t6x83"], 
                    Entity["Concept", "Gym::2fw7w"], 
                    Entity["Concept", "GymnocarpiumDryopteris::xt23d"], 
                    Entity["Concept", "GymnorhinaTibicen::9nmgw"], 
                    Entity["Concept", "Gyro::2348d"], 
                    Entity["Concept", "Gyroscope::668pf"], 
                    Entity["Concept", "HabenariaPsycodes::nhdh5"], 
                    Entity["Concept", "Haemostat::ggy65"], 
                    Entity["Concept", "Hairbrush::hcm6m"], 
                    Entity["Concept", "HairSlide::3xwcp"], 
                    Entity["Concept", "HalesiaCarolina::35rx6"], 
                    Entity["Concept", "HaliaeetusPelagicus::m6crc"], 
                    Entity["Concept", "HaliotisTuberculata::73fcr"], 
                    Entity["Concept", "Hammer::t5864"], 
                    Entity["Concept", "Hammock::kjy9b"], 
                    Entity["Concept", "Handbasin::6w875"], 
                    Entity["Concept", "Handbell::d57k8"], 
                    Entity["Concept", "HandCalculator::gmxc4"], 
                    Entity["Concept", "Handcar::hx379"], 
                    Entity["Concept", "Handcuff::zv5sq"], 
                    Entity["Concept", "Hand-heldComputer::zs5zw"], 
                    Entity["Concept", "Handlebar::59pyb"], 
                    Entity["Concept", "Handle-bars::mvr9v"], 
                    Entity["Concept", "HandLuggage::992vm"], 
                    Entity["Concept", "HandMirror::259y7"], 
                    Entity["Concept", "HandPump::z4zms"], 
                    Entity["Concept", "HangGlider::852m2"], 
                    Entity["Concept", "HangingGeranium::2k5wh"], 
                    Entity["Concept", "Harmonica::8t835"], 
                    Entity["Concept", "Harmonium::2t56k"], 
                    Entity["Concept", "Harness::77y28"], 
                    Entity["Concept", "Harness::k724x"], 
                    Entity["Concept", "HarpiaHarpyja::5975t"], 
                    Entity["Concept", "Harp::mp5bz"], 
                    Entity["Concept", "HarpSeal::8n44j"], 
                    Entity["Concept", "HarrierEagle::zqpb7"], 
                    Entity["Concept", "Hartebeest::r8276"], 
                    Entity["Concept", "Hart::kqk68"], 
                    Entity["Concept", "Harvestman::545h3"], 
                    Entity["Concept", "Hasp::2pv6h"], 
                    Entity["Concept", "Hatbox::mh5qs"], 
                    Entity["Concept", "Hatchback::78j33"], 
                    Entity["Concept", "HatchbackDoor::n39m2"], 
                    Entity["Concept", "HawaiianGuitar::84g78"], 
                    Entity["Concept", "HawkOwl::6gb3x"], 
                    Entity["Concept", "Hawkweed::5nywy"], 
                    Entity["Concept", "HayBale::k66cq"], 
                    Entity["Concept", "Hayfield::rnj24"], 
                    Entity["Concept", "HeadGasket::py6zh"], 
                    Entity["Concept", "Headland::8n9c9"], 
                    Entity["Concept", "Hearse::46q8t"], 
                    Entity["Concept", "HeatSink::4p498"], 
                    Entity["Concept", "HedgehogCactus::598vw"], 
                    Entity["Concept", "HedgeMustard::5n62s"], 
                    Entity["Concept", "HedgeTrimmer::fjh2y"], 
                    Entity["Concept", "HelianthusAngustifolius::bn7d4"], 
                    Entity["Concept", "HelianthusPetiolaris::4mz55"], 
                    Entity["Concept", "HelianthusTuberosus::z92p8"], 
                    Entity["Concept", "Heliopsis::w5695"], 
                    Entity["Concept", "Heliport::vn5cn"], 
                    Entity["Concept", "Helleri::4433j"], 
                    Entity["Concept", "Helmetflower::sg8xj"], 
                    Entity["Concept", "HelminthostachysZeylanica::7v5p6"], 
                    Entity["Concept", "HemachatusHaemachatus::37gsx"], 
                    Entity["Concept", "HemerocallisFlava::4567g"], 
                    Entity["Concept", "Henbit::n333t"], 
                    Entity["Concept", "HerbGarden::v944v"], 
                    Entity["Concept", "Hereford::75m7b"], 
                    Entity["Concept", "HeritieraLittoralis::x67yf"], 
                    Entity["Concept", "HermissendaCrassicornis::vf4wd"], 
                    Entity["Concept", "HermitCrab::4k242"], 
                    Entity["Concept", "HermitThrush::8q3x5"], 
                    Entity["Concept", "HerringbonePattern::8g987"], 
                    Entity["Concept", "HerringGull::fv8wn"], 
                    Entity["Concept", "HexalectrisWarnockii::3d45r"], 
                    Entity["Concept", "HickoryPine::98t8v"], 
                    Entity["Concept", "HighAltar::bsy83"], 
                    Entity["Concept", "HighballGlass::fp5xf"], 
                    Entity["Concept", "HighBar::n5222"], 
                    Entity["Concept", "Hill::3k7f4"], 
                    Entity["Concept", "HimantoglossumHircinum::nd9wm"], 
                    Entity["Concept", "Hipflask::948m7"], 
                    Entity["Concept", "Hippeastrum::s2dbp"], 
                    Entity["Concept", "Hippo::647b2"], 
                    Entity["Concept", "HippoboscaEquina::t97v5"], 
                    Entity["Concept", "HipPocket::388h2"], 
                    Entity["Concept", "HippodamiaConvergens::7xt8j"], 
                    Entity["Concept", "HippotragusNiger::6vp77"], 
                    Entity["Concept", "HirudoMedicinalis::m275r"], 
                    Entity["Concept", "HirundoNigricans::v8xq9"], 
                    Entity["Concept", "Hoactzin::99g32"], 
                    Entity["Concept", "HoaryMarmot::2dpyb"], 
                    Entity["Concept", "HockeyPuck::3hj3q"], 
                    Entity["Concept", "HockeyStick::mdz6m"], 
                    Entity["Concept", "Hodometer::jw6kb"], 
                    Entity["Concept", "Hoe::297xb"], 
                    Entity["Concept", "HognoseSnake::k5k58"], 
                    Entity["Concept", "HoheriaPopulnea::9n4y4"], 
                    Entity["Concept", "HolcusLanatus::w4jc4"], 
                    Entity["Concept", "Holibut::8543n"], 
                    Entity["Concept", "Hollygrape::f5h8y"], 
                    Entity["Concept", "HolocanthusTricolor::6t872"], 
                    Entity["Concept", "HolothuriaEdulis::52f34"], 
                    Entity["Concept", "HolyThistle::4j723"], 
                    Entity["Concept", "HomarusAmericanus::n2j65"], 
                    Entity["Concept", "HomePlate::2643s"], 
                    Entity["Concept", "HomeTheater::4y845"], 
                    Entity["Concept", "HomonaCoffearia::ykhf6"], 
                    Entity["Concept", "HondurasMahogany::q3cs2"], 
                    Entity["Concept", "HoneyBear::t4wf4"], 
                    Entity["Concept", "HoneyBuzzard::7x32k"], 
                    Entity["Concept", "Honeycomb::9g58f"], 
                    Entity["Concept", "Honeydew::xjv3c"], 
                    Entity["Concept", "Honeypot::t9577"], 
                    Entity["Concept", "HoodedMerganser::trk52"], 
                    Entity["Concept", "Hoop::74nr5"], 
                    Entity["Concept", "Hornbill::6389h"], 
                    Entity["Concept", "HornedViolet::4v996"], 
                    Entity["Concept", "HorseBarn::2yfwj"], 
                    Entity["Concept", "Horseshoe::29p63"], 
                    Entity["Concept", "Horseshoe::c3gkc"], 
                    Entity["Concept", "HorseshoeCrab::q28j2"], 
                    Entity["Concept", "Hospital::5vz7v"], 
                    Entity["Concept", "HospitalBed::89p76"], 
                    Entity["Concept", "HospitalRoom::822m3"], 
                    Entity["Concept", "HospitalShip::5x2nt"], 
                    Entity["Concept", "Hot-airBalloon::23k45"], 
                    Entity["Concept", "Hotel::74q74"], 
                    Entity["Concept", "HotLine::vqtm7"], 
                    Entity["Concept", "HotPlate::2sq6r"], 
                    Entity["Concept", "HotSpring::638q8"], 
                    Entity["Concept", "HotStuffedTomato::z4674"], 
                    Entity["Concept", "Hourglass::83jnz"], 
                    Entity["Concept", "House::8tkvp"], 
                    Entity["Concept", "Houseboat::772p5"], 
                    Entity["Concept", "HouseCentipede::vn4xr"], 
                    Entity["Concept", "HouseFly::5f478"], 
                    Entity["Concept", "HouseMouse::tyf4y"], 
                    Entity["Concept", "HouseWren::rmvm8"], 
                    Entity["Concept", "Howitzer::xn4pp"], 
                    Entity["Concept", "HowlerMonkey::87c48"], 
                    Entity["Concept", "HoyaCarnosa::9j363"], 
                    Entity["Concept", "Hubcap::265j7"], 
                    Entity["Concept", "HudsonianGodwit::7457p"], 
                    Entity["Concept", "Hula-hoop::8r34s"], 
                    Entity["Concept", "HumanFoot::s8897"], 
                    Entity["Concept", "HumanSkeleton::23lki"], 
                    Entity["Concept", "Hum-Vee::dq723"], 
                    Entity["Concept", "HungarianPointer::7555p"], 
                    Entity["Concept", "HuntingKnife::y7jz9"], 
                    Entity["Concept", "Hurdle::jyww6"], 
                    Entity["Concept", "Hurricane::5wbfg"], 
                    Entity["Concept", "HurricaneLamp::gk556"], 
                    Entity["Concept", "HyaenaHyaena::3zrqj"], 
                    Entity["Concept", "HybridPetunia::q8278"], 
                    Entity["Concept", "HydrangeaMacrophyllaHortensis::275gp"], 
                    Entity["Concept", "Hydrofoil::66pc3"], 
                    Entity["Concept", "HylaCrucifer::f64j2"], 
                    Entity["Concept", "HylaRegilla::fk8rx"], 
                    Entity["Concept", "HylobatesSyndactylus::3g4xn"], 
                    Entity["Concept", "HylocichlaFuscescens::9pjmk"], 
                    Entity["Concept", "HylocichlaMustelina::jpgz5"], 
                    Entity["Concept", "HypericumPerforatum::jcn2d"], 
                    Entity["Concept", "HypodermicNeedle::dx4j6"], 
                    Entity["Concept", "HypsiglenaTorquata::6869v"], 
                    Entity["Concept", "HyssopusOfficinalis::vd87d"], 
                    Entity["Concept", "I-beam::25b5q"], 
                    Entity["Concept", "IbisIbis::r9664"], 
                    Entity["Concept", "IbizanHound::987kj"], 
                    Entity["Concept", "IceBear::fnc5j"], 
                    Entity["Concept", "Ice-creamCone::b5dfc"], 
                    Entity["Concept", "IceLolly::473v3"], 
                    Entity["Concept", "IcePlant::hfpb4"], 
                    Entity["Concept", "IceRink::32f4d"], 
                    Entity["Concept", "IceShelf::4pwhj"], 
                    Entity["Concept", "IchneumonFly::b242c"], 
                    Entity["Concept", "IcteriaVirens::76hqr"], 
                    Entity["Concept", "IcterusSpurius::296sb"], 
                    Entity["Concept", "Igloo::n559k"], 
                    Entity["Concept", "IgneousRock::9r5r5"], 
                    Entity["Concept", "IlexDecidua::8f2fm"], 
                    Entity["Concept", "IlliciumVerum::p322s"], 
                    Entity["Concept", "ImpatiensCapensis::957m2"], 
                    Entity["Concept", "InachisIo::2n487"], 
                    Entity["Concept", "Inchworm::75p9q"], 
                    Entity["Concept", "IndianBeet::377s5"], 
                    Entity["Concept", "IndianCobra::2sv7h"], 
                    Entity["Concept", "IndianCrocus::7t68s"], 
                    Entity["Concept", "IndianPipe::xj9yx"], 
                    Entity["Concept", "IndianPython::c7n8m"], 
                    Entity["Concept", "IndianRhinoceros::5zv66"], 
                    Entity["Concept", "IndianTapir::v6tk3"], 
                    Entity["Concept", "IndigoBird::6365d"], 
                    Entity["Concept", "Indri::w2dsm"], 
                    Entity["Concept", "IndustrialPark::tk37w"], 
                    Entity["Concept", "Inhaler::344r5"], 
                    Entity["Concept", "Interceptor::zff3s"], 
                    Entity["Concept", "InteriorLiveOak::65yy2"], 
                    Entity["Concept", "Involucre::2fx62"], 
                    Entity["Concept", "IpomoeaCoccinea::56f3w"], 
                    Entity["Concept", "IpomoeaNil::8pnvn"], 
                    Entity["Concept", "IridoprocneBicolor::g3q68"], 
                    Entity["Concept", "IrisCristata::hzm8j"], 
                    Entity["Concept", "IrisGermanica::hj99n"], 
                    Entity["Concept", "IrishSetter::h5pp3"], 
                    Entity["Concept", "IrishTerrier::qmsm4"], 
                    Entity["Concept", "IrishWolfhound::8m3gw"], 
                    Entity["Concept", "IrisKaempferi::8nmjn"], 
                    Entity["Concept", "IrisVerna::2528b"], 
                    Entity["Concept", "IrisXiphium::g86v2"], 
                    Entity["Concept", "Iron-tree::7httx"], 
                    Entity["Concept", "Ironweed::nv3rw"], 
                    Entity["Concept", "Isle::326gs"], 
                    Entity["Concept", "ItalianGreyhound::s4gq3"], 
                    Entity["Concept", "ItalianRice::k48jr"], 
                    Entity["Concept", "IvoryGull::8682s"], 
                    Entity["Concept", "IxobrychusExilis::4fcjx"], 
                    Entity["Concept", "IxodesRicinus::bk6g8"], 
                    Entity["Concept", "JabiruMycteria::r3jwm"], 
                    Entity["Concept", "Jaboticaba::r9dp9"], 
                    Entity["Concept", "JaboticabaTree::4889z"], 
                    Entity["Concept", "Jabot::yct7q"], 
                    Entity["Concept", "Jacamar::v7428"], 
                    Entity["Concept", "Jack::363y2"], 
                    Entity["Concept", "JackassPenguin::s7wzk"], 
                    Entity["Concept", "Jack-in-the-box::c49p5"], 
                    Entity["Concept", "JackMackerel::hc464"], 
                    Entity["Concept", "Jack-o-lantern::yss6v"], 
                    Entity["Concept", "JackPine::77fn5"], 
                    Entity["Concept", "JailCell::rg79p"], 
                    Entity["Concept", "Jak::p6r56"], 
                    Entity["Concept", "JamaicaHoneysuckle::285q5"], 
                    Entity["Concept", "JapaneseApricot::28s37"], 
                    Entity["Concept", "JapaneseBanana::k7883"], 
                    Entity["Concept", "JapaneseBeech::6c968"], 
                    Entity["Concept", "JapaneseBeetle::9kvxt"], 
                    Entity["Concept", "JapaneseBlackPine::y4w92"], 
                    Entity["Concept", "JapaneseCherry::7hm62"], 
                    Entity["Concept", "JapaneseHoneysuckle::bsp45"], 
                    Entity["Concept", "JapanesePlum::q4qgn"], 
                    Entity["Concept", "JapaneseUmbrellaPine::h3565"], 
                    Entity["Concept", "JapaneseWistaria::qhqc5"], 
                    Entity["Concept", "JasminumNudiflorum::3d887"], 
                    Entity["Concept", "JavaFinch::kq4fc"], 
                    Entity["Concept", "Java::jjtd5"], 
                    Entity["Concept", "Javelin::vtnk7"], 
                    Entity["Concept", "Jawfish::5nhwy"], 
                    Entity["Concept", "Jeep::5twmt"], 
                    Entity["Concept", "JeffreyPine::64f95"], 
                    Entity["Concept", "JellyBean::3mrk3"], 
                    Entity["Concept", "JerusalemArtichoke::2hwky"], 
                    Entity["Concept", "JerusalemCricket::js76y"], 
                    Entity["Concept", "Jetliner::p464v"], 
                    Entity["Concept", "JewelersLoupe::kg4bc"], 
                    Entity["Concept", "JewelryDealer::778w9"], 
                    Entity["Concept", "JigsawPuzzle::jgp79"], 
                    Entity["Concept", "Jinrikisha::g7j7m"], 
                    Entity["Concept", "Joinery::z5mvb"], 
                    Entity["Concept", "JointedCharlock::d627k"], 
                    Entity["Concept", "JointHinge::z66rn"], 
                    Entity["Concept", "Jonquil::82x6j"], 
                    Entity["Concept", "JoshuaTree::7n346"], 
                    Entity["Concept", "Joystick::nj32z"], 
                    Entity["Concept", "Jug::ztgy9"], 
                    Entity["Concept", "JuiceReamer::47m79"], 
                    Entity["Concept", "Jukebox::s4vg2"], 
                    Entity["Concept", "JumboJet::558sx"], 
                    Entity["Concept", "JungleGym::ptht3"], 
                    Entity["Concept", "JuniperBerries::rdfw3"], 
                    Entity["Concept", "JuniperBerry::s4rts"], 
                    Entity["Concept", "Junk::74nvj"], 
                    Entity["Concept", "Jupiter::5qs22"], 
                    Entity["Concept", "KaiserRoll::22qq5"], 
                    Entity["Concept", "KakatoeLeadbeateri::28y43"], 
                    Entity["Concept", "Kali::b73zq"], 
                    Entity["Concept", "Kameez::6v488"], 
                    Entity["Concept", "KangarooBear::hvf3s"], 
                    Entity["Concept", "KatsuwonusPelamis::y32gt"], 
                    Entity["Concept", "Kayak::pmh72"], 
                    Entity["Concept", "Kazoo::cg6y3"], 
                    Entity["Concept", "Kea::jj8ks"], 
                    Entity["Concept", "Keeshond::rz734"], 
                    Entity["Concept", "Kelpie::k6795"], 
                    Entity["Concept", "Kepi::y77jh"], 
                    Entity["Concept", "KerryBlueTerrier::t9c62"], 
                    Entity["Concept", "Ketch::h284b"], 
                    Entity["Concept", "Kettledrum::5q5b7"], 
                    Entity["Concept", "Keyhole::w5wnn"], 
                    Entity["Concept", "KeyLime::z9578"], 
                    Entity["Concept", "KeyPalm::y2388"], 
                    Entity["Concept", "Khukuri::5s498"], 
                    Entity["Concept", "KillerWhale::26sj4"], 
                    Entity["Concept", "Kilt::sy926"], 
                    Entity["Concept", "Kimono::284nv"], 
                    Entity["Concept", "King::8tmwc"], 
                    Entity["Concept", "KingCharlesSpaniel::6r663"], 
                    Entity["Concept", "KingCobra::gwr8g"], 
                    Entity["Concept", "Kingfish::2wws3"], 
                    Entity["Concept", "KingOfBeasts::vrwm9"], 
                    Entity["Concept", "KingVulture::v8869"], 
                    Entity["Concept", "Kiosk::h4sfk"], 
                    Entity["Concept", "KitchenGarden::wz436"], 
                    Entity["Concept", "Kitchen::vrsg6"], 
                    Entity["Concept", "Kittiwake::n223q"], 
                    Entity["Concept", "KiwiFruit::854z5"], 
                    Entity["Concept", "KneeBrace::9898t"], 
                    Entity["Concept", "Knee-hi::h5ycb"], 
                    Entity["Concept", "KneePad::nh7y5"], 
                    Entity["Concept", "KniphofiaPraecox::r4f7w"], 
                    Entity["Concept", "KnittingNeedle::22s96"], 
                    Entity["Concept", "Knot::f4x5y"], 
                    Entity["Concept", "KnottedMarjoram::b6cqv"], 
                    Entity["Concept", "Kob::shdy6"], 
                    Entity["Concept", "Komondor::p8q9b"], 
                    Entity["Concept", "Koto::6y74p"], 
                    Entity["Concept", "Kowhai::3382q"], 
                    Entity["Concept", "Kudzu::3w7x7"], 
                    Entity["Concept", "Kumquat::r744x"], 
                    Entity["Concept", "Kurta::s9652"], 
                    Entity["Concept", "Kuvasz::z4sxp"], 
                    Entity["Concept", "LabradorRetriever::7g587"], 
                    Entity["Concept", "Labyrinth::gc6rg"], 
                    Entity["Concept", "Lace::5y6z9"], 
                    Entity["Concept", "LacertaAgilis::dv7v7"], 
                    Entity["Concept", "LactucaSativaCrispa::7359v"], 
                    Entity["Concept", "Ladder-backChair::2s3g6"], 
                    Entity["Concept", "Laelia::d5sj9"], 
                    Entity["Concept", "LagarostrobusColensoi::768s9"], 
                    Entity["Concept", "LagerstroemiaSpeciosa::f6mv3"], 
                    Entity["Concept", "LagodonRhomboides::6f322"], 
                    Entity["Concept", "LagunculariaRacemosa::95ffj"], 
                    Entity["Concept", "Lake::g4z3f"], 
                    Entity["Concept", "LakelandTerrier::b729b"], 
                    Entity["Concept", "LakeSalmon::nm9sc"], 
                    Entity["Concept", "LamaPacos::75yp4"], 
                    Entity["Concept", "LamiumAlbum::8j945"], 
                    Entity["Concept", "LamnaNasus::nswj3"], 
                    Entity["Concept", "Lamppost::7q5zr"], 
                    Entity["Concept", "LampShade::4b824"], 
                    Entity["Concept", "LancetWindow::8458v"], 
                    Entity["Concept", "LandingNet::sgr2d"], 
                    Entity["Concept", "Laniard::knv4b"], 
                    Entity["Concept", "LaniusBorealis::434q7"], 
                    Entity["Concept", "LaniusLucovicianus::3dy59"], 
                    Entity["Concept", "Laptop::zdd33"], 
                    Entity["Concept", "Largemouth::464g8"], 
                    Entity["Concept", "LargePeriwinkle::bs69f"], 
                    Entity["Concept", "LargeWhite::k6595"], 
                    Entity["Concept", "Lariat::8pffb"], 
                    Entity["Concept", "LarixOccidentalis::k84y9"], 
                    Entity["Concept", "Larkspur::gz9qs"], 
                    Entity["Concept", "LarusCanus::52t8t"], 
                    Entity["Concept", "LarusRidibundus::2gq7k"], 
                    Entity["Concept", "Laryngoscope::7k583"], 
                    Entity["Concept", "Lasagna::pc8pw"], 
                    Entity["Concept", "LaserPrinter::ph277"], 
                    Entity["Concept", "Laser::wg253"], 
                    Entity["Concept", "Latch::25x5q"], 
                    Entity["Concept", "LaundryCart::s9zh3"], 
                    Entity["Concept", "Lav::5mtv5"], 
                    Entity["Concept", "LavandulaLatifolia::2286r"], 
                    Entity["Concept", "LavandulaStoechas::6496q"], 
                    Entity["Concept", "LavenderCotton::524m6"], 
                    Entity["Concept", "LayiaPlatyglossa::27k44"], 
                    Entity["Concept", "LeadTree::854z7"], 
                    Entity["Concept", "Leaf-cutter::j75c6"], 
                    Entity["Concept", "Leaf-footBug::fnf35"], 
                    Entity["Concept", "Leatherfish::4wxdf"], 
                    Entity["Concept", "Lectern::v8fw8"], 
                    Entity["Concept", "Leechee::q8m6f"], 
                    Entity["Concept", "Leghorn::96m72"], 
                    Entity["Concept", "LeglessLizard::zthf4"], 
                    Entity["Concept", "Leg::w5w74"], 
                    Entity["Concept", "Lemon::743j2"], 
                    Entity["Concept", "LemonBalm::bxyg8"], 
                    Entity["Concept", "LemonShark::4p288"], 
                    Entity["Concept", "LemurCatta::4z4fy"], 
                    Entity["Concept", "LensCap::6j259"], 
                    Entity["Concept", "LensCulinaris::3kp5n"], 
                    Entity["Concept", "LenticularClouds::4s6jz"], 
                    Entity["Concept", "Lentisk::6h378"], 
                    Entity["Concept", "Leonberg::49td5"], 
                    Entity["Concept", "LeonurusCardiaca::x8m7f"], 
                    Entity["Concept", "LeopardFrog::n8937"], 
                    Entity["Concept", "LeopardLizard::n5952"], 
                    Entity["Concept", "LepidochelysOlivacea::k7753"], 
                    Entity["Concept", "LepismaSaccharina::44y5d"], 
                    Entity["Concept", "LepomisGibbosus::9d49f"], 
                    Entity["Concept", "LeptoptilusCrumeniferus::t7q42"], 
                    Entity["Concept", "LepusAmericanus::86wj7"], 
                    Entity["Concept", "LesserAnteater::45x83"], 
                    Entity["Concept", "LesserCelandine::788rg"], 
                    Entity["Concept", "LesserWhitethroat::8z24s"], 
                    Entity["Concept", "LesserYellowlegs::9q8b5"], 
                    Entity["Concept", "Leucocyte::v5689"], 
                    Entity["Concept", "LeverTumbler::565k8"], 
                    Entity["Concept", "LevisticumOfficinale::85c48"], 
                    Entity["Concept", "LhasaApso::cr28m"], 
                    Entity["Concept", "LibocedrusBidwillii::w8fkz"], 
                    Entity["Concept", "Library::35dt7"], 
                    Entity["Concept", "Library::8855f"], 
                    Entity["Concept", "Library::fc476"], 
                    Entity["Concept", "LichanuraTrivirgata::4238d"], 
                    Entity["Concept", "LidoDeck::xds4j"], 
                    Entity["Concept", "Liger::dww25"], 
                    Entity["Concept", "LightningArrester::jtt72"], 
                    Entity["Concept", "Lightning::h59dm"], 
                    Entity["Concept", "Lightship::q32kd"], 
                    Entity["Concept", "LightWhippingCream::rytm5"], 
                    Entity["Concept", "LiliumAuratum::h2xyg"], 
                    Entity["Concept", "LiliumCatesbaei::8w9cs"], 
                    Entity["Concept", "LiliumMartagon::3dx6d"], 
                    Entity["Concept", "LiliumPardalinum::3768c"], 
                    Entity["Concept", "LiliumSuperbum::45v37"], 
                    Entity["Concept", "LimenitisArchippus::8b446"], 
                    Entity["Concept", "LimenitisAstyanax::5k738"], 
                    Entity["Concept", "LimenitisCamilla::3qkzq"], 
                    Entity["Concept", "LimnodromusGriseus::2db27"], 
                    Entity["Concept", "Limo::jfrr3"], 
                    Entity["Concept", "Linotype::w5fbf"], 
                    Entity["Concept", "Lionfish::45vp5"], 
                    Entity["Concept", "Lip::8f3g7"], 
                    Entity["Concept", "Liparis::fg54m"], 
                    Entity["Concept", "LipRouge::4vd22"], 
                    Entity["Concept", "LiqueurGlass::8777b"], 
                    Entity["Concept", "ListeraOvata::r2852"], 
                    Entity["Concept", "LitchiChinensis::2jtq9"], 
                    Entity["Concept", "LithocarpusGlaber::r62sv"], 
                    Entity["Concept", "LithophragmaAffine::9h2sq"], 
                    Entity["Concept", "Litter-basket::qh3j2"], 
                    Entity["Concept", "Littleneck::858g8"], 
                    Entity["Concept", "LiverChestnut::8yby8"], 
                    Entity["Concept", "Liverleaf::dz934"], 
                    Entity["Concept", "LivistonaAustralis::76g95"], 
                    Entity["Concept", "Lizardfish::5rz5y"], 
                    Entity["Concept", "Loach::6czym"], 
                    Entity["Concept", "LoadingDock::tm5xn"], 
                    Entity["Concept", "LobsterPot::zyqt9"], 
                    Entity["Concept", "LobulariaMaritima::jwf3k"], 
                    Entity["Concept", "LockChamber::jxz2m"], 
                    Entity["Concept", "LockerRoom::z57pq"], 
                    Entity["Concept", "Locket::6g6tw"], 
                    Entity["Concept", "Locomotive::386s7"], 
                    Entity["Concept", "LocustaMigratoria::7p594"], 
                    Entity["Concept", "Lodgepole::8jxpv"], 
                    Entity["Concept", "Loggia::t7pfy"], 
                    Entity["Concept", "Logo::w59n9"], 
                    Entity["Concept", "LonasAnnua::vd25t"], 
                    Entity["Concept", "LondonPlane::j8pn7"], 
                    Entity["Concept", "Longbow::vg74r"], 
                    Entity["Concept", "Long-headConeflower::gkd78"], 
                    Entity["Concept", "Longhorn::4wfkr"], 
                    Entity["Concept", "LongHorse::x4679"], 
                    Entity["Concept", "LongJohns::7jhyr"], 
                    Entity["Concept", "LongSleeve::j9276"], 
                    Entity["Concept", "LoniceraFlava::7czcb"], 
                    Entity["Concept", "LoniceraPericlymenum::5h646"], 
                    Entity["Concept", "LoudPedal::wq4pf"], 
                    Entity["Concept", "LoungeSuit::h58ff"], 
                    Entity["Concept", "Lovage::q2xt7"], 
                    Entity["Concept", "Lovebird::zpg29"], 
                    Entity["Concept", "LoveSeat::46sfq"], 
                    Entity["Concept", "LowbushCranberry::794f9"], 
                    Entity["Concept", "L-P::7jsc4"], 
                    Entity["Concept", "LuffaCylindrica::yc89d"], 
                    Entity["Concept", "Luger::39w62"], 
                    Entity["Concept", "LuggageRack::853j3"], 
                    Entity["Concept", "LundaCirrhata::s7694"], 
                    Entity["Concept", "LupinusSubcarnosus::358m5"], 
                    Entity["Concept", "LupinusTexensis::z3375"], 
                    Entity["Concept", "LusciniaLuscinia::7vcyt"], 
                    Entity["Concept", "Lute::3879d"], 
                    Entity["Concept", "LutjanusApodus::2y8rx"], 
                    Entity["Concept", "LutraCanadensis::775t2"], 
                    Entity["Concept", "LychinsChalcedonica::q6q27"], 
                    Entity["Concept", "LychinsFloscuculi::479c6"], 
                    Entity["Concept", "LychnisDioica::6t8f5"], 
                    Entity["Concept", "LyciumCarolinianum::5v8t6"], 
                    Entity["Concept", "LycopodiumComplanatum::69c67"], 
                    Entity["Concept", "Lyrebird::8c48w"], 
                    Entity["Concept", "LysichitonAmericanum::92dj4"], 
                    Entity["Concept", "LythrumSalicaria::m53b9"], 
                    Entity["Concept", "MacacaMulatta::mtz4t"], 
                    Entity["Concept", "MacadamiaNut::3k8n6"], 
                    Entity["Concept", "Macaw::ntx97"], 
                    Entity["Concept", "Machete::6jd97"], 
                    Entity["Concept", "MacrodactylusSubspinosus::2xs99"], 
                    Entity["Concept", "Macrozamia::dkp76"], 
                    Entity["Concept", "MagicicadaSeptendecim::ry5sv"], 
                    Entity["Concept", "MagnoliaStellata::jyc9t"], 
                    Entity["Concept", "MagnoliaVirginiana::cpzh3"], 
                    Entity["Concept", "MahoniaNervosa::428wj"], 
                    Entity["Concept", "MaianthemumBifolium::gq7v4"], 
                    Entity["Concept", "MaianthemumCanadense::vt999"], 
                    Entity["Concept", "MalcolmStock::hg9xy"], 
                    Entity["Concept", "Malinois::k8y57"], 
                    Entity["Concept", "MalpighiaGlabra::j3tg7"], 
                    Entity["Concept", "MalteseDog::trsv6"], 
                    Entity["Concept", "MalusAngustifolia::pj8hh"], 
                    Entity["Concept", "MalusPumila::t7d6g"], 
                    Entity["Concept", "MalusSylvestris::q2fc9"], 
                    Entity["Concept", "MalvaMoschata::8z87t"], 
                    Entity["Concept", "Mammillaria::8564d"], 
                    Entity["Concept", "Manakin::9y3f7"], 
                    Entity["Concept", "Manatee::yn97d"], 
                    Entity["Concept", "Mandola::pk7g6"], 
                    Entity["Concept", "Mandrel::6r683"], 
                    Entity["Concept", "Mandrill::8jcq7"], 
                    Entity["Concept", "MangiferaIndica::c7pyf"], 
                    Entity["Concept", "Mangle::65xk6"], 
                    Entity["Concept", "Mango::ghb5w"], 
                    Entity["Concept", "Mangosteen::mj4x4"], 
                    Entity["Concept", "Mangrove::86p5q"], 
                    Entity["Concept", "ManholeCover::4x7fq"], 
                    Entity["Concept", "Mantilla::dt3h4"], 
                    Entity["Concept", "MantisReligioso::mztk6"], 
                    Entity["Concept", "ManufacturedHome::d7czj"], 
                    Entity["Concept", "Manus::3qtmf"], 
                    Entity["Concept", "MaoriHen::8p7cz"], 
                    Entity["Concept", "Map::82r8s"], 
                    Entity["Concept", "Maraca::395nq"], 
                    Entity["Concept", "Marble::mf6zp"], 
                    Entity["Concept", "Marimba::kbbq5"], 
                    Entity["Concept", "Marjoram::986cb"], 
                    Entity["Concept", "Marker::h922h"], 
                    Entity["Concept", "MarketSquare::6xt89"], 
                    Entity["Concept", "Markweed::645s2"], 
                    Entity["Concept", "MarshRosemary::g6j95"], 
                    Entity["Concept", "MarsileaQuadrifolia::387n9"], 
                    Entity["Concept", "MartesMartes::tp4m4"], 
                    Entity["Concept", "Mascara::jc7hf"], 
                    Entity["Concept", "Masdevallia::8hjpc"], 
                    Entity["Concept", "MasonBee::v5f49"], 
                    Entity["Concept", "MasonWasp::9936w"], 
                    Entity["Concept", "MasonWasp::v3pbj"], 
                    Entity["Concept", "MassasaugaRattler::6p63v"], 
                    Entity["Concept", "Mast::725k9"], 
                    Entity["Concept", "Matai::yg4wg"], 
                    Entity["Concept", "Match::cp294"], 
                    Entity["Concept", "Matchstick::266wm"], 
                    Entity["Concept", "MathematicalNotation::z5psk"], 
                    Entity["Concept", "Maul::p9b5j"], 
                    Entity["Concept", "Mavis::466q8"], 
                    Entity["Concept", "Mayapple::tv6rq"], 
                    Entity["Concept", "Maypole::qc3qr"], 
                    Entity["Concept", "Maypop::fwt2v"], 
                    Entity["Concept", "MeadowButtercup::82g8x"], 
                    Entity["Concept", "MeadowClary::x24vw"], 
                    Entity["Concept", "MeadowSpittlebug::2b45t"], 
                    Entity["Concept", "Mealie::86d82"], 
                    Entity["Concept", "MeasuringCup::7b637"], 
                    Entity["Concept", "MeatCounter::d538s"], 
                    Entity["Concept", "MeatGrinder::qksy6"], 
                    Entity["Concept", "MeatThermometer::mm48d"], 
                    Entity["Concept", "MechanicalPiano::95jm8"], 
                    Entity["Concept", "MeconopsisCambrica::qzk67"], 
                    Entity["Concept", "MedicineBall::598td"], 
                    Entity["Concept", "Medina::9632f"], 
                    Entity["Concept", "Medlar::7tfnv"], 
                    Entity["Concept", "Medlar::hf9fj"], 
                    Entity["Concept", "MedlarTree::tc33j"], 
                    Entity["Concept", "Megaphone::h2tn2"], 
                    Entity["Concept", "MelanerpesErythrocephalus::7mmxz"], 
                    Entity["Concept", "MelospizaGeorgiana::jt49d"], 
                    Entity["Concept", "MelospizaMelodia::6783h"], 
                    Entity["Concept", "MelursusUrsinus::48x75"], 
                    Entity["Concept", "Menorah::4js3g"], 
                    Entity["Concept", "Menorah::6v4v5"], 
                    Entity["Concept", "MenthaAquatica::d8dg4"], 
                    Entity["Concept", "MenthaPiperita::nfn9d"], 
                    Entity["Concept", "MenthaPulegium::xcgs7"], 
                    Entity["Concept", "MenthaSpicata::86f39"], 
                    Entity["Concept", "MephitisMephitis::z8755"], 
                    Entity["Concept", "Mercury::kdbr5"], 
                    Entity["Concept", "MergusAlbellus::qsk3j"], 
                    Entity["Concept", "MergusSerrator::5t86m"], 
                    Entity["Concept", "MertensiaVirginica::55yj6"], 
                    Entity["Concept", "MetamorphicRock::9jnz4"], 
                    Entity["Concept", "Metronome::jkn2k"], 
                    Entity["Concept", "MexicanHat::jw8ks"], 
                    Entity["Concept", "MexicanSunflower::k839k"], 
                    Entity["Concept", "MicrometerCaliper::2xwd2"], 
                    Entity["Concept", "MicropterusDolomieu::kjx2y"], 
                    Entity["Concept", "Midge::q4895"], 
                    Entity["Concept", "Mignonette::f5x52"], 
                    Entity["Concept", "Mihrab::b28s6"], 
                    Entity["Concept", "MilkCan::d9g72"], 
                    Entity["Concept", "Millepede::js6bn"], 
                    Entity["Concept", "Millet::b4h9s"], 
                    Entity["Concept", "Millstone::dv72m"], 
                    Entity["Concept", "Millstone::gsg4v"], 
                    Entity["Concept", "MillWheel::26zs5"], 
                    Entity["Concept", "Miltomate::j4675"], 
                    Entity["Concept", "MimusPolyglotktos::sv9g6"], 
                    Entity["Concept", "Mincer::5j857"], 
                    Entity["Concept", "MiniaturePinscher::jvy9c"], 
                    Entity["Concept", "MiniaturePoodle::4955p"], 
                    Entity["Concept", "MiniatureSchnauzer::848y9"], 
                    Entity["Concept", "Mini::pn78q"], 
                    Entity["Concept", "Minnow::p5qz4"], 
                    Entity["Concept", "Mint::j4mmf"], 
                    Entity["Concept", "Mint::vy4q9"], 
                    Entity["Concept", "Miro::7n77q"], 
                    Entity["Concept", "MisselThrush::j5brg"], 
                    Entity["Concept", "MissouriPrimrose::yc489"], 
                    Entity["Concept", "Mitten::7d534"], 
                    Entity["Concept", "Mixer::238c4"], 
                    Entity["Concept", "ModelT::c44dv"], 
                    Entity["Concept", "MoehringiaLateriflora::77gw2"], 
                    Entity["Concept", "MoehringiaMucosa::3x24k"], 
                    Entity["Concept", "Molle::fmyr5"], 
                    Entity["Concept", "MolochHorridus::9p79d"], 
                    Entity["Concept", "Momot::f7x9q"], 
                    Entity["Concept", "MonardaDidyma::v49b7"], 
                    Entity["Concept", "MonardaFistulosa::swwj6"], 
                    Entity["Concept", "MonardaPunctata::hgq46"], 
                    Entity["Concept", "Mongoose::5hp73"], 
                    Entity["Concept", "Monocycle::mrm29"], 
                    Entity["Concept", "MonsteraDeliciosa::34f2z"], 
                    Entity["Concept", "MontereyPine::s7d9g"], 
                    Entity["Concept", "MontiaChamissoi::2ph5c"], 
                    Entity["Concept", "Moorhen::dd52z"], 
                    Entity["Concept", "Mop::v6xdr"], 
                    Entity["Concept", "Moray::7t957"], 
                    Entity["Concept", "Morgan::375t6"], 
                    Entity["Concept", "MorningCoat::j4zdq"], 
                    Entity["Concept", "Mortarboard::8r99w"], 
                    Entity["Concept", "Mortar::jz37q"], 
                    Entity["Concept", "MorusAlba::9tbpd"], 
                    Entity["Concept", "Mosque::35k94"], 
                    Entity["Concept", "MosquitoNet::5z562"], 
                    Entity["Concept", "MossCampion::34p46"], 
                    Entity["Concept", "Mother-of-pearlCloud::n4xpd"], 
                    Entity["Concept", "MothMullein::6r576"], 
                    Entity["Concept", "Motorcycle::4gd85"], 
                    Entity["Concept", "MotorScooter::bbwp9"], 
                    Entity["Concept", "Moufflon::272gp"], 
                    Entity["Concept", "Mount::277j9"], 
                    Entity["Concept", "MountainGoat::29z82"], 
                    Entity["Concept", "MournfulWidow::584zy"], 
                    Entity["Concept", "MourningDove::993td"], 
                    Entity["Concept", "Mousetrap::j8542"], 
                    Entity["Concept", "Moussaka::38r98"], 
                    Entity["Concept", "Mouth::78j76"], 
                    Entity["Concept", "MovieHouse::hbj23"], 
                    Entity["Concept", "MovingRidge::8yt7m"], 
                    Entity["Concept", "MudDauber::t7p42"], 
                    Entity["Concept", "Mudguard::cy63c"], 
                    Entity["Concept", "Mudskipper::6dr2b"], 
                    Entity["Concept", "Mug::vw297"], 
                    Entity["Concept", "Mulberry::8939x"], 
                    Entity["Concept", "Mulch::6w6nr"], 
                    Entity["Concept", "Muller::h9246"], 
                    Entity["Concept", "Mulloway::c5868"], 
                    Entity["Concept", "MurphyBed::h9mdy"], 
                    Entity["Concept", "MusaParadisiaca::98h8n"], 
                    Entity["Concept", "MuscariComosum::29c45"], 
                    Entity["Concept", "MuscicapaGrisola::h4qwp"], 
                    Entity["Concept", "Muscivora-forficata::6927n"], 
                    Entity["Concept", "Museum::57sqy"], 
                    Entity["Concept", "MushroomCoral::4874h"], 
                    Entity["Concept", "Mushroom::wnmj8"], 
                    Entity["Concept", "MusicalBox::wc8wj"], 
                    Entity["Concept", "MusicalNotation::4kd4n"], 
                    Entity["Concept", "MusicRack::s4g58"], 
                    Entity["Concept", "MuskOx::3vt95"], 
                    Entity["Concept", "MuskRose::6xgt4"], 
                    Entity["Concept", "MuskTurtle::348g3"], 
                    Entity["Concept", "Musquash::7ysk4"], 
                    Entity["Concept", "MustelusMustelus::q6nq8"], 
                    Entity["Concept", "Muzzle::c7f4q"], 
                    Entity["Concept", "MyaArenaria::6k8cj"], 
                    Entity["Concept", "MycteropercaBonaci::t764g"], 
                    Entity["Concept", "MyristicaFragrans::7446g"], 
                    Entity["Concept", "MyrrhisOdorata::473w7"], 
                    Entity["Concept", "Naan::7fbvq"], 
                    Entity["Concept", "Nacho::s58h7"], 
                    Entity["Concept", "NailEnamel::2ds54"], 
                    Entity["Concept", "Nail::x2828"], 
                    Entity["Concept", "Nandu::jvdx9"], 
                    Entity["Concept", "Nanny-goat::697ww"], 
                    Entity["Concept", "NarcissusJonquilla::b7629"], 
                    Entity["Concept", "NasalisLarvatus::92p77"], 
                    Entity["Concept", "Nasturtium::ryg9p"], 
                    Entity["Concept", "NatrixMaura::sm8wc"], 
                    Entity["Concept", "NavelOrange::j6q95"], 
                    Entity["Concept", "Nebule::d9mmw"], 
                    Entity["Concept", "Neckerchief::tkw7x"], 
                    Entity["Concept", "Necklace::58n8w"], 
                    Entity["Concept", "Necklet::q56g3"], 
                    Entity["Concept", "Nectar::5hm38"], 
                    Entity["Concept", "Nectarine::3dhjr"], 
                    Entity["Concept", "NemophilaMaculata::4njvn"], 
                    Entity["Concept", "NepheliumLappaceum::n2m2w"], 
                    Entity["Concept", "NephropsNorvegicus::f4828"], 
                    Entity["Concept", "Neptune::zpx6x"], 
                    Entity["Concept", "Nerita::98p54"], 
                    Entity["Concept", "NeriumOleander::brty6"], 
                    Entity["Concept", "NewfoundlandDog::q787h"], 
                    Entity["Concept", "NewtonianReflector::767w4"], 
                    Entity["Concept", "NewWorldGoldfinch::9h7z4"], 
                    Entity["Concept", "NigellaDamascena::n6v9v"], 
                    Entity["Concept", "Night-bloomingCereus::6n4dd"], 
                    Entity["Concept", "Night-bloomingCereus::j379m"], 
                    Entity["Concept", "Nightdress::483nq"], 
                    Entity["Concept", "Night-light::64q3q"], 
                    Entity["Concept", "NightLizard::7259w"], 
                    Entity["Concept", "NimbostratusClouds::nr2d6"], 
                    Entity["Concept", "NimbusCloud::s2g79"], 
                    Entity["Concept", "Nipple::jfzc3"], 
                    Entity["Concept", "Niqab::gx6qd"], 
                    Entity["Concept", "NissenHut::6t2p4"], 
                    Entity["Concept", "Nopal::n2344"], 
                    Entity["Concept", "NorfolkTerrier::b7z76"], 
                    Entity["Concept", "Noria::vcd7c"], 
                    Entity["Concept", "NorthernParula::ws252"], 
                    Entity["Concept", "NorthernPitchPine::287w9"], 
                    Entity["Concept", "NorthernRedOak::5z394"], 
                    Entity["Concept", "NorwaySpruce::vz539"], 
                    Entity["Concept", "NorwichTerrier::9v483"], 
                    Entity["Concept", "Noseband::w5gnv"], 
                    Entity["Concept", "NotechisScutatus::nw434"], 
                    Entity["Concept", "NotophthalmusViridescens::4j4b5"], 
                    Entity["Concept", "Notornis::zjw89"], 
                    Entity["Concept", "Nougat::c576d"], 
                    Entity["Concept", "NutAndBolt::7n38q"], 
                    Entity["Concept", "Nyala::ttwn4"], 
                    Entity["Concept", "NyctanassaViolacea::7rq25"], 
                    Entity["Concept", "NycticebusPygmaeus::nhdv8"], 
                    Entity["Concept", "NyssaSylvatica::v2nhc"], 
                    Entity["Concept", "Oast::626g4"], 
                    Entity["Concept", "OastHouse::4x587"], 
                    Entity["Concept", "Obelisk::s7vg6"], 
                    Entity["Concept", "ObjectGlass::966k6"], 
                    Entity["Concept", "Observatory::vd2hg"], 
                    Entity["Concept", "Ocarina::zc9mv"], 
                    Entity["Concept", "Ocean::4zbf3"], 
                    Entity["Concept", "Oculus::69g2k"], 
                    Entity["Concept", "OdocoileusVirginianus::mhq9k"], 
                    Entity["Concept", "Odontoglossum::84xn9"], 
                    Entity["Concept", "OenotheraFruticosa::58xgf"], 
                    Entity["Concept", "OfficeBlock::83k99"], 
                    Entity["Concept", "Ohmmeter::7rqg7"], 
                    Entity["Concept", "OilFilter::d8chh"], 
                    Entity["Concept", "OilRefinery::k6869"], 
                    Entity["Concept", "Okapi::325yk"], 
                    Entity["Concept", "Okra::dgq9j"], 
                    Entity["Concept", "OldEnglishSheepdog::4zdy3"], 
                    Entity["Concept", "OldWorldHopHornbeam::rry2v"], 
                    Entity["Concept", "OldWorldScopsOwl::332tw"], 
                    Entity["Concept", "OldWorldWhitePelican::34rys"], 
                    Entity["Concept", "OlfactoryOrgan::z8zxt"], 
                    Entity["Concept", "Olive::nhsy3"], 
                    Entity["Concept", "OncidiumPapilio::686hz"], 
                    Entity["Concept", "OncorhynchusTshawytscha::y6t35"], 
                    Entity["Concept", "OnionDome::274x2"], 
                    Entity["Concept", "Openbill::7gktb"], 
                    Entity["Concept", "OperatingTable::w6963"], 
                    Entity["Concept", "OpheodrysAestivus::m636k"], 
                    Entity["Concept", "OpheodrysVernalis::3nny3"], 
                    Entity["Concept", "OphrysInsectifera::p54g5"], 
                    Entity["Concept", "OpiumPoppy::cy4nw"], 
                    Entity["Concept", "OpuntiaLindheimeri::h6385"], 
                    Entity["Concept", "Orang::5385s"], 
                    Entity["Concept", "OrangePeel::rbx22"], 
                    Entity["Concept", "Orchard::33b3z"], 
                    Entity["Concept", "OrchisPapilionaceae::yh4p5"], 
                    Entity["Concept", "Organdie::pzg3f"], 
                    Entity["Concept", "OrganizationChart::98yr7"], 
                    Entity["Concept", "OrientalArborvitae::4mt28"], 
                    Entity["Concept", "OrientalBushCherry::pg35r"], 
                    Entity["Concept", "OrientalPoppy::dqv84"], 
                    Entity["Concept", "OrientalSpruce::3477r"], 
                    Entity["Concept", "OrthotomusSutorius::5vgk6"], 
                    Entity["Concept", "Oscillograph::52z86"], 
                    Entity["Concept", "Ostensorium::tzr65"], 
                    Entity["Concept", "OtusAsio::8876f"], 
                    Entity["Concept", "Outrigger::x242j"], 
                    Entity["Concept", "OutsideMirror::y7837"], 
                    Entity["Concept", "Ovenbird::c884q"], 
                    Entity["Concept", "OverheadProjector::y7nv4"], 
                    Entity["Concept", "Owlet::4jrtk"], 
                    Entity["Concept", "OxalisViolacea::d7zcq"], 
                    Entity["Concept", "Oxcart::vwjn2"], 
                    Entity["Concept", "Oximeter::sm6nb"], 
                    Entity["Concept", "Oxlip::2fw59"], 
                    Entity["Concept", "OxydendrumArboreum::7377z"], 
                    Entity["Concept", "OxygenMask::4k479"], 
                    Entity["Concept", "OxyuraJamaicensis::6884w"], 
                    Entity["Concept", "OxyuranusScutellatus::jq999"], 
                    Entity["Concept", "OysterCatcher::9drpt"], 
                    Entity["Concept", "Pachouli::43w62"], 
                    Entity["Concept", "PacificBottlenoseDolphin::p63r9"], 
                    Entity["Concept", "PacificHemlock::8f4sg"], 
                    Entity["Concept", "Pack::9x8yj"], 
                    Entity["Concept", "PackingCase::m8bgc"], 
                    Entity["Concept", "Paddlefish::vnxd6"], 
                    Entity["Concept", "PaddleWheel::c59g3"], 
                    Entity["Concept", "Paddymelon::x7ckx"], 
                    Entity["Concept", "Padlock::73c99"], 
                    Entity["Concept", "Paeony::nv7x9"], 
                    Entity["Concept", "PaintballGun::75z54"], 
                    Entity["Concept", "Paintbrush::2456k"], 
                    Entity["Concept", "PaintedBeauty::p82vk"], 
                    Entity["Concept", "Painting::4rh82"], 
                    Entity["Concept", "PairOfPincers::xg4n6"], 
                    Entity["Concept", "PairOfPliers::9756m"], 
                    Entity["Concept", "PairOfScissors::3gyct"], 
                    Entity["Concept", "Paisley::2762m"], 
                    Entity["Concept", "Paling::2brd3"], 
                    Entity["Concept", "Pallasite::32tn9"], 
                    Entity["Concept", "Palomino::vckx3"], 
                    Entity["Concept", "PanamaTree::gzjr6"], 
                    Entity["Concept", "PandeanPipe::gjck2"], 
                    Entity["Concept", "Pangolin::wwqg6"], 
                    Entity["Concept", "Panicle::4hkn3"], 
                    Entity["Concept", "PanicumVirgatum::mp4sk"], 
                    Entity["Concept", "PanonychusUlmi::7745s"], 
                    Entity["Concept", "PansyOrchid::27fp3"], 
                    Entity["Concept", "Pan::t7b86"], 
                    Entity["Concept", "PantheraPardus::r35k5"], 
                    Entity["Concept", "PantheraTigris::2mpmq"], 
                    Entity["Concept", "PantheraUncia::z6697"], 
                    Entity["Concept", "Pantie::83c49"], 
                    Entity["Concept", "Pantry::956q9"], 
                    Entity["Concept", "PantyGirdle::7464y"], 
                    Entity["Concept", "Pantyhose::k5x6b"], 
                    Entity["Concept", "PapaverAlpinum::3gkpv"], 
                    Entity["Concept", "PapaverArgemone::548k4"], 
                    Entity["Concept", "Papaw::vdv63"], 
                    Entity["Concept", "Papaya::27bj9"], 
                    Entity["Concept", "PaperChain::775m7"], 
                    Entity["Concept", "PaperTowel::j7j8m"], 
                    Entity["Concept", "Papillon::zhn7j"], 
                    Entity["Concept", "ParalithodesCamtschatica::pfzy2"], 
                    Entity["Concept", "Parasol::qzn44"], 
                    Entity["Concept", "ParkingMeter::h445p"], 
                    Entity["Concept", "Parrotfish::n3wvw"], 
                    Entity["Concept", "Parsley::6d52j"], 
                    Entity["Concept", "ParusBicolor::cx34w"], 
                    Entity["Concept", "PasserMontanus::32mk7"], 
                    Entity["Concept", "PassifloraFoetida::967wx"], 
                    Entity["Concept", "PatchPocket::y7x52"], 
                    Entity["Concept", "Path::8d5bp"], 
                    Entity["Concept", "Patio::65kf2"], 
                    Entity["Concept", "PatrolCar::cb8bg"], 
                    Entity["Concept", "Pavonia::2f27r"], 
                    Entity["Concept", "Pay-phone::4h2kc"], 
                    Entity["Concept", "PeaceLily::gk6fc"], 
                    Entity["Concept", "Peach::442hf"], 
                    Entity["Concept", "PeachTree::gc7fr"], 
                    Entity["Concept", "Peacock::kd2y4"], 
                    Entity["Concept", "Peahen::fb4fv"], 
                    Entity["Concept", "Peanut::6bc72"], 
                    Entity["Concept", "PearTree::hj64n"], 
                    Entity["Concept", "Pecan::9m3y8"], 
                    Entity["Concept", "PedioecetesPhasianellus::p2h55"], 
                    Entity["Concept", "Pedometer::5rpsk"], 
                    Entity["Concept", "Peeler::b8777"], 
                    Entity["Concept", "Peg::gzc28"], 
                    Entity["Concept", "Peke::b9n5f"], 
                    Entity["Concept", "PelargoniumGraveolens::g657k"], 
                    Entity["Concept", "PelecanusErythrorhynchos::h87qy"], 
                    Entity["Concept", "Pelmet::by8vn"], 
                    Entity["Concept", "Pembroke::95g54"], 
                    Entity["Concept", "Pencil::fjb3r"], 
                    Entity["Concept", "PencilSharpener::23nv4"], 
                    Entity["Concept", "PennyArcade::73r25"], 
                    Entity["Concept", "Pennywhistle::2j4bn"], 
                    Entity["Concept", "PercaFlavescens::x3db2"], 
                    Entity["Concept", "Perch::83n3t"], 
                    Entity["Concept", "PerodicticusPotto::7z6h9"], 
                    Entity["Concept", "Persimmon::p4v39"], 
                    Entity["Concept", "Person::93r37"], 
                    Entity["Concept", "Pestle::qw8x7"], 
                    Entity["Concept", "PetriDish::xt977"], 
                    Entity["Concept", "PetromyzonMarinus::563q2"], 
                    Entity["Concept", "Phaius::764n9"], 
                    Entity["Concept", "PhalaropusFulicarius::jtm24"], 
                    Entity["Concept", "PhasianusColchicus::4j55s"], 
                    Entity["Concept", "PhellodendronAmurense::rb7dp"], 
                    Entity["Concept", "PhiladelphusCoronarius::98n43"], 
                    Entity["Concept", "Philodendron::658kq"], 
                    Entity["Concept", "Phlomis::6s785"], 
                    Entity["Concept", "Phoebe::j9w64"], 
                    Entity["Concept", "PhoneCord::376x2"], 
                    Entity["Concept", "PhoneJack::33sn7"], 
                    Entity["Concept", "PhonographNeedle::34p5p"], 
                    Entity["Concept", "PhrynosomaCornutum::2zy82"], 
                    Entity["Concept", "PhylloscopusSibilatrix::tcrr5"], 
                    Entity["Concept", "PhysalisIxocarpa::chf8x"], 
                    Entity["Concept", "PianoKeyboard::6xz3r"], 
                    Entity["Concept", "Piazza::8qf59"], 
                    Entity["Concept", "PiceaGlauca::479rr"], 
                    Entity["Concept", "PiceaSitchensis::s8dv2"], 
                    Entity["Concept", "PickerelFrog::5fspc"], 
                    Entity["Concept", "PickupTruck::9k58n"], 
                    Entity["Concept", "PicnicArea::9k957"], 
                    Entity["Concept", "PictureFrame::njnz2"], 
                    Entity["Concept", "PieChart::4p9fd"], 
                    Entity["Concept", "Pied-billedGrebe::w5jdh"], 
                    Entity["Concept", "Pieta::j4r84"], 
                    Entity["Concept", "Pignolia::8cvvw"], 
                    Entity["Concept", "PigsInBlankets::d5bqs"], 
                    Entity["Concept", "PileDriver::8tctw"], 
                    Entity["Concept", "PillBug::sng68"], 
                    Entity["Concept", "Pillory::yy4k8"], 
                    Entity["Concept", "Pilothouse::6z229"], 
                    Entity["Concept", "Pinata::8zxkt"], 
                    Entity["Concept", "PinballMachine::p8982"], 
                    Entity["Concept", "PinCherry::3nn28"], 
                    Entity["Concept", "PineappleGuava::687f4"], 
                    Entity["Concept", "PineFinch::6ngxc"], 
                    Entity["Concept", "PineGrosbeak::3d48d"], 
                    Entity["Concept", "Ping-pongBall::3vdwp"], 
                    Entity["Concept", "PingpongPaddle::9s449"], 
                    Entity["Concept", "Ping-pongTable::zjbd3"], 
                    Entity["Concept", "Pinnule::g2477"], 
                    Entity["Concept", "Pintado::q5bn3"], 
                    Entity["Concept", "Pinto::4d9t2"], 
                    Entity["Concept", "PinusAlbicaulis::6fp2n"], 
                    Entity["Concept", "PinusGlabra::dvmg7"], 
                    Entity["Concept", "PinusMonophylla::r39pv"], 
                    Entity["Concept", "PinusMonticola::kd793"], 
                    Entity["Concept", "PinusNigra::sm4nv"], 
                    Entity["Concept", "PinusSerotina::3r2w3"], 
                    Entity["Concept", "PinusSylvestris::h943s"], 
                    Entity["Concept", "PinwheelWindCollector::m646p"], 
                    Entity["Concept", "PipeCutter::9597n"], 
                    Entity["Concept", "PipeOrgan::gq9sr"], 
                    Entity["Concept", "Pipistrel::vn764"], 
                    Entity["Concept", "PirangaLudoviciana::6k5hz"], 
                    Entity["Concept", "PirangaOlivacea::bw8f4"], 
                    Entity["Concept", "PirangaRubra::tpq56"], 
                    Entity["Concept", "PistachioNut::256v7"], 
                    Entity["Concept", "Pistia::8stj9"], 
                    Entity["Concept", "Piston::km8w3"], 
                    Entity["Concept", "PistonRod::552mn"], 
                    Entity["Concept", "Pitahaya::976h9"], 
                    Entity["Concept", "Pita::my5jj"], 
                    Entity["Concept", "PitchersMound::25n4w"], 
                    Entity["Concept", "PithHat::hz637"], 
                    Entity["Concept", "Pitta::q3bwn"], 
                    Entity["Concept", "PituophisMelanoleucus::b6652"], 
                    Entity["Concept", "Pizza::56w88"], 
                    Entity["Concept", "PlaneSeat::9s7fc"], 
                    Entity["Concept", "Planetarium::kq5yg"], 
                    Entity["Concept", "PlasterBandage::hxxm2"], 
                    Entity["Concept", "Plastron::g5m85"], 
                    Entity["Concept", "Platy::g5728"], 
                    Entity["Concept", "PlatymisciumTrinitatis::k6943"], 
                    Entity["Concept", "PlaygroundSlide::88yg8"], 
                    Entity["Concept", "Plecopteran::9p4c7"], 
                    Entity["Concept", "Plectranthus::22v6r"], 
                    Entity["Concept", "PlectrophenaxNivalis::mr6st"], 
                    Entity["Concept", "PleuronectesPlatessa::4kmbc"], 
                    Entity["Concept", "Plot::7jp7f"], 
                    Entity["Concept", "Plough::y6c4t"], 
                    Entity["Concept", "Plughole::87zj4"], 
                    Entity["Concept", "Plumb::9kqpf"], 
                    Entity["Concept", "Plumbago::3792s"], 
                    Entity["Concept", "PlumbersHelper::hq4m2"], 
                    Entity["Concept", "PlushToy::53zdc"], 
                    Entity["Concept", "Pluto::8y97x"], 
                    Entity["Concept", "Pluviometer::335r2"], 
                    Entity["Concept", "PocketKnife::b389r"], 
                    Entity["Concept", "PocketWatch::vygc6"], 
                    Entity["Concept", "PodicepsGrisegena::j9378"], 
                    Entity["Concept", "PoephilaCastanotis::tghz6"], 
                    Entity["Concept", "Pogonia::536p7"], 
                    Entity["Concept", "PoisonAsh::jzg72"], 
                    Entity["Concept", "PolianthesTuberosa::889d4"], 
                    Entity["Concept", "Polisher::w567r"], 
                    Entity["Concept", "PollachiusPollachius::dph6h"], 
                    Entity["Concept", "Polliwog::br5yx"], 
                    Entity["Concept", "Polyanthus::vjpq2"], 
                    Entity["Concept", "PomatomusSaltatrix::gcdt9"], 
                    Entity["Concept", "Pomegranate::dh736"], 
                    Entity["Concept", "PomegranateTree::d245v"], 
                    Entity["Concept", "Pomelo::93yhj"], 
                    Entity["Concept", "Pomeranian::dx7mr"], 
                    Entity["Concept", "PommelHorse::8v788"], 
                    Entity["Concept", "Pompadour::339h2"], 
                    Entity["Concept", "Poncho::tr389"], 
                    Entity["Concept", "Pontoon::j583g"], 
                    Entity["Concept", "PooecetesGramineus::6c495"], 
                    Entity["Concept", "Poolroom::6xj75"], 
                    Entity["Concept", "PoopDeck::gwh5b"], 
                    Entity["Concept", "Popcorn::kgs4w"], 
                    Entity["Concept", "Popover::7h5b6"], 
                    Entity["Concept", "PopulusTrichocarpa::ns95t"], 
                    Entity["Concept", "Porcelain::33d5s"], 
                    Entity["Concept", "Portcullis::m27qk"], 
                    Entity["Concept", "PortugueseMan-of-war::2wckg"], 
                    Entity["Concept", "PortulacaGrandiflora::mfyj2"], 
                    Entity["Concept", "PorzanaPorzana::8ss64"], 
                    Entity["Concept", "PossumOak::r8962"], 
                    Entity["Concept", "PotatoSalad::6w732"], 
                    Entity["Concept", "PotatoWorm::8r9ht"], 
                    Entity["Concept", "Potentiometer::3ty72"], 
                    Entity["Concept", "Pothos::fq6vf"], 
                    Entity["Concept", "PottersWheel::zwt32"], 
                    Entity["Concept", "PottyChair::5hq4d"], 
                    Entity["Concept", "Pouffe::n5c2g"], 
                    Entity["Concept", "PowderFlask::37x53"], 
                    Entity["Concept", "PowerCord::h83mp"], 
                    Entity["Concept", "PowerPlant::f5bcm"], 
                    Entity["Concept", "PrairieFox::7p26f"], 
                    Entity["Concept", "PressureCooker::9x29n"], 
                    Entity["Concept", "PricklyPear::4qb6m"], 
                    Entity["Concept", "PrimulaVeris::3kgwn"], 
                    Entity["Concept", "Primus::b3gxc"], 
                    Entity["Concept", "ProcaviaCapensis::5d26t"], 
                    Entity["Concept", "ProgneSubis::sr52p"], 
                    Entity["Concept", "Projector::m6hfr"], 
                    Entity["Concept", "Protractor::fb68j"], 
                    Entity["Concept", "PrunusCaroliniana::2s728"], 
                    Entity["Concept", "PrunusSieboldii::3h578"], 
                    Entity["Concept", "PrunusTriloba::759gz"], 
                    Entity["Concept", "PseudemysRubriventris::fq2q8"], 
                    Entity["Concept", "PseudemysScripta::vkw6n"], 
                    Entity["Concept", "PsidiumLittorale::3wd5s"], 
                    Entity["Concept", "PsittaculaKrameri::yvkv8"], 
                    Entity["Concept", "PtilonorhynchusViolaceus::khg4z"], 
                    Entity["Concept", "Puffbird::8866n"], 
                    Entity["Concept", "Pug::6799h"], 
                    Entity["Concept", "Pulsar::dzc44"], 
                    Entity["Concept", "PumpkinSeed::bw2wn"], 
                    Entity["Concept", "PunchBag::wm5qg"], 
                    Entity["Concept", "PurpleClover::mf83q"], 
                    Entity["Concept", "PurpleGrackle::tcj8s"], 
                    Entity["Concept", "PurpleSaxifrage::9447y"], 
                    Entity["Concept", "Purse::n57jd"], 
                    Entity["Concept", "PuttingGreen::5v952"], 
                    Entity["Concept", "PyrocephalusRubinusMexicanus::n49bn"], 
                    Entity["Concept", "PyrolaRotundifolia::cz5wg"], 
                    Entity["Concept", "Pyrrhuloxia::r6xsj"], 
                    Entity["Concept", "PythonReticulatus::28vxg"], 
                    Entity["Concept", "PythonSebae::dmhh6"], 
                    Entity["Concept", "QRCode::p765t"], 
                    Entity["Concept", "Quadcopter::qdxy6"], 
                    Entity["Concept", "Queenfish::7q866"], 
                    Entity["Concept", "QuercusFalcata::38c73"], 
                    Entity["Concept", "QuercusImbricaria::3892r"], 
                    Entity["Concept", "QuercusLaurifolia::629t4"], 
                    Entity["Concept", "QuercusMichauxii::h6xtr"], 
                    Entity["Concept", "QuercusPalustris::b4j3q"], 
                    Entity["Concept", "QuercusVirginiana::j4bmv"], 
                    Entity["Concept", "Quesadilla::9d5f5"], 
                    Entity["Concept", "QuillPen::jm57s"], 
                    Entity["Concept", "Quince::553s5"], 
                    Entity["Concept", "Quiver::2873q"], 
                    Entity["Concept", "Racecourse::bh4b4"], 
                    Entity["Concept", "Racquetball::4x923"], 
                    Entity["Concept", "RadarDome::srx22"], 
                    Entity["Concept", "RadiatorGrille::75d36"], 
                    Entity["Concept", "Radiator::vv949"], 
                    Entity["Concept", "RaffiaVinifera::k9zsr"], 
                    Entity["Concept", "Raft::g5z85"], 
                    Entity["Concept", "Rail::36jk3"], 
                    Entity["Concept", "RailroadTrack::8b344"], 
                    Entity["Concept", "RailroadTunnel::6bcy3"], 
                    Entity["Concept", "RainbowLorikeet::29w5z"], 
                    Entity["Concept", "RainForest::n3ncm"], 
                    Entity["Concept", "Rake::564h4"], 
                    Entity["Concept", "Rambotan::9m93n"], 
                    Entity["Concept", "RanaSylvatica::9g882"], 
                    Entity["Concept", "RangeHood::q8j43"], 
                    Entity["Concept", "RangiferCaribou::5wzkm"], 
                    Entity["Concept", "RanunculusAquatilis::z85q7"], 
                    Entity["Concept", "RaphanusSativus::gfc6g"], 
                    Entity["Concept", "RaphicerusCampestris::w6979"], 
                    Entity["Concept", "Raspberry::v449c"], 
                    Entity["Concept", "RatibidaTagetes::mjnx5"], 
                    Entity["Concept", "RearLamp::n8qn7"], 
                    Entity["Concept", "RearviewMirror::gx5qy"], 
                    Entity["Concept", "ReceptionDesk::y2d2f"], 
                    Entity["Concept", "ReceptionRoom::wt333"], 
                    Entity["Concept", "ReciprocatingSaw::3qj8n"], 
                    Entity["Concept", "Recliner::35nd9"], 
                    Entity["Concept", "RecreationRoom::8vn25"], 
                    Entity["Concept", "RecyclingBin::3hcgs"], 
                    Entity["Concept", "RedAdmiral::23z79"], 
                    Entity["Concept", "Redbone::j6h4x"], 
                    Entity["Concept", "Red-breastedNuthatch::gyz5m"], 
                    Entity["Concept", "Red-breastedSapsucker::qwx4x"], 
                    Entity["Concept", "RedCurrant::6mmkc"], 
                    Entity["Concept", "RedDelicious::xxzy3"], 
                    Entity["Concept", "Red-eyedVireo::htt2q"], 
                    Entity["Concept", "RedJungleFowl::pw962"], 
                    Entity["Concept", "RedPlanet::wbck3"], 
                    Entity["Concept", "Redshank::yvbj8"], 
                    Entity["Concept", "Redstart::t5btg"], 
                    Entity["Concept", "RedWine::666g6"], 
                    Entity["Concept", "Reef::qc387"], 
                    Entity["Concept", "ReefWhitetipShark::cvm75"], 
                    Entity["Concept", "Reel::9ymsb"], 
                    Entity["Concept", "Reel::v4rgf"], 
                    Entity["Concept", "Refractometer::98d36"], 
                    Entity["Concept", "RegulusCalendula::46d93"], 
                    Entity["Concept", "Remote::h4drx"], 
                    Entity["Concept", "ResidentialArea::s4j77"], 
                    Entity["Concept", "Resistor::d7w57"], 
                    Entity["Concept", "Retractor::3v669"], 
                    Entity["Concept", "Revolver::b4x23"], 
                    Entity["Concept", "RhamnusCroceus::475q6"], 
                    Entity["Concept", "RheaAmericana::hw98s"], 
                    Entity["Concept", "RhincodonTypus::r786w"], 
                    Entity["Concept", "RhinocerosBeetle::23y53"], 
                    Entity["Concept", "RhodeIslandRed::39xc4"], 
                    Entity["Concept", "RhodesianRidgeback::jph75"], 
                    Entity["Concept", "RhododendronMaxima::d8593"], 
                    Entity["Concept", "RhododendronViscosum::d4m8c"], 
                    Entity["Concept", "RhusTyphina::tr5nc"], 
                    Entity["Concept", "Riband::22tqh"], 
                    Entity["Concept", "RibbedVault::93psb"], 
                    Entity["Concept", "RibbonSnake::7tfhk"], 
                    Entity["Concept", "Ridgeline::6yxnp"], 
                    Entity["Concept", "RidgeRope::mw677"], 
                    Entity["Concept", "RidingMower::n8mmd"], 
                    Entity["Concept", "Ring-binder::848m9"], 
                    Entity["Concept", "RingBlackbird::6549j"], 
                    Entity["Concept", "RingletButterfly::28v7s"], 
                    Entity["Concept", "Ring-neckedSnake::2f823"], 
                    Entity["Concept", "River::m23qn"], 
                    Entity["Concept", "Rivet::79mtr"], 
                    Entity["Concept", "Rivulus::9vq87"], 
                    Entity["Concept", "Road::j3vqw"], 
                    Entity["Concept", "RoadRoller::99d69"], 
                    Entity["Concept", "Roan::gj8fq"], 
                    Entity["Concept", "RobiniaPseudoacacia::sm3gn"], 
                    Entity["Concept", "RoccusSaxatilis::gygb4"], 
                    Entity["Concept", "Rock::9zbnr"], 
                    Entity["Concept", "RockKangaroo::h25d2"], 
                    Entity["Concept", "RodoliaCardinalis::wyg5m"], 
                    Entity["Concept", "RollerBlind::5r992"], 
                    Entity["Concept", "RollerSkate::fz772"], 
                    Entity["Concept", "RollingPin::98bk7"], 
                    Entity["Concept", "Rood::y47g7"], 
                    Entity["Concept", "RoseApple::zcqw6"], 
                    Entity["Concept", "Rosebud::6kk73"], 
                    Entity["Concept", "RoseHip::333d2"], 
                    Entity["Concept", "Rosemary::5c289"], 
                    Entity["Concept", "RoseWindow::898p9"], 
                    Entity["Concept", "RosmarinusOfficinalis::s83f7"], 
                    Entity["Concept", "Rottweiler::zywt3"], 
                    Entity["Concept", "Rough-skinnedNewt::55hq8"], 
                    Entity["Concept", "RouletteWheel::68hp8"], 
                    Entity["Concept", "RoveBeetle::5xsv6"], 
                    Entity["Concept", "Rowanberry::f7drb"], 
                    Entity["Concept", "RoyalPalm::f6wtt"], 
                    Entity["Concept", "RoystoneaOleracea::f6243"], 
                    Entity["Concept", "RubusParviflorus::3bmc6"], 
                    Entity["Concept", "RudbeckiaHirta::x8mxh"], 
                    Entity["Concept", "RugbyBall::34tbp"], 
                    Entity["Concept", "Ruin::cb3x7"], 
                    Entity["Concept", "Rule::shrw6"], 
                    Entity["Concept", "RumbleSeat::wbv7j"], 
                    Entity["Concept", "RumexAcetosa::982f4"], 
                    Entity["Concept", "Runway::64ckp"], 
                    Entity["Concept", "RupicapraRupicapra::9k9gz"], 
                    Entity["Concept", "RupicolaPeruviana::b8j9k"], 
                    Entity["Concept", "RupicolaRupicola::9842j"], 
                    Entity["Concept", "Saber::5tzc5"], 
                    Entity["Concept", "SacredIbis::v3tf6"], 
                    Entity["Concept", "Safe::36p67"], 
                    Entity["Concept", "SafetyHat::t3g5y"], 
                    Entity["Concept", "SafetyPin::8h4m3"], 
                    Entity["Concept", "SafetyRazor::388mh"], 
                    Entity["Concept", "Saffron::36w99"], 
                    Entity["Concept", "SagittariusSerpentarius::5tp45"], 
                    Entity["Concept", "Sail::f2vt7"], 
                    Entity["Concept", "SaimiriSciureus::f9528"], 
                    Entity["Concept", "SaintBernard::r5277"], 
                    Entity["Concept", "SaintPetersWreath::f2zfv"], 
                    Entity["Concept", "Salade::8sjdy"], 
                    Entity["Concept", "SalixDiscolor::9895m"], 
                    Entity["Concept", "SalmoGairdneri::7s72w"], 
                    Entity["Concept", "Saloon::y8y52"], 
                    Entity["Concept", "SalpinctesObsoletus::2yn8v"], 
                    Entity["Concept", "Salsa::8mtkh"], 
                    Entity["Concept", "SaltShaker::7k48t"], 
                    Entity["Concept", "SalvelinusFontinalis::2c8ny"], 
                    Entity["Concept", "SalvelinusNamaycush::h7bhs"], 
                    Entity["Concept", "SalviaClarea::753q6"], 
                    Entity["Concept", "SalviaVerbenaca::h7xfw"], 
                    Entity["Concept", "Samisen::462qb"], 
                    Entity["Concept", "Samosa::d9d7h"], 
                    Entity["Concept", "Samovar::dj5fx"], 
                    Entity["Concept", "Samoyede::rq827"], 
                    Entity["Concept", "Sandbag::fjkb5"], 
                    Entity["Concept", "SandBar::4w689"], 
                    Entity["Concept", "Sandbox::4d86z"], 
                    Entity["Concept", "SandCat::898g9"], 
                    Entity["Concept", "SandDollar::7x427"], 
                    Entity["Concept", "SandTrap::dmgn6"], 
                    Entity["Concept", "SanitaryLandfill::6chf3"], 
                    Entity["Concept", "SansevieriaTrifasciata::ry9nn"], 
                    Entity["Concept", "Sarcophagus::686c8"], 
                    Entity["Concept", "SarcophilusHariisi::ys6v2"], 
                    Entity["Concept", "Sarong::96j5v"], 
                    Entity["Concept", "SashFastener::5233p"], 
                    Entity["Concept", "SassafrasAlbidum::6853r"], 
                    Entity["Concept", "Satchel::6bt49"], 
                    Entity["Concept", "SatelliteTelevision::fr68f"], 
                    Entity["Concept", "Saturn::t9q26"], 
                    Entity["Concept", "Saucepot::482v4"], 
                    Entity["Concept", "Sauerkraut::r575g"], 
                    Entity["Concept", "SausageDog::23x85"], 
                    Entity["Concept", "SauvignonGrape::4k7v6"], 
                    Entity["Concept", "SavoyCabbage::xr255"], 
                    Entity["Concept", "Saw::272w6"], 
                    Entity["Concept", "SawPalmetto::43c49"], 
                    Entity["Concept", "Saxhorn::9qq7w"], 
                    Entity["Concept", "SaxicolaRubetra::5fq56"], 
                    Entity["Concept", "SaxicolaTorquata::42y3g"], 
                    Entity["Concept", "SaxifragaAizoides::z8277"], 
                    Entity["Concept", "SaxifragaStellaris::jt6tv"], 
                    Entity["Concept", "Sax::v45s9"], 
                    Entity["Concept", "Scaffolding::8mk63"], 
                    Entity["Concept", "ScallopShell::m6vk4"], 
                    Entity["Concept", "Scalpel::774jz"], 
                    Entity["Concept", "Scarab::2rdd4"], 
                    Entity["Concept", "ScarfBandage::7ytc5"], 
                    Entity["Concept", "Schipperke::7778z"], 
                    Entity["Concept", "Schoolhouse::h57xw"], 
                    Entity["Concept", "ScillaVerna::w73xw"], 
                    Entity["Concept", "SciurusVulgaris::qyf48"], 
                    Entity["Concept", "ScomberColias::smns9"], 
                    Entity["Concept", "Sconce::28h78"], 
                    Entity["Concept", "Sconce::k4527"], 
                    Entity["Concept", "Scoreboard::z76vk"], 
                    Entity["Concept", "Scorpion::9rx48"], 
                    Entity["Concept", "ScorpionFly::rwjr5"], 
                    Entity["Concept", "ScotchEgg::c93wg"], 
                    Entity["Concept", "ScotchTerrier::2f2jw"], 
                    Entity["Concept", "ScouringPad::w4p2t"], 
                    Entity["Concept", "ScrambledEggs::jz4yj"], 
                    Entity["Concept", "ScreechOwl::7hd6z"], 
                    Entity["Concept", "ScreenBackground::x4dx6"], 
                    Entity["Concept", "Screw::9yqq6"], 
                    Entity["Concept", "ScrewAugur::5cj7m"], 
                    Entity["Concept", "ScrewPropeller::4dmt9"], 
                    Entity["Concept", "ScrubbingBrush::2tsp7"], 
                    Entity["Concept", "Scrub-bird::33j63"], 
                    Entity["Concept", "Scrubs::32v56"], 
                    Entity["Concept", "Scull::4mbvk"], 
                    Entity["Concept", "Sea-coast::m3d85"], 
                    Entity["Concept", "SeaCrawfish::x53g2"], 
                    Entity["Concept", "SeaFan::p8h79"], 
                    Entity["Concept", "SeaFeather::9645j"], 
                    Entity["Concept", "SeaHorse::6xwsh"], 
                    Entity["Concept", "SeaPen::75vw3"], 
                    Entity["Concept", "Seaport::v6xqq"], 
                    Entity["Concept", "Searchlight::djc6x"], 
                    Entity["Concept", "Seashell::y28bt"], 
                    Entity["Concept", "SeaSnake::s529y"], 
                    Entity["Concept", "SeaSquirt::94pv4"], 
                    Entity["Concept", "SeaStar::46w97"], 
                    Entity["Concept", "SeaSwallow::vns6b"], 
                    Entity["Concept", "SeaTrout::735m9"], 
                    Entity["Concept", "SecaleCereale::jw667"], 
                    Entity["Concept", "Sectional::c2s92"], 
                    Entity["Concept", "SedimentaryRock::n8d64"], 
                    Entity["Concept", "Seeder::6v6p9"], 
                    Entity["Concept", "Segway::tr5j5"], 
                    Entity["Concept", "SeiurusAurocapillus::ht8wy"], 
                    Entity["Concept", "SenecioGlabellus::2228p"], 
                    Entity["Concept", "SentryBox::qbd74"], 
                    Entity["Concept", "Serin::2dfny"], 
                    Entity["Concept", "SeriolaDorsalis::3478r"], 
                    Entity["Concept", "SeriolaGrandis::fp8m7"], 
                    Entity["Concept", "Servo::933x9"], 
                    Entity["Concept", "Settee::r98kd"], 
                    Entity["Concept", "Settle::3gb4q"], 
                    Entity["Concept", "Shackle::njjh9"], 
                    Entity["Concept", "Sharpie::qf5xj"], 
                    Entity["Concept", "ShavingBrush::7sxjd"], 
                    Entity["Concept", "ShavingCream::c7f38"], 
                    Entity["Concept", "Shawl::p294s"], 
                    Entity["Concept", "SheathKnife::k2732"], 
                    Entity["Concept", "Shed::dt85y"], 
                    Entity["Concept", "SheepskinCoat::gbpd4"], 
                    Entity["Concept", "Shelduck::883g7"], 
                    Entity["Concept", "ShelfBracket::852t3"], 
                    Entity["Concept", "ShetlandPony::59xbs"], 
                    Entity["Concept", "ShetlandSheepDog::sffh8"], 
                    Entity["Concept", "Shih-Tzu::kc9k8"], 
                    Entity["Concept", "ShinGuard::63g98"], 
                    Entity["Concept", "ShireHorse::4zm7p"], 
                    Entity["Concept", "Shoebox::x9nb2"], 
                    Entity["Concept", "Shoehorn::6783n"], 
                    Entity["Concept", "Shoe::x5fhn"], 
                    Entity["Concept", "Shofar::wy3m3"], 
                    Entity["Concept", "Shoji::x95jt"], 
                    Entity["Concept", "Shop::6r4y9"], 
                    Entity["Concept", "Shopfront::ym8qk"], 
                    Entity["Concept", "ShoppingCart::95g62"], 
                    Entity["Concept", "ShoppingCenter::q5398"], 
                    Entity["Concept", "Shorthorn::8hj25"], 
                    Entity["Concept", "ShotGlass::48bv9"], 
                    Entity["Concept", "ShotgunShell::8r88j"], 
                    Entity["Concept", "ShoulderHolster::339jx"], 
                    Entity["Concept", "ShoulderPatch::286cg"], 
                    Entity["Concept", "Shovel::tjpz7"], 
                    Entity["Concept", "ShowerCap::2787m"], 
                    Entity["Concept", "ShowerCurtain::6cs25"], 
                    Entity["Concept", "Shower::d7n6z"], 
                    Entity["Concept", "Shredder::3398n"], 
                    Entity["Concept", "ShrimpCocktail::sdc6t"], 
                    Entity["Concept", "Shuttlecock::5v38x"], 
                    Entity["Concept", "SiberianHusky::k7pkk"], 
                    Entity["Concept", "Side-blotchedLizard::83cdy"], 
                    Entity["Concept", "Sidecar::h9twm"], 
                    Entity["Concept", "SideDrum::82r54"], 
                    Entity["Concept", "SileneCaroliniana::xvd42"], 
                    Entity["Concept", "SileneUniflora::d3jw9"], 
                    Entity["Concept", "Silk::k39gk"], 
                    Entity["Concept", "Silkworm::h988h"], 
                    Entity["Concept", "SilkyTerrier::xyfw3"], 
                    Entity["Concept", "SilphiumLaciniatum::fc2vy"], 
                    Entity["Concept", "SilverLime::57y4w"], 
                    Entity["Concept", "SilviaAtricapilla::3zm2s"], 
                    Entity["Concept", "Single-breastedJacket::6b769"], 
                    Entity["Concept", "Single-breastedSuit::6s555"], 
                    Entity["Concept", "Singlet::36k55"], 
                    Entity["Concept", "Sitar::28jqv"], 
                    Entity["Concept", "SittaCarolinensis::529y7"], 
                    Entity["Concept", "Skateboard::wvjx6"], 
                    Entity["Concept", "Skein::82g9q"], 
                    Entity["Concept", "SkiBinding::5h5qy"], 
                    Entity["Concept", "SkiBoot::hmn66"], 
                    Entity["Concept", "SkiMask::6hd4m"], 
                    Entity["Concept", "Skimmer::v9946"], 
                    Entity["Concept", "SkiPole::m4ydq"], 
                    Entity["Concept", "Skirt::jmv8x"], 
                    Entity["Concept", "SkiSlope::jp33w"], 
                    Entity["Concept", "Sky::783jr"], 
                    Entity["Concept", "Skyscraper::krrh2"], 
                    Entity["Concept", "SleepingBag::549k4"], 
                    Entity["Concept", "SlenderSalamander::8957m"], 
                    Entity["Concept", "Slender-tailedMeerkat::vt76g"], 
                    Entity["Concept", "SlideRule::59p96"], 
                    Entity["Concept", "Sloe::4x753"], 
                    Entity["Concept", "SloppyJoe::s2phn"], 
                    Entity["Concept", "Slug::d4638"], 
                    Entity["Concept", "Slum::775f2"], 
                    Entity["Concept", "SmallWhite::79m8v"], 
                    Entity["Concept", "Smocking::2922d"], 
                    Entity["Concept", "SmokeAlarm::h2v73"], 
                    Entity["Concept", "SnapPea::5424h"], 
                    Entity["Concept", "Snood::g76g8"], 
                    Entity["Concept", "Snook::s5nmm"], 
                    Entity["Concept", "Snorkel::53ncf"], 
                    Entity["Concept", "Snowbell::x2mbf"], 
                    Entity["Concept", "SnowBlower::p5662"], 
                    Entity["Concept", "Snowboard::25v3y"], 
                    Entity["Concept", "SnowChain::q7424"], 
                    Entity["Concept", "Snowdrift::d6569"], 
                    Entity["Concept", "Snowfield::f6j8k"], 
                    Entity["Concept", "SnowGoose::tb7m3"], 
                    Entity["Concept", "Snowmobile::y538p"], 
                    Entity["Concept", "Snowplough::h36y5"], 
                    Entity["Concept", "Snowshoe::7d8p8"], 
                    Entity["Concept", "Snuffbox::4rm25"], 
                    Entity["Concept", "SoapDish::9qkbt"], 
                    Entity["Concept", "SoapDispenser::c2fjc"], 
                    Entity["Concept", "Sobralia::6ym2h"], 
                    Entity["Concept", "SoccerBall::25w42"], 
                    Entity["Concept", "SodaCan::9589t"], 
                    Entity["Concept", "Soft-coatedWheatenTerrier::474j2"], 
                    Entity["Concept", "SoftDrink::7vyd4"], 
                    Entity["Concept", "SoftPretzel::q8273"], 
                    Entity["Concept", "Solan::79xr8"], 
                    Entity["Concept", "SolanumJasmoides::6384g"], 
                    Entity["Concept", "SolarArray::zgv3c"], 
                    Entity["Concept", "SolarCollector::pw2xw"], 
                    Entity["Concept", "SolderingIron::xzf2c"], 
                    Entity["Concept", "Soldier-fish::k4n97"], 
                    Entity["Concept", "Sombrero::k9893"], 
                    Entity["Concept", "SonchusOleraceus::477k6"], 
                    Entity["Concept", "SorbusTorminalis::qcn9q"], 
                    Entity["Concept", "Sorrel::b824z"], 
                    Entity["Concept", "Sorus::7j269"], 
                    Entity["Concept", "Soy::3r224"], 
                    Entity["Concept", "SpaceCapsule::83h4n"], 
                    Entity["Concept", "SpaceLaboratory::wbp77"], 
                    Entity["Concept", "Spaceship::5r9b4"], 
                    Entity["Concept", "SpaceShuttle::72jnc"], 
                    Entity["Concept", "Spacesuit::6t5mc"], 
                    Entity["Concept", "SpaghettiAndMeatballs::w29x4"], 
                    Entity["Concept", "Spaghetti::mq249"], 
                    Entity["Concept", "SpaghettiSquash::73qn4"], 
                    Entity["Concept", "Spam::95sr8"], 
                    Entity["Concept", "SparkingPlug::4bq5c"], 
                    Entity["Concept", "Spatula::r7876"], 
                    Entity["Concept", "SphenodonPunctatum::9h47z"], 
                    Entity["Concept", "Sphygmomanometer::4t35q"], 
                    Entity["Concept", "SphyrapicusVarius::jvh9j"], 
                    Entity["Concept", "SpiceRack::m8825"], 
                    Entity["Concept", "SpidersWeb::28fz6"], 
                    Entity["Concept", "SpinDrier::4yk5t"], 
                    Entity["Concept", "SpinningWheel::wyk7q"], 
                    Entity["Concept", "SpizellaArborea::3z7w4"], 
                    Entity["Concept", "Spork::f5zbv"], 
                    Entity["Concept", "SportUtility::xg6mr"], 
                    Entity["Concept", "SpottedOwl::6ds79"], 
                    Entity["Concept", "SprayGun::t4jtd"], 
                    Entity["Concept", "Sprinkler::358d2"], 
                    Entity["Concept", "SprocketWheel::54p24"], 
                    Entity["Concept", "Sputnik::nk6bc"], 
                    Entity["Concept", "SquashRacket::485hr"], 
                    Entity["Concept", "SquawGrass::z64yv"], 
                    Entity["Concept", "StachysPalustris::my5yy"], 
                    Entity["Concept", "StaffordshireBullTerrier::883y3"], 
                    Entity["Concept", "StagBeetle::49pys"], 
                    Entity["Concept", "Stage::86r83"], 
                    Entity["Concept", "Stagecoach::3579v"], 
                    Entity["Concept", "StaghornCoral::6npmy"], 
                    Entity["Concept", "Stained-glassWindow::tf8b9"], 
                    Entity["Concept", "Stair::24wyn"], 
                    Entity["Concept", "Staircase::wqd3c"], 
                    Entity["Concept", "Stall::7wq5s"], 
                    Entity["Concept", "StandardPoodle::w25c4"], 
                    Entity["Concept", "StandardSchnauzer::q9j3y"], 
                    Entity["Concept", "StandardTransmission::364j5"], 
                    Entity["Concept", "Stanhopea::3857p"], 
                    Entity["Concept", "StapleGun::xzbd2"], 
                    Entity["Concept", "Stapler::zc2bp"], 
                    Entity["Concept", "StarAniseed::j99vv"], 
                    Entity["Concept", "StarFruit::8gdv2"], 
                    Entity["Concept", "Statue::t4s2q"], 
                    Entity["Concept", "SteakKnife::76h73"], 
                    Entity["Concept", "StealthBomber::dd5bt"], 
                    Entity["Concept", "StealthFighter::54q24"], 
                    Entity["Concept", "Steamer::7bncp"], 
                    Entity["Concept", "SteamIron::k9sgb"], 
                    Entity["Concept", "SteamRoom::jrrr7"], 
                    Entity["Concept", "SteelDrum::fqv7s"], 
                    Entity["Concept", "SteeringWheel::9ys6m"], 
                    Entity["Concept", "SteganopusTricolor::6q454"], 
                    Entity["Concept", "Stegosaur::nsd8v"], 
                    Entity["Concept", "Stela::239s6"], 
                    Entity["Concept", "Stelis::97g38"], 
                    Entity["Concept", "Sternwheeler::9v976"], 
                    Entity["Concept", "Stevia::9w6x3"], 
                    Entity["Concept", "StickCinnamon::hjk2t"], 
                    Entity["Concept", "StingingNettle::b2vn4"], 
                    Entity["Concept", "StirrupIron::g5r74"], 
                    Entity["Concept", "Stoep::nd324"], 
                    Entity["Concept", "Stonefish::47y53"], 
                    Entity["Concept", "StopWatch::4vk6s"], 
                    Entity["Concept", "StorageWarehouse::887g7"], 
                    Entity["Concept", "StormCloud::q6gch"], 
                    Entity["Concept", "Stovepipe::5k5z6"], 
                    Entity["Concept", "Straightjacket::f8946"], 
                    Entity["Concept", "StraightRazor::25dfg"], 
                    Entity["Concept", "StratocumulusClouds::5h8n6"], 
                    Entity["Concept", "Stratus::22r7q"], 
                    Entity["Concept", "Strawberry::3csyb"], 
                    Entity["Concept", "Strawflower::v2fpk"], 
                    Entity["Concept", "StreamerFly::2792h"], 
                    Entity["Concept", "Streetcar::vhm65"], 
                    Entity["Concept", "StreetLamp::w25s3"], 
                    Entity["Concept", "StreptopeliaTurtur::573dw"], 
                    Entity["Concept", "StrixAluco::3xzb4"], 
                    Entity["Concept", "StruthioCamelus::7fgc2"], 
                    Entity["Concept", "StrymonMelinus::6983t"], 
                    Entity["Concept", "StudentLodging::5537p"], 
                    Entity["Concept", "StuffedPeppers::3b3xf"], 
                    Entity["Concept", "Stupa::g64q6"], 
                    Entity["Concept", "SturnellaNeglecta::4r37v"], 
                    Entity["Concept", "Substation::p2g8z"], 
                    Entity["Concept", "SubwayStation::7s827"], 
                    Entity["Concept", "SubwayTrain::7trx6"], 
                    Entity["Concept", "Subwoofer::mn3g6"], 
                    Entity["Concept", "SulfurButterfly::b9263"], 
                    Entity["Concept", "Sulky::79myy"], 
                    Entity["Concept", "Sun::225g9"], 
                    Entity["Concept", "Sundial::7mj6d"], 
                    Entity["Concept", "SunflowerSeed::9hk47"], 
                    Entity["Concept", "Supermarket::7mw35"], 
                    Entity["Concept", "Supernova::zcjn5"], 
                    Entity["Concept", "SuricataTetradactyla::d545g"], 
                    Entity["Concept", "SurinamCherry::449w5"], 
                    Entity["Concept", "Sushi::s4f33"], 
                    Entity["Concept", "SussexSpaniel::sbv42"], 
                    Entity["Concept", "SwallowShrike::7mybp"], 
                    Entity["Concept", "SweetWoodruff::5y989"], 
                    Entity["Concept", "SwizzleStick::q94np"], 
                    Entity["Concept", "Synagogue::q2x24"], 
                    Entity["Concept", "Synthesiser::n5xkz"], 
                    Entity["Concept", "TabascoSauce::6t243"], 
                    Entity["Concept", "TableLamp::6239m"], 
                    Entity["Concept", "TableSaw::z2nw7"], 
                    Entity["Concept", "Tacheometer::36t46"], 
                    Entity["Concept", "Tailpipe::47w98"], 
                    Entity["Concept", "Tamale::6hf6h"], 
                    Entity["Concept", "Tamarind::55w59"], 
                    Entity["Concept", "TamarindTree::67jkg"], 
                    Entity["Concept", "Tambourine::74jng"], 
                    Entity["Concept", "Tam-tam::m962t"], 
                    Entity["Concept", "Tangerine::s8zqy"], 
                    Entity["Concept", "TangerineTree::33q5s"], 
                    Entity["Concept", "Tankard::9q6tm"], 
                    Entity["Concept", "TankCar::g2428"], 
                    Entity["Concept", "TankTop::5d7dd"], 
                    Entity["Concept", "Tapeline::389c5"], 
                    Entity["Concept", "TapHouse::g2z52"], 
                    Entity["Concept", "Tarantula::mc462"], 
                    Entity["Concept", "TarrietiaArgyrodendron::c7qv4"], 
                    Entity["Concept", "Tautog::275h6"], 
                    Entity["Concept", "Taxi::379w3"], 
                    Entity["Concept", "Tea::8q576"], 
                    Entity["Concept", "TeaBag::7227z"], 
                    Entity["Concept", "TeaBag::dvpd8"], 
                    Entity["Concept", "TeaCart::y35x6"], 
                    Entity["Concept", "Teapot::c54x7"], 
                    Entity["Concept", "Tea-strainer::98db6"], 
                    Entity["Concept", "TeaUrn::f472h"], 
                    Entity["Concept", "TectonaGrandis::75q72"], 
                    Entity["Concept", "Telamon::v4dhn"], 
                    Entity["Concept", "TelegraphKey::q56zs"], 
                    Entity["Concept", "TelescopeSight::64x34"], 
                    Entity["Concept", "TelevisionAntenna::8995y"], 
                    Entity["Concept", "Telferage::ntqk6"], 
                    Entity["Concept", "TelopeaOreades::n984c"], 
                    Entity["Concept", "TelopeaSpeciosissima::hpkg8"], 
                    Entity["Concept", "Temple::849ph"], 
                    Entity["Concept", "Tench::q9r2d"], 
                    Entity["Concept", "TennisBall::xk58h"], 
                    Entity["Concept", "TennisRacket::zbf7z"], 
                    Entity["Concept", "TerrapeneOrnata::b8wjv"], 
                    Entity["Concept", "TeslaCoil::sxx79"], 
                    Entity["Concept", "Testudo::m2654"], 
                    Entity["Concept", "Tether::m75s9"], 
                    Entity["Concept", "Tetra::v3pb9"], 
                    Entity["Concept", "TextualMatter::m7642"], 
                    Entity["Concept", "Theremin::mb34x"], 
                    Entity["Concept", "Thermos::489k7"], 
                    Entity["Concept", "ThevetiaNeriifolia::8dg62"], 
                    Entity["Concept", "Thick-billedMurre::2qpx4"], 
                    Entity["Concept", "Thimble::9828b"], 
                    Entity["Concept", "Thong::fc37p"], 
                    Entity["Concept", "Thong::js7zq"], 
                    Entity["Concept", "Thornbill::4r24j"], 
                    Entity["Concept", "Three-pieceSuit::jqps6"], 
                    Entity["Concept", "ThunnusAlbacares::jg6hz"], 
                    Entity["Concept", "ThunnusThynnus::6vqq6"], 
                    Entity["Concept", "Thyme::qx7rd"], 
                    Entity["Concept", "Tiara::h73j9"], 
                    Entity["Concept", "TibetanMastiff::4f68b"], 
                    Entity["Concept", "TigerBeetle::8362y"], 
                    Entity["Concept", "TileRoof::5p749"], 
                    Entity["Concept", "Timberland::c22fn"], 
                    Entity["Concept", "Tinamou::4g3mz"], 
                    Entity["Concept", "Tiramisu::zd3tw"], 
                    Entity["Concept", "TitiMonkey::6rqgy"], 
                    Entity["Concept", "ToasterOven::fc9gm"], 
                    Entity["Concept", "Toaster::rp6v2"], 
                    Entity["Concept", "TobaccoHornworm::g3k2y"], 
                    Entity["Concept", "Toe::t8h5n"], 
                    Entity["Concept", "TollPlaza::mbrh2"], 
                    Entity["Concept", "Tomahawk::7k5w4"], 
                    Entity["Concept", "Toolbox::w5732"], 
                    Entity["Concept", "Toothpick::44x5j"], 
                    Entity["Concept", "Topiary::236d3"], 
                    Entity["Concept", "Tornado::74s32"], 
                    Entity["Concept", "Torpedo::kxhd8"], 
                    Entity["Concept", "TortoiseshellButterfly::hb63c"], 
                    Entity["Concept", "TotemPole::gbxn5"], 
                    Entity["Concept", "Touraco::r632b"], 
                    Entity["Concept", "Towboat::pk57z"], 
                    Entity["Concept", "TowCar::ph6vn"], 
                    Entity["Concept", "Tower::72xxm"], 
                    Entity["Concept", "ToyPoodle::732f6"], 
                    Entity["Concept", "Toy::w2366"], 
                    Entity["Concept", "TrachinotusFalcatus::35d23"], 
                    Entity["Concept", "TrachurusTrachurus::v456y"], 
                    Entity["Concept", "Trackball::7q75y"], 
                    Entity["Concept", "Tractor::39j62"], 
                    Entity["Concept", "Tragopan::rq64n"], 
                    Entity["Concept", "TragopogonDubius::d3hwf"], 
                    Entity["Concept", "TragopogonPorrifolius::g7259"], 
                    Entity["Concept", "Trampoline::hhv8s"], 
                    Entity["Concept", "TransomWindow::7qg3p"], 
                    Entity["Concept", "Treadmill::3f3zn"], 
                    Entity["Concept", "Tree-frog::m988r"], 
                    Entity["Concept", "Treehopper::3fp87"], 
                    Entity["Concept", "TreeHouse::9758z"], 
                    Entity["Concept", "TreeKangaroo::qg4s3"], 
                    Entity["Concept", "TreeLizard::wjp5s"], 
                    Entity["Concept", "TrenchCoat::rq833"], 
                    Entity["Concept", "Triceratops::p997c"], 
                    Entity["Concept", "Tricycle::3537s"], 
                    Entity["Concept", "TrigonellaOrnithopodioides::9466m"], 
                    Entity["Concept", "Trilobite::3qyq3"], 
                    Entity["Concept", "Trimaran::2639q"], 
                    Entity["Concept", "Triskele::s7g38"], 
                    Entity["Concept", "TroglodytesTroglodytes::2k979"], 
                    Entity["Concept", "TropicalPitcherPlant::qjvx3"], 
                    Entity["Concept", "Trowel::3sd36"], 
                    Entity["Concept", "Truckle::z8qfz"], 
                    Entity["Concept", "TrueBug::k23rt"], 
                    Entity["Concept", "TulipaGesneriana::3wnzt"], 
                    Entity["Concept", "Tumbleweed::g9gqf"], 
                    Entity["Concept", "TuningFork::g9crh"], 
                    Entity["Concept", "TurdusIliacus::qg838"], 
                    Entity["Concept", "Tureen::57k6g"], 
                    Entity["Concept", "Turmeric::6kng6"], 
                    Entity["Concept", "Turnstile::82gr4"], 
                    Entity["Concept", "Turntable::v9778"], 
                    Entity["Concept", "TussilagoFarfara::2c32j"], 
                    Entity["Concept", "TwistBit::2cv37"], 
                    Entity["Concept", "TwistWood::9sb62"], 
                    Entity["Concept", "Two-eyedViolet::bq79n"], 
                    Entity["Concept", "Tyrannosaur::g78b4"], 
                    Entity["Concept", "Ugli::433v9"], 
                    Entity["Concept", "Uke::57cs3"], 
                    Entity["Concept", "UlmusGlabra::kypm5"], 
                    Entity["Concept", "Umbrella::3mntq"], 
                    Entity["Concept", "UnevenBars::bqn8b"], 
                    Entity["Concept", "UprightPiano::286t3"], 
                    Entity["Concept", "Uranus::vh533"], 
                    Entity["Concept", "UvulariaGrandiflora::m2cn9"], 
                    Entity["Concept", "VacuumCleaner::7rg56"], 
                    Entity["Concept", "Vale::88wm8"], 
                    Entity["Concept", "Van::d977r"], 
                    Entity["Concept", "VangueriaInfausta::p47j8"], 
                    Entity["Concept", "VanillaBean::5545p"], 
                    Entity["Concept", "VanillaOrchid::y97p2"], 
                    Entity["Concept", "VCR::72r52"], 
                    Entity["Concept", "VelvetAnt::36wyw"], 
                    Entity["Concept", "VenetianBlind::d232y"], 
                    Entity["Concept", "VennDiagram::c2fh8"], 
                    Entity["Concept", "Ventilator::3g9b3"], 
                    Entity["Concept", "Venus::rt8g3"], 
                    Entity["Concept", "VenusSlipper::3b48n"], 
                    Entity["Concept", "Veranda::649d7"], 
                    Entity["Concept", "Verbena::y2433"], 
                    Entity["Concept", "VeronicaAnagallis-aquatica::rt56z"], 
                    Entity["Concept", "VerticalTail::y3rf9"], 
                    Entity["Concept", "VespulaMaculifrons::vf259"], 
                    Entity["Concept", "Vibes::q8373"], 
                    Entity["Concept", "VicugnaVicugna::68y68"], 
                    Entity["Concept", "Videocassette::qn243"], 
                    Entity["Concept", "VineSnake::9kywz"], 
                    Entity["Concept", "Viola::rb597"], 
                    Entity["Concept", "Virus::7r5b3"], 
                    Entity["Concept", "Vitellus::4s736"], 
                    Entity["Concept", "VitisLabrusca::57y4w"], 
                    Entity["Concept", "VitisRotundifolia::73v45"], 
                    Entity["Concept", "VolcanicCrater::hg56v"], 
                    Entity["Concept", "VolleyballNet::kjzs6"], 
                    Entity["Concept", "Volleyball::q7bkw"], 
                    Entity["Concept", "VulpesFulva::hjn6g"], 
                    Entity["Concept", "VulpesMacrotis::jm64h"], 
                    Entity["Concept", "WaffleIron::gpqx8"], 
                    Entity["Concept", "WagonWheel::vnn85"], 
                    Entity["Concept", "Wagtail::d3fh9"], 
                    Entity["Concept", "WaitingArea::m5242"], 
                    Entity["Concept", "Walkman::543v5"], 
                    Entity["Concept", "WallClock::w5687"], 
                    Entity["Concept", "Wand::tvf5w"], 
                    Entity["Concept", "Warthog::3q477"], 
                    Entity["Concept", "WaspsNest::5q2qb"], 
                    Entity["Concept", "WatchCap::tx52s"], 
                    Entity["Concept", "WaterBottle::5wh67"], 
                    Entity["Concept", "Waterfall::w75k5"], 
                    Entity["Concept", "Watermelon::3ftrw"], 
                    Entity["Concept", "WaterMeter::4fk9z"], 
                    Entity["Concept", "WaterMill::32krp"], 
                    Entity["Concept", "WaterMoccasin::v4r6j"], 
                    Entity["Concept", "WaterThrush::3dsww"], 
                    Entity["Concept", "WaterTower::4rr5d"], 
                    Entity["Concept", "Wattmeter::t225j"], 
                    Entity["Concept", "WaxBean::vh3k8"], 
                    Entity["Concept", "WeaponsCarrier::cd4gr"], 
                    Entity["Concept", "Weigela::7k3w5"], 
                    Entity["Concept", "Weimaraner::476j6"], 
                    Entity["Concept", "WelcomeMat::jqb5y"], 
                    Entity["Concept", "WelshSpringerSpaniel::qyng2"], 
                    Entity["Concept", "Welwitschia::mc2vv"], 
                    Entity["Concept", "WestHighlandWhiteTerrier::4h85y"], 
                    Entity["Concept", "Wetland::cw472"], 
                    Entity["Concept", "WetSuit::cg99h"], 
                    Entity["Concept", "Wheatear::57c69"], 
                    Entity["Concept", "Whelk::njp55"], 
                    Entity["Concept", "Whippet::57r47"], 
                    Entity["Concept", "Whisk::3dh4g"], 
                    Entity["Concept", "Whistle::6j7m4"], 
                    Entity["Concept", "White-crownedSparrow::7y368"], 
                    Entity["Concept", "White-throatedSparrow::h6b94"], 
                    Entity["Concept", "WhiteWine::9694s"], 
                    Entity["Concept", "WhiteZinnia::8w74t"], 
                    Entity["Concept", "Wigwam::6jn93"], 
                    Entity["Concept", "WildBoar::5wjz4"], 
                    Entity["Concept", "WildCherry::xdj3d"], 
                    Entity["Concept", "WilsoniaPusilla::rpn3f"], 
                    Entity["Concept", "Windmill::r56g9"], 
                    Entity["Concept", "WindowBox::2jmch"], 
                    Entity["Concept", "WindowSeat::y3k3g"], 
                    Entity["Concept", "Windscreen::2fr34"], 
                    Entity["Concept", "WindscreenWiper::6g7d6"], 
                    Entity["Concept", "WindsorChair::2y5hz"], 
                    Entity["Concept", "WindTurbine::s4yt6"], 
                    Entity["Concept", "WineBucket::2798p"], 
                    Entity["Concept", "WineCellar::8dmhx"], 
                    Entity["Concept", "WingChair::3x982"], 
                    Entity["Concept", "WireCutter::42d42"], 
                    Entity["Concept", "WolfFish::92h52"], 
                    Entity["Concept", "WollemiPine::3nppd"], 
                    Entity["Concept", "Wombat::m5rqr"], 
                    Entity["Concept", "WoodChisel::8twz7"], 
                    Entity["Concept", "Wood-creeper::57kx5"], 
                    Entity["Concept", "WoodDrake::kcbz2"], 
                    Entity["Concept", "WoodenShoe::sg2sj"], 
                    Entity["Concept", "Woofer::j3w9m"], 
                    Entity["Concept", "WoollyBearMoth::bxt5j"], 
                    Entity["Concept", "Work-shirt::k5jbz"], 
                    Entity["Concept", "Wort::yv374"], 
                    Entity["Concept", "WrenWarbler::7c4s3"], 
                    Entity["Concept", "WrestlingRing::bzk4j"], 
                    Entity["Concept", "Wringer::ggn4j"], 
                    Entity["Concept", "WristWatch::45s84"], 
                    Entity["Concept", "Wryneck::gt2c9"], 
                    Entity["Concept", "XenicusGilviventris::xcb89"], 
                    Entity["Concept", "XerographicCopier::45kbj"], 
                    Entity["Concept", "Yagi::b4zfh"], 
                    Entity["Concept", "Yam::5byc8"], 
                    Entity["Concept", "YamPlant::d9jn2"], 
                    Entity["Concept", "Yard::b3r8k"], 
                    Entity["Concept", "Yarmelke::dd25p"], 
                    Entity["Concept", "YellowSquash::qd52t"], 
                    Entity["Concept", "YorkshirePudding::w2kmp"], 
                    Entity["Concept", "YorkshireTerrier::bn4jn"], 
                    Entity["Concept", "YuccaBaccata::66t78"], 
                    Entity["Concept", "YuccaGlauca::jrp8h"], 
                    Entity["Concept", "YuccaGloriosa::p8394"], 
                    Entity["Concept", "Zamboni::t2s77"], 
                    Entity["Concept", "Zebu::4dn49"], 
                    Entity["Concept", "Ziggurat::6f5g6"], 
                    Entity["Concept", "ZootSuit::5332k"], 
                    Entity["FictionalCharacter", "AbrahamSimpson"], 
                    Entity["FictionalCharacter", "AdamWarlock"], 
                    Entity["FictionalCharacter", "Barbie"], 
                    Entity["FictionalCharacter", "BartholomewJoJoSimpson"], 
                    Entity["FictionalCharacter", "Batman"], 
                    Entity["FictionalCharacter", "Beavis"], 
                    Entity["FictionalCharacter", "BobTheBuilder"], 
                    Entity["FictionalCharacter", "BugsBunny"], 
                    Entity["FictionalCharacter", "Butthead"], 
                    Entity["FictionalCharacter", "BuzzLightyear"], 
                    Entity["FictionalCharacter", "CharlieBrown"], 
                    Entity["FictionalCharacter", "Chewbacca"], 
                    Entity["FictionalCharacter", "CookieMonster"], 
                    Entity["FictionalCharacter", "DarthVader"], 
                    Entity["FictionalCharacter", "DonaldFauntleroyDuck"], 
                    Entity["FictionalCharacter", "Doomsday"], 
                    Entity["FictionalCharacter", "DoraTheExplorer"], 
                    Entity["FictionalCharacter", "Garfield"], 
                    Entity["FictionalCharacter", "Goofy"], 
                    Entity["FictionalCharacter", "GreenLantern"], 
                    Entity["FictionalCharacter", "HelloKitty"], 
                    Entity["FictionalCharacter", "Hobbes"], 
                    Entity["FictionalCharacter", "HomerSimpson"], 
                    Entity["FictionalCharacter", "IronMan"], 
                    Entity["FictionalCharacter", "Mario"], 
                    Entity["FictionalCharacter", "MarjorieSimpson"], 
                    Entity["FictionalCharacter", "MickeyMouse"], 
                    Entity["FictionalCharacter", "MinnieMouse"], 
                    Entity["FictionalCharacter", "OptimusPrime"], 
                    Entity["FictionalCharacter", "Pacman"], 
                    Entity["FictionalCharacter", "Pikachu"], 
                    Entity["FictionalCharacter", "R2D2"], 
                    Entity["FictionalCharacter", "SantaClaus"], 
                    Entity["FictionalCharacter", "Snoopy"], 
                    Entity["FictionalCharacter", "Spiderman"], 
                    Entity["FictionalCharacter", "SpongeBob"], 
                    Entity["FictionalCharacter", "StewieGriffin"], 
                    Entity["FictionalCharacter", "Superman"], 
                    Entity["FictionalCharacter", "TheFlash"], 
                    Entity["FictionalCharacter", "TheGrinch"], 
                    Entity["FictionalCharacter", "TheIncredibleHulk"], 
                    Entity["FictionalCharacter", "ThePinkPanther"], 
                    Entity["FictionalCharacter", "Tweety"], 
                    Entity["FictionalCharacter", "WileECoyote"], 
                    Entity["FictionalCharacter", "WinnieThePooh"], 
                    Entity["FictionalCharacter", "WonderWoman"], 
                    Entity["FictionalCharacter", "Yoda"]}, "Dimensions" -> 
                  4315], 
                 NeuralNetworks`TensorT[{4315}, NeuralNetworks`RealT]]]], 
            NeuralNetworks`Private`NetChain`opart, 
            NeuralNetworks`Private`NetChain`part, 
            NeuralNetworks`Private`NetChain`selected = Null}, 
            DynamicBox[GridBox[{{
                NeuralNetworks`Private`NetChain`MouseClickBoxes[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"3\"", "\"224\"", 
                    "\"224\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"112\"", 
                    "\"112\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bn_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bn_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bn_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"112\"", 
                    "\"112\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bn_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"112\"", 
                    "\"112\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"55\"", "\"55\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv_2_red\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_2_red"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_2_red"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"55\"", "\"55\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv_2_red"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bn_2_red\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bn_2_red"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bn_2_red"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"55\"", "\"55\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bn_2_red"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu_2_red\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu_2_red"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu_2_red"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"55\"", "\"55\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu_2_red"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"192\"", "\"55\"", 
                    "\"55\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bn_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bn_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bn_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"192\"", "\"55\"", 
                    "\"55\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bn_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"192\"", "\"55\"", 
                    "\"55\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"192\"", "\"27\"", 
                    "\"27\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "23", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"256\"", "\"27\"", 
                    "\"27\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3b\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3b"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "23", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3b"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"320\"", "\"27\"", 
                    "\"27\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3b"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3c\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3c"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "17", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3c"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"576\"", "\"14\"", 
                    "\"14\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3c"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "23", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"576\"", "\"14\"", 
                    "\"14\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4b\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4b"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "23", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4b"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"576\"", "\"14\"", 
                    "\"14\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4b"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4c\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4c"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "23", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4c"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"608\"", "\"14\"", 
                    "\"14\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4c"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4d\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4d"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "23", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4d"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"608\"", "\"14\"", 
                    "\"14\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4d"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4e\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4e"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "17", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4e"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1056\"", "\"7\"", "\"7\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4e"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "23", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1024\"", "\"7\"", "\"7\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5b\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5b"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "23", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5b"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1024\"", "\"7\"", "\"7\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5b"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"global_pool\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "global_pool"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "global_pool"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1024\"", "\"1\"", "\"1\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "global_pool"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4315\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"softmax\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4315\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                 If[
                  ListQ[
                  NeuralNetworks`Private`NetChain`part = MouseAnnotation[]], 
                  If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
               NeuralNetworks`Private`NetChain`fmtSelected[
               NeuralNetworks`Private`NetChain`selected, 
                NeuralNetworks`Private`NetChain`part]}, 
              GridBoxSpacings -> {"Columns" -> {{1}}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}],
             ImageSizeCache->{479., {263., 271.}},
             TrackedSymbols:>{NeuralNetworks`Private`NetChain`selected}],
            Initialization:>{NetChain}],
           BaselinePosition->Automatic], "]"}]}],
        False],
       Deploy],
      LineBreakWithin->False],
     StandardForm],
    StandardForm,
    Editable->True], ",", 
   TagBox[
    FormBox[
     TagBox[GridBox[{
        {"\<\"\"\>", "\<\"input\"\>", 
         TagBox[GridBox[{
            {"\<\"image\"\>"},
            {
             TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
                
                TemplateBox[{
                 "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                  "\" \"", 
                  
                  TemplateBox[{
                   "\[Times]", "\"\[Times]\"", "\"3\"", "\"224\"", "\"224\""},
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                 "RowDefault"], 
                GrayLevel[0.5], StripOnInput -> False]},
              "RowDefault"]}
           },
           BaselinePosition->2,
           DefaultBaseStyle->"Column",
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"]},
        {
         StyleBox["\<\"conv_1\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"convolution\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"64\"", "\"112\"", "\"112\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"bn_1\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"batch normalization\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"64\"", "\"112\"", "\"112\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"relu_1\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], 
         TagBox[
          FormBox["\<\"ReLU\"\>",
           TraditionalForm],
          TraditionalForm,
          Editable->True], 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"64\"", "\"112\"", "\"112\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"pool_1\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"pooling\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"64\"", "\"55\"", "\"55\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"conv_2_red\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"convolution\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"64\"", "\"55\"", "\"55\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"bn_2_red\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"batch normalization\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"64\"", "\"55\"", "\"55\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"relu_2_red\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], 
         TagBox[
          FormBox["\<\"ReLU\"\>",
           TraditionalForm],
          TraditionalForm,
          Editable->True], 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"64\"", "\"55\"", "\"55\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"conv_2\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"convolution\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"192\"", "\"55\"", "\"55\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"bn_2\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"batch normalization\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"192\"", "\"55\"", "\"55\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"relu_2\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], 
         TagBox[
          FormBox["\<\"ReLU\"\>",
           TraditionalForm],
          TraditionalForm,
          Editable->True], 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"192\"", "\"55\"", "\"55\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"pool_2\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"pooling\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"192\"", "\"27\"", "\"27\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"3a\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"subnetwork\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"256\"", "\"27\"", "\"27\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"3b\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"subnetwork\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"320\"", "\"27\"", "\"27\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"3c\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"subnetwork\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"576\"", "\"14\"", "\"14\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"4a\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"subnetwork\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"576\"", "\"14\"", "\"14\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"4b\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"subnetwork\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"576\"", "\"14\"", "\"14\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"4c\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"subnetwork\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"608\"", "\"14\"", "\"14\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"4d\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"subnetwork\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"608\"", "\"14\"", "\"14\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"4e\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"subnetwork\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"1056\"", "\"7\"", "\"7\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"5a\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"subnetwork\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"1024\"", "\"7\"", "\"7\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"5b\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"subnetwork\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"1024\"", "\"7\"", "\"7\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"global_pool\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"pooling\"\>", 
         TemplateBox[{"\"3-tensor\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{
               "\[Times]", "\"\[Times]\"", "\"1024\"", "\"1\"", "\"1\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"linear\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"linear\"\>", 
         TemplateBox[{"\"vector\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4315\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {
         StyleBox["\<\"softmax\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0.5],
          FrontFaceColor->GrayLevel[0.5],
          BackFaceColor->GrayLevel[0.5],
          GraphicsColor->GrayLevel[0.5],
          FontColor->GrayLevel[0.5]], "\<\"softmax\"\>", 
         TemplateBox[{"\"vector\"","\" \"",StyleBox[
            
            TemplateBox[{
             "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", "\" \"", 
              
              TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4315\""}, 
               "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
             "RowDefault"], 
            GrayLevel[0.5], StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>", "\<\"output\"\>", "\<\"class\"\>"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {{1.1}}}],
      "Grid"],
     TraditionalForm],
    TraditionalForm,
    Editable->True], ",", "24"}], "}"}]], "Output",
 CellChangeTimes->{
  3.700464037566962*^9, 3.7004641167945757`*^9, 3.700464194477993*^9, 
   3.700464313056658*^9, 3.7004644451782475`*^9, 3.700469973419078*^9, {
   3.7004736797333517`*^9, 
   3.700473684911947*^9}},ExpressionUUID->"ba897ef6-562d-4722-a8ad-\
aa453f097fd1"]
}, Open  ]]
},
WindowSize->{1218, 677},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.25 Inherited,
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (March 13, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 645, 15, 63, "Input", "ExpressionUUID" -> \
"d64fd6ef-f9b0-424b-a6dc-17acf220e10c"],
Cell[1228, 39, 39516, 873, 322, "Output", "ExpressionUUID" -> \
"c928b848-7921-4d33-af03-06c29973dfd6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40781, 917, 600, 17, 63, "Input", "ExpressionUUID" -> \
"2b5ca102-e039-4d2f-95c0-60b94cb65d65"],
Cell[41384, 936, 197800, 3855, 1057, "Output", "ExpressionUUID" -> \
"198d0999-62f5-43b9-a485-14affe4c40b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239221, 4796, 524, 15, 63, "Input", "ExpressionUUID" -> \
"85b05579-ff66-4482-9e7d-81389fc27ee6"],
Cell[239748, 4813, 553652, 10891, 1549, "Output", "ExpressionUUID" -> \
"758dd608-8da0-4890-a90c-ce0cccc95b10"]
}, Open  ]],
Cell[CellGroupData[{
Cell[793437, 15709, 515, 14, 63, "Input", "ExpressionUUID" -> \
"203a3d70-f13c-4bf3-b969-33cf14b5e7f5"],
Cell[793955, 15725, 192449, 3891, 1837, "Output", "ExpressionUUID" -> \
"54b9866c-a5bf-4ddb-9229-bd749eda00e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[986441, 19621, 608, 15, 63, "Input", "ExpressionUUID" -> \
"805f1a2f-9075-40c3-bdf6-1e7c82e285f1"],
Cell[987052, 19638, 629479, 11518, 1181, "Output", "ExpressionUUID" -> \
"ba897ef6-562d-4722-a8ad-aa453f097fd1"]
}, Open  ]]
}
]
*)

