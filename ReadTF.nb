(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     19956,        553]
NotebookOptionsPosition[     19354,        530]
NotebookOutlinePosition[     19702,        545]
CellTagsIndexPosition[     19659,        542]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"path", "=", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", "path", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tfifilenames", "=", 
   RowBox[{"FileNames", "[", "\"\<*.tfi\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tffiles", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"path", "<>", "#"}], "&"}], "/@", "tfifilenames"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.69434018137602*^9, 3.6943401937200584`*^9}, {
   3.6943403575989027`*^9, 3.6943403628959026`*^9}, 3.694340460148184*^9, 
   3.6943423604881825`*^9, 3.6943426252962737`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReadTF", "[", "tf_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "rgba", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"intensity", "=", 
      RowBox[{"ToExpression", "@", 
       RowBox[{"Cases", "[", 
        RowBox[{"tf", ",", 
         RowBox[{
          RowBox[{"XMLElement", "[", 
           RowBox[{"\"\<intensity\>\"", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\<value\>\"", "\[Rule]", "atrib_"}], ",", "___"}], 
             "}"}], ",", "___"}], "]"}], "\[RuleDelayed]", "atrib"}], ",", 
         "\[Infinity]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"r", "=", 
      RowBox[{"ToExpression", "@", 
       RowBox[{"Cases", "[", 
        RowBox[{"tf", ",", 
         RowBox[{
          RowBox[{"XMLElement", "[", 
           RowBox[{"\"\<colorL\>\"", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\<r\>\"", "\[Rule]", "atrib_"}], ",", "___"}], "}"}],
             ",", "___"}], "]"}], "\[RuleDelayed]", "atrib"}], ",", 
         "\[Infinity]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"g", "=", 
      RowBox[{"ToExpression", "@", 
       RowBox[{"Cases", "[", 
        RowBox[{"tf", ",", 
         RowBox[{
          RowBox[{"XMLElement", "[", 
           RowBox[{"\"\<colorL\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"___", ",", 
              RowBox[{"\"\<g\>\"", "\[Rule]", "atrib_"}], ",", "___"}], "}"}],
             ",", "___"}], "]"}], "\[RuleDelayed]", "atrib"}], ",", 
         "\[Infinity]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"ToExpression", "@", 
       RowBox[{"Cases", "[", 
        RowBox[{"tf", ",", 
         RowBox[{
          RowBox[{"XMLElement", "[", 
           RowBox[{"\"\<colorL\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"___", ",", 
              RowBox[{"\"\<b\>\"", "\[Rule]", "atrib_"}], ",", "___"}], "}"}],
             ",", "___"}], "]"}], "\[RuleDelayed]", "atrib"}], ",", 
         "\[Infinity]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"a", "=", 
      RowBox[{"ToExpression", "@", 
       RowBox[{"Cases", "[", 
        RowBox[{"tf", ",", 
         RowBox[{
          RowBox[{"XMLElement", "[", 
           RowBox[{"\"\<colorL\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"___", ",", 
              RowBox[{"\"\<a\>\"", "\[Rule]", "atrib_"}]}], "}"}], ",", 
            "___"}], "]"}], "\[RuleDelayed]", "atrib"}], ",", "\[Infinity]"}],
         "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"alpha", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", "/", "255."}], "&"}], ")"}], "/@", "a"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"rgba", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", "/", "255."}], "&"}], ")"}], "/@", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"r", ",", "g", ",", "b", ",", "a"}], "}"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"rgba", "[", 
      RowBox[{"[", 
       RowBox[{"2", ";;", 
        RowBox[{"-", "2"}]}], "]"}], "]"}]}]}], "]"}]}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tfs", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{"#", ",", "\"\<XML\>\""}], "]"}], "&"}], "/@", "tffiles"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rgbas", "=", 
   RowBox[{"ReadTF", "/@", "tfs"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "4"}], "]"}], "]"}], ",", 
     RowBox[{"PlotRange", "->", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}], "&"}], "/@", 
  "rgbas"}]}], "Input",
 CellChangeTimes->{{3.694340248440092*^9, 3.6943402487057233`*^9}, {
  3.694342541647518*^9, 3.694342541678776*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"WriteTF", "[", 
   RowBox[{"peaks_", ",", "filename_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "a2", ",", "rgba2", ",", "intensity2", ",", "rgbafunction2", ",", 
      "rgba2denormalized", ",", "xrgba", ",", "strlist", ",", "alphaMode", 
      ",", "gammaValue", ",", "domain", ",", "threshold", ",", "k", ",", 
      "int", ",", "split", ",", "colorL", ",", "keylist", ",", "keys", ",", 
      "TransFuncIntensity", ",", "VoreenData", ",", "xmlobject"}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MapIndexed", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"alpha0", "[", 
           RowBox[{"[", "#", "]"}], "]"}], "=", 
          RowBox[{"peaks", "[", 
           RowBox[{"[", 
            RowBox[{"First", "@", "#2"}], "]"}], "]"}]}], ")"}], "&"}], ",", 
       "index0"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"a2", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"IntegerPart", "[", 
         RowBox[{"255", "*", 
          RowBox[{"alpha0", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "&"}], "/@", 
       "rangeOfAlpha"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rgba2", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"#", "/", "255."}], "&"}], ")"}], "/@", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"r", ",", "g", ",", "b", ",", "a2"}], "}"}], "]"}]}], "//", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"RGBColor", "/@", "#"}], "&"}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"intensity2", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"intensity0", "[", 
         RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", "rangeOfAlpha"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"rgbafunction2", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Blend", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{"intensity2", ",", "rgba2"}], "}"}], "]"}], ",", " ", 
          "#"}], "]"}], " ", "&"}], " ", ")"}]}], ";", 
     RowBox[{"(*", " ", 
      RowBox[{"for", " ", "return", " ", 
       RowBox[{"only", ".", " ", "not"}], " ", "used", " ", "in", " ", "this",
        " ", "function"}], " ", "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"rgba2denormalized", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"r", ",", "g", ",", "b", ",", "a2"}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xrgba", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"intensity2", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "}"}], ",", 
          RowBox[{"rgba2denormalized", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "intensity2", "]"}]}], "}"}]}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"strlist", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ToString", "[", "#1", "]"}], ",", 
          RowBox[{"ToString", "[", "#2", "]"}], ",", 
          RowBox[{"ToString", "[", "#3", "]"}], ",", 
          RowBox[{"ToString", "[", "#4", "]"}], ",", 
          RowBox[{"ToString", "[", "#5", "]"}]}], "}"}], "&"}], "@@@", 
       "xrgba"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"alphaMode", "=", 
      RowBox[{"XMLElement", "[", 
       RowBox[{"\"\<alphaMode\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<value\>\"", "\[Rule]", "\"\<1\>\""}], "}"}], ",", 
        RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"gammaValue", "=", 
      RowBox[{"XMLElement", "[", 
       RowBox[{"\"\<gammaValue\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<value\>\"", "\[Rule]", "\"\<1\>\""}], "}"}], ",", 
        RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"domain", "=", 
      RowBox[{"XMLElement", "[", 
       RowBox[{"\"\<domain\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<x\>\"", "\[Rule]", "\"\<0\>\""}], ",", 
          RowBox[{"\"\<y\>\"", "\[Rule]", "\"\<1\>\""}]}], "}"}], ",", 
        RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"threshold", "=", 
      RowBox[{"XMLElement", "[", 
       RowBox[{"\"\<threshold\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<x\>\"", "\[Rule]", "\"\<0\>\""}], ",", 
          RowBox[{"\"\<y\>\"", "\[Rule]", "\"\<1\>\""}]}], "}"}], ",", 
        RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"k", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"int", "=", 
            RowBox[{"XMLElement", "[", 
             RowBox[{"\"\<intensity\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"\"\<value\>\"", "\[Rule]", "#1"}], "}"}], ",", 
              RowBox[{"{", "}"}]}], "]"}]}], ",", 
           RowBox[{"split", "=", 
            RowBox[{"XMLElement", "[", 
             RowBox[{"\"\<split\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"\"\<value\>\"", "\[Rule]", "\"\<false\>\""}], "}"}], 
              ",", 
              RowBox[{"{", "}"}]}], "]"}]}], ",", 
           RowBox[{"colorL", "=", 
            RowBox[{"XMLElement", "[", 
             RowBox[{"\"\<colorL\>\"", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\"\<r\>\"", "\[Rule]", "#2"}], ",", 
                RowBox[{"\"\<g\>\"", "\[Rule]", "#3"}], ",", 
                RowBox[{"\"\<b\>\"", "\[Rule]", "#4"}], ",", 
                RowBox[{"\"\<a\>\"", "\[Rule]", "#5"}]}], "}"}], ",", 
              RowBox[{"{", "}"}]}], "]"}]}]}], "}"}], "&"}], ")"}], "@@@", 
       "strlist"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"keylist", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"XMLElement", "[", 
         RowBox[{"\"\<key\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<type\>\"", "\[Rule]", "\"\<TransFuncMappingKey\>\""}],
            "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"#1", ",", "#2", ",", "#3"}], "}"}]}], "]"}], "&"}], "@@@",
        "k"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"keys", "=", 
      RowBox[{"XMLElement", "[", 
       RowBox[{"\"\<Keys\>\"", ",", 
        RowBox[{"{", "}"}], ",", "keylist"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"TransFuncIntensity", "=", 
      RowBox[{"XMLElement", "[", 
       RowBox[{"\"\<TransFuncIntensity\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<type\>\"", "\[Rule]", "\"\<TransFuncIntensity\>\""}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "alphaMode", ",", "gammaValue", ",", "domain", ",", "threshold", ",",
           "keys"}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"VoreenData", "=", 
      RowBox[{"XMLElement", "[", 
       RowBox[{"\"\<VoreenData\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<version\>\"", "\[Rule]", "\"\<1\>\""}], "}"}], ",", 
        RowBox[{"{", "TransFuncIntensity", "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xmlobject", "=", 
      RowBox[{
       RowBox[{"XMLObject", "[", "\"\<Document\>\"", "]"}], "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"XMLObject", "[", "\"\<Declaration\>\"", "]"}], "[", 
           RowBox[{"\"\<Version\>\"", "\[Rule]", "\"\<1.0\>\""}], "]"}], ",", 
          RowBox[{
           RowBox[{"XMLObject", "[", "\"\<Comment\>\"", "]"}], "[", 
           "\"\<This is a Voreen transfer function created using Wolfram \
Mathematica\>\"", "]"}]}], "}"}], ",", "VoreenData", ",", 
        RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{"filename", ",", "xmlobject", ",", " ", "\"\<XML\>\""}], "]"}], 
     ";", "\[IndentingNewLine]", "rgbafunction2"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{3.6943402933317704`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"intensity0", "=", "intensity"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alpha0", "=", "alpha"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rangeOfAlpha", "=", 
    RowBox[{"Range", "[", 
     RowBox[{"Length", "[", "alpha", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"First", "[", "intensity0", "]"}], ">", "0"}], ",", 
      RowBox[{
       RowBox[{"intensity0", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", "0", "}"}], ",", "intensity0"}], "]"}]}], ";", 
       RowBox[{"alpha0", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", "0", "}"}], ",", "alpha0"}], "]"}]}], ";", 
       RowBox[{"rangeOfAlpha", "+=", "1"}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Last", "[", "intensity0", "]"}], "<", "1"}], ",", 
      RowBox[{
       RowBox[{"intensity0", "=", 
        RowBox[{"Join", "[", 
         RowBox[{"intensity0", ",", 
          RowBox[{"{", "1", "}"}]}], "]"}]}], ";", 
       RowBox[{"alpha0", "=", 
        RowBox[{"Join", "[", 
         RowBox[{"alpha0", ",", 
          RowBox[{"{", "0", "}"}]}], "]"}]}]}]}], "]"}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"index0", "=", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Position", "[", 
       RowBox[{"alpha0", ",", 
        RowBox[{"_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#", ">", "0"}], "&"}], ")"}]}]}], "]"}]}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"index0", "=", 
  RowBox[{"rangeOfAlpha", "[", 
   RowBox[{"[", 
    RowBox[{"2", ";;", 
     RowBox[{"-", "2"}]}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.694342269392852*^9, 3.6943422696741066`*^9}, {
  3.6943422998253455`*^9, 3.6943423262288575`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", 
   ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15", ",", 
   "16", ",", "17", ",", "18", ",", "19", ",", "20", ",", "21", ",", "22", 
   ",", "23", ",", "24", ",", "25", ",", "26", ",", "27", ",", "28", ",", 
   "29", ",", "30", ",", "31", ",", "32", ",", "33"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6943405896043067`*^9, 3.6943418468250465`*^9, 3.6943421535988345`*^9, {
   3.6943423040597925`*^9, 3.694342372722765*^9}, 3.6943425157876987`*^9, 
   3.6943425467100987`*^9, 3.6943425812173505`*^9, {3.6943426132022696`*^9, 
   3.6943426665469437`*^9}, 3.6944361338609753`*^9, 3.6944363982111893`*^9, 
   3.69443648973794*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"path3", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"path", ",", "\"\<tf\>\""}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"DirectoryQ", "[", "path3", "]"}]}], ",", 
    RowBox[{"CreateDirectory", "[", "path3", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colors", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"WriteTF", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"rgbas", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "4"}], "]"}], "]"}], ",", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{"path3", ",", 
          RowBox[{"tfifilenames", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "@", "rgbas"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.694340394334091*^9, 3.6943403945997715`*^9}, 
   3.694340474242264*^9, {3.6943405055555024`*^9, 3.694340521258993*^9}, {
   3.694342353894332*^9, 3.694342408332795*^9}, {3.694342541694389*^9, 
   3.694342541694389*^9}, 3.6943425765610332`*^9}],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"rgbas", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "4"}], "]"}], "]"}], ",", 
     RowBox[{"PlotRange", "->", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"colors", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Length", "@", "rgbas"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6943424311144323`*^9, 3.6943424733339005`*^9}, {
   3.6943425417256393`*^9, 3.6943425417256393`*^9}, 3.6943425765766463`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pyfile", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "path", ",", 
      "\"\<_voreen_render_with_transfer_functions_in_directory.py\>\""}], 
     "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"StringSplit", "[", 
    RowBox[{
     RowBox[{"Import", "[", "pyfile", "]"}], ",", "\"\<\\n\>\""}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"list2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"StringContainsQ", "[", 
        RowBox[{"#", ",", "\"\<mypath=\>\""}], "]"}], ",", 
       RowBox[{"\"\<mypath=\>\"", "<>", 
        RowBox[{"ToString", "@", 
         RowBox[{"InputForm", "@", "path"}]}]}], ",", "#"}], "]"}], "&"}], "/@",
     "list"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"pyfile", ",", "list2", ",", "\"\<List\>\""}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6944363156457605`*^9, 3.6944363519786844`*^9}}]
},
WindowSize->{1536, 877},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 688, 18, 88, "Input"],
Cell[1249, 40, 3239, 85, 183, "Input"],
Cell[4491, 127, 745, 22, 69, "Input"],
Cell[5239, 151, 8282, 206, 468, "Input"],
Cell[CellGroupData[{
Cell[13546, 361, 1982, 59, 145, "Input"],
Cell[15531, 422, 766, 13, 30, "Output"]
}, Open  ]],
Cell[16312, 438, 1291, 36, 69, "Input"],
Cell[17606, 476, 746, 19, 30, "Input"],
Cell[18355, 497, 995, 31, 88, "Input"]
}
]
*)

