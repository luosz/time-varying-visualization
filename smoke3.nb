(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    288432,       5856]
NotebookOptionsPosition[    286623,       5799]
NotebookOutlinePosition[    287136,       5819]
CellTagsIndexPosition[    287093,       5816]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"filelist", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
      "\"\<E:\\\\_time_varying_data\\\\SmokeSim\\\\tif\\\\dsSmoke.\>\"", "<>", 
       RowBox[{"IntegerString", "[", 
        RowBox[{"#", ",", "10", ",", "3"}], "]"}], "<>", "\"\<.tif\>\""}], 
      ")"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", "499"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"filelist", "[", 
        RowBox[{"[", "#", "]"}], "]"}], ",", "\"\<Image3D\>\""}], "]"}], 
     "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", "500"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.633890381433823*^9, 3.633890410291797*^9}, {
  3.6338904620572667`*^9, 3.6338905429775467`*^9}, {3.6338905939299307`*^9, 
  3.6338905962907705`*^9}, {3.635170507043296*^9, 3.6351705184660373`*^9}, {
  3.6351821730657578`*^9, 3.6351821757376356`*^9}, {3.635182211003361*^9, 
  3.635182252097193*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"offset", "=", "9"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"tf", "=", 
  RowBox[{
  "ColorData", "[", "\"\<RedGreenSplit\>\"", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tffilelist", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
      "\"\<E:\\\\_time_varying_data\\\\SmokeSim\\\\DSSmokeSideways100500\\\\\
dsSmoke.\>\"", "<>", 
       RowBox[{"IntegerString", "[", 
        RowBox[{"#", ",", "10", ",", "3"}], "]"}], "<>", "\"\<.tfi\>\""}], 
      ")"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", "499"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.634978224799017*^9, {3.635182257925338*^9, 3.635182268128497*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ColorDataFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"RedGreenSplit\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Gradient: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              StyleBox[
               GraphicsBox[RasterBox[CompressedData["
1:eJxt1n001XkCx/FrtFONKYkaW62e1mqshyhR0YdbZ6ZDqalMuWInYqiRVRJK
Lg1mG9PUlqee7Ah5aCrFbKJSiesiXCZEuM/P150JTdG15m7f7zl3z/7O+Z3X
77zP7/d9+uu3ODhqW6gxg8EwmrxDJ+/fn/97acH4v5cWS2uMA49wM6mGvZBK
+ryWR6k9O29SDd+vpJJuV7Zh5RyPaqrhOLVU0vM2hEQvM3tMNRz/CZX0qysK
Ntaf4FAN522ikn5ziXjh3tEWquF62qik9007O8auaKcarrODSvoX7BXS1shO
quH6f6aSLn7VwbOy6aIa7qubSnpEVMz9yMEequF+e6mkqyUWpTW5fVTDc3hB
Jf1gUGWmyfYBquH5DFJJH1OUetq/z6eSHnzd43x6Hp9KOie67SXfTUAl3dEl
ZLM7T0AlPfO3kaKs/UIq6ePV3zB+mSKikh6SNJ/lc1lEJb2Ref12oauYSvry
971mMNrFVNKzGzvCWPskVNJ1GWG1FcZSKul7t77+o+klKZV0rnnGoYhVMirp
Tl1WLY9bZVTSc86X/8UqQk6l8wZuYMe9p6CSHrq4q4d3QUElvUkUscLeRUkl
3bl4PCP9qZJK593/vYT/pYpK+oTDEk93IzWV9LBfK3KzzquppDdXfvpSu0JD
pfPGP9/k06Khkn7ePbKoMGyISvr/enCOqWXVniGE5yZ1oHwITuFdh745MASh
rdXyg481aHOeKEoKHkJw23XprBca+Hnab/yrtQarm48nPDAfwlm3tIBcHw3q
/dy/EKWp8UOobvNEnQZ1/wpsXXxXDbf9PnGXZCpMn0hcjFgNRqe5rC9dpkYJ
m3X6c28VonPeDh+30cAm+sN/O2erMD8rotj0mhI9Tomc+91q7OoR2lb/QYVT
ZXG1nBlKrG8av6D7hxonvaovr4+ZPOeH6d3JUQqU7T0WtW6tGjUl/5zdLFAg
+lmWdk27HOa6MeZxlQpqs31pOz5TQKgsnDbsLMfR7KNz719SwSrB603fAzl2
GFUu+vGcDMLlY/K3vipsEVgeCHWQo35unVvYqBSbuAn3PBgqsL21fPVFGdzs
OrYu3CVFRcib04nlSpTfavCLNZGhxEsQ3l0lwYK38XvvBSshmJfXqIuXYt7O
X9hn5kvwddZr17fmSliciPVIl0mQ8RUj1ztRDJVjvInHEwU2KDeXm+6UQJds
Wm48IMKOxt/6j8UqELvd2jrniRhR2VaNNZ4i3AuOu1Vjo0BR9XjOopViDF6z
5x/OF8J6/FXqeLcc3Us7PyzJn/z+kftrhylCnMo84u9+Uo4PMsrYTmYi1Hf5
mMlCBRh1eGV3bK0c7sMpw1VJQriqWR//0MBHECeWUaOSIXI3K5ypEaD4vX1e
rI/5aNgz2jF2SYbLdU593N0CzLOM9zf/dhCOY4evrt0iQ6vd9K3bm/h4yOz3
3/V4ACO8nNW/vpHC/9sxo3xHPnz9uIyTf+9HdWl1U3GRFEK5+rb27CB6v/zp
avWfXiAlpT/wb9uk6D1d23RcO4DwhHxfNbcXG1lG2jk6CbSbCx0XVPVjJOPU
iFXcc8x0/nNKc4kEU0xOnq1Knvw+L+HiVusedE7/1OKEnwSWnAOvPvfuw8xb
YetTeF24wI8oWm0kgX3q9oDh2b24WLdNcTvpGfZUZbhpr4nBZLo9ONPbA7uu
dWfEdj9j2Zkb3KJdYrAmFix1LOjGXbmt20fPO6AJ5+0OnCLGgRqj9OavuvDJ
+NyBjek8VHqOaMxvipASL1FEuDxD50zjtISV7ThqaZnMDRAhe1WT71RdJ2r1
59MKL+0a8+SpIpS9vHGroL4Dz/Xn0IKpnMBC19tC1N48N5f5PQ/D+v1y8TSP
7aoJEqIzMj5hYGf7u3014NyRK40FHwghsw3qP7aoDcv0638C1pb6gICfBHjT
mvr1Sl4LmPp1PsIiG7naLFiAJd5bNkWFNOGOfj0PINGZsDkzBNhUZ2lROsyB
Sj/vXfz4zGF2UhUfMesEvaLUeizXj1+JmOufFbiE8lFwp+zKwo/qwNGPcwNr
0mJWqWbx8dT58H5W8cN370/+7wRlc/JrBqHyTwyzPXT/Xc9Eg8tdln/4IDx9
Z43mZVbR/6rvZrxQmVoM4jTzSuqcOxX4D1dYN1E=
                 "], {{0, 0}, {1, 1}}],
                AspectRatio->NCache[
                  Rational[1, 8], 0.125],
                BaselinePosition->Bottom,
                ImageSize->65,
                PlotRange->{{0, 1}, {0, 1}}],
               Selectable->False,
               StripOnInput->False],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"RedGreenSplit\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Gradient: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              StyleBox[
               GraphicsBox[RasterBox[CompressedData["
1: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
Z43mZVbR/6rvZrxQmVoM4jTzSuqcOxX4D1dYN1E=
                 "], {{0, 0}, {1, 1}}],
                AspectRatio->NCache[
                  Rational[1, 8], 0.125],
                BaselinePosition->Bottom,
                ImageSize->65,
                PlotRange->{{0, 1}, {0, 1}}],
               Selectable->False,
               StripOnInput->False],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Domain: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Class: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Gradients\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  ColorDataFunction[
  "RedGreenSplit", "Gradients", {0, 1}, Blend["RedGreenSplit", #]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.6338908827826385`*^9, 3.633894014408826*^9, 3.6339002632216215`*^9, 
   3.63390035806674*^9, 3.6339004698191237`*^9, 3.6339007528193893`*^9, 
   3.634937942293542*^9, 3.634945279550661*^9, 3.6349756469181566`*^9, 
   3.6349769591973653`*^9, 3.6349769978883247`*^9, 3.6349770779529943`*^9, 
   3.6349771542631345`*^9, 3.634978356308168*^9, 3.6351032092600594`*^9, 
   3.6351820763467646`*^9, {3.635182259206644*^9, 3.6351822689253445`*^9}, 
   3.635184457027975*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"i", "=", "160"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"d", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"i", "-", "offset"}], ";;", "i"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"std", "=", 
   RowBox[{"ImageAdjust", "@@", 
    RowBox[{"ImageApply", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"StandardDeviation", "[", 
        RowBox[{"{", "##", "}"}], "]"}], "&"}], ",", "list"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"ImageData", "[", 
     RowBox[{"d", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"ImageData", "[", "std", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"h", "=", 
  RowBox[{"HistogramList", "[", "a", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"x", "=", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{"h", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"h", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", "1"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"y", "=", 
  RowBox[{"h", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"p", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "20000"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"GrayLevel", "[", "#", "]"}], "&"}], ")"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "\"\<intensity histogram\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<smoke2\\\\\>\"", "<>", 
     RowBox[{"ToString", "[", "160", "]"}], "<>", "\"\<.png\>\""}], ",", "p", 
    ",", 
    RowBox[{"ImageSize", "\[Rule]", "640"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.634939008809207*^9, 3.6349390168142424`*^9}, {
   3.6349391686994705`*^9, 3.6349391964445157`*^9}, {3.634939371903618*^9, 
   3.634939414498679*^9}, {3.634939449648732*^9, 3.634939503348817*^9}, {
   3.6349397098248377`*^9, 3.634939733470151*^9}, {3.634939830848771*^9, 
   3.634939920773932*^9}, {3.6349400019475183`*^9, 3.634940010766039*^9}, {
   3.6349401421598434`*^9, 3.634940220564144*^9}, {3.6349402967362366`*^9, 
   3.634940297311237*^9}, {3.634940355936002*^9, 3.6349404106160617`*^9}, 
   3.6349405947888613`*^9, {3.634940715289774*^9, 3.6349408415974503`*^9}, {
   3.6349409540340147`*^9, 3.6349409742541733`*^9}, {3.634941007394021*^9, 
   3.634941031037049*^9}, {3.634941092544305*^9, 3.6349411000237336`*^9}, 
   3.6349412006270995`*^9, 3.6349412418622007`*^9, {3.6349430250785985`*^9, 
   3.634943025645705*^9}, {3.6349446354579906`*^9, 3.6349446358569946`*^9}, {
   3.63494467428856*^9, 3.63494469298129*^9}, {3.6349447306363487`*^9, 
   3.6349447334163694`*^9}, {3.6349448538792973`*^9, 3.634944879796762*^9}, {
   3.6349449165301623`*^9, 3.6349449523302174`*^9}, {3.6349451892655773`*^9, 
   3.634945189885543*^9}, {3.6349453882008343`*^9, 3.6349454085909023`*^9}, 
   3.6349454412759724`*^9, {3.63497508808169*^9, 3.634975088876664*^9}, {
   3.6349755598151875`*^9, 3.634975578755278*^9}, {3.634976935108279*^9, 
   3.634976950061438*^9}, {3.6349771126924925`*^9, 3.6349771131299424`*^9}, {
   3.634978184863765*^9, 3.634978201454714*^9}}],

Cell[BoxData["160"], "Output",
 CellChangeTimes->{{3.6349391916094804`*^9, 3.6349391979544897`*^9}, 
   3.634939417788666*^9, {3.6349394544837503`*^9, 3.634939504938797*^9}, {
   3.6349397115138965`*^9, 3.634939721136411*^9}, {3.6349398483488135`*^9, 
   3.634939922583908*^9}, 3.6349400121050787`*^9, {3.6349401620240393`*^9, 
   3.6349402222241344`*^9}, {3.6349405864973307`*^9, 
   3.6349405961018815`*^9}, {3.634940760152277*^9, 3.6349408432374415`*^9}, 
   3.63494089632752*^9, 3.634940975463211*^9, 3.634941095891487*^9, 
   3.634941202057083*^9, 3.6349412430221443`*^9, 3.634942355250244*^9, 
   3.634942422086419*^9, {3.6349428121020055`*^9, 3.6349428157819786`*^9}, 
   3.6349430436092367`*^9, 3.634943872175483*^9, 3.6349446378560524`*^9, 
   3.6349446946712613`*^9, 3.634944753416362*^9, {3.6349449294651313`*^9, 
   3.6349449534902244`*^9}, 3.6349452930506763`*^9, 3.6349454681559734`*^9, 
   3.6349756614600315`*^9, 3.6349769657880297`*^9, 3.634977011716426*^9, 
   3.634977091649426*^9, 3.634977168266832*^9, 3.634978356333119*^9, 
   3.6351032092756763`*^9, {3.635182078971779*^9, 3.6351821028624463`*^9}, 
   3.635182340503641*^9, 3.635183517619682*^9, 3.6351844570436134`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "20"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["3", "20"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["7", "20"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["9", "20"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["11", "20"], ",", 
     FractionBox["3", "5"], ",", 
     FractionBox["13", "20"], ",", 
     FractionBox["7", "10"], ",", 
     FractionBox["3", "4"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["17", "20"], ",", 
     FractionBox["9", "10"], ",", 
     FractionBox["19", "20"], ",", "1", ",", 
     FractionBox["21", "20"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "934910", ",", "19822", ",", "8800", ",", "5682", ",", "4199", ",", 
     "3405", ",", "2848", ",", "2195", ",", "2145", ",", "1962", ",", "1880", 
     ",", "1533", ",", "1545", ",", "1539", ",", "1543", ",", "1261", ",", 
     "1383", ",", "1156", ",", "1002", ",", "677", ",", "513"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6349391916094804`*^9, 3.6349391979544897`*^9}, 
   3.634939417788666*^9, {3.6349394544837503`*^9, 3.634939504938797*^9}, {
   3.6349397115138965`*^9, 3.634939721136411*^9}, {3.6349398483488135`*^9, 
   3.634939922583908*^9}, 3.6349400121050787`*^9, {3.6349401620240393`*^9, 
   3.6349402222241344`*^9}, {3.6349405864973307`*^9, 
   3.6349405961018815`*^9}, {3.634940760152277*^9, 3.6349408432374415`*^9}, 
   3.63494089632752*^9, 3.634940975463211*^9, 3.634941095891487*^9, 
   3.634941202057083*^9, 3.6349412430221443`*^9, 3.634942355250244*^9, 
   3.634942422086419*^9, {3.6349428121020055`*^9, 3.6349428157819786`*^9}, 
   3.6349430436092367`*^9, 3.634943872175483*^9, 3.6349446378560524`*^9, 
   3.6349446946712613`*^9, 3.634944753416362*^9, {3.6349449294651313`*^9, 
   3.6349449534902244`*^9}, 3.6349452930506763`*^9, 3.6349454681559734`*^9, 
   3.6349756614600315`*^9, 3.6349769657880297`*^9, 3.634977011716426*^9, 
   3.634977091649426*^9, 3.634977168266832*^9, 3.634978356333119*^9, 
   3.6351032092756763`*^9, {3.635182078971779*^9, 3.6351821028624463`*^9}, 
   3.635182340503641*^9, 3.635183517619682*^9, 3.635184471668671*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   FractionBox["1", "20"], ",", 
   FractionBox["1", "10"], ",", 
   FractionBox["3", "20"], ",", 
   FractionBox["1", "5"], ",", 
   FractionBox["1", "4"], ",", 
   FractionBox["3", "10"], ",", 
   FractionBox["7", "20"], ",", 
   FractionBox["2", "5"], ",", 
   FractionBox["9", "20"], ",", 
   FractionBox["1", "2"], ",", 
   FractionBox["11", "20"], ",", 
   FractionBox["3", "5"], ",", 
   FractionBox["13", "20"], ",", 
   FractionBox["7", "10"], ",", 
   FractionBox["3", "4"], ",", 
   FractionBox["4", "5"], ",", 
   FractionBox["17", "20"], ",", 
   FractionBox["9", "10"], ",", 
   FractionBox["19", "20"], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.6349391916094804`*^9, 3.6349391979544897`*^9}, 
   3.634939417788666*^9, {3.6349394544837503`*^9, 3.634939504938797*^9}, {
   3.6349397115138965`*^9, 3.634939721136411*^9}, {3.6349398483488135`*^9, 
   3.634939922583908*^9}, 3.6349400121050787`*^9, {3.6349401620240393`*^9, 
   3.6349402222241344`*^9}, {3.6349405864973307`*^9, 
   3.6349405961018815`*^9}, {3.634940760152277*^9, 3.6349408432374415`*^9}, 
   3.63494089632752*^9, 3.634940975463211*^9, 3.634941095891487*^9, 
   3.634941202057083*^9, 3.6349412430221443`*^9, 3.634942355250244*^9, 
   3.634942422086419*^9, {3.6349428121020055`*^9, 3.6349428157819786`*^9}, 
   3.6349430436092367`*^9, 3.634943872175483*^9, 3.6349446378560524`*^9, 
   3.6349446946712613`*^9, 3.634944753416362*^9, {3.6349449294651313`*^9, 
   3.6349449534902244`*^9}, 3.6349452930506763`*^9, 3.6349454681559734`*^9, 
   3.6349756614600315`*^9, 3.6349769657880297`*^9, 3.634977011716426*^9, 
   3.634977091649426*^9, 3.634977168266832*^9, 3.634978356333119*^9, 
   3.6351032092756763`*^9, {3.635182078971779*^9, 3.6351821028624463`*^9}, 
   3.635182340503641*^9, 3.635183517619682*^9, 3.635184471668671*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "934910", ",", "19822", ",", "8800", ",", "5682", ",", "4199", ",", "3405", 
   ",", "2848", ",", "2195", ",", "2145", ",", "1962", ",", "1880", ",", 
   "1533", ",", "1545", ",", "1539", ",", "1543", ",", "1261", ",", "1383", 
   ",", "1156", ",", "1002", ",", "677", ",", "513"}], "}"}]], "Output",
 CellChangeTimes->{{3.6349391916094804`*^9, 3.6349391979544897`*^9}, 
   3.634939417788666*^9, {3.6349394544837503`*^9, 3.634939504938797*^9}, {
   3.6349397115138965`*^9, 3.634939721136411*^9}, {3.6349398483488135`*^9, 
   3.634939922583908*^9}, 3.6349400121050787`*^9, {3.6349401620240393`*^9, 
   3.6349402222241344`*^9}, {3.6349405864973307`*^9, 
   3.6349405961018815`*^9}, {3.634940760152277*^9, 3.6349408432374415`*^9}, 
   3.63494089632752*^9, 3.634940975463211*^9, 3.634941095891487*^9, 
   3.634941202057083*^9, 3.6349412430221443`*^9, 3.634942355250244*^9, 
   3.634942422086419*^9, {3.6349428121020055`*^9, 3.6349428157819786`*^9}, 
   3.6349430436092367`*^9, 3.634943872175483*^9, 3.6349446378560524`*^9, 
   3.6349446946712613`*^9, 3.634944753416362*^9, {3.6349449294651313`*^9, 
   3.6349449534902244`*^9}, 3.6349452930506763`*^9, 3.6349454681559734`*^9, 
   3.6349756614600315`*^9, 3.6349769657880297`*^9, 3.634977011716426*^9, 
   3.634977091649426*^9, 3.634977168266832*^9, 3.634978356333119*^9, 
   3.6351032092756763`*^9, {3.635182078971779*^9, 3.6351821028624463`*^9}, 
   3.635182340503641*^9, 3.635183517619682*^9, 3.635184471668671*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQjQI6LjvMmgkCK+1B3IZoGH8nmM9gcNDBGAwOQ/hG
26DyJyH89A0OEIMuQPizVkHVX4bwHZY5pIHBNQhfbSFU/00I/9ACh7NnQOAO
hL9iHtS8BxB+wlyo+ocQ/pfpUPMfQ/gqM6D6n0D4PDOg9j2D8GVmQM17AeFv
mQw17yWEP2cq1LzXEL7AJKh5byD8gH6oee8gfI1WqHkfIHyOBoff/5wdg2dA
wg8UngCHvmgg
      "], {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{22, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21}, VertexColors -> Automatic]}}}, 
      VertexColors -> {0., 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 
       0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1., 
       0.049990274159425106`}], {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, PlotRange -> {{0, 1}, {0, 20000}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotRange -> {{0, 1}, {0, 20000}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox["\"intensity histogram\"", TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6349391916094804`*^9, 3.6349391979544897`*^9}, 
   3.634939417788666*^9, {3.6349394544837503`*^9, 3.634939504938797*^9}, {
   3.6349397115138965`*^9, 3.634939721136411*^9}, {3.6349398483488135`*^9, 
   3.634939922583908*^9}, 3.6349400121050787`*^9, {3.6349401620240393`*^9, 
   3.6349402222241344`*^9}, {3.6349405864973307`*^9, 
   3.6349405961018815`*^9}, {3.634940760152277*^9, 3.6349408432374415`*^9}, 
   3.63494089632752*^9, 3.634940975463211*^9, 3.634941095891487*^9, 
   3.634941202057083*^9, 3.6349412430221443`*^9, 3.634942355250244*^9, 
   3.634942422086419*^9, {3.6349428121020055`*^9, 3.6349428157819786`*^9}, 
   3.6349430436092367`*^9, 3.634943872175483*^9, 3.6349446378560524`*^9, 
   3.6349446946712613`*^9, 3.634944753416362*^9, {3.6349449294651313`*^9, 
   3.6349449534902244`*^9}, 3.6349452930506763`*^9, 3.6349454681559734`*^9, 
   3.6349756614600315`*^9, 3.6349769657880297`*^9, 3.634977011716426*^9, 
   3.634977091649426*^9, 3.634977168266832*^9, 3.634978356333119*^9, 
   3.6351032092756763`*^9, {3.635182078971779*^9, 3.6351821028624463`*^9}, 
   3.635182340503641*^9, 3.635183517619682*^9, 3.6351844717780623`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"bins", "=", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{"0", ",", 
    RowBox[{"Length", "[", "y", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"sumstd", "=", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{"0", ",", 
    RowBox[{"Length", "[", "y", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"j", "=", 
      RowBox[{
       RowBox[{"IntegerPart", "[", 
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "*", "20"}], "]"}], "+", "1"}]}], 
     ";", 
     RowBox[{
      RowBox[{"bins", "[", 
       RowBox[{"[", "j", "]"}], "]"}], "++"}], ";", 
     RowBox[{
      RowBox[{"sumstd", "[", 
       RowBox[{"[", "j", "]"}], "]"}], "+=", 
      RowBox[{"b", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "a", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", "bins", "\[IndentingNewLine]", "sumstd", "\
\[IndentingNewLine]", 
 RowBox[{"stds", "=", 
  RowBox[{"sumstd", "/", "bins"}]}], "\[IndentingNewLine]", 
 RowBox[{"p2", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"x", ",", "stds"}], "}"}], "]"}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"GrayLevel", "[", "#", "]"}], "&"}], ")"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "\"\<volatility histogram\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<smoke2\\\\\>\"", "<>", 
     RowBox[{"ToString", "[", "160", "]"}], "<>", "\"\<_std.png\>\""}], ",", 
    "p2", ",", 
    RowBox[{"ImageSize", "\[Rule]", "640"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6349418170166707`*^9, 3.634941849836755*^9}, {
   3.6349419248418617`*^9, 3.6349419877619534`*^9}, {3.6349420272469854`*^9, 
   3.634942195792267*^9}, {3.634942290047535*^9, 3.6349423976263976`*^9}, {
   3.634942453346448*^9, 3.6349425482616224`*^9}, {3.6349426925668116`*^9, 
   3.6349427413468833`*^9}, {3.6349428564020796`*^9, 
   3.6349429048321085`*^9}, {3.634943009536707*^9, 3.634943030949217*^9}, {
   3.634943078124259*^9, 3.634943079439291*^9}, {3.6349431433643565`*^9, 
   3.63494318953446*^9}, {3.634943335759648*^9, 3.6349434471898155`*^9}, {
   3.6349436296001167`*^9, 3.634943629955085*^9}, {3.634943681410143*^9, 
   3.634943719680251*^9}, {3.6349438080903845`*^9, 3.6349438434604526`*^9}, {
   3.634943898575486*^9, 3.634944074835755*^9}, {3.6349441075208273`*^9, 
   3.6349441077457995`*^9}, 3.6349443493011675`*^9, {3.634944396416235*^9, 
   3.6349444716863527`*^9}, {3.634944507184683*^9, 3.634944508664669*^9}, {
   3.634944595549625*^9, 3.634944595766695*^9}, {3.6349447567313504`*^9, 
   3.6349447710564013`*^9}, {3.6349449669652114`*^9, 
   3.6349449724552145`*^9}, {3.6349451998855853`*^9, 3.634945200680586*^9}, {
   3.634945448860932*^9, 3.6349454590659447`*^9}, {3.6349769310672646`*^9, 
   3.6349769556168485`*^9}, {3.634977048488107*^9, 3.634977048909962*^9}, {
   3.63497710920813*^9, 3.63497710967686*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.634943721255274*^9, 3.634943777080286*^9, 3.6349438488404417`*^9, {
   3.634943903475514*^9, 3.6349439154504957`*^9}, 3.6349440230157166`*^9, 
   3.6349440757507753`*^9, 3.6349443521662064`*^9, 3.634944400761222*^9, 
   3.634944472566391*^9, 3.6349445095996733`*^9, 3.6349447718413553`*^9, 
   3.6349449733752203`*^9, 3.6349452931307287`*^9, 3.634945471970945*^9, 
   3.6349756618720264`*^9, 3.6349770121226764`*^9, 3.6349770920556765`*^9, 
   3.6349771687043123`*^9, 3.634978372501049*^9, 3.635103225931944*^9, 
   3.635183532525967*^9, 3.6351844721842613`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.634943721255274*^9, 3.634943777080286*^9, 3.6349438488404417`*^9, {
   3.634943903475514*^9, 3.6349439154504957`*^9}, 3.6349440230157166`*^9, 
   3.6349440757507753`*^9, 3.6349443521662064`*^9, 3.634944400761222*^9, 
   3.634944472566391*^9, 3.6349445095996733`*^9, 3.6349447718413553`*^9, 
   3.6349449733752203`*^9, 3.6349452931307287`*^9, 3.634945471970945*^9, 
   3.6349756618720264`*^9, 3.6349770121226764`*^9, 3.6349770920556765`*^9, 
   3.6349771687043123`*^9, 3.634978372501049*^9, 3.635103225931944*^9, 
   3.635183532525967*^9, 3.6351844721842613`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "934910", ",", "19822", ",", "8800", ",", "5682", ",", "4199", ",", "3405", 
   ",", "2848", ",", "2195", ",", "2145", ",", "1962", ",", "1880", ",", 
   "1533", ",", "1545", ",", "1539", ",", "1543", ",", "1261", ",", "1383", 
   ",", "1156", ",", "1002", ",", "677", ",", "513"}], "}"}]], "Output",
 CellChangeTimes->{
  3.634943721255274*^9, 3.634943777080286*^9, 3.6349438488404417`*^9, {
   3.634943903475514*^9, 3.6349439154504957`*^9}, 3.6349440230157166`*^9, 
   3.6349440757507753`*^9, 3.6349443521662064`*^9, 3.634944400761222*^9, 
   3.634944472566391*^9, 3.6349445095996733`*^9, 3.6349447718413553`*^9, 
   3.6349449733752203`*^9, 3.6349452931307287`*^9, 3.634945471970945*^9, 
   3.6349756618720264`*^9, 3.6349770121226764`*^9, 3.6349770920556765`*^9, 
   3.6349771687043123`*^9, 3.634978372501049*^9, 3.635103225931944*^9, 
   3.635183532525967*^9, 3.635184479637477*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "554.1098039213732`", ",", "386.0039215685782`", ",", "266.2431372549036`", 
   ",", "222.24313725491015`", ",", "188.90196078431836`", ",", 
   "167.63137254902406`", ",", "143.8274509803958`", ",", 
   "109.84313725490448`", ",", "107.45098039215902`", ",", 
   "97.29803921568835`", ",", "93.81960784313914`", ",", "71.54509803921684`",
    ",", "64.04313725490313`", ",", "58.16470588235405`", ",", 
   "45.313725490196816`", ",", "28.549019607843043`", ",", 
   "20.886274509803858`", ",", "9.603921568627422`", ",", 
   "3.933333333333321`", ",", "0.7215686274509784`", ",", "0.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.634943721255274*^9, 3.634943777080286*^9, 3.6349438488404417`*^9, {
   3.634943903475514*^9, 3.6349439154504957`*^9}, 3.6349440230157166`*^9, 
   3.6349440757507753`*^9, 3.6349443521662064`*^9, 3.634944400761222*^9, 
   3.634944472566391*^9, 3.6349445095996733`*^9, 3.6349447718413553`*^9, 
   3.6349449733752203`*^9, 3.6349452931307287`*^9, 3.634945471970945*^9, 
   3.6349756618720264`*^9, 3.6349770121226764`*^9, 3.6349770920556765`*^9, 
   3.6349771687043123`*^9, 3.634978372501049*^9, 3.635103225931944*^9, 
   3.635183532525967*^9, 3.635184479637477*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.000592687856501025`", ",", "0.0194735103202794`", ",", 
   "0.0302549019607845`", ",", "0.039113540523567435`", ",", 
   "0.04498736860783957`", ",", "0.049230946416747155`", ",", 
   "0.0505012117206446`", ",", "0.05004243155120933`", ",", 
   "0.05009369715252169`", ",", "0.04959125342287888`", ",", 
   "0.04990404672507401`", ",", "0.04666999219779311`", ",", 
   "0.04145186877340008`", ",", "0.03779383098268619`", ",", 
   "0.0293672880688249`", ",", "0.022639983828582906`", ",", 
   "0.015102150766307923`", ",", "0.00830789063030054`", ",", 
   "0.0039254823685961285`", ",", "0.0010658325368552118`", ",", "0.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.634943721255274*^9, 3.634943777080286*^9, 3.6349438488404417`*^9, {
   3.634943903475514*^9, 3.6349439154504957`*^9}, 3.6349440230157166`*^9, 
   3.6349440757507753`*^9, 3.6349443521662064`*^9, 3.634944400761222*^9, 
   3.634944472566391*^9, 3.6349445095996733`*^9, 3.6349447718413553`*^9, 
   3.6349449733752203`*^9, 3.6349452931307287`*^9, 3.634945471970945*^9, 
   3.6349756618720264`*^9, 3.6349770121226764`*^9, 3.6349770920556765`*^9, 
   3.6349771687043123`*^9, 3.634978372501049*^9, 3.635103225931944*^9, 
   3.635183532525967*^9, 3.635184479637477*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQNuK95VXc52tp81EwRW2pfw3la/+2EylL/T/l/2
HUmV3/PsjcHgsP1jn0OLNrAtgcqftF+369zMqRzL7SGmXbB/7TS/8IzJSqj6
y/YbHeorvW+vtE8Dg2v2tVU3YzXnr4Tqv2mf+pOp7+HSlfZnz4DAHXvVRzbh
bCkroeY9sE+ZbveRtRem/qH9goRkEcWny6HmP7Z/dbrqpa7lUqj+J/aKIfId
2yIXQ+17Zl+6zj+8VGge1LwX9kwHGma815sONe+l/dZb8rEP3vZBzXttr1NS
ZLKLuRFq3hv7X1l+y7RECqDmvbN/Z/joR05ZINS8D/awcAQASsOUcQ==
      "], {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21}, VertexColors -> Automatic]}}}, 
      VertexColors -> {0., 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 
       0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1.}], {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.}, {0, 0.0505012117206446}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 1.}, {0, 0.0505012117206446}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox["\"volatility histogram\"", TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.634943721255274*^9, 3.634943777080286*^9, 3.6349438488404417`*^9, {
   3.634943903475514*^9, 3.6349439154504957`*^9}, 3.6349440230157166`*^9, 
   3.6349440757507753`*^9, 3.6349443521662064`*^9, 3.634944400761222*^9, 
   3.634944472566391*^9, 3.6349445095996733`*^9, 3.6349447718413553`*^9, 
   3.6349449733752203`*^9, 3.6349452931307287`*^9, 3.634945471970945*^9, 
   3.6349756618720264`*^9, 3.6349770121226764`*^9, 3.6349770920556765`*^9, 
   3.6349771687043123`*^9, 3.634978372501049*^9, 3.635103225931944*^9, 
   3.635183532525967*^9, 3.635184479731225*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"i", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tf", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"tffilelist", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<XML\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"intensity", "=", 
   RowBox[{"ToExpression", "@", 
    RowBox[{"Cases", "[", 
     RowBox[{"tf", ",", 
      RowBox[{
       RowBox[{"XMLElement", "[", 
        RowBox[{"\"\<intensity\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<value\>\"", "\[Rule]", "atrib_"}], ",", "___"}], 
          "}"}], ",", "___"}], "]"}], "\[RuleDelayed]", "atrib"}], ",", 
      "\[Infinity]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", "=", 
   RowBox[{"ToExpression", "@", 
    RowBox[{"Cases", "[", 
     RowBox[{"tf", ",", 
      RowBox[{
       RowBox[{"XMLElement", "[", 
        RowBox[{"\"\<colorL\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<r\>\"", "\[Rule]", "atrib_"}], ",", "___"}], "}"}], 
         ",", "___"}], "]"}], "\[RuleDelayed]", "atrib"}], ",", 
      "\[Infinity]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"ToExpression", "@", 
    RowBox[{"Cases", "[", 
     RowBox[{"tf", ",", 
      RowBox[{
       RowBox[{"XMLElement", "[", 
        RowBox[{"\"\<colorL\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"___", ",", 
           RowBox[{"\"\<g\>\"", "\[Rule]", "atrib_"}], ",", "___"}], "}"}], 
         ",", "___"}], "]"}], "\[RuleDelayed]", "atrib"}], ",", 
      "\[Infinity]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"ToExpression", "@", 
    RowBox[{"Cases", "[", 
     RowBox[{"tf", ",", 
      RowBox[{
       RowBox[{"XMLElement", "[", 
        RowBox[{"\"\<colorL\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"___", ",", 
           RowBox[{"\"\<b\>\"", "\[Rule]", "atrib_"}], ",", "___"}], "}"}], 
         ",", "___"}], "]"}], "\[RuleDelayed]", "atrib"}], ",", 
      "\[Infinity]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"ToExpression", "@", 
    RowBox[{"Cases", "[", 
     RowBox[{"tf", ",", 
      RowBox[{
       RowBox[{"XMLElement", "[", 
        RowBox[{"\"\<colorL\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"___", ",", 
           RowBox[{"\"\<a\>\"", "\[Rule]", "atrib_"}]}], "}"}], ",", "___"}], 
        "]"}], "\[RuleDelayed]", "atrib"}], ",", "\[Infinity]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rgba", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", "/", "255."}], "&"}], ")"}], "/@", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"r", ",", "g", ",", "b", ",", "a"}], "}"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colors", "=", 
   RowBox[{"RGBColor", "/@", "rgba"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"intensitycolors", "=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{"intensity", ",", "colors"}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"defaultcolorfunction", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Blend", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.", ",", " ", 
           RowBox[{"RGBColor", "[", 
            RowBox[{
            "0.05635", ",", " ", "0.081", ",", " ", "0.07687", ",", " ", 
             "0.0166234"}], "]"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"0.1", ",", " ", 
           RowBox[{"RGBColor", "[", 
            RowBox[{
            "0.8877", ",", " ", "0.2636", ",", " ", "0.", ",", " ", 
             "0.114961"}], "]"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"0.66", ",", " ", 
           RowBox[{"RGBColor", "[", 
            RowBox[{
            "1.", ",", " ", "0.9658", ",", " ", "0.4926", ",", " ", 
             "0.665652"}], "]"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"1.", ",", " ", 
           RowBox[{"RGBColor", "[", 
            RowBox[{
            "1.", ",", " ", "0.6436", ",", " ", "0.03622", ",", " ", "1."}], 
            "]"}]}], "}"}]}], "}"}], ",", " ", "#1"}], "]"}], " ", "&"}], " ",
     ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"colorfunction", "=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Blend", "[", 
     RowBox[{"intensitycolors", ",", " ", "#1"}], "]"}], " ", "&"}], " ", 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rgb", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", "/", "255."}], "&"}], ")"}], "/@", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"r", ",", "g", ",", "b"}], "}"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colors2", "=", 
   RowBox[{"RGBColor", "/@", "rgb"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"intensitycolors2", "=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{"intensity", ",", "colors2"}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"colorfunction2", "=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Blend", "[", 
     RowBox[{"intensitycolors2", ",", " ", "#1"}], "]"}], " ", "&"}], " ", 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"opacity", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", "/", "255."}], "&"}], ")"}], "/@", "a"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"intensity", ",", "opacity"}], "}"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "colorfunction2"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<transfer function\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Image3D", "[", 
  RowBox[{
   RowBox[{"d", "[", 
    RowBox[{"[", "i", "]"}], "]"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "colorfunction"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ImageHistogram", "[", 
  RowBox[{"d", "[", 
   RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.635182383847494*^9, 3.635182476191511*^9}, {
  3.635183543338513*^9, 3.635183550994808*^9}, {3.635183628448121*^9, 
  3.635183629323119*^9}, {3.635183686729461*^9, 3.635183691557624*^9}, {
  3.635183745772525*^9, 3.6351837633165865`*^9}, {3.6351838195053425`*^9, 
  3.635183883192966*^9}, {3.63518414012214*^9, 3.6351841717939153`*^9}}],

Cell[BoxData["160"], "Output",
 CellChangeTimes->{{3.6351825404729404`*^9, 3.635182549551015*^9}, 
   3.635183540182234*^9, 3.635183638463764*^9, {3.635183687166963*^9, 
   3.6351836927451744`*^9}, {3.635183750047802*^9, 3.63518376371756*^9}, {
   3.6351838657867336`*^9, 3.6351838860367093`*^9}, {3.6351841405871143`*^9, 
   3.6351841818005295`*^9}, 3.6351844800124044`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0., 0., 0.], Opacity[0.], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{0., 0., 0., 0.}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 0.; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0., 0., 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0., 0., 0., 0.}],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.058823529411764705`", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1., 0., 0.], Opacity[0.0196078431372549], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666667, 0., 0., 0.0196078431372549],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{1., 0., 0., 0.0196078431372549}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 0.0196078431372549; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1., 0., 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{1., 0., 0., 0.0196078431372549}],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.11764705882352941`", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1., 0.37254901960784315`, 0.], Opacity[
            0.047058823529411764`], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666667, 0.24836601307189543`, 0., 
            0.047058823529411764`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{1., 0.37254901960784315, 0., 0.047058823529411764}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 0.047058823529411764`; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1., 0.37254901960784315`, 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{1., 0.37254901960784315`, 0., 0.047058823529411764`}],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1764705882352941`", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1., 0.7490196078431373, 0.], Opacity[
            0.06666666666666667], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666667, 0.4993464052287582, 0., 0.06666666666666667],
          FrameTicks->None,
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{1., 0.7490196078431373, 0., 0.06666666666666667}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 0.06666666666666667; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1., 0.7490196078431373, 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{1., 0.7490196078431373, 0., 0.06666666666666667}],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.23529411764705882`", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.8745098039215686, 1., 0.], Opacity[
            0.11764705882352941`], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.5830065359477125, 0.6666666666666667, 0., 0.11764705882352941`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{0.8745098039215686, 1., 0., 0.11764705882352941}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 0.11764705882352941`; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.8745098039215686, 1., 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.8745098039215686, 1., 0., 0.11764705882352941`}],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.29411764705882354`", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.4980392156862745, 1., 0.], Opacity[
            0.12156862745098039`], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.3320261437908497, 0.6666666666666667, 0., 0.12156862745098039`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{0.4980392156862745, 1., 0., 0.12156862745098039}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 0.12156862745098039`; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.4980392156862745, 1., 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.4980392156862745, 1., 0., 0.12156862745098039`}],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3529411764705882`", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.12156862745098039`, 1., 0.], Opacity[
            0.16470588235294117`], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.08104575163398693, 0.6666666666666667, 0., 0.16470588235294117`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{0.12156862745098039, 1., 0., 0.16470588235294117}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 0.16470588235294117`; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.12156862745098039`, 1., 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.12156862745098039`, 1., 0., 0.16470588235294117`}],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4117647058823529`", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0., 1., 0.24705882352941178`], Opacity[
            0.16470588235294117`], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0., 0.6666666666666667, 0.1647058823529412, 0.16470588235294117`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{0., 1., 0.24705882352941178, 0.16470588235294117}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 0.16470588235294117`; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0., 1., 0.24705882352941178`]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0., 1., 0.24705882352941178`, 0.16470588235294117`}],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.47058823529411764`", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0., 1., 0.6235294117647059], Opacity[
            0.16470588235294117`], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0., 0.6666666666666667, 0.41568627450980394`, 0.16470588235294117`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{0., 1., 0.6235294117647059, 0.16470588235294117}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 0.16470588235294117`; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0., 1., 0.6235294117647059]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0., 1., 0.6235294117647059, 0.16470588235294117`}],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5294117647058824`", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0., 1., 1.], Opacity[0.16470588235294117`], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0., 0.6666666666666667, 0.6666666666666667, 0.16470588235294117`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{0., 1., 1., 0.16470588235294117}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 0.16470588235294117`; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0., 1., 1.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0., 1., 1., 0.16470588235294117`}],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5882352941176471`", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0., 0.6235294117647059, 1.], Opacity[
            0.16470588235294117`], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0., 0.41568627450980394`, 0.6666666666666667, 0.16470588235294117`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{0., 0.6235294117647059, 1., 0.16470588235294117}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 0.16470588235294117`; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0., 0.6235294117647059, 1.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0., 0.6235294117647059, 1., 0.16470588235294117`}],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6470588235294118`", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0., 0.24705882352941178`, 1.], Opacity[
            0.16470588235294117`], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0., 0.1647058823529412, 0.6666666666666667, 0.16470588235294117`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{0., 0.24705882352941178, 1., 0.16470588235294117}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 0.16470588235294117`; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0., 0.24705882352941178`, 1.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0., 0.24705882352941178`, 1., 0.16470588235294117`}],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7058823529411764`", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.12156862745098039`, 0., 1.], Opacity[
            0.16470588235294117`], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.08104575163398693, 0., 0.6666666666666667, 0.16470588235294117`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{0.12156862745098039, 0., 1., 0.16470588235294117}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 0.16470588235294117`; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.12156862745098039`, 0., 1.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.12156862745098039`, 0., 1., 0.16470588235294117`}],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7647058823529411`", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.4980392156862745, 0., 1.], Opacity[0.2], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.3320261437908497, 0., 0.6666666666666667, 0.2],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{0.4980392156862745, 0., 1., 0.2}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 0.2; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.4980392156862745, 0., 1.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.4980392156862745, 0., 1., 0.2}],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8235294117647058`", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.8745098039215686, 0., 1.], Opacity[
            0.17254901960784313`], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.5830065359477125, 0., 0.6666666666666667, 0.17254901960784313`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{0.8745098039215686, 0., 1., 0.17254901960784313}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 0.17254901960784313`; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.8745098039215686, 0., 1.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.8745098039215686, 0., 1., 0.17254901960784313`}],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8823529411764706`", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1., 0., 0.7490196078431373], Opacity[
            0.23137254901960785`], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666667, 0., 0.4993464052287582, 0.23137254901960785`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{1., 0., 0.7490196078431373, 0.23137254901960785}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 0.23137254901960785`; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1., 0., 0.7490196078431373]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{1., 0., 0.7490196078431373, 0.23137254901960785`}],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9411764705882353`", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1., 0., 0.37254901960784315`], Opacity[
            0.5058823529411764], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666667, 0., 0.24836601307189543`, 0.5058823529411764],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{1., 0., 0.37254901960784315, 0.5058823529411764}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 0.5058823529411764; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1., 0., 0.37254901960784315`]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{1., 0., 0.37254901960784315`, 0.5058823529411764}],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1., 1., 1.], Opacity[0.], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666667, 0.6666666666666667, 0.6666666666666667, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{1., 1., 1., 0.}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 0.; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1., 1., 1.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{1., 1., 1., 0.}],
      Editable->False,
      Selectable->False]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6351825404729404`*^9, 3.635182549551015*^9}, 
   3.635183540182234*^9, 3.635183638463764*^9, {3.635183687166963*^9, 
   3.6351836927451744`*^9}, {3.635183750047802*^9, 3.63518376371756*^9}, {
   3.6351838657867336`*^9, 3.6351838860367093`*^9}, {3.6351841405871143`*^9, 
   3.6351841818005295`*^9}, 3.6351844801217785`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Blend", "[", 
   RowBox[{"intensitycolors", ",", "#1"}], "]"}], "&"}]], "Output",
 CellChangeTimes->{{3.6351825404729404`*^9, 3.635182549551015*^9}, 
   3.635183540182234*^9, 3.635183638463764*^9, {3.635183687166963*^9, 
   3.6351836927451744`*^9}, {3.635183750047802*^9, 3.63518376371756*^9}, {
   3.6351838657867336`*^9, 3.6351838860367093`*^9}, {3.6351841405871143`*^9, 
   3.6351841818005295`*^9}, 3.6351844801217785`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0., 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{0., 0., 0.}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0., 0., 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0., 0., 0.}],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.058823529411764705`", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1., 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666667, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{1., 0., 0.}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1., 0., 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{1., 0., 0.}],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.11764705882352941`", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1., 0.37254901960784315`, 0.], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666667, 0.24836601307189543`, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{1., 0.37254901960784315, 0.}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1., 0.37254901960784315`, 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{1., 0.37254901960784315`, 0.}],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1764705882352941`", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1., 0.7490196078431373, 0.], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666667, 0.4993464052287582, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{1., 0.7490196078431373, 0.}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1., 0.7490196078431373, 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{1., 0.7490196078431373, 0.}],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.23529411764705882`", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.8745098039215686, 1., 0.], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.5830065359477125, 0.6666666666666667, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{0.8745098039215686, 1., 0.}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.8745098039215686, 1., 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.8745098039215686, 1., 0.}],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.29411764705882354`", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.4980392156862745, 1., 0.], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.3320261437908497, 0.6666666666666667, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{0.4980392156862745, 1., 0.}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.4980392156862745, 1., 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.4980392156862745, 1., 0.}],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3529411764705882`", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.12156862745098039`, 1., 0.], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.08104575163398693, 0.6666666666666667, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{0.12156862745098039, 1., 0.}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.12156862745098039`, 1., 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.12156862745098039`, 1., 0.}],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4117647058823529`", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0., 1., 0.24705882352941178`], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666667, 0.1647058823529412],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{0., 1., 0.24705882352941178}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0., 1., 0.24705882352941178`]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0., 1., 0.24705882352941178`}],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.47058823529411764`", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0., 1., 0.6235294117647059], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666667, 0.41568627450980394`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{0., 1., 0.6235294117647059}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0., 1., 0.6235294117647059]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0., 1., 0.6235294117647059}],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5294117647058824`", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0., 1., 1.], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666667, 0.6666666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{0., 1., 1.}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0., 1., 1.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0., 1., 1.}],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5882352941176471`", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0., 0.6235294117647059, 1.], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.41568627450980394`, 0.6666666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{0., 0.6235294117647059, 1.}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0., 0.6235294117647059, 1.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0., 0.6235294117647059, 1.}],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6470588235294118`", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0., 0.24705882352941178`, 1.], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.1647058823529412, 0.6666666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{0., 0.24705882352941178, 1.}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0., 0.24705882352941178`, 1.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0., 0.24705882352941178`, 1.}],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7058823529411764`", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.12156862745098039`, 0., 1.], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.08104575163398693, 0., 0.6666666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{0.12156862745098039, 0., 1.}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.12156862745098039`, 0., 1.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.12156862745098039`, 0., 1.}],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7647058823529411`", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.4980392156862745, 0., 1.], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.3320261437908497, 0., 0.6666666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{0.4980392156862745, 0., 1.}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.4980392156862745, 0., 1.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.4980392156862745, 0., 1.}],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8235294117647058`", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.8745098039215686, 0., 1.], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.5830065359477125, 0., 0.6666666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{0.8745098039215686, 0., 1.}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.8745098039215686, 0., 1.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.8745098039215686, 0., 1.}],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8823529411764706`", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1., 0., 0.7490196078431373], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666667, 0., 0.4993464052287582],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{1., 0., 0.7490196078431373}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1., 0., 0.7490196078431373]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{1., 0., 0.7490196078431373}],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9411764705882353`", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1., 0., 0.37254901960784315`], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666667, 0., 0.24836601307189543`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{1., 0., 0.37254901960784315}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1., 0., 0.37254901960784315`]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{1., 0., 0.37254901960784315`}],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        RowBox[{
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1., 1., 1.], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[
           0.6666666666666667, 0.6666666666666667, 0.6666666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None], "\[InvisibleSpace]"}],
        "RGBColor[{1., 1., 1.}]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1., 1., 1.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{1., 1., 1.}],
      Editable->False,
      Selectable->False]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6351825404729404`*^9, 3.635182549551015*^9}, 
   3.635183540182234*^9, 3.635183638463764*^9, {3.635183687166963*^9, 
   3.6351836927451744`*^9}, {3.635183750047802*^9, 3.63518376371756*^9}, {
   3.6351838657867336`*^9, 3.6351838860367093`*^9}, {3.6351841405871143`*^9, 
   3.6351841818005295`*^9}, 3.635184480153083*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Blend", "[", 
   RowBox[{"intensitycolors2", ",", "#1"}], "]"}], "&"}]], "Output",
 CellChangeTimes->{{3.6351825404729404`*^9, 3.635182549551015*^9}, 
   3.635183540182234*^9, 3.635183638463764*^9, {3.635183687166963*^9, 
   3.6351836927451744`*^9}, {3.635183750047802*^9, 3.63518376371756*^9}, {
   3.6351838657867336`*^9, 3.6351838860367093`*^9}, {3.6351841405871143`*^9, 
   3.6351841818005295`*^9}, 3.635184480153083*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, 
     GraphicsComplexBox[{{0., 0.}, {0.058823529411764705`, 
      0.0196078431372549}, {0.11764705882352941`, 0.047058823529411764`}, {
      0.1764705882352941, 0.06666666666666667}, {0.23529411764705882`, 
      0.11764705882352941`}, {0.29411764705882354`, 0.12156862745098039`}, {
      0.3529411764705882, 0.16470588235294117`}, {0.4117647058823529, 
      0.16470588235294117`}, {0.47058823529411764`, 0.16470588235294117`}, {
      0.5294117647058824, 0.16470588235294117`}, {0.5882352941176471, 
      0.16470588235294117`}, {0.6470588235294118, 0.16470588235294117`}, {
      0.7058823529411764, 0.16470588235294117`}, {0.7647058823529411, 0.2}, {
      0.8235294117647058, 0.17254901960784313`}, {0.8823529411764706, 
      0.23137254901960785`}, {0.9411764705882353, 0.5058823529411764}, {1., 
      0.}}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18}, VertexColors -> Automatic]}}}, VertexColors -> CompressedData["
1:eJxTTMoPSmViYGAQAmJmBkLggz0u8RvXwcAeXfzHdxB4Dhf/8xsEXtujm/fg
PhhgiMuDwX4McXR7FswHgfMY9n/5DAKPMcTRzUNVhxBHNfeDPap7EOahuh8h
jupf3PajhhNCHDVc0fV9sAcAx31pCQ==
       "]], {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, PlotRange -> {{0, 1}, {0, 1}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotRange -> {{0, 1}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox["\"transfer function\"", TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6351825404729404`*^9, 3.635182549551015*^9}, 
   3.635183540182234*^9, 3.635183638463764*^9, {3.635183687166963*^9, 
   3.6351836927451744`*^9}, {3.635183750047802*^9, 3.63518376371756*^9}, {
   3.6351838657867336`*^9, 3.6351838860367093`*^9}, {3.6351841405871143`*^9, 
   3.6351841818005295`*^9}, 3.63518448027803*^9}],

Cell[BoxData[
 Graphics3DBox[
  TagBox[Raster3DBox[CompressedData["
1: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
nlepN9vdVsViWlsWo2qYuTMNzNzVaiG7YsKxSdwQXYs+ozTTtjTWQFwuBvvw
WUv0FIoc48z+eJkMnTjAa1fFTFb8aL4hnzB3rA2IC32tZ8zc5d4Hc7cBzB0I
BAKBQCAQCAQCgUAgJsq4BOjGBi2PlJ1LkqCQ3bLPIlJGyGr9irJqKFZNoQtx
rK/Z0qooLgGKIDJU0JSlS4zD4VPbJFdNU2TGrFph4YEKpRBYzVBFZgVfCHIn
4CqjWuTjBJVqrVqtlD1L5XOsmkI8SI8rGqoA2ul0u51m1Td4RuvtudgDV7SU
VavS6Y/G49Gw365Ya+xp/4gHSQQkUlSv1Z9MJ+PJZNSrWaxYNeJBTRRFr9TH
k9FgOJlMBlWDTd0lGqsW83CqbNuNyaDdGY0ms34gpS7UmNtY1FFMWDXVsFr9
Rn3QH87nLTtN7gfeRqV7qZSHkymrpuE7uN3tz3bG1TTdjpe+czGrllwsdA/r
hu2HtUa7P9vd6aXYE87FR9qXKhCSWED0mBheWG92hpsHR7M1SRxqQkrVLBAv
UocXPYuS5pTr7f505+Rsv2uvf7UWHoUEIyPFflVZVE232h5uHl7eOZuuhy1R
j1zssZzdhgBYCaVCes3Rzq17j+7sNdYveJdbmKwwdzjnTuB5rTrcvXz8/PFp
306ZdLfUEOxC6kIiWE3wertXzz56cTXxU5W8S9ilOGYr2dsWON5sbl0+//TN
va2KmgZ+XcA4CRyVID+cVhmfPP7k0ycH7TXDcW6CMnRaQikvNAniogF4dvHy
kw+OO+sl9t2EcZJUJ44jGFmxyKu239y69/rpSddOVWg0F1NeyzAcxn1KoqZq
Tuf48cN1Q+gSmzwFyWgyFY1uw3yXKolaZXJy91Z/fY+NZWgpQbyQC85tE2WB
15onD+9s19YN8tqIn48lFIcnTwiPCK8iijeU3N2nT+7sVLR1o7yWe5xeLPIY
8ihJGOeqKXbn1pNXL0+7HrfGj088VnuEPhu4+lmBk532/Pju0w/ubFX/+aGW
yU9PBqxV1LJA/lC0J9cvPnzz6rKnrzG8Lyzii3UDh8NgGW/v3nv55oNbg3XA
orgdy4/gTR4u+jNOa+1fXe62nfUQkLefc4rErTB3cjDanzfNwnrz3lUP2pIE
VaN2nOwNNnuetMbPv+GSX3lGOBwCiU2KJcntTxrm+pTXEqu2CsSRyD582US3
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
KxSTDXoZhYX5vu/okiizK6FAToxiYEKRBLTYV2s06hXPsgV2FpiHw8xd5MGL
Wrnd6w8G3UbFYFtnlFIGaFlJcrrjyWxre9orswqIizkyUrEGLYarzflsc//k
eLtrsFlQjFk1UqMBL/NKztZ8vn92ebZT03gWq3HYgyznC2hzE5NLW5vT3dPL
2+ezhsli+ZXwcHQrCvNwkm4E3eH2wcn51dlu20l3PDzemiBLfGRNnxckSfP8
6mBza+fg1tXlXsdJASkubX8Qj8REKTea/dl0tnN4dvtyt5WiiuIqq5ZcLZ4X
FbvTH01H053D06s757OKsvYWyCoZFReOQsfcVaPSHU+Hk52T89v37hx2rfUJ
lgWrRqE7sncnq5rhtUbjwWDr1p37Dx+cT3w5BV2yyEZZFIOMxl3TCVrDUbva
O37wwbOnt7eqWpryg0leFE0eJJCXV6/3Bl3fCrcfvv7o1YO9prF+0t3GSo8I
Sa6a3WnWHENTnenDT7749PlpV0uzMr64f2MgTtVUVdY8z1AkyZo8+uLbn3x8
Z6zn1y/itkSAkNcUiVWTRbKHZ02ffPOLX3zzdMdNv2ObPInEREGlTNGdbM4+
+PbPfvOLj06q6+8851Y94sslS4S5E5ytZ9/99q9++/Wdwfr1IHMxOriIbyM7
IHibnpPCw+ff/u5vfv/9k7mfom5xvpBf2nsuxawaifdRu2fPv/7hb/721692
w7WfwtwCxsknRdZIIbromRHCzVuPP/vFX/7htx8fVdNNUXLJwJWE/JCdHN5t
b12/+urnP/zZZ7fqSsrowQXHQvkPUm6Uk4z+6f1nrz/79ovr3vq1w26yUXHs
UhFHdNjN+f7RycX1B58+nrr/5NmD+CG9OSG/4bEExfFWezAYjifD2cnFg6f7
deOfYKp/fKKfWzZZweGKsqFY9V6vd/31J28e7TW0m9vo/+8/0ax3tyQJicOZ
XtHVsrqTwfDZb371zePt8j85K313O3IJ2LXUI3kSc4dMFLc6nG+df/aTz17f
2wr+NPJ11Qk9fnSfbtkiJvzyRdUy/f72wem9Fx99+mznT/R4h2l8DyStIcFI
yEXSlKhDxocPX3/8+VfPt1JQwqR5q2MjiR0UcZjQ8PYXP/v5d188mFpp0KVF
byx7RF9VkYdWHl2/efPFxw8POnaKKelSV8QWpFouL8uqXZtcP3t099ZWP9RT
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
1uLlUeTiQ0UYHTQdQ1dUb3Trztl2yoNei3YsMujQYKgFlqoqTmf/6nJ/UE4Z
rk6f85s8nFuO2uE0N29dHk9raUK2Fz5LPBxe01CDahiUm+ODs9PtjpsmsfZt
D4l48Ga5Xm+0h1uHx3uDUEtz3y574Isl4m+C6MXhhLV6qz/Z3t8dM8q5i+9d
tIaB1q8kww9rtUZ/urU1aTK5UhsL5k7EEdua6ZUrtWoNhdC1vBSHyG54kC9O
FN1mWrbrB5Vqpdrp9xqeyuCeik1iikzVdNNGxWUr1Waz6ioM49vihqAvZ0Td
OX45rARWNEyxPPBMe4QUttANy3FtPeVn/ztMaEvQOjI6fafK7IG4ZEQRyPFR
vpRF4ddcHOBP5gzZZdAt5qTZWIBAIBAIBAKBQCDQ+1fWHzi5zD+jkoXxrDLJ
k+UZtNGJ9ngYYmT05+PdFbz+o2q6porFAoulq2WHZBFLxUsmvmcrJZVlodEY
aEDHLU3bC4JypVbzZSdN5Y+3LEgtCLQ9L2t2UEHrPr1uUDWY1QBNLBCrhg6m
Vuu1Wms0H3Y9VrlqMQ9HK8oIohq0GvXWZG93WmZ0sWh6EF15xUCD0ei02pOD
4+2KnGeyhEXKJyCPBClS7FG/Mz44O2zKnJAuNmHFgyce6OZSNaPR7w93zy9m
uu6qDExiVg17oO0VSTMsvzkazI6vL/utfiXd2iiNDyokq+04ZUlC55Hro8Fw
6+zO7ZPDaSVdndFkv4uWleHwkrhm2GFzNOpP986u79+7NfbSRJ4lpASNsYj7
XDPLzf54MNk9ubz/+P5hK0U53oSHWzFBXJFRbnaGg8n+2fWDp09vT5z1x61l
Hq600pDIo90bTA+uHjx5/vLxQZhme3Al9CPZLVJUs9Jodgfj7Ysnr998/Oqi
lbJ25uJq0bwMtIzs1Gq1Tq/V2nrwyVdffXp/lKrYT26x60w3CNH6sV6uVqu1
atmtn332s++/frZbTVXEZmn3bgGrWbWyZ5uGrvuHn//6h+8/uhimqiq82Kan
bylZUXTH9xzL0FStcvb1n//+hy/vzSs6z6Km18JEMw1DlWVVNbt3f/bX/+mv
v3+6U1szwmSRibWoRBcXZlUk9Ci646e//Nt/+PvffHTcegsZ/dOKBSYTtZiT
iE3wvrCk6lZl9/UPf/eP/9vvv7zsWevtbidcCS4CGQf8xPuEkmqVBxef/fbv
/9t/+9tv7w7tm4/6nT/RhI5UaOcfl6zBNmR/guMVp73/+Ovf/t3//t///ueP
Zv7NTdv/58bPemcTNuhFQkf/Ua3qYjyqYG6ixMn+4OjpNz/8zT/+93/41Qfb
b4XQ/Q/vHT9wI6GvVtgbCmflS3wxjvURomvFlTgt6F5++h/+8u//63/5zev9
qnzjvvrjo5UrEuNIhSUYiv4b/MfkCUHlgwgBG72lbFsTeSk4ev2TX//+b//w
u8/PWsqNq/HHB0u/icthktCpGLrBHovfLifE4c0v1fKr/YN7L9588/Nvv/zu
q+uBdeMd8sfL5WYgrgZXiyUVEgtxUaLoFYsJrFzM4NBSo5iEVKu9rZOrew8f
PXnx4umHzw8aNx+QP54vWUSXWhBKqDNRTcxSYcHfJdeOMCyFpbag+83q7t++
d/vq7sNXnz6c+9qNF+4f/4/N5S5HRovfLN8KifJvS6zuP3h09+6Ln/7wV7//
ZvZWEORKO6J7n4/aEYOU+K++QR4OyopS3KC0aAn6j8rT3Vt3Hz168uqLn//w
iyvv5jP4x4vl/igQFgl9HpWSXi/yKG23sGjJRp4XefQvUTfl83y51210Ni+e
vnz96Xe//ubMv/n++OP9jRWTQtKpK8l2N+/lfIL25Ut66FpOubt/9+UX3/3q
N9/d9m6Gvqw8H4s0ouSmTf7FUppefGFz1MOKPtesxs7dT77/s9/9xU+umjfL
9/0Pf+Mt3fgkzv2o0OXKlxQ1mpqqjb3HX//693/1H6K37c0iuf/32xYb76D6
4j3NpZ5OgC9JigZ5o3vy4rNPv/362XHXvskn/qnjbm5hkuQa0glXNPSqejC5
evPRo3tXB4Py2p+fy5eHPv10Uxgzd05t8/aHn3368nzecpWbc4Y/tWgu6aHY
JIGQkwy66uT82ceffXx3XksBeSW4aALElUrx5nZRNIL+0YNXn7y5PwvkNCDZ
xhIQR/CxArrJ0Ztd1P3O7vWzNx9eD9+iqddwSArR4Tp3lKsWNbe5efnB62en
zVQ83Cqshpm76DVAuHBBsWvzyw+e3d0MUlQN31jq8AVzJ5DPQnQ4rrF998nd
g3YqHm4jt/CIM+jQzAfXhhS1YHDy8P7JKFg/Azv2uMnDRSaYuZOd1vbtBxdb
zZQnZXKLm4pm0KGLJepW5KFWpqd37xwN/n/23jo6zjNB94ygmJmZqwQllaQS
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
UAMwSzJk4ZJCJrH0MXkNvTsmJzeXWflrhi2dG3dOf5RALJCNxNZY4qo3zywu
TrQmKDyjM3+yiB+yDY5DHFgCcIg7IJkj1OQO7TtxYu9Arpm3JrQas4fDdkCg
4Qg+ENt/RLYoKIK04SMXLh4ZqYoQUz0uJOP//7ujv/k7xjbwJjtwq4WDEbEN
diKRrisZP3P9+pmZlgQF1SPk8DOa58e6smoIa4fAgsiI0B8OUgT2ZFCriAuE
r4HM4IpNaZ37lu/evbS3M1VD8/TFcckA/cCxvYF478Ab2ognDYkMo2qwHy4D
+KOCIhJyGSTQmXDUYal1O0/cfPjw2oGuBDXD43YAXzV/TAAHV1swGKDBJnBI
bCkFnCngcRkU6HvjSHSOQCyVyeVypT442CBhQ/0IkR+cWt6758LdR49vLnXa
+J6BPyvLJQ5WjUxn8YRikUAoloj40FcFAep8Hk8gkSkUwNeJy2ZxBDKN3qDX
6XR6sy06yiCTSKQqU3hyUevI4eW7Dx/fOdoTRvZ8dVeeD8bJmBTwbdkCqUpr
tJj1epPZqNMCczONVqvR6k1wMej0BpMl1GaPiYkMC7EYNNrQOLNUIFSG2hOy
qgcXzl67ff/h3ZN9tlU91cqbvVURKiGXK5CojKGR0XFJibHRcQlx9qjomKiI
SHtUhC0qNjbaHh1rt9nscXHxKVk5Wcn2ELPRFBIZH28zhEZH2RPzNk6funbz
1p0H987uzOIFeBj8rPz8XH9ehFGjNQSFx2XkFRaXV5YUFJWVFxcUFRfm5hUU
5OcXlpQWF5eWlRYXFBQWQaUgNystOTklNT0jNT4mIT2noKRyw67j1+7cvnX/
wd3z4xV6GskdBVj57e2p5pzYiMi4xJS82tbW1o7eztbWzp7ODRs2tjU3Nbc0
t7S1d7RDf66vLK+orqmpqigtLiouLswvKMjLr2hqaW3b2Ltzz4mrd+7eunHr
/p1zk43JJp57RV/50/PDQ/X5GdlFxQW1fUMDfcNjwz29wyPbBvo3D/R09fR2
d3X39vZ0b6wvL4E+ODcrMyMjMzuvsCg/PSEuMS2roLyuc8f8iSt37t26unz1
zs1TY7WxCopH/fiHT8+Od1aXVdVV1vSNjo2Mz89Pjk/vnpuaGNuxdXCgv693
08BA/6ae9saynERbkFEPPfigsIiwIINarjCHBodFZrXPHL5w+8GdS6eW796/
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
pZp53jB3TugOy80goDgngcgyJBTUdW4e6m9Ikq99s8i5w+LuQgdrkHjmhKKW
/tGZ6S2lFtqaj2+7omoOHfS+EUhcTUhGy/DcwQMTrfHStS+SuokE4rDwSzha
hkjlisLqRg+cOrGnN1vP/Ilnn7HVSfjPHyDDBSwsDnPkANdDphlrJk9cunhw
uCyUFehxnP7iqg91eIj4Ib5wyHd37n+DG0Sm0Sl4504k1BDzY9v3Xrx149RE
g53lWdVXMt0U0Cg1x14WZpqHxwViy7kgZZsLEvYoBCwGi8hSxVTvPHnr4YfL
C21R3FX81Sa+v1MAMeCjga1yMigUxGgOHDSHPhLSw5MYXKFEplCrFWKBSCYR
0uAdFmNS+aaF5YfPn905vEHP8sw6c80AhXoeNl8Isj7FAh7g1PioNRUcQijh
QW0tnS1S6IzmoFBriFmnDo3ScMDXYQYVtI4cv/Ps5cuHp7oNq1m1J72RDl81
kUxtNJsMxqAgk05nBIySUa8FHxkUYrUGGzVKhRqwZvbIyNjUvOKS/PSY8GCD
FrjDNfXvufDg2Ucvn1wcLTF7pkitvNlbHakSArJOZQq12RNSkuLik1MSomPi
42PsMbEgQzMuNhoqUfaY+KSM3MLSiorivNzcjMS4rMK0mNjE1LS0gqoNY8du
PHj05NmTKzN1tlXeVD8sbyuLDzUZg6z25Oz8ovKa6tLSyuqKoqKysuKCwuLC
3Jy8woK8nJzcnKysrIzMgpq2zo31BdFWa3hMcnZedkZ2blpKVtXWw9c/fHjv
3sNH1/c0Rgo9Bg8rf/v0YH9Vdkpyek5hdUtHV+/glk3dmwYHe7p6+3o7O7u7
2ts7u7u7Orv7NnV3dnS0b9y4sbWhsiC3oKi4pLyysrS4pKi0rmP74RtPnj+6
d+/+hzf31csCPK/jH7+4PDfQXF3d2Lph087Jycm5hbnJqd3zMxNTs9Pju8bH
d41NzMzOTIzt3DrQ198/MNDX29XR3tGxsa21Dfp/bN22bcfWHQsnrz968eIR
JPHhjcX2VCPPQ+O//OzhydnhvoFt24Z2HTy2dPDYmeOLi0dPHtm379DBvXsW
9s7vnl88tHRwz9jQ4JYtA72d4FI2tHd1b2ysqmzYAF34ll3zp248+ujl0/u3
73344MpcU7yG6eFN9c+/+vjakbnJmd1TM0cvXb5w6ebtq5eWr9+4evHcmVMn
jh9dWjp64sTx48eW5qcmRgY7WxsbGhqamhtrygpycktbW8vLqjqnjpy//ezj
F/dv3H/86NaRzfk6zxzFlX/59ae3Ti7O755bPHVp+crth4/u37n38OH923fu
Xj8HKRxY3H/wwN7ZiZHN7RXp0baw8IiomIT0vIL8wtLq9vb6uuqivOrNu4/e
evLw3o1bDx7cObs5T0f39B38P/78i88fXru8fPHE6Vsf3r56+8mDK5dv3r58
4vjpo3vGx6EvPzI5MwU9je663MQYe1R0XFJaXmVLz+DQ8M6x8fGJkY7GwaNX
79y+fffevUdPHt9d2lCTpiJ7Mne/fnXj+N65uZndRy5eWb5298M7V6/dun3l
/PmLF04e3Ac9jj179+/fu3t61+bmwrSktNzC8sa+nRMTY9sH+7aMTO3ZtzC7
5+Sl5UuXbz58/uKj5w9GhPpV8WQr//WHl1cOTe+anByZOXbu1InLt66ev3Tj
+vkzl5bPHjl65vy5c5euXr9+7eryhVOH9+/dMzXc3bVpoK+jrigjOTUtI69u
aHZ2Zn5h8dCR0+dvPHzy+OGt8cYoz5i1lX/6qwfHpzZ39w5s6h1dmJ+ZO3R4
78zcPAD7tm3u7e7p7d3UPzjY39vZWl9dVgTVufSUhJiIYL1KoVTrjNaY9PKS
zp2d9e1b545euH733t2bJ4eKwmVMN6xh5c+fX5zurS8rq66tbRsYGhzYNrJ1
E/imrW1tTbVVtdBr1Njc2trS1NjUWFtRlJ+bnWIPVgtZNIBDghmnTKSMzypv
Gdy159DJsxcvX9jXVRAN3S43Vu2Pjxd7y9Lj45LTMgqqGurrmze01FbXVpcW
FhblZ2dm5xUUFBSXV1bX1NVWFudmpMRHBKlFTDIexsKQCQ9Fbcsoat0+uXvx
0LFTR8bqM2IMXLfWBPbri7HodKag0Kik9IyMnPzc9NTU5Ljo6Bh7hC0iym6P
SUjNyMoryE2LtQUbNEoJl0bAQqr8YdSIqY3PqeoY2jW399CRfSM99ZkeJrwo
cwfsNyUqY3BIaJgtPMRiMem0Wh1IKIb+0Zit4VFxCVA7blRL+WwG8ENxhJ3C
rJrCnl5Q2zU8NjV/cHHv3GChVezWTa086bbxHT53IolUrpBLRCIRnwc6KC5I
lhXKNTqDJcgELD95wCYu0BEiDk1AAaumsMUm5zX0De+YWVjYu7A508Px1TVb
FtBaIAMZ+KxS4S4XPWPFB92rXCoWwr14YAAG9QHbOmi8QFcGh0UkFLb1920Z
n56b6YzxcMFa6XU0kth5G4yFQHMrweyPxgBZxRwOiw49bQeoBr4XdP00nlJv
MNvS6nq72wd3TQyXGhnu6XorbocBXEc+fo6QVDC1IYG9cmhegwvwdykwqcYS
SGUyVVBSdVd3c9tgX41dRHAf/HiOr95V0NkNCRqkOBFLdLxIgG4ll8flS03J
Ne2djVX1xTEq+hodkeHb4nKfsPEbmKkz6Qy2yJRSvWFjTUFmuGLtIYHgFQr0
UIBP4AG/XwpDaEquaG4pSwuXekNgwfXaP8D1IuAXAp7o0ATGhOK6ugLoRq11
HuUYsTsuAx2ForGpeDJHG51XWZFpFXo/xXGXACsnIK0RGvEylRGZJYWJ3jB3
rhoOkgy5EphlIdBlYSl5mZFqNnGNjIYbD+dCq7mAfTRpaGJmYpCEsUauz2+V
hgOJczA/NGlIXFKEhkdZu0m8mwmdYzrookGXh0RHmyUskreprO4zW0wCBi2Z
qpDIUAWH5jUQ56LhRg7icESeLiRUy6WTCb7QeBeeGIijSgwWvYgOjLJ9Y0IX
6GDhMA0CW2nQy1hkkk9M6BwHqBwa4MZRRWqdkkfB+yC/Fpv3ov0Y5gSJI3Nl
KhU4ZOCLJV6HBgLEIRo4ElskV0hYvljfhUU8/OHA1VBYAolUxPVZKKtLdgbs
mwsNKmgsnlDEY1J9GcqKLi3BJ+lp4PAMm8djkIi+eNwOEbQaIqt+IEGDyaSA
DSnf+hpgxzrhNzcQ6gm9T45+pwxa5wPg4xm+xvrclPwRT//3k7vkrvX+JdbL
elkv62W9rJf1sl7Wi+/Ke83/RBT8/314uPd6vgSM2+HZZ8B7uhp0YxTM1igk
YMryPuzhkNgPGsjoZPlkecFDAuPhQHYYNBsU8Nl0H1h4uUug81oKFUTesHhi
mUTAovoqZhSWcIQpghg6CpPNFSk0KgnHcxPKGwk0FJIEYhqheS2NzRdKtWad
dK2LfO9QQCTg+DnYnYpE44gkCovVKKZ7s8rnpoBG6gHTMzLs5EWmcyVyfUSk
UUTzCQ8HXQQ41Q6gCTqdSiHBnmdUllCutiZEmyREr6/EDwPigAaFwUATOslU
Jl+isiRmxAVxGN42kejBV9gfjghp0NHroDE5fKk+Oi8n3iCmeLnigLkCwLZX
sAYRYdWgP7IVYTllOXYN1TvzQZQjw6MGcSAGEtEA+B2Vb0qpLEuzeHfgEmPV
kPUx6JNpVNSEDpKjklmamJLa/GgeOCjsHasW4DQ8Q/AWlI2jQBqROTUliRbR
2lN+HMvgGKuGmrdhLBmZZ7RnVlUkW5WcNUeZOKEodGkMFSChMBlVak3Kq6nJ
tBtFa+Yg3VA1RAQpRHiJlMjSxWaXNbdU5sboGGt+6s59iUAs+BWVAO8yiR+U
WtLQNdC/sSRKuOYFMz+XrYlADLtDFXB4sjAotXLjwOj0WFeukbJWDTcRzFEN
SzIBkS/2sq7ts/v3bq+NFv7UsBHny+6+VwScyrCQDugfGkeX2zO5/9iRmY50
5ar16uZ3fWHnX9BcD6eJG7JJGIAHgxFsiwK0w7LcgYWTF84f3FpsWNW1fylw
V0DtV5C9Yf/AQGQ7HkkcRelacIiezGSQAp0bU3iGtXrk6PKtm2en6kJWvbwr
tS7wMHK6HKSggt8IBECbwh+JMXKwLxqbzeIIZVIuBfoZAbHtY4cW9Mxfuv/k
8Y39zTqC561Z2RPs8G4D9qcMBjQK4DKpNBBYCg1rOCwmg0al0phcIRwMyBXJ
1RqdMTgsVCtgs7gmORlsFAVnNO08dvfFq08enWpaPUBZuVqhpgLzPbBLzeJL
VWqFSqdXS6UqrUZrMJl0GrVGKZPKFFqTWSuHfmwOi7THJKTlZCeEGEPiQ0Rs
Do8rCqvqm7309LMvXr9c3qQkrGIHX41mGwQsBoPFl2n05vDYOHtUXGKcLdwe
Fxsbn5SUEBsTC/6QlpGRmhBtj0nMzMvLSEwqbm1vqS3JLSxKt0ekVnYMb9t5
8NbLz19/8erOXKWFgfP0VTs/kB9p0ukMQVGJqRl5FdWlhaVVlYU5BaWlRYUl
5eWlJSWFIBA0IzuvtL6tc9Pg1m1bejs3NFSVlVbV1jc2NzdV5Lb09E2d/fDl
xx+/+uT+wTYby5Nb+tPTgwPVOakp6Vkl9S1tHf1DA13dA5u7N3T09ra3tXe0
NdQ1NDXU1rd2djbXVDd1DoztW9o/vamsoLCwsKiyobGlp6M8t7Bp1+n7H718
9vDJiwdHOqMYnl56/+ntzf3bO5ubWjf2Du+anN6zf3FudmFxfmpmfmFuamZm
YmTH6K6R7aMz83umJ8YnpyZ3jW4f7O4e2DI0tHV4ZHbPzMzu3XsWj1179tnn
Lx/du/f4/tGNak8kdeWff/j46uHZ0ZGJ6dnF42fOnrt85cLZC8uXz565cPHc
yZOnThxZOnz08IGDR44e2rt7ZmZu9+656YnRkZGd27ft2Llrbn7fgaXDx87d
ePTx55+9AGDf3WO9KTIPE6GV//6nb59dP3P06KnTJy/c+fD+3YdPH965+/DR
vRu37ty8cuny8sWz5y9fuXzh9JH9e6bGR7YNb9u+bfPmHVNTu3Zs3Ta+MDu3
/8jJszeevPriy0+ffPjgwYe39rcmalkeuZb/5z/+8NWzuzehT7z99NPPXn36
5deff/Lq9etXHz1/9uTxww/v37v/8OGjR48f3r1x89bNmzeWz50+fe7CmYOT
27cO7ThwYmzrzPHLd+49/ezLL14+fPrk8YOzWzLUngFoK//6n3/73afPHj18
+PTjz7/46u23f/Xt2zfffvv2qy+/fP3xs6dPH4PPv3dj+fzJAzPbNnV2AFix
o719Q0tDfcvg3FBXd39v3659lx+9ePH08YuPnj+6nE9dNU9Y+Z//8uff/uzr
15+/+uiTN99+/frNd28/+/T164+fPnvx9P7tO/du37h55+6t61cvnZjfObip
p6uzq6tjw4b27k1bpg4sHdoz0d/bNTB1+u6d+48eP4E07sxY1Qy8p8a//qff
fPPJ4wf373/4/LMvv/r62++/e/vmm2/fvH791ZefvXzx4vmz5y8//uj5kwc3
zh2aG9sByq6FY9CbsXz50oVzZ04eXphZOH1l+eLFax8+ffHyxd1ZM48YELiK
6/vlF09uXbtx/fLNp9CHvfrqy9dffP3myy+++OL1Z5+8/OjlRy+eQ0/m4f27
t68vA2bx5MkTp85eunBsP/SKH724tDA/v7B37/6je2cPXHny8qMny9FintAD
iFv53//49vHy8QMHDx9cPHXt2sULN+7euHju0qWTBw8sLe1fPHj46JEjx44f
XTp44MDi/NzU2La+DXUVxTkp8bEx8Sk5NZ3DY7tm5ka3DQ1NHLhw7+nzJ/f2
VibpWe62Miv/9RcvLu0fh16SndvH9x7Yt7D/yIG56bnZceimbB3YBNW1LVu2
btu2fecuqP5NjG0fGthYkRkdpFHIZVKpRCBQh1sS6mt6tk3Mzh86fenazauL
HbkRCobbLGHlf/3q6sKWttqa+qbm9sHh4aHtozs29w8OdG9og96dWuinTc0b
Ons29Q1s3jLYCzVThSkRRjmPCRw7yRQC1N/QJJF5bZuGJ+bm9x85df7EdE9l
gprh7kGHMnfxSanp+ZV19XVNrU01VdWVJQUFoCnMzMnNLSiprKlrbG5pqi7N
y0yKDtGIAK4Nd1mAWgugqBKrmtp6tk3u3nf4xJHFPdsrw90JXtjnLkynUml0
UMOelJySkZWeGJ8QHx0ZGRURFhoaFmazJ6RCrW5+YW5GckyYSSPjM0igw3H4
heEEEXnFZQ2920bHJuf3Lx3d3RItcRstItmyDBoNdFBqvcEUHGrR6/R6rUql
UsqlMplcobVYIaG4hNio8GCjVikAEq6cVwAnOCUju7R1EDy4ib2HZhojRW5O
WytXypQUmLnHEalQNysQiwUcNocL9bEsJp0OTWBYPIlCpTGYgywmvVomYNNc
WTLQnRMF5pi4hIyy1t5N/Zt3zCyMlhg57pzlbgt60AyxaCODqSQYMOAxwyY8
kcYEbn7Af1Uq5NBdJJABA11sCg+3xeXUd0Nt/rbJ6Z4ED8OwlRoPT1kXMBAb
tsEedGBhBKyMuBFxATCkL9WbTZbInKaejo2DO3dtLjJx3Q/hfcFzq/bvXLyD
5/3AOIbFoGLkIOYpg8eT2RKVWq0Lz2ntaWvpH+6rsPE9Dmc0rv7Id4gAEhGc
rASWu4EBLsZqYMDFFUnEYmVoVkt3a137xtJo+Rod6WERaC6Ah5fdUAHwMEhU
JjT4YXOlwRkN7a2Vlbnhck+c+sdLwCbFrhLIxI1Mg14+KpUptqRWtTSVZgaL
mWtbnEHG6zDVFeBO9RHhs5Awc5dYUlebF7PmfABsMSYw0IH1BSInQwjQu07E
w8xdTF5FWVrImh2wHROPVcwdVKGghwSyFFVRmUV5sXouae2smlvj4ZAAZ36Q
PEW6MiI1J9UqZ66NuXOvkE4NJ0YGKrsqIik12iCkrRGBfLeGOw/H1Nji4kIU
ILRxrfNzh5i/wyEOobAwyItjsNnDNEIm2evzwtiCBg6TwDRIAlNYqEbApnu/
mowuzMDObYDidPJwUlOQTsBiUXxnEIeceIantnDMM4Gl1BvkLDrDN8d4kVk5
1MWQMA2oe6MIlGq1mEYm/+WP+BEi/g6ODCz5oOfASByJXCHjknBeH7D10IAr
H4z1kVgCsUTKp/mGuXOstiO+sIhfJoXFE4hE/LXXDE8NBxAHL/EBhziAvvN5
LLrv7Nv8HEAcvHEAoHfg+0sh+oocRET8sNRzGO0D/xADoS7sPfBw6KofvOkF
n5D0pcQHLieTkZ7xPVpZoK5673cTEjn08F4lPvj32K5dL+tlvayX9bJe1st6
+Y9VPHfQ3kv5d/Ap9nuvPJwffMAERwR26u9HxQGrATrjvcj4ofMoEpip0QEw
g/P1cRmnsxo4HMXh8Tgg6svXEmgoJHQZLC5fJJEIuYxVxiheSaDMHZg805hc
gVimVKtkAibOdzNCjPoBqZngVDpfrNDoDHoln+zpKLJ2BVQDLFVS6FQKlcES
qvRGS5CaT/GNiTvwMUAmzUQqjUQhw0ARXaAyGMPC9D453eeY/YPXlsZATbZI
ZJZYpw+Js5uVbKK3r7CDhwMLGTB0hWiQ6Hy51hibFhei4niJdKLnXhGghECm
M6moBJnK4oo14dlZ8eE6Ec0bIA5jvDCDODqIlsXiQKl0iSWtKCs5UsNcu/sg
tngR6DSIw7zb4NBJMkcbW1ySm2JhevFq+WG3Ck9AyTEK5t0Gp06y1LbsipLc
KLF31+HvYqvmYNXQPFMyRxeRUlqan2xkr7Um+rlpkEgOFg7GvKDbRxUHx6aV
FGSmhIopgWvrf11QNUwElkEkoB8x1VFpeRW5KcnhChZxjdXdlbyCRchoIYF1
SxyJZ04qqGgsysmMMQrW6tDphnfhURXwPhHhw8JkYWhmRVNne1ttbqSCvsaT
tu44HGLZBjv2IeeRyXxLVn1H346xra3ZFk8S5yeLOMJrkBcMPfNMZCqTG/u3
je+e3VYXI/ip7YkLD+f2VJwbIHBOB4UX1TA8Nb//wGxvlnTVbtGxd39hZAQI
uGO/DzBGzjX0NZBIJROc0TUEVlTj2P5jp04d2lmuIXuuuq/kuSkgu7CBAViM
OtgpBx8fgNQOsPRNBP5qgRQhj4JlskAXIk7p3H1q+cb1c7ONOjzR45mvbJM6
vF6g0QAR+nZEKpVEAJuLNCbIHseDM82IqQ2IbWfxBFwGnSk1GYUkqDvEwzuq
THPhtsPXPnzy+NZSGw/6oh4ap9K4iHcb2Iaj8kQcOlss4TK5IqlUrtFrFSIe
i85gsxk0hkipkEmgHxpMpqCIpIy0aL1UHa5jQ3WEJo7eOHf+4Seff/bsfMfq
vbuVJ71RIjqZSCAzeAK+zBwepNZbw41qY1hERGRMQnx0RFiwyRQcHhFhi4wM
D7JYoxOSUjIKqpvqSnIzUtMSTPrI5ISE4v7pwzdffvn27ec3N3MC/Tyv45uD
jXFGhVgk0YZGhEdllBSkpheUZCWmFZQUF1fU1lSWl5UUFpY3NDfWVpfmQP+u
qrE+L7mwf2yoe0NLQ3lpZnxu/+TeQwf2nfrw8zfffPf1oz15qlU5ir+7M9Oa
lxRjj04pqqqobB3o39Da3d/ZUNvc0dHW2r1leOvQQPeGxqrysrKqlsGRqflD
R48dmJseHdjQDOJC21uqK2tahkfGZs8++/Krr958/fxUTzTNkyP7xy+X92xu
a6irbe7bsWP7+L4Ds+PTC3vGto9NT49uH5ud2r5laKgP+vd1dfWNbd1b5q48
enR3eWmgrqoaKnUNjc2NVWU1nRPnHr/++otXn71+dm4wzjOLDvU8AxZtC0dP
njyzfOPK+QtXr104ff7KlfNnL14+f+LIsaOLUyOjM4v7oXLg4IH9C+PDg4NT
C7snt/bvOXds+/DO3Uun7376zV998/mLjz7+8FS/0fOpr/yPv/vZJ/cunz19
5tzl2x8+evz8k4+fP//4kxdPnr18+ezxk2eP792+c+f6hXPX7t+7fvHM6YvX
b924cvHUgZmJXWM7dozP7ls8fPL4wVO3n7768usvPn769NmtI30Zcs9n/n/9
0x9+9vrF40dPnj775Ms3b95+9/23b7/57tuvv/z669evPv4YEnr05MmH9+7e
unbx9PGl/fv27d+/d2Zqem56Ynxies/+o2fOnTl9/7Ov3nzz9suXT588vjbf
aON7dLgr//O//eMffvHd27ffvP3mb371m1/9+re/+/Uvf/mrH37+s++//+6b
N2+++vKrr9+8+frrr15/+urjj54/vnfz+vUbN65dOHX82LFT5y5fu3HvwfMv
oBfq+++/ff3iyZPHN3aXrUpBX/m//8f/9g9/+PUvf/HLH37929//4Q9/+OMf
f/+73//+t7/64Ydf/Oyvvvvu27eQwutPXjx9eHv5zNFDS0eOHz+6dOjQoQML
s9N7j5w4eeXW6aXbL16++uKr1x8/f/bs6b2l3kKDB5ix8v/863/7p3/429//
7tc//PoPf/z9b3//x9/9AC7j+5/97Hvo0r5589VX0EV8+fqzj5/ev33zxrWr
127dgx7bE6g8fvToyfNnj28dO3Xj/uNPPnv18qOPnt8/3h3E43m8vNB1/Je/
/90PP//5z3/xq9/98W//9L/83d//3Z+g8off/ea3v/3VL37+yx9+8fO/+evv
v3nz9lvokt6+ffPl5588f3T3xtXlSxfOnjl74fKVS5evX7164/6zj15Cb8m1
hRYLh07z8Ov7n//y59/99duvvvrq9Vff/+LnP/vrH37zq7/5q+9/9u3nLz/5
5Nm9O/cf3Llx/drlc2cvXbt5E7qOKxfPnDh+8sKVa1cvnT93amHr4Mjk5Njo
yNjk7MFLjz96duP4ruqkIDA4cdX41//8229fPbpz5+7t6/c/+vjJgycfP797
4/bt5VPHTxw7MD+/b9/e+YWFPXO75xfm98zNTO3aPtC1oaWxtqqivLyirqW9
f9vI+Gjflq0j0/svPvzoow+vHOjLkJHchz8r//1P3z2/cebI0pGjh49funr5
/KWrl04cPX780MKePdMjw8M7du7YvmNkdGxiZmZyfHxs++ZNXRubqouzUhPj
Y6JswcDzMiazpndk9/4DR87fuP/g+sFNySaJBw+HMHfDQ9ugKjW/f3Fh8dDi
7PTs7Pj24a2D3R1dm/oHh3ZOTM9MT02Mbe3paN/YUluUZg/WqxVSiQSEs1I4
QXltA0BjH1RZLl44ON6RG8xzZ9X+/PmFqZ768vLKqtq2vi2DA0M7tvZ29/Z2
tjbDOb+19U1tHV3dPZv6eja2NDXWVxak2i1KEZfNoNPobBo+wB8vS65o7R6e
nJ2b33/4+KlTx/d1J8ndIoVXfnNzvCHDHm6LiIzLLC4vLatpqCnKLyzOz0xP
h+5HYkpaZn5pZVVlRXlpSWlZSUF6TIhGxAZncUDPCMzoAthhWWW1rZuGd47P
Lhw4cvLkga5IBt5N482+2ii1WCAQilVmqCeKSkhJiLCG26xBZotJrzOYLSER
cUnJSYlJKWlANSpIyWdAHbKD+fH3Z5gSc4sqGjf2QDd194GlpT0tIVS3pZqV
R102PgUM90l0rkgskWsNaolQKORzocKG5sZCiVJvCbKYg6w2qC+0mpQCwHc4
gJmAABxLH52SmpFf0di1ZXR6z8Le8TKNe57byokUdqDDg45MobPYUM8Ln4iA
T0UQSBQGVygWS+VqrV6v1yrFLIxWQ2ZuAXi21maPtCcVNfVu3T42NTu9KdEd
HfxgZVjiHKbBZmzwcMcFjAHHHaEhChx7LpPw4eQ8DF6C+X2GKjjEEhJb2Nq/
ZfPQyORwqYXrfghvJdet2r8jeAH2/YMPAXD50LAHvVEOyAuaGCgMep0pKr+1
v69nYOfOlliZRw6o5zjxXQWB+4CrPYtBJblqAAKEypUp5QqdLae5t6Nr647u
HL1nX/vjCvK4yFQqBWMssbUACo3FF/L5IrU1o6G9aWN/V2mEeE1rQMhgGjjg
EJwS8GWQYaKQxuApQlJrmmoaGgvsqjXNn7GZWiCC3DmJOBADzIAm6iQqS2pJ
Kq8rL8u2qphrmnU6NAIDnbQaqgGHA5DIdKEpoaiqODtKwVkTrOZA1TAeDr1T
iFsflQpwYQrXEJ9Xmpdg4lPXci7OHYZzJ+KA4SGYeRJJHGNCdkFaOODh1vY0
MBHHRMrBXcGIFPQmEDnm+MzMWAN/jbNaTwwWWPc7kjlRUy8iLzguLdH6/7H3
HmBNZWvf99AS0nshhBAIvRcpgiAqYAM72LGLFRUsoIgFEBHFggoWEEQ60juI
dOldRLDr2GZ0qlPOmXP49to7CSR4nvNOjM/1vt/FfV0zQ3Dcd9Zeu6x1r9/6
/3kUGatLCsIsojYhUOcYlS1oOoVhmztMsdZTA2bcsuSQbBO4T9DCTX0wHAX4
KGUs13ySpb4mk6z05dVkpBnCmgwaJVJWUyFqGplAsxgmSQ6rFQoIEQ2KS/DW
KRUEVkPT+Do62lw1puqXJvhmzI5qGLwWgmRKKni2pgaPp8agy0m8TSg+Dz0g
QbUEhtWwdI66GpdDwxPksa4z2g6AkanC7VDB0lgsJptFwamg5JNDUYSqgRIf
eBurEmh0Go3BgO4MBTm5sgpf48gedwCrkaGHO5lCxsqTVRtDqsF68kDdFuBq
csvwzTdC3VklxJQVWSuCaTJ55hAW5ZThahx4MSqJnjRyTTJ6fYEX41dbvEPW
QZS/KnEn6pevvpj6v7JcOxETMRETMRETMRET8X9L/C+Mff43rEwVlb8WRCZO
Ac0P0F97TA2sTL+Gbps4ByjLYfEEMLn9KrLOIiMN4AtCIePly6mNyYCCnUYp
dJYam4JBoeRrLyv0hYQNU0FlmafNZ1IoGHnmUBCWGpDCOY2hpqlrKOCok+V4
PyLFJRTizEmCgsbRMTYS8BgoRTldxSJCCix9APtasJOMomFkaqSrSceCyqx8
MiBADmDusDC5hMHSBRbmFqbaLCL2C+XIRnE4hLnD4cENCIM/JK6xhYW9lT6H
xiB84b0i9miAN/bhCUBLDw48U8vYeJKTna4mn0X8MkhRxKrBQAnIgcEg7cCS
6Rq6po7OVoZGAib2S54so7JqKFgTEI+Fc4DGYHEkdQNrR0dba1MNnOyMohhV
E6ucIbpqwtOFpemY2Ti6TJsskN2bQ0F00aIR9080WsSqCf9D07GwcZw+y81U
9jLWKKoGkCixMhys0whahWMb2ThOm+nh6aAm64WloDB686kKq/iIEh1AsKDe
IfGtnFzneMxbMF3GhaLRHKIkgCCDuwHULVGAVTNwdPdc6LFosbsJQ9YNquKG
iJMIAy4ko3BqZjPmeS9duGLpbCsOTkZhQIXxSZC1FbjojsKyLWZ5r161ZqPP
Qkct4hflEJ8uoWkGVhVxK1JRpZnMWb1p4/ZdO9bNMaX9TQ2I0QKVAgIIC5uC
Ehq+ii1A+G4bdu0JCDy4d60z9++JQSqMqbONcUQSahmoiHA4FRU03XHzwZAj
x0KP711szJD25zwx/qQoih1MoWOJgTjxkpeS0KmagBWnUEGRrH1Dz5y7EHMu
dIMjnyLNLc2S+N7AxwWMzJQRwQ0cWGP+RojNo8FYSlEZg4EbQeCrkTBCVyQV
NNV215krN26lJETtcNWiS61QjBwVKIoSKCmhSVQChkClkfF4IonK5GqwSVgY
scMQiFQmi0Ym4PAUNouMxxF0rQxZJCqdjAMOyUTN+cevpeYUFWde9HemYKX5
kpRFGhiwtKisCl2MVL4+j8HRNdThaQr0DEwn2VkbaXFZdAZX39jUxs7SgM9h
MtiaeiaWDu4zbMyNjSwcbUwsbU20DT0OXUkrqKqrL78ZZKKgJLV+N1IT7K7L
JBMJZDUtbZ6eo5ujqdX0WS6TnWfOmTl74eL5s2e6uTg6ea7bvn3LJp9Fbs7Q
A9x+xoI129e7mhuauyzwXrz+wJHgoKMXktLzKhraOhpzQ63QKlLmSyN9N/Z4
2pka6hrYzHB1cVu1dd3ipb47N/ls3r1n556gQ3t37dkXsHPXkajTpyKjoqMj
gvf57w0O8g29EL7bx2vljsD9AQdCT5+/lpqdk1da29rV3VZ2zp1MkNa/elZ5
+cC6JfNmz1m+dceW7SFnTgaHRJ2PDI2IPhcdHRMbe/najesXzpwJO7R/f8iZ
G1kFRfn5eXm5mbeux8XGnDl95lTY0bCIqKsZRWVV9a3tHV2tldeW0HHSXqbv
u4vjIw/v999z+EzMuXMJWZlJiem3M5KT07Mz0zNyCgpyb2cDEbKEpOsXTp+K
upRTU5WfnZmdlZGZnnwj4Wb8mTNXExNTcu82tXa0Nze3NpYk+NAwWKk+/+lp
e2VW0rW42ISsgoL88vrG2rv19xpraxubW1paO7q6urp7urvam++1tnf13b/f
39fT2XInM6/mXktzQ0115Z17bR3dvR1t0J/1dTTVNVRnXjyyyEzK+HXkt/eP
uxvvlJWUVNQ1t7Z13X/44P6DoYcPBgaHh4eGHz15/AiK4aGHD4eHHz1+/AT6
PDw40N3a0t7V29Pe2HCn6k5db3dtVV1rd3dHU83dssRQ39nGNKl2/PnT26eD
vZ0dHV19g8OPn7549eoF+OfZs2dPHw0O3O/rhmGye411d6vKy0pLyyqqKkvy
cnNvpyUmJGVkpaTnZt9Kzy2prGlqa22suVN6M3iJBUtKU2bkn7/9+P7b50+f
PH324vVbEG+gJC+eP4G+/OBAf19vT09vb29PV2dbS1ND7d2qirJSQJDl387M
yMgurqosr6hq6Ozt6+vt7mhpuFtVdvvMPA5B6sk78tefn3768P7tGxBv37x+
/e23L6EUz548fvxoaHBw8MHAAGhMZ3tLY01lSVFRUXFRYSHUcXm3M9PT0jJy
K6ry0grvdfV0d7Y119+tLMm8sNfLkiw5OBn51z9+/+XHD99BWd6+e//u7dt3
b169fPnyOThXUB5xgG4A/d1Qc7emtg7q7bLiwsLC8pr6utLk1ILK+pbmxoa6
mqrc835LXCzU0VLt+OPXH79/B7fi/fcfvv/+w0foX99/9+71q5fPHg8NDQ/D
nQ26ffBBf/e96pL8nMyU6xejT52MiIiIupSQeC0pv7yqpq7mTmVlVVVBnD+U
g4uRbMc/Pn188/zRw4eDAw8ePXv6+NHTZ48fDj4c7G1vaa6vLIZOTX5+YTF0
goqK8vNy0uPPhR8ODPDb4bd7z55d29bOW+C1YuP+U2dPxaZmZeeXVVbmXQlZ
76bHkNSmAgzkcE9LQx3U/vrWtqa6xub6qoqqquLbWVmp8ZcuXr584fz5mPPR
p89EnzkdfTb6ZMjeHZvXrV7uvXj+3Jnurm5zFi1fv3Xz7oMnz19JK4JyxJ85
4EaSGr3DzF110e2s7OzM2yXlJQVFpYWZaZlZKfFXr8WdPXHiVFRU1BnoqXIt
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
1vrt27rYhiHdI//eIn3YUc5X2Aeja6ripShhpQ8wfQQKg6OpO3n10VPHAg+G
Rh3bNJUr/UYcuWg92hJFlIqisioGpSi+rQF+KJaeG9VGgV1Z8cA5FEi9cbQs
3LeeizsTFnHu6qktTsrSFvUjhet1MMowuKeoqEqnYXEMdSpKCZEsQIH3HR6r
Cp0PYO+iooKsbKJgy1ZVEpOlxmGz2Gx1PacFexNTr8deT0sO9HKzFjAl3bZG
WqMWmagRVbEMFhHLtrTQ0DCfbETBEchUCgmPIzLYTCoBiyNSuRwSvBqBCGQQ
MCoqGCJdnQONGDS5GpazFhy+XVRYeqcme/sUR3sdglQ7hrJDVkwz1dKzdzLX
mbxs+Uy3ZRsX25hYTrKxsbE01DM0tTTXUWPQWTweX89Am4UHeJ4qgUqELlgy
Qw2YuJtZmZg5rjpfXF3b3NVdsc/R3ppPlJQyHXndmBzut8Jz0Yatqxf5Hgs9
cCA8OtRvq9/uXXv8/TavX79uzeoVS71XbNi2c7d/wM5l9hwMvDCBRaGwFCZH
28RqyvxNByNOJZQ33GvreTDYcm2DqyVPSjMDaLdlxkaEHDt9Pir8UmpaYlJ2
Xkb81evXr12/Hhdz6Wp8/LXrCQk3EhMT4qEfLxz0slCjMlkUCpOEpzA1DGxn
+oTeKq+/197d3dP3YHioMy9szTRjKYPOkV9fD9yryM3Iyi/Ky61qaqxr7Ohq
raupuVtT11AHELa7d+7U3K0qLSooKCkpzMlMit63xnvZwhnWugI1prom32l/
9r1u4ODZ09P/YGiwqzzW192CS5D0g/zzxzdP7ne1tXf1dPYMPXv29IXQPfPV
6zeA/nmLSMM9fzTY19XZ1d3ZUlNw43TQtvVrtuxY5jJl1q7kpv77fT1dMMvT
09/fWRGz0JBLlpR6Hvnr958/vnv96ts3b968//GXX3759PsfgIj7/Q8kALkG
wK9RTbQP33/3aqh/8PXH98/fvnv94jGUvL2ttaWlpbW9o62p/PoWI+mxL6yr
Bh3od8DD/RMJmIv7E2BfvwvZO1icDCBT38NIFiyHBluSPh1+0N/d1tzU1NjY
2HSvsaYiL+GAO59GklhRBTwcHAgSNyYBSAHjcSAHUESDMTygd/cGwGuIsN6D
vu7O1qb62prq6pq6+uqinOSze5fNsOZixueQTCA8PoyWweiaiFwD/Nf3714D
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
BRnKQcRhcSQmT9fQbJKdvRnmv//1//Mcqqow10elEgAcRWLxDcyt7KdN11SS
jxevMAcG3tNHBdoGGByZqaFnbOs614GsIg/NPqFaH1gRwRHIZDzCqpEZ6gJr
9wUzjel4OSi5w7ef0MAUJ+ThVDF4KpNnMXOJh52ArvqlRQ0FhdEc8K4+IKUH
4CIyk2s6c+miaeY8Ck7WevtYWA02PMQgsm3ITkgslsBQN5q13NvTxZxHk5nw
+lwOBFmC0Ts8Td1ozuoVXvOnW2hSZcMgJYrtSiqikyVUb4POGJ7KMfJYt2bV
ikUzzDTIsmqFjanmixwthDwcDo/FEKhqRp4bN27YuHaxs6Ea4Ut4uFHUZ1RY
DYfHA79qjqnnpq3bd/r6zJnEJ33JgpQIWhITcThAC+Ogy5iiYTnf189//7ZN
3i76FBlySJBqQi4KLRKiw8EXMENnsveOfUEh+3as87BUw/ztXhdfUfAKnpJw
qzYKLUQt4Vuda+G+YX/I0dDw4O2LHQXEv3ezK4iXDBXHrBSMMUeGgyCYuiwg
NPJk5OmI3UumGErrsIw7pnQKRaGLqbKwZjyGVBOlwVL4C/3Cz1+6GHPu6NpZ
dnpUqQsrROKQsN+V2GweGd7AlkcoFBYgXiqjJwv2mkBwNiKJ7xsem5R8M+HU
NldrYx5Bqkw6Mm1MCvj9A3vGKokFONFYEoNFI5EYGjwWbHomrFeCHLA3B4GA
I7hFxKfn5eenn95kJtBkYKX6Y+QQX+SXqojCU+lMNTaDRqORoHcdic5iMeg0
BtfI2lSboy4wNNZhU7AqysLLFwPuPnAr4jgzI9ILyu7W1JQm7DDisMZr79xa
yAN/D3qcYsk8fX1DCxtLIz0dvro6T2Bobmtna2vj4Dp7losZn6draalJJeBU
VZANDVgiU8vI0s516eYDl/MqahtbOzubC49NwRMx0nDtSO2ROYYcGoXGVlfX
cZjp7r5w1Yp5bjOmTpni4jrT02vNVr+dm5fOmT1nmp21takOl4aHnk8qsDEV
jqZpMW3pzrCL19MKK+raOnvuD/TVx682BYyhFM8wkBLkPc3G3NLB2WGGj9+O
7fvDwoN27di+zW/vvn0HDoedOn32XPTp06dPRYSGBO1aN2+ygSaHDBQNoIuA
TrfdeDIxO7e0trmjp6//wdDDrqKoQFssnkqQ4uHqksJ3rVu+avP2TTvCL108
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
h8iqoVBYdVNbW0tTS8f5B5KKy4sK8gurSrIu2KLGbaUYqQl212WS8AQai6Vu
MtnOxmmmq52ljb2NuZnlJFv76fOXrfXdsWPHto0+K5YudHcwFWhqsIlocE2p
4jWdl23YtOPAsfMZlfX1d4pvZ1fWFmRfXMwZd676buzxtDfW0bOwtbGdu2ql
9+pt2328V65bu3Lluq279oWcPHMmMiIyKioy8sy5s1FhQVtXLnS3YOMA+ahm
tvTI2bNnzsWlFNc236spyixobK8vL4+ZQ5Ly+xl5Vnk5cN2i2XO8fFat9Dt6
NCg48vTRwCMnTx47cvpq/NXYuGuXT504eSry5Om4tOyM9IyM5Kvnjm50NRXw
dey8wlKzE6PDouJzq1vb6srKG3vvd92ru7bUhI6XWHAZed9dHH8qOMA/ODz8
+NnE5Pj4tKzk6zdS05JupNzOSbsRn5ieV1RSVlZaWl5ekJ6SnlNUcbe+vvRW
zMnQiLiCmsr0+MsxsTfLWrvbW9p6Bh70tjbG2qAVJXdaj/z0rKMyO+lq3I20
9NTbFXerquqa6u/WNN5rqG1obm1uaoQl09o7Orp67w8A7SrAevV0tjbUVJUV
34H+j8b6OyWFla093d3Q/9Df2VSb5qOtKnmbjfz2/klPU3VZaWVNXe29rt7e
3oGHg/cHHg4NDjx4+PDhg4GBwYfQkR89fvLs+fMXIICJJhAPezj4YPjpQF9X
c01lVW1LV1dP//2+ttrSgj3a43QH//zp3bOHfV2d3b3994eePH327MXLly9e
AP20J4+GHw70dra3t7e1tXd29/T0Akitq7Ojra2ttamhuW94qP/+w+Ghgba7
9U119W29/c35ty4fXzfTQl2Kgfznbz9+9+2Lp0+fQgeHfVYRRu3xo2HEmbMX
HBeKzvbWZihaWltbWpqbm+pr7tbda66/W1WeG3/mZHTcjfSSpnv5caH+a+aY
srBSPooixuv1a0AFAgwRGIs+fwqDY4+GBgCT1t7a1tnT1we3o7uro63lXlNT
U3NbR1vTncL0q5cuXbyUkJ6ZWXy3MO3i4c0LJ/Ok4FqY6/sJllF7//13gEN8
B3K9egVU+QCi9hjo5YGAuqmvbwBqGuzE2ni3oryiojg3KyMzOzs7J78gLye3
vDQj7vCa6bpYaW7prz9+/RFm1d5CSaD4+ANMP37/3fv3b4GSHjhr0MUExYMH
A32dzY211RWlJSVlFVVVVXeqa+6U5d5KSLiVnp6ZX1JRWZofu2mmHkqaQ/7n
px8Qn9EHQBzx8ZMXL58D/9Un0C/6Olua6qtL8nJzsjKzc7LTbsZfuXz58sVz
p8KPHT0WHhVzNeHq+ciwkAN7du05EBJ5La+8qqrslr+bAV7KI2nkjx9fP+pr
a2poBKxae3NTW1dHS0t7e3N9XV11UVZGeuKlM1FQRMdcPH868uSpM2fPnDoR
euzo8bDwiJMnw44ePnTwYNCBAwcOHQ0/de5aVnFOzEoTNklyHDfy6d1wR01J
TnZu3u2ckorykvLq6oryqurK4vz83NTrV65ePnlw//79gUfPXT4TeuT4qbOn
IyPCQ48egY4dfCQ04lTkqaioiGPHTkafj4k5dyY243bMejs+FSPphf3Tk9aS
1LhzZy9ejomJT7mVlJyVnZqclpmRfP1a3IXI48eP7PNdv379lt3+O7duDwgO
3L5x05atvht9li3xWr563fp1a9ds2LZr957AoydORZ85c/FmauQyU4LU6H3k
XWdBXGjAtu3+e3fvORIVGRZx/uLpiKjz506FHjm4d4/f1vWrVvqs9VnutXjJ
0jUbV8y0t3Vy9/ScPcPRXN/AUF/XyG6mx8JV6zds2rorYF9g6KXka4Fu+HHe
5E/LLvivnDvd1WP+nLmrtvmu3eS/b6fv9t27tqxf5eXp4TlnhpOTy7RpLi7T
Zsx0dzTisnl6hgb/H3vvAR3XceZ7CqFz7r6dc84ROeecc05EziASAZIgARAk
QIAkQDDnnEWREpNIShQpK1iyLYeRPbL97JmdGc/umX3zwuzbPW93zx7srXu7
G40GPSOhGz7vzUHNCCJgsT/UrboVvvrV/69WyBR8MrwxIFOZEmtcZlF5RVVj
W/+uQ+cvLbQlSKje8/kvL/RmhWhkSoNJb4jJTI1PKSrNzcwtyM9Mjg01G40G
tUKp0WrUWoPVZpAwqXQ2h0GCFwkUIrBwg9cOREhhj8/Mya1oGzuwfO7k7opI
uTcps/JqZ6qSRSGR6UwGJDNoFbrQCJvZFuIw6+RCsPVm0OgsFoOOoIIMEolC
JWLdWBEiI4SjS8xRCUn5DYP7l08dHsizSRheD2vlepEIUWWDVyQ4GsSis8Uy
AU8gEvFZNDLQywOrHiKytkW2f1hM0Ko7J7zygpdGJPh3c0SklrbtWVre15os
Z3ovsFb2Kl1PLyAQA38mkUojA8Af2McidBe8qUGOmZEvnsCdE+7Dkugcic4W
m12/68ihHRURbMw6T1bP9RUKxIGzcY87lG5DUUTAzZP9QYkJeHFHZctM0RnV
4/P7uoujeOvWJfu9vn/HDdat/iQA2c+uwXE8QTWw1BKaErIrB/eOdZaGUjYO
knnwcIGB7kZ37kjwXGtmcXXnQE9H6oaQO1dlPJan3pp3QVi2Naeqtql5W5MN
v3F4wqMOHjov7hgsY3pVbXVVVXUYecOZLNA+qwHWgmogBl0ZU1BRXlJSmqRg
+XCJ8O0h0DAYssCakl9UWFCYaoQ2HuOtVN8qc8fWRqfn5ubmxCk3eJXMe4e+
qkDnhO6C8JA2OiUjIz1ev8Ft7do329OPNdgpnxlE4Fmi4+JjQ1XMDZJkrhju
XbqnxB1aHbLCERpiM4hoG83BetFw6DUsF5yIfMWyzFajVs4l+5DmDUB3o6v1
cDN3gEsOCiZKLDq5gOUXkgytCIpFrXarYBxDY5RzNpq6eluQIKdklDsIhsjV
awQ0nN9cRhHbV8wqLApE6KgivZxF8B9I5rR9dXUs0Ph4pkwv8KW53xYjeBUd
xGCBX7FCx/UjcgeSEasxEJlcMlOgUDL8fTjhxizBfV4yDeLxGP6l1UAGyNmx
QNIP5D3AXO/fg5xApwIdammCxW0sD/qvF3iN5ITh0C8bzIP+m1Gclqnogmgz
Qnjgz1s+o1tlq2yVrbJVtspW2Spb5d9nQYXpNzlCkOtW8mYFQAz8sMh2ahNw
OOfmA4sD8AogcVApG78GAYLkAGNAjGWA8BkTOQz362YqIBgLiCUAxLE4PIFI
LBJwGHQa2X+oGpIwB7aZwMwU4vIEUoVKJReLRHy6P/TOnDGCsACOoVCAehuN
yuDLlFq9Xm/US+l+axTA3CH2iQC8IxGIdJ5QojQ5QiPtCgreT1UB9UBYJedh
BZHOoDMFBn1YYqiYQfRPCMS/FnWcJKKsGuCvIIEuMdUmpPkpR4ayaiisRnAa
XJIoTFlMXoqRj/X12peLN8ETV1k1RFYNfmoMSURhcaKOifWl3dfwcB5+k+Bt
J5FpLElYUV1xlGwDPJFXAPREB+MRAk9EJSE5svDilsYMPZuM22BqY+3pTTDW
/aTwyCtPpkF8ZWRpZ3eJQ8TYoLfsKuO16uyDRgHdmICoG2qjy3qGG9KNPKov
mWr32VAw6jSKKtAh/ZfClZtiSnp29jakaVgbvbrtelauGE6HBhRVI+AJTJU9
vqhrz8RgUwzPpxiryXY35AUeF6AtyerI1JKuyYNTQwXyjSZIV7tV0Fogzqk+
SNIlFdT0zSwvT9db12FkPyzC6qnBKhCHBcetVHtBbfvo/JkLR/uT+BvSTnCd
2DmdyJzmss43BAkDxTd0D08du3zj3J4yE8NLeuedE98jhrPDYpHzYESvFjFK
pVAAJQywPqKkcPuuqUPnb929erApWuJtjbySvebTnHcIPJY0QEUPAwg7Mjxn
4DHOfgWHITPZEJNJg39MYTk6ZxYOn7h69+6N5ZYoOdPLcGRlh2j104KRh4DD
uC7jI4Zt8NhBZQHVFzaTyaTig9FGxxJoArlCIuBx4QlXX37g5OnTZy/fvHH1
bLOWRfUaT1bOpkAYVPMPgyMzISbE49DhaZRBJZEQ4Vv4DeMZbGZzSER4iM0E
eDhwqk6ks6XG8Khwu0mnNYQW7r108/rlsydPnDl/cZcR4y2Uu/K0J5xPgZ8q
ic5gibQGjd5m0ynUeoNaJlPIJWKp0hiRXlJZVVFeUVFamJ0YZlTLRFyOUGML
T8wvryzJTErNKh258OD9925dPHbo6KXbNwZl3nnxla8X66K1Eh5PpjcYQlOz
UlLzCtPjkzOzUhOS0jMzc0qra6obukd2DI/snpyamtozNtDRVJYSag2JSS9p
3r5jpKW4rHF4+d1nz5+9f+fKqYsPXzw9nMP0Zj9+d39mW258eGh8Vk5WUXNX
c1NnX2tNfVt7Q9W2gcHWkvyi/KzM7Jyc3KKGkUPHT5y7fOncySMzoz0dnb2j
U7PTk3Pbm7tmLr7/0euPP3zy/sPnn/349XKRygsTXvnT59fnBltqKhq6+3u2
T83vn547fGD37qmpnUNDo4PttRVVtXV1dfU1ZWVVDdta2zu6h3YDSGb3/iPH
Tp46un9HW2tb3+SFR68///T1j774+mc//+azSfk6vb5//s2rWyfm9u6aPHjk
yNEL169dvXn35uXL129cPn3y1Kmjc9P7Di4dWz56ZOHIqUtXLl198Pz5g0uL
B6bnr73/6PHTR9dOLR+aGJo49t6nX335459+89MvP/viR8fzpFivGP/yd7/4
5OGNi+cuXLt1570nHz5//tGrj+AvHz1/8sEHHzx899aN2/cfPnz/g8dPP3z+
4vmHz56/fPni6YPrtx9/cPf9Tz+7dfL48uHZg6cefP7Vl1//7CdvPrh97+mp
PL4Xaon4vn7+0dMnTz988eqzL7/8MfAO/fFXX3315eefvfnk1UfPPoA///Fj
YGL74vnzFy8/fvXqoxfPHty5cfHshctXzh5fOnTk6rMXL188evLqix89ub4w
3KhhsLw9Wf/7f/nHP3z7zU++/uqrn/7q17/+9jffffebbxF5tl/84puf/RQO
COJ+/ZOvPn/z6iM4wCevX7+G/3n55MG79x+8d+/2jZs3Tk6O7l1Yvnjv+cvH
754eK4+zSb3mwpX/5//43//hD9/9+tu/+vV3wDnzD3/8A7DP/O1ffwc02v7q
F1/96M2bT148e/4GbtBvfvb1l599+vrVyxcvPoKDvfniy4/fv3nh8N7RgcHp
k5eu3X309MmNQwMFFsibHfx//6//8k9/+ts//P633/3+b/74+9/94W9+/91v
f/fdr4HM4E/hyn3xI/gzn8PN9Ozpsxcfv379Ckif3b976/rVa7fvv3f3OtyV
jx0/ffHqtSvX7jx89vRaf56D571NWPm//+Wf/u738K/8q2//+nf/4Q9//Jv/
5e//DuCJAIP77ttf/BxwfD/95uc//+VffftXP//6zZN3b169cOLI/PyR5dMX
r9++c/PquaWZybmlpaVj528/+vDZe70GGXPde/7f//Offv+rnwDi8MtvfvXL
b37x67/+9S9/+atf/OTzH/3ok6f3791/cP/u3Xfvvwv//50bl04vLS4u7Bvf
3tPdOzA8NjG1b9/U7qHOxvq2vpGJmYUTF27cP1Zk5nubbiGs2punDx88fO/e
By8/evLB81cvHn3w5Ml7t27dvn5m8chRoDR5BC6Li0cOLxyY2j021NfZ1t7V
N7B9aGRsfGxkcGD79r7enp7BnVP7Dx46dflAQ8K6Nv+Xv/3m5b2LJ4+dPH3y
zNWb16/cuHvn+tUbN6+cO3vmxPzeib0TY8PDI8NDwzsndo5s7+/r72mtq6ys
b+3s6u7bPjwCf3zv4I7Rwf5e+P3fN3f07NXF9mSNF5qx8h+/fXltaWrHyPju
ib1zAPk9eWp56djxpYMH9k8Od7S0tzc31DfU19U3tbRsa2puaSjPSY6NiktN
TU7NyMzJzU5LTMita21trN62fefUkfNXL+2vixR7yVOt/MOPrsz01pWWVNbW
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
9e57926/9+5sGsNb/+pXF/tzwwxqld4RERWfVVRUUFJemJmZX5CTkZGdmRQd
GRUTExMdFR2blN/YNzw2ubB87OjhuX0T4zt2jO3aOTS0c7h/++j0sav33nvw
6MMPP3z5+sND2WKvY8iVPz5bGqjMTklKyyutqGnt7esdGOprbenoamuora4s
K8ovrKitr61raGjc1lRTVVvf2NY7vGOos6m+rq62pqamuqq6qaN/z5l3Hz35
8KNPXr/+7Mcf7YuieT+r//Wru0fGu7Y1buscGN45NTt38NDi/MzM7MEDe8d3
jI0P9/WP7pncs3ti8sDhxfnpibnTJ/aNDI/s3j9/5PD8/MLc9MTY9sHxhZvP
Xr589enrF4+fvPp4xkbxGnlX/vk3H986fmDvxN59s0dOnjt/4fK165fOX7h0
6fyZE8vHjh89uH9ucXnp8OLpy1euXL547uzZs6ePHV46c+7E4uKpK2eXDx+a
3Tt1cPH685cvP3nz8oPrZ9692qAgefMl//Vvfvr87sXTp8+cPnfj/nvv3n/0
5IP7796/f+fWrZtXL168ePbY4tETJ0+du3br1o1r167fvnf/3bs3r9+5d+n4
wsLCsROLCzP7lhenD1+6dufJRx8+vL6vIYcP9JLWchn/7R9/8+WL9+/fv3f3
/ZeffPTyzZdfvPnk9ZtXL1+8fPn82dOnj99/770H73/w6PH7925cv33/feCV
+/jpy48/enr11OXH96+cPDrdkpOUUTt29OqDR++/e77LzOV6S76u/J//2+9+
9ub508ePnr367LPPvvzJz3769U9++tOvvvzq66+++PzLz189fgDQuncff/T6
008//eTjj16++PDZh89ffPTqxfsfPLyyNDVYlxlpC8vdcfLK7XcfPLix1JEf
KSZ5a5795z/97pdff/HZ649/9JOffvn5T37+9RdffvXjNx9//PGzh/cf3L95
8eyZ40cOL58+C7fV1XefvHz16tXHL188f/7hs2dP3j1/eP94V21RQf2uE1dv
3Lzz3oNrMwOVUQJcoHc9fvuTT549ev/h45dvfgTX45tvvvkFMC79OSLM9/WX
n754dP/29es3b9+59/7LN6+Bcefjxx88uHf7Jtw2d29cPLGwZ9fumSPHz1yA
u8vNS7XJIRLc2q4Lt8effv3F8wf37t66fv/Dj54/e/XFF1+A5/TlZ28+/fT1
xx+9+uSjD5988PDBg4cPgbvr88c3j0/2NVVX1bf2jE7Nzc/PTvaVpBfUD80c
WlxaPHz0/KFKK28dt/Rf//j1s1tnj8HddOn8rRuXLt19cO/atTt3Lp86efb0
4uzBxWPHj8P96vTZCxfg/npw/9TEjr6W2oqqpu6B0Z17902Pb+/u6Gppbmvr
HN03N3fw6NGxsjCR1wuy8h9//dH1pemx0fFduyYXFg8tLJ08sXh46eihA/v3
T+0cHh4dHRkZ371n7+T07PzC/P5dg11N5dnJCRnlDc3t3f2jO0YGBwYGuttb
m9sGdk0fXD55bKImWuIlj7vyjz++fWiktaaqrqm5fWB0x+jOycldO3fv2TU6
uL23ta62obGuurq2rrauqa2jtam2ojAzPtSglKvtUXFJadlFlY3NNcVFFZVl
VY3dO6YXz5w5MlISIvBqkJU/Pj3SW5YWF5uQkpFbVlNX39zR2bqtpa2lvrqy
OCs5MSUtNRmM6qnpmVlZ2VnpSVE2rZjNYLA4AqXeEhaXkZ1gVoamZuSUNm3f
d+Ls8em2ND3He44C2m0OjVyu0hrt0QmJKVkFhbnZuXnZqYlxERatBoB1JrPF
bLbaQ8MjwuwWvYJHxSNntWRIIFWZ7EaZ1BgZm5hd1Xvg1KmFkYowwTqf0Vc7
09QcGoVCY0BCuVqjt0VEhoeFhzvMBq2Mx2JBXIFQJBIJhRK5SqNWyCQCFhGD
4kQYEp3FFSsUUonS7ACs2szx5enOHIt3Nd5ZuVEiIyFkPDyp0hgMtlihUiLb
YS5EI+KAJi2VRqfDq38mm8Nm0mkkrEtfKxgLb23ZfLGYL5RrjJE5rVNLC2N1
Sfp1Kusrs0bX7IuYgRGoLIjFZDLoFCIe5d6D0JsLBAoNkP+Ah3OVYBxysC1g
sbkCuS2jZc/BqZ7iyPWkzEqVx8k3uqVEVrDgboErNvp54GfBazTCgGwulclm
wLtousCY0jQ+OVyboIbI3mJCn3HWxnQhXF5rVgSTQ3A4N9mF7qiIJAIADkgc
bXzNwNC2FC0bD/zQ1vzldevEt+Nw6NWMAA8+KtCFsiDf4SB1VFFra1GIiLru
KsD3Li5HSBdTtJa/gmNoI7KrKtPsAhJ+43e9PFG1NdgS0jRYtiE6ozAvIVLB
pGyMXHLH8Nh/rFJLSAyeJS49Mzku3iyibTyG5/I9eG0QwHiJbPGpSVGxCSES
6sYgL1cML8JrtVUwVIk1Njk+IiLawqP4cHt0rWL4GpEtOIbYHJ2YEGG1Khg+
CIZ5WAh7xwBcn9AUlRAfopGyN0qSrUfVPBEsAMBSRJaouCiDgLFhWM2Th3Nv
a1dRMjgGVW6PjLKK6Xjvu1E/PMjq+4HBrmJe8CDH1NhDreAWpI+pOM8YTvjK
adMZTODpzQYJwx88S4DLWdazGhgM6Lp6tZiO80tO3MXcIVARimAB2hrPVqoE
DD+pnjmZOzRh4iTW4GmFKpYL6b683uuCIDp3IA+Ax6ObdiJHKmD4lkn0CuLS
6wNpdzwOUF4MkYRL8uvRgUcQHA6DwZNoHIkUwvv31AhNR6BIHKpTL+Zu7ILl
v1KceRksmMjxRAqTDS+5/H0uFRDoutGJBTwcnUrYhKMvF6sG0qNEEtGPXcoz
iCtFhLCcm3WA5+ThAgI22TF1C1bbKltlq2yVrbJVtspW+Z+w/AUWcQF+liF7
a4hNRdWQEIFBODx2U7YFqyEw7r1HwGZcZ4G3BFgiisMBg5IgHxCGPxsAmCkC
Ho7FogOzE7wPudC3hwARcAQSmcrk8AR8LotOo9NIuGA/9mOETCQANxUai8sX
SeUy5LI9gxzsN01vxJwOCQFU6OhssVKl1uq0WgWf5H2ctuEQiH0tcGWlUClk
AoEESSQiucluDzVx/aWqhlYDdX4FHrx4IsSmUflGbWicnuunGEh7A9VBuCJk
IoKTUUhEIpOrTYhVBAT6IUmGJK8QfXvQJCS3hBuBRJdEZ0XiCMG+pk2ciT4M
Ys4IQBmEI0P0wkgMUXh+rkNK983x1037IBoKKLAE/gDahkRmS0ILq3JCJTRf
OrCTKHLySgjug0djkKk0CpUrCylsqs2w8HxwsHUld4NdNBzwMEWZO3hIYTB4
cltua2d1ko7lWxI50CWwhXBqQEQR1QOkMthsntSY1jLYXRGvom9U6M59yT3I
xZChlq+IsCWJzBIKxeqYutHxrtJoKW3j77u7Ip5RgDoc/A+JL5cq7MXDU+PN
mUa2L1dIPTLhTnzQxdzhIY1Obczo3z/TX2jn+eKYsuasCOPBw+FxTL3DYk7q
PHBoV22UiOzDZOK+GO4G4tx2qZApJjI0qXX/0oHOVDXDV3lDkGBHXwwCAYeK
0METFmRLS4lNa546emSk0MrdYIN4yBoEByEqpvBwhXXFINLCiwoycpp2LR7b
WxspoXjFuPz9YgQiR0POg9NgLJnB5rAZFDzG6chLTauvKyvdNnLwxGxbksLb
MHUlfe1v6wHCefwQuLYjTupEYGSKITH5ErlczGORsEibELTVPT3NTe1DM8eX
hrLU3gPjSi9n1fsMUbsBiXr0mAY9isUAOxQWhy8SciGIw4UYdLZQrjXb7Rad
nE8jACLVVNS3c3xoYGRy4cTpA5VGb9filVMJTJcGHZ5EZUIQm82k0RjA3Bye
huCXmMHlcUUqg9kWGh4ZFR0dFREZHR2bkJqZmZYQGWLWyFWOtMreif0H9u2b
P3n52uXTvWHeh/QrT7tDuUBAl0ihQzyJUq3R6VQymUIll8BFJBSIZEq11mQP
i0pIy8otqqxrbGpsqK+rq29oqKvIz0pPScur3Na7c//hpaPHz91478H9qzti
ad6czI8XKkPlfA6HL1ZqTSFRMbHxCdFhYZFR4SGOEIfNZDBabHa7PSQyLjmn
rHZb19Du6X3Te3fvHB8fGxvtb6mvrazZ1jEwMX/szIVrdx4+/vD5je5IlrcX
3a+v7yiJtRkN5hD4N80pKi2vrCrNzy8qys/Jgkt6SnJadn5+fmF5TXVFWWlZ
RXVNw7ZtjXXlBTnZGQAmzCxpbKjr2rN09vLth48eP37+8Zk4ujdrgDJ3WeCj
CisbWzu6+4cGe7u6urs721ubW9o7musb23u6O7pHJibGR8cmpmb2DPYP7xgZ
HhnZ3tXa3NrW3tPf2dAze+7qrYdPHz+4defZzQrpOg2hP31+fXb7tpqausbW
gZ0Tu/cemJ+dmtq3b3LP3j27dk5MjA2AjxzcMXNoYe7gwuF5gMedPL20H8CD
O4Y6tnUNDg1tH50/f/3eo6cf3Dszt9ypXQcir/zTzx+fmx0fGh4ZGps7uriw
dO788cWjx5YOzi4cOjA5uW9659Dw2Pj43oWjQITs+Olz58+dO3vm5OJ+uEkG
Olra+3qHxrZ39Y3Pn7v36IP3bszlSPEYbw2hlX/+60/unJzff2Bm6vD5y+fP
3njw7s2bd+/dvHzlxs1rly5duXLpwvlz5y9cPH/q2DIc4ezJY0tHDs3PzUxN
TMydu3j0wFh3fWaEzRReNb547f792xd3JFiULIKXD+9/+u7Nu+eWDs3PHj53
/drVOx88fv/h46dP3n/46MmjB+89vH/t+MLB2X0zC8snz8C//6ljR+am9+ye
2Ltncmb+8Ozu9pwIu0UjEkoMLQdPXrl549ql47vroiVeDs8r/+1P33725O7N
m1fOXHn46N7Nh88f33/v8aO7165fP7+0cPjQ5HBfb3d7R//YzvFde6ZnD8G/
zP65pcWFI2eu37l+5uBwdVGCRgCJYkfgELduXr+wNFlj43pzff/pu9d3zxye
OzBz8NTlK5duPvjg4YNHz549eu+9hw/u3bp16/Lx2ck9e4CJ6Imzl2/cvn3r
2oXjczv7ekbnTl84c+LEmcWp0VqjMn144cyly5cvnFsebM83Ub3bHNU23Ldv
7665M+dOnLh6787t+x+8f//+wwd3rt+6c/Pi6bPwMzpz9sKVa1cvnjlxeN9o
e1VOQrjdEZ1WWNPYVF9bWxCpVoRXj+4/eurE2NiBsRIr5O3wDPerR2f3j/YP
bO8dmJw/MLl/+eTS4aMnjh2em5ubmRgf2zHU297S0tLW0dXZ1tLSvK2huiQ7
KTosNCqzoqmzr6+1qhh+X3MLyorL+g7OTe7aPd6YoGF7QXcrf/rs2v7+hoqy
ypq61oHB/oGxPbtGd+zcObJ9YKCnrbmldVt9bV1jc2tHV1dnR3trfVlOYrhF
r9VaE3NLq2qb2jo6mquL8/NyMvLbds/MLRzY1Zpp8b48sfLHp4t95enxsUnp
mfnltXV12+C/ta21va2pvq66ODcnvyA3Ozs3Lyc7r7CktDgvLS7UoBBwIK5Y
Zw+PiolLSEzNyc1MjQ2NSKvq2z13ZG68MUXP8J6jvr02Uhxt1mj0Fnt4fGpG
Zm5RcV5OflFhTkZaUpQDHtDDQhzhURGhDkd4bHJKYpRNKxPyuVwOTyRX68x2
q8lkdoRYzCFJpZ27Dy/u6y+LkqxjvL6cL3dIOSwWG/5LWrPVER4dEwFPFJEh
VrNeIRKIZXKpTKXVqJQqvcXhsBpUgDCjk3BYPI2L6LkpxVKVzmiLK2idOLyw
qzXbyvMWp1p52hXCIeGBmyiFweYJpUqNVq3WaFQysYDLoJApDBYL4gmFfB4f
OJTLhBwmhYDCZMEUiCeWwT/hCGRKfUT2tl3zB4ZqkvRsvHc9TsYznNptgGOn
MCAukHDlshk0ChELbMGQI1kGnQHx+Dx4piXjglFMKjAQT4V3zzyIwWCy+TJr
at2O/Xu6S2I13tPHOys97FX9NEREG2yLwV4Pi1IWyBYQnuXJdBbEhJ+Ri4cD
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
Q/sWF2ZmjyzOzcwdWpidmdm3Z3SgDw41MjY6PDg0MtzXUltZXlpSnJ9TWNU6
trunPCMpIcIRE+PIaJs6e+PS2RO7qxJNIm/vzL9/c3m6p7GupqJ+++7x0eml
o4cOHz997PDi8vICwKk6yzLTUhJTChs7e3t7ejtr8lKTEuNjY2ITM3KyC+vL
EkLs4REqo1mS1DN+6NzFs6eW95TomN7abf/8m49vLE3tmdrdN3zo2Oye+bMn
5xeOnzi4a9fEcHNNXW1BQkREmMMRk56WlJSSkVuQl5eXk5GcmJRb379z10BL
aUlNRY5IwFM1L5y9eObEseXD40mQt3MYXI+Lk1118KOq7hkfG55YWFo4uHji
+OHZ2YMHpnaNj3ZVZibFx8Wn5Fa2DU1MT+0a6mkuSwsz6kOK+vbs3z+1Z8/O
zuwQtrBkYvn8lSsXTxycGivTehveITE6qssrSgsbtg9190zM7puaPXJoZvrA
gT2jw6PDPa1NDfX1jW0DEwfm52endw+1lCTZ5FwWS2hKyCkqKa0sitYIIH5C
647502cPdXU2Ftoo3tLecL86PlyXl5mVlZHf0N5Y0zo00tszNDrY3dHV1VIH
P6zyovz8guLymrq66opyuCflJEeYFAKuUBedXVFbmZMcFxERFRoWk5BUOTZ/
YGdfQ7oWohC83493pxszo8NCwxClyfySusbaqrrG+sryysrS/NyCwtyMtIzs
vGL42yo4TkVOnEOvVsikCnNsJhy7oiwvKcyk09tCsvfOzs3tH63PsMkhL28v
+D3vyw7VKeRqgyU0NjEpJTMvNysrLz8vKzMjNS4yOj4uGv4Cd6XEjNzcrOQo
q0rAgBfTeBJbaQV4r8keEWNX8IQKe3HX6OT+PZ35oVJv5dqVH89XhMjg58vh
ixU6eEMUGhkVHhYRHR0RYrfqlEqNRqXUGAx6nSk0KiYm3KaV8RkAW0aGUDFQ
CBWr5Ww6JDGnNwxNHdjVmmPjex+krzwfiBbRiOAWD43FE8GjrBr+VLVWq5JJ
hFwWk8UC+m18vkCk0BqNerVMyIUYNBqdTqVDfKFYxIfoLBaDJVDY0moHp6YG
a1NNPKL3uHutUEwEUmaAFiPTGCw2l8vhcHk8NpNORXYYYNFJhacRDlBL5XGA
XjseMR4lMRG+G+i0svlSc1LVwN6dbflRGrb3XZaVw1YX6oduWdErXNRVnbYg
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
o85k7/zR629/99NX9w+79uUM9D//U4sOS9Q70V/XNGTNS0ILzdcKHs/YpEvU
bAj29U1i2rW8IssAF9UVpbpcrcu621i7/vSL3/7p97/66vnpJLmUiPXn//Oz
tkDJkZq4UqnJcl1UsJPWytStEdgnCHJSaJeqCvhX0RSXcTeRnfH580+/+uVv
f/ftne1RcMnIBLVjOW9HbUXQDVnSHUumvjQigWghGAw80XxHFwnMiLMtFY2w
cTXJGNz88Ktvf/r9737/1YuH1tLSLEdWvB+weEXPUS9Aj2cbIDK0GICFjqwa
bhAnSZLG4CFC5hBBMUxNxLMYemA1jj7+zZ/+y3/8x7/+6rNHq+5sdPhsv0I3
RAEKFT+noVQSLFkTVYyBo/lQrBE3JFG1fQ89blEv1ND/aMebz37+hz/84e9/
89Hp7m40yyf+Y2F84KNVdZxrRtBa2L8Gclo2HDSFoOnKgckKdcC6qDoxcHip
pxLOz9569uXPvvn8868f9YYrs75OxXFOzz4RRyVi2QyOLlX07ofWIg5aqBkk
krQOJxmi3nDQSX2FepnWG7e/+Pqj15+8P9Gsy+NjZr4qWJ6ROa9KzbvwMgE9
noj1JZptq9j5HHU0gU5dteDG599+/vLhUSxexnH+r0vz7hXBvEOIeNd0isvV
IWu9mnuyCunNz7/5/PmNtfAKOfF//2WJWb3lGnkuZbMh+vdqHp0JMHTj5qdf
fvb8bAKszJy+ahXqPLaSTeortZUsXhUWKkJ6/vqLT55eG4X65VfcH8yq5Sb9
ZGN7BfOD1P8Kr+vi0xcff/DgALi+Od8PyJMxCxjN8tHr+VOsJqbHT95/79ZW
w5yLVasU6cjlaXswYZqJKK2jB88eXBuH+nwalaXC7Egf9HgJTw56Yc7L6h/f
vX+x07bKnCYsShDIq07PkmFHsmhyfHFxPAkuPzzeWSW3jcoLt0EQNa+zcXh6
st02S58muxwzSjJNgYdL+uu7B3vjUC7Ziswejl4k3JtUYNUk3Uv7q5vbay2L
RZZp0boNzZumAW8HkuYmvdX1tZ5fDvqpTDXEjCBGvQmtJ3RZUu24v7raj41S
X7GynpvhRISHk/DJBzhUEQ8mw8aVZOd3Fcmt28B7XiE8HHo3dwL0kNfsdDhq
lw2vJW0pJEHIgA6i11rTc5CG0xz0EpMFSJa9sYGGZciipMmKaZumZvjNXtOV
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
11ZlLYw8x08aacDigwk+QYg1dOwY7rq+pRt+GgVBjCTmX0xf0sA8nKqZjh9G
YeB5XtRoJHGSJoEpMfEkK2ay2l4YBkGUNJuNNEli32Rw0rIgQlIUTDeMYvjQ
l8ZR4Bpyea8+qpFPvPB1wUbXK45jSLDVJFYSGQ+XOcQZ+M6TlHrmH1/J11d8
3Au/drILZC3IVKbzo7DQTJaMVVsgrEZkfsjbBi9evHjx4sWLFy9evHjx4vU/
amX7FYtUWKG7Bgv5CEC/kcKnRRkn8TBWmX4tEcFP3zLBD0kod+r8LQL0tKWC
mbsgjALHkFk1Jd/HqRETOsuy7CBtdTuNyJk7ge6yBG0B+f5qmGDpZEbt/mg8
aLpsWpJb7uBQVtOyHUuXVTvurW5vr7ZYnHZeWqL0pkw86Cz40GdKshn1Ng6O
D9YbZkkMB0tUsGUiIB+odDhd6yqiqEWD7eOz8+PVpMTGYEGjLus2TppEMrrl
OkhClLzhzvH57VtHkPHDYGcCaTi+79lgdYculoajFPXB1v612w9u7XfKOZ7R
cQft8ELIFtFU3dRlWZVFUe6sTTbOHj2+sT5/3mSmMmXuAjC6UzVFhv0DUY4G
cbx1//nDo2apraKlS8ydXWDuUO91reb5y5e3xk5ZZjRn7vwic4c0LNvUvb3n
Hz09altl+y8mDmQD5ijic2cQezh0ZzR77clnH97dTBhcreWqoKBO6/su6sDg
aAmsGgTmmKOHb968d9gsNUYqGdcnYebOBa4Pa1BWbfToy28/PEpKeRtkQ6Qm
ypppOxD6apJHB2x+Sebq0+9++dmeM3/Ecw5GYQsnYO5guFu5Rl3ydt//5W+/
PE6MMqY4ubUTNtUygHQmGtCMutq89vr7v/v5i8OWOK/GVKRC6EGa6Y3mFBlC
0AS1e/rsy1//6tOLweWAw3fSyEUIPajRAFsJb6cq7f1rDz792RdnkT3/lm0B
VVsmVno4uhEYfWxOFfV7q+cffbJaqZU7gFAA1XB6OI75rRHeXTFtf3TvZQIb
rvPnxM2KEMcXjNzBEgUejnp67cmmKs2/w3aVhiNrRMyYCJIKvmeNa4+Ou3NO
i7Q/5TGKObuU0WoiMPVOMjq7t9O15nsWkr/6FRqOaqBmKKYbtdev33/66O7t
HUuYwyM3t9UqKBDgh9AHdUkz3WR4+PD1J5988fmLa0373eGMAipYkJn+DoBe
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
gJ94AuITYRE=
    "], {{0, 100, 100}, {100, 0, 0}}, {0, 255},
    ColorFunction->(Blend[$CellContext`intensitycolors, #]& ),
    Method->{"FastRendering" -> True}],
   BoxForm`ImageTag[
   "Byte", ColorFunction -> (Blend[$CellContext`intensitycolors, #]& ), 
    ColorSpace -> "Grayscale", Interleaving -> None],
   Selectable->False],
  AxesStyle->{},
  Background->None,
  BaseStyle->"Image3DGraphics3D",
  BoxRatios->Automatic,
  Boxed->False,
  ImageSizeRaw->100,
  PlotRange->{{0, 100}, {0, 100}, {0, 100}}]], "Output",
 CellChangeTimes->{{3.6351825404729404`*^9, 3.635182549551015*^9}, 
   3.635183540182234*^9, 3.635183638463764*^9, {3.635183687166963*^9, 
   3.6351836927451744`*^9}, {3.635183750047802*^9, 3.63518376371756*^9}, {
   3.6351838657867336`*^9, 3.6351838860367093`*^9}, {3.6351841405871143`*^9, 
   3.6351841818005295`*^9}, 3.63518448027803*^9}],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJyF10tvjFEcBvCDr2BhYTEW9vMBmjgfwGJCJF1YvEopSusWdw6JSUnIuEUj
Fq8QkeiiEWlEhONW1bpMGRTFi8G4z8Kidkif/ySS5zHvZuaXeXKe8z/vvMnM
rLauee1TnXPTpjj39/V/V/xV9ZPvwpxJV+AStW8ZhXupw/AInFK77kH4NPfs
q/BZ7pYBuI+72A/3c/edg89zF8/AF7jnnoIHuPMn4YvcR07Al7inH4cvc/cc
g69wjx+FI/fEYfga989D8HXuTvMN7spB+Cb3TPMt7toBeJC7Yz98m7uwFx7i
ru2D73C39sDD3BNFeER4D3yXe8h8j7t3N3yfe8Yu+AG3M5e5MzgIpzuRH+X2
lhdOdyD/kNvDQXgsIP+IOwcHYbcV+Qp3th154bzlH3Nnm5EXzm9D/gm324S8
cH4j8k+5ky3IK1t+jLu+AXnh0nrkn3FHywt72D3ndpYXLlvfC+6C5ZUtP85d
X4e8cAF2L7nLa5EXLln+FXejTzhbg/xr7mh9wmXLZ9x59Hlhywdhh3wUTrAf
94Y760afcGMe4TzyUTjYvG+5s9XoE/ZwEM660Cecwu4dd1iJPuHYiT7hBI7C
2Sr0VYVtXuGIfBAu2HkLJ9b3njvY/RZuzCscsF4Udsi7D8I2r7CtF4TtfkZh
+764j8LIe+EcHITDCvQJJ7Crcac4D6+8HH3CsQN9wn4Z+j5x56xP2ON5CMpY
Lwrb/XKfuXM4Dy/ceN6VsZ8oHNrR94U7xXl5ZTtv5SXoEw6w+yqM8/LCfin6
hBM4NrH7Joz9eOE0QV8TR2Fn837nztrQJ+wXo084WYQ+4RTruR/cfiH6hMMC
9An7+egTbrXf+/Umtv/71X8//3P9BsbkmQo=
    "], {{{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxN02O7EAYYBuBzsmvZdbKWl23bLZ3c6mTbNtaWbWx5a8u2W8u27fu6+tKH
+3mf5we8QcHtq4WECggICCS0+L4HBn4bX5zPfOIjH3jPO97yhte84iUveM4z
nvKExzziIQ+4zz3ucofb3OImN7jONa5yhctc4iL/c4H/OM85znKG05ziJCc4
zjGOcoTDHOIgB9jPPvayh93sYic72M42/uUftvI3f7GFzWxiIxtYzzr+5A/W
sobVrGIlK1jOMpayhMUsYiELmM885jKH2cxiJjP4nd+Yzq9MYypTmMwkJjKB
8YxjLGMYzShGMoLhDGMoQxjMIAYygP70oy996E0vetKD7nSjK13oTCc60oH2
hNCOtvxCG1rTipa0oDnNaEowTWhMIxrSgJ+pTz3qUofa1KImNahONapShcpU
oiIVKE85ylKG0pSiJCUoTjGKUoTCFKIgBchPPvKSh9zk4idykoPsZCMrWcjM
j2QiIxlITzrSkobUpCIlKQgiOclIShISk4iEJCA+8YhLHGITi5j8QAyiE42o
RCEykYhIBMITjrCEITSh/P1XqjCBRA==
         "]]]}, {}, {}}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889],
        AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwV0wO3EAYABeBs2/Wybdt8S2t5Ge9l27btWtqqbS0by7Zt21/3nO+e+wdu
QNPgwKCQIUSFIrQZhrCEIzwRiEgkIhOFqEQjOjGISSxiE4e4xCM+CUhIIhKT
hKQkIzkpCCAlqUhNGtKSjvRkICOZyEwWspKN7OQgJ7nITR7yko/8FKAghShM
EYpSjOKUoCSlKE0ZylKO8lSgIpWoTBWqUo3q1CCQX6hJLWpTh7r8Sj1+oz4N
aEgjGtOEpvxOM5rTgpa0ojVtaEs72hNEMB3oSCc604WudKM7PehJL3rTh770
oz8DGMggBjOEoQxjOCMYyShGM4axjGM8E5jIJCYzhalMYzozmMksZjOHucxj
PgtYyCIWs4SlLGM5K/iDlaxiNWtYy5/8xTrWs4G/+Yd/2ch/bGIzW9jKNraz
g53sYjd72Ms+9nOAg/zPIQ5zhKMc4zgnOMkpTnOGs5zjPBe4yCUuc4WrXOM6
N7jJLW5zh7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jIJz7zha984zs/
vx+SH5bYgTg=
        "]]}}}], {}},
  AspectRatio->NCache[
    Rational[1, 3], 0.3333333333333333],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{False, False}, {True, False}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 1.}, {0., 42958.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6351825404729404`*^9, 3.635182549551015*^9}, 
   3.635183540182234*^9, 3.635183638463764*^9, {3.635183687166963*^9, 
   3.6351836927451744`*^9}, {3.635183750047802*^9, 3.63518376371756*^9}, {
   3.6351838657867336`*^9, 3.6351838860367093`*^9}, {3.6351841405871143`*^9, 
   3.6351841818005295`*^9}, 
   3.6351844804655795`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztWltoHFUYPpnLZrPaTRSEIgiLT74Iik029cWqNVW8gw/WB2koDslDtKTF
Cwh2UchLayneKGWqPtS7FatdjbSmGtu0NjKUQNNLaAyhXWkLrRYvtJRx/v+f
c+ZMdmbnssmDdaDnZPY////9l/Od/8wmfbh3Xd8zA73r+lf3llYM9q7p61+9
ttTz3KAjUlsYa+ljjL1WYvBsO4/uZDv/7H6YQBL9zIr40zINZhgwKqxaQwVn
WMysVFmNQOfqlFHYFmkK6xpqqKxSrbnrNuvEOR9lr6LAmS1TmJPrQqyoa9WK
EuC9KzZEjVUrBocwLVtAUBTXuioms+xYdVPcwucwJYMres+UcehyZ+NlUS8K
HCNe2tgkF1Dirjhe3GXTEjVxqg0eY1qDtrcpTtUMrGK3LwUqrNYYsUUUNQQz
wmVn42XdjQi30k233NiE7wMs0+4bLIiIS+LA5HhhhZm7V13xrcU21aqsEl3o
EER/ob2IBEBwwGK5s/GyTEUecFdjE3Koy0EKJpfjmOZ82xrA4hBrqpRGscIO
ExWXRhQ1AGmB2dsqUZF7jzARuQFZIC8qaCzO6+TINAXvobYxTYVDfr6FqU4V
q1rp6LqAzba+DQKhotsg7yqcQDJjF8RhRLLluYSWuRDZenURiHyf6i5m4MtD
nVi4ci8vQSB/gHOsZH77XxHqVHk4cld26tjdWHuO2DvhXscJUXUv+6RvZfIz
ZmfbDuhTMOUlKVNBcsf06QswWDvOflkxpqwV57aNHwwf2bLt6wk+Xto5emL9
jpHj8Az6+17dtp+1jr+y9Sem/mEMDdtPV3bBYDrOiClk7QGyYkzZNThrky+8
9cPI0PsHYMB6BzyQKhez9gDZIpINfbLnKMjX79h7nKk0v/Pergmh1xZgq9K8
afvwkQ/f/tzCTwrJ4DPIZT2fbQFn/d2tXx4Gb3yADruO/MPzNxu2/yzjQkxg
I8u+2PzxOLdnmmcrZMUAGeWoPzY++duyyelzfLz41egUywXo6yS7//CJM1yX
qThrWDt3OyKIVwoglE6ylWMTp4yR8RkYTMFZBVJxgjEVZoUYdez5N/cKBhQC
WOGybKxi7oMiQYlYgVJY9aM1+6TjDD8plBykLZcBysLL0Lfn0IxIWafEb5up
/Z6/dPmKXAb4jNvnpA3PGi3Co+i+Uk2E7J6YsmKA7FZqJhCOzKDoHeDVHvju
4DRTsL7aZ298+guUFwYcWfe0WS9vGRW0VQJqgvnf10RmdwfIcuEp3ISzBt1G
Djfn33I4OTxc2HIRrkJBd0/NnhfecL45WRg3Uhg9E1NneBinnn19t0r9aHpw
8/d8S8Ahwt2ezMNi2itAFcTWKMvS2fN/+aNfkgz7Bjp72K752XUGhM2rBqzy
+ygn83E9+Vg2+es5frJ3bvroEGageL3T7+POND5UwBY1UvAJlO9KBtZBAa8a
tWYBEO44gMLugUVpAlTeRRjASco4If0lPOA45/XiCxf/aQIPWQY3i7cT9ybD
WURxra3uP8l7NhxLwgT95anwOGP4mC88XrdbTp+92ASeKhgt6tbz38Yp1J9a
eJkjTNBfkQYv7IQ2B7bm27GT1NDnAQzvBTR6IMO5mnHyMLsXKYHIF1BCEuXp
uABabWDjbv6mRJdn2uCY6rU6HteDGc584uj115X/enkoFV74dZUKD9s5vpSJ
PB/JcK5mHIXQ4Asa5yV82yVM0H80FR58W6p70U+Pp3I8rwk/nuFkODFw6Fc7
0Bebwgm9vyP5rMs4oke7vxbo+PPvS83i4ddnVHwis81sM9vMNrPNbDPbzDaz
zWwz28z2/2GLf4fG/5GyEib3z9Ks5V+Nnhd3\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"list", "=", 
  RowBox[{"Range", "[", 
   RowBox[{"0", ",", "1", ",", 
    RowBox[{"1", "/", "255"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "list", "]"}]}], "Input",
 CellChangeTimes->{{3.6351841881139297`*^9, 3.635184224168061*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   FractionBox["1", "255"], ",", 
   FractionBox["2", "255"], ",", 
   FractionBox["1", "85"], ",", 
   FractionBox["4", "255"], ",", 
   FractionBox["1", "51"], ",", 
   FractionBox["2", "85"], ",", 
   FractionBox["7", "255"], ",", 
   FractionBox["8", "255"], ",", 
   FractionBox["3", "85"], ",", 
   FractionBox["2", "51"], ",", 
   FractionBox["11", "255"], ",", 
   FractionBox["4", "85"], ",", 
   FractionBox["13", "255"], ",", 
   FractionBox["14", "255"], ",", 
   FractionBox["1", "17"], ",", 
   FractionBox["16", "255"], ",", 
   FractionBox["1", "15"], ",", 
   FractionBox["6", "85"], ",", 
   FractionBox["19", "255"], ",", 
   FractionBox["4", "51"], ",", 
   FractionBox["7", "85"], ",", 
   FractionBox["22", "255"], ",", 
   FractionBox["23", "255"], ",", 
   FractionBox["8", "85"], ",", 
   FractionBox["5", "51"], ",", 
   FractionBox["26", "255"], ",", 
   FractionBox["9", "85"], ",", 
   FractionBox["28", "255"], ",", 
   FractionBox["29", "255"], ",", 
   FractionBox["2", "17"], ",", 
   FractionBox["31", "255"], ",", 
   FractionBox["32", "255"], ",", 
   FractionBox["11", "85"], ",", 
   FractionBox["2", "15"], ",", 
   FractionBox["7", "51"], ",", 
   FractionBox["12", "85"], ",", 
   FractionBox["37", "255"], ",", 
   FractionBox["38", "255"], ",", 
   FractionBox["13", "85"], ",", 
   FractionBox["8", "51"], ",", 
   FractionBox["41", "255"], ",", 
   FractionBox["14", "85"], ",", 
   FractionBox["43", "255"], ",", 
   FractionBox["44", "255"], ",", 
   FractionBox["3", "17"], ",", 
   FractionBox["46", "255"], ",", 
   FractionBox["47", "255"], ",", 
   FractionBox["16", "85"], ",", 
   FractionBox["49", "255"], ",", 
   FractionBox["10", "51"], ",", 
   FractionBox["1", "5"], ",", 
   FractionBox["52", "255"], ",", 
   FractionBox["53", "255"], ",", 
   FractionBox["18", "85"], ",", 
   FractionBox["11", "51"], ",", 
   FractionBox["56", "255"], ",", 
   FractionBox["19", "85"], ",", 
   FractionBox["58", "255"], ",", 
   FractionBox["59", "255"], ",", 
   FractionBox["4", "17"], ",", 
   FractionBox["61", "255"], ",", 
   FractionBox["62", "255"], ",", 
   FractionBox["21", "85"], ",", 
   FractionBox["64", "255"], ",", 
   FractionBox["13", "51"], ",", 
   FractionBox["22", "85"], ",", 
   FractionBox["67", "255"], ",", 
   FractionBox["4", "15"], ",", 
   FractionBox["23", "85"], ",", 
   FractionBox["14", "51"], ",", 
   FractionBox["71", "255"], ",", 
   FractionBox["24", "85"], ",", 
   FractionBox["73", "255"], ",", 
   FractionBox["74", "255"], ",", 
   FractionBox["5", "17"], ",", 
   FractionBox["76", "255"], ",", 
   FractionBox["77", "255"], ",", 
   FractionBox["26", "85"], ",", 
   FractionBox["79", "255"], ",", 
   FractionBox["16", "51"], ",", 
   FractionBox["27", "85"], ",", 
   FractionBox["82", "255"], ",", 
   FractionBox["83", "255"], ",", 
   FractionBox["28", "85"], ",", 
   FractionBox["1", "3"], ",", 
   FractionBox["86", "255"], ",", 
   FractionBox["29", "85"], ",", 
   FractionBox["88", "255"], ",", 
   FractionBox["89", "255"], ",", 
   FractionBox["6", "17"], ",", 
   FractionBox["91", "255"], ",", 
   FractionBox["92", "255"], ",", 
   FractionBox["31", "85"], ",", 
   FractionBox["94", "255"], ",", 
   FractionBox["19", "51"], ",", 
   FractionBox["32", "85"], ",", 
   FractionBox["97", "255"], ",", 
   FractionBox["98", "255"], ",", 
   FractionBox["33", "85"], ",", 
   FractionBox["20", "51"], ",", 
   FractionBox["101", "255"], ",", 
   FractionBox["2", "5"], ",", 
   FractionBox["103", "255"], ",", 
   FractionBox["104", "255"], ",", 
   FractionBox["7", "17"], ",", 
   FractionBox["106", "255"], ",", 
   FractionBox["107", "255"], ",", 
   FractionBox["36", "85"], ",", 
   FractionBox["109", "255"], ",", 
   FractionBox["22", "51"], ",", 
   FractionBox["37", "85"], ",", 
   FractionBox["112", "255"], ",", 
   FractionBox["113", "255"], ",", 
   FractionBox["38", "85"], ",", 
   FractionBox["23", "51"], ",", 
   FractionBox["116", "255"], ",", 
   FractionBox["39", "85"], ",", 
   FractionBox["118", "255"], ",", 
   FractionBox["7", "15"], ",", 
   FractionBox["8", "17"], ",", 
   FractionBox["121", "255"], ",", 
   FractionBox["122", "255"], ",", 
   FractionBox["41", "85"], ",", 
   FractionBox["124", "255"], ",", 
   FractionBox["25", "51"], ",", 
   FractionBox["42", "85"], ",", 
   FractionBox["127", "255"], ",", 
   FractionBox["128", "255"], ",", 
   FractionBox["43", "85"], ",", 
   FractionBox["26", "51"], ",", 
   FractionBox["131", "255"], ",", 
   FractionBox["44", "85"], ",", 
   FractionBox["133", "255"], ",", 
   FractionBox["134", "255"], ",", 
   FractionBox["9", "17"], ",", 
   FractionBox["8", "15"], ",", 
   FractionBox["137", "255"], ",", 
   FractionBox["46", "85"], ",", 
   FractionBox["139", "255"], ",", 
   FractionBox["28", "51"], ",", 
   FractionBox["47", "85"], ",", 
   FractionBox["142", "255"], ",", 
   FractionBox["143", "255"], ",", 
   FractionBox["48", "85"], ",", 
   FractionBox["29", "51"], ",", 
   FractionBox["146", "255"], ",", 
   FractionBox["49", "85"], ",", 
   FractionBox["148", "255"], ",", 
   FractionBox["149", "255"], ",", 
   FractionBox["10", "17"], ",", 
   FractionBox["151", "255"], ",", 
   FractionBox["152", "255"], ",", 
   FractionBox["3", "5"], ",", 
   FractionBox["154", "255"], ",", 
   FractionBox["31", "51"], ",", 
   FractionBox["52", "85"], ",", 
   FractionBox["157", "255"], ",", 
   FractionBox["158", "255"], ",", 
   FractionBox["53", "85"], ",", 
   FractionBox["32", "51"], ",", 
   FractionBox["161", "255"], ",", 
   FractionBox["54", "85"], ",", 
   FractionBox["163", "255"], ",", 
   FractionBox["164", "255"], ",", 
   FractionBox["11", "17"], ",", 
   FractionBox["166", "255"], ",", 
   FractionBox["167", "255"], ",", 
   FractionBox["56", "85"], ",", 
   FractionBox["169", "255"], ",", 
   FractionBox["2", "3"], ",", 
   FractionBox["57", "85"], ",", 
   FractionBox["172", "255"], ",", 
   FractionBox["173", "255"], ",", 
   FractionBox["58", "85"], ",", 
   FractionBox["35", "51"], ",", 
   FractionBox["176", "255"], ",", 
   FractionBox["59", "85"], ",", 
   FractionBox["178", "255"], ",", 
   FractionBox["179", "255"], ",", 
   FractionBox["12", "17"], ",", 
   FractionBox["181", "255"], ",", 
   FractionBox["182", "255"], ",", 
   FractionBox["61", "85"], ",", 
   FractionBox["184", "255"], ",", 
   FractionBox["37", "51"], ",", 
   FractionBox["62", "85"], ",", 
   FractionBox["11", "15"], ",", 
   FractionBox["188", "255"], ",", 
   FractionBox["63", "85"], ",", 
   FractionBox["38", "51"], ",", 
   FractionBox["191", "255"], ",", 
   FractionBox["64", "85"], ",", 
   FractionBox["193", "255"], ",", 
   FractionBox["194", "255"], ",", 
   FractionBox["13", "17"], ",", 
   FractionBox["196", "255"], ",", 
   FractionBox["197", "255"], ",", 
   FractionBox["66", "85"], ",", 
   FractionBox["199", "255"], ",", 
   FractionBox["40", "51"], ",", 
   FractionBox["67", "85"], ",", 
   FractionBox["202", "255"], ",", 
   FractionBox["203", "255"], ",", 
   FractionBox["4", "5"], ",", 
   FractionBox["41", "51"], ",", 
   FractionBox["206", "255"], ",", 
   FractionBox["69", "85"], ",", 
   FractionBox["208", "255"], ",", 
   FractionBox["209", "255"], ",", 
   FractionBox["14", "17"], ",", 
   FractionBox["211", "255"], ",", 
   FractionBox["212", "255"], ",", 
   FractionBox["71", "85"], ",", 
   FractionBox["214", "255"], ",", 
   FractionBox["43", "51"], ",", 
   FractionBox["72", "85"], ",", 
   FractionBox["217", "255"], ",", 
   FractionBox["218", "255"], ",", 
   FractionBox["73", "85"], ",", 
   FractionBox["44", "51"], ",", 
   FractionBox["13", "15"], ",", 
   FractionBox["74", "85"], ",", 
   FractionBox["223", "255"], ",", 
   FractionBox["224", "255"], ",", 
   FractionBox["15", "17"], ",", 
   FractionBox["226", "255"], ",", 
   FractionBox["227", "255"], ",", 
   FractionBox["76", "85"], ",", 
   FractionBox["229", "255"], ",", 
   FractionBox["46", "51"], ",", 
   FractionBox["77", "85"], ",", 
   FractionBox["232", "255"], ",", 
   FractionBox["233", "255"], ",", 
   FractionBox["78", "85"], ",", 
   FractionBox["47", "51"], ",", 
   FractionBox["236", "255"], ",", 
   FractionBox["79", "85"], ",", 
   FractionBox["14", "15"], ",", 
   FractionBox["239", "255"], ",", 
   FractionBox["16", "17"], ",", 
   FractionBox["241", "255"], ",", 
   FractionBox["242", "255"], ",", 
   FractionBox["81", "85"], ",", 
   FractionBox["244", "255"], ",", 
   FractionBox["49", "51"], ",", 
   FractionBox["82", "85"], ",", 
   FractionBox["247", "255"], ",", 
   FractionBox["248", "255"], ",", 
   FractionBox["83", "85"], ",", 
   FractionBox["50", "51"], ",", 
   FractionBox["251", "255"], ",", 
   FractionBox["84", "85"], ",", 
   FractionBox["253", "255"], ",", 
   FractionBox["254", "255"], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.635184196807434*^9, 3.6351842461681414`*^9}, 
   3.6351844804811563`*^9}],

Cell[BoxData["256"], "Output",
 CellChangeTimes->{{3.635184196807434*^9, 3.6351842461681414`*^9}, 
   3.6351844804967813`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"start", "=", 
    RowBox[{"1", "+", "offset"}]}], ";", 
   RowBox[{"end", "=", "500"}], ";", 
   RowBox[{"step", "=", "20"}], ";", "\[IndentingNewLine]", 
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"end2", "=", 
       RowBox[{"Min", "[", 
        RowBox[{
         RowBox[{"j", "+", "step", "-", "1"}], ",", "end"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "list", ",", "std", ",", "a", ",", "b", ",", "h", ",", "x", ",", "y",
           ",", "bins", ",", "sumstd", ",", "stds"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"list", "=", 
            RowBox[{"d", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"i", "-", "offset"}], ";;", "i"}], "]"}], "]"}]}], ";",
            "\[IndentingNewLine]", 
           RowBox[{"std", "=", 
            RowBox[{"ImageAdjust", "@@", 
             RowBox[{"ImageApply", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"StandardDeviation", "[", 
                 RowBox[{"{", "##", "}"}], "]"}], "&"}], ",", "list"}], 
              "]"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"a", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"d", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"b", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", "std", "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"h", "=", 
            RowBox[{"HistogramList", "[", "a", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"x", "=", 
            RowBox[{"Take", "[", 
             RowBox[{
              RowBox[{"h", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"h", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", "1"}]}], "]"}]}],
            ";", "\[IndentingNewLine]", 
           RowBox[{"y", "=", 
            RowBox[{"h", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListLinePlot", "[", 
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "20000"}], "}"}]}], "}"}]}], ",", 
              RowBox[{"ColorFunction", "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"GrayLevel", "[", "#", "]"}], "&"}], ")"}]}], ",", 
              RowBox[{
              "PlotLegends", "\[Rule]", "\"\<intensity histogram\>\""}]}], 
             "]"}], "//", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Export", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
                "\"\<smoke2\\\\\>\"", "<>", 
                RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<.png\>\""}], 
               ",", "#", ",", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"640", ",", "280"}], "}"}]}]}], "]"}], "&"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"bins", "=", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"0", ",", 
              RowBox[{"Length", "[", "y", "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"sumstd", "=", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"0", ",", 
              RowBox[{"Length", "[", "y", "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"n", "=", 
               RowBox[{
                RowBox[{"IntegerPart", "[", 
                 RowBox[{
                  RowBox[{"a", "[", 
                   RowBox[{"[", "m", "]"}], "]"}], "*", "20"}], "]"}], "+", 
                "1"}]}], ";", 
              RowBox[{
               RowBox[{"bins", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "++"}], ";", 
              RowBox[{
               RowBox[{"sumstd", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "+=", 
               RowBox[{"b", "[", 
                RowBox[{"[", "m", "]"}], "]"}]}]}], ",", 
             RowBox[{"{", 
              RowBox[{"m", ",", "1", ",", 
               RowBox[{"Length", "[", "a", "]"}]}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"stds", "=", 
            RowBox[{"sumstd", "/", "bins"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListLinePlot", "[", 
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"{", 
                RowBox[{"x", ",", "stds"}], "}"}], "]"}], ",", 
              RowBox[{"ColorFunction", "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"GrayLevel", "[", "#", "]"}], "&"}], ")"}]}], ",", 
              RowBox[{
              "PlotLegends", "\[Rule]", "\"\<volatility histogram\>\""}]}], 
             "]"}], "//", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Export", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
                "\"\<smoke2_std\\\\\>\"", "<>", 
                RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<.png\>\""}], 
               ",", "#", ",", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"640", ",", "280"}], "}"}]}]}], "]"}], "&"}]}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "j", ",", "end2"}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "start", ",", "end", ",", "step"}], "}"}]}], "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.6338907337893667`*^9, 3.633890797211687*^9}, {
   3.633893911678714*^9, 3.6338939142837467`*^9}, 3.633899088965665*^9, {
   3.6338999540264*^9, 3.6339001342465277`*^9}, {3.633900173106537*^9, 
   3.6339001938515844`*^9}, {3.6339005703042088`*^9, 3.633900587429271*^9}, {
   3.633900623709302*^9, 3.633900627969324*^9}, {3.6339007028793697`*^9, 
   3.6339007039393187`*^9}, {3.633929298451599*^9, 3.6339292995316257`*^9}, {
   3.6349377286958704`*^9, 3.634937770720933*^9}, {3.6349378266210213`*^9, 
   3.63493784628605*^9}, {3.634944135415825*^9, 3.634944146805843*^9}, 
   3.63494424367104*^9, 3.634945542341096*^9, {3.6349455906961794`*^9, 
   3.6349457787414083`*^9}, {3.6349458620115824`*^9, 
   3.6349458793866105`*^9}, {3.6349459162316647`*^9, 
   3.6349459210216713`*^9}, {3.6349459584817123`*^9, 
   3.6349460128567963`*^9}, {3.6349461364219604`*^9, 
   3.6349462377520933`*^9}, {3.6349749790538416`*^9, 3.634974981538206*^9}, {
   3.634975047228275*^9, 3.6349750702036457`*^9}, {3.6349755279313607`*^9, 
   3.6349755317785616`*^9}, {3.634976896961446*^9, 3.634976905505045*^9}, {
   3.6349771176057005`*^9, 3.634977125247184*^9}, {3.6349772709717646`*^9, 
   3.6349773032940025`*^9}, {3.634977337803232*^9, 3.6349773406626196`*^9}, {
   3.6349776504900885`*^9, 3.6349776624137783`*^9}, 3.63518364822937*^9}]
},
WindowSize->{1602, 978},
WindowMargins->{{-9, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{595.1999999999999, 841.92}},
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (December 4, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1069, 28, 52, "Input"],
Cell[CellGroupData[{
Cell[1652, 52, 716, 20, 72, "Input"],
Cell[2371, 74, 9845, 221, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12253, 300, 3805, 92, 232, "Input"],
Cell[16061, 394, 1193, 16, 31, "Output"],
Cell[17257, 412, 2310, 47, 75, "Output"],
Cell[19570, 461, 1858, 37, 46, "Output"],
Cell[21431, 500, 1503, 22, 31, "Output"],
Cell[22937, 524, 3564, 63, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26538, 592, 3233, 73, 172, "Input"],
Cell[29774, 667, 861, 14, 31, "Output"],
Cell[30638, 683, 861, 14, 31, "Output"],
Cell[31502, 699, 927, 15, 31, "Output"],
Cell[32432, 716, 1237, 21, 31, "Output"],
Cell[33672, 739, 1277, 22, 52, "Output"],
Cell[34952, 763, 3248, 64, 241, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38237, 832, 6645, 189, 452, "Input"],
Cell[44885, 1023, 375, 5, 31, "Output"],
Cell[45263, 1030, 34295, 861, 55, "Output"],
Cell[79561, 1893, 461, 8, 31, "Output"],
Cell[80025, 1903, 32118, 828, 55, "Output"],
Cell[112146, 2733, 460, 8, 31, "Output"],
Cell[112609, 2743, 3251, 58, 247, "Output"],
Cell[115863, 2803, 148189, 2436, 406, "Output"],
Cell[264055, 5241, 5259, 98, 147, 2987, 60, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[269351, 5344, 278, 6, 52, "Input"],
Cell[269632, 5352, 8966, 258, 262, "Output"],
Cell[278601, 5612, 126, 2, 31, "Output"]
}, Open  ]],
Cell[278742, 5617, 7877, 180, 472, "Input"]
}
]
*)

(* End of internal cache information *)
